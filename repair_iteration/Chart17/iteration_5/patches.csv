bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	original_buggy	action	patch	execution_result	diagnosis	previous_bug_id	original_failing_test_number
2996624	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.add(item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.add(item);	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499438	1
2996625	[BUG]  [BUGGY]  //  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.add(item);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.add(item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.add(item);	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499438	1
2996612	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().startsWith(this.maximumItemCount))  {  b.toString();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().startsWith(this.maximumItemCount))  {  b.toString();	  	compilable	  [FE]  IllegalArgumentException	499436	1
2996613	[BUG]  [BUGGY]  //  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().startsWith(this.maximumItemCount))  {  b.toString();  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().startsWith(this.maximumItemCount))  {  b.toString();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().startsWith(this.maximumItemCount))  {  b.toString();	  	compilable	  [FE]  IllegalArgumentException	499436	1
2996613	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().startsWith(this.maximumItemCount))  {  b.toString();  b.toString();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().startsWith(this.maximumItemCount))  {  b.toString();  b.toString();	  	compilable	  [FE]  IllegalArgumentException	499436	1
2996614	[BUG]  [BUGGY]  //  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().startsWith(this.maximumItemCount))  {  b.toString();  b.toString();  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().startsWith(this.maximumItemCount))  {  b.toString();  b.toString();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().startsWith(this.maximumItemCount))  {  b.toString();  b.toString();	  	compilable	  [FE]  IllegalArgumentException	499436	1
996961	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  this.maximumItemCount  /  2;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.maximumItemCount  =  this.maximumItemCount  /  2;	  this.maximumItemCount    =    this.maximumItemCount    /    1;    	compilable	  [FE]  IllegalArgumentException	166161	1
996962	[BUG]  [BUGGY]  this.maximumItemCount  =  this.maximumItemCount  /  2;  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  this.maximumItemCount  /  2;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.maximumItemCount  =  this.maximumItemCount  /  2;	  this.maximumItemCount    =    this.maximumItemCount    /    1;    	compilable	  [FE]  IllegalArgumentException	166161	1
996962	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  this.maximumItemCount  *  1;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.maximumItemCount  =  this.maximumItemCount  *  1;	  this.maximumItemCount    =    this.maximumItemCount    /    1;    	compilable	  [FE]  IllegalArgumentException	166161	1
996963	[BUG]  [BUGGY]  this.maximumItemCount  =  this.maximumItemCount  *  1;  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  this.maximumItemCount  *  1;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.maximumItemCount  =  this.maximumItemCount  *  1;	  this.maximumItemCount    =    this.maximumItemCount    /    1;    	compilable	  [FE]  IllegalArgumentException	166161	1
2996624	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  >>  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  >>  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499438	1
2996625	[BUG]  [BUGGY]  //  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  >>  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  >>  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  >>  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499438	1
2996389	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();	  	compilable	  [FE]  IllegalArgumentException	499399	1
2996390	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();	  	compilable	  [FE]  IllegalArgumentException	499399	1
2996391	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  bod  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  bod  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();	  	compilable	  [FE]  IllegalArgumentException	499399	1
2996392	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  bod  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  bod  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  bod  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();	  	compilable	  [FE]  IllegalArgumentException	499399	1
2996900	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))	  	compilable	  [FE]  IllegalArgumentException	499484	1
2996901	[BUG]  [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))	  	compilable	  [FE]  IllegalArgumentException	499484	1
2996901	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))	  	compilable	  [FE]  IllegalArgumentException	499484	1
2996902	[BUG]  [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))	  	compilable	  [FE]  IllegalArgumentException	499484	1
2996432	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(added)  {  fireSeriesChanged();  >>  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(added)  {  fireSeriesChanged();  >>	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996433	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(added)  {  fireSeriesChanged();  >>  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(added)  {  fireSeriesChanged();  >>  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(added)  {  fireSeriesChanged();  >>	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996613	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(true);  if(notify)  propag  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(true);  if(notify)  propag  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  	compilable	  [FE]  IllegalArgumentException	499436	1
2996614	[BUG]  [BUGGY]  //  removedAgedItems(true);  if(notify)  propag  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(true);  if(notify)  propag  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(true);  if(notify)  propag  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  	compilable	  [FE]  IllegalArgumentException	499436	1
990476	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  if(domain!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  else  {  timePeriodClass  =  timePeriodClass;  }  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	if(domain!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  else  {  timePeriodClass  =  timePeriodClass;  }	  	compilable	  [FE]  IllegalArgumentException	165080	1
990477	[BUG]  [BUGGY]  if(domain!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  else  {  timePeriodClass  =  timePeriodClass;  }  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  if(domain!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  else  {  timePeriodClass  =  timePeriodClass;  }  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	if(domain!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  else  {  timePeriodClass  =  timePeriodClass;  }	  	compilable	  [FE]  IllegalArgumentException	165080	1
2996431	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996432	[BUG]  [BUGGY]  //  removeAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
998191	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  if(timePeriodClass  ==  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range  +  DEFAULT_DOMAIN_DESCRIPTION;  }  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	if(timePeriodClass  ==  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range  +  DEFAULT_DOMAIN_DESCRIPTION;  }	  if(timePeriodClass!=    null)    {    this.domain    =    domain;    }    else    {    this.range    =    range    +    DEFAULT_DOMAIN_DESCRIPTION;    }    	compilable	  [FE]  IllegalArgumentException	166366	1
998192	[BUG]  [BUGGY]  if(timePeriodClass  ==  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range  +  DEFAULT_DOMAIN_DESCRIPTION;  }  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  if(timePeriodClass  ==  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range  +  DEFAULT_DOMAIN_DESCRIPTION;  }  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	if(timePeriodClass  ==  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range  +  DEFAULT_DOMAIN_DESCRIPTION;  }	  if(timePeriodClass!=    null)    {    this.domain    =    domain;    }    else    {    this.range    =    range    +    DEFAULT_DOMAIN_DESCRIPTION;    }    	compilable	  [FE]  IllegalArgumentException	166366	1
2996859	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  propag  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  if(notify)  propag  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  	compilable	  [FE]  IllegalArgumentException	499477	1
2996860	[BUG]  [BUGGY]  //  deleteAgedItems(true);  if(notify)  propag  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  propag  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  if(notify)  propag  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  	compilable	  [FE]  IllegalArgumentException	499477	1
2996617	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  }	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996618	[BUG]  [BUGGY]  //  removedAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  }	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996618	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true,  item);  b.append('ufffd');  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true,  item);  b.append('ufffd');	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996619	[BUG]  [BUGGY]  //  removeAgedItems(true,  item);  b.append('ufffd');  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true,  item);  b.append('ufffd');  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true,  item);  b.append('ufffd');	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996822	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  bodied  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  bodied	  	compilable	  [FE]  IllegalArgumentException	499471	1
2996823	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  bodied  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  bodied  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  bodied	  	compilable	  [FE]  IllegalArgumentException	499471	1
2996823	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  >>  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  bodied  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  >>  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  bodied	  	compilable	  [FE]  IllegalArgumentException	499471	1
2996824	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  >>  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  bodied  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  >>  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  bodied  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  >>  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  bodied	  	compilable	  [FE]  IllegalArgumentException	499471	1
2996612	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  	  	compilable	  [FE]  IllegalArgumentException	499436	1
2996613	[BUG]  [BUGGY]  //  removedAllAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }    [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  	  	compilable	  [FE]  IllegalArgumentException	499436	1
2996613	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(true);  this.data.add(item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllAgedItems(true);  this.data.add(item);	  	compilable	  [FE]  IllegalArgumentException	499436	1
2996614	[BUG]  [BUGGY]  //  removedAllAgedItems(true);  this.data.add(item);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(true);  this.data.add(item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllAgedItems(true);  this.data.add(item);	  	compilable	  [FE]  IllegalArgumentException	499436	1
889532	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);            [BUGGY]  this.data  =  new  java.util.ArrayList(2000);  [BUGGY]            this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	add	this.data  =  new  java.util.ArrayList(2000);	  	compilable	  [FE]  IllegalArgumentException	148256	1
889533	[BUG]  [BUGGY]  this.data  =  new  java.util.ArrayList(2000);  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);            [BUGGY]  this.data  =  new  java.util.ArrayList(2000);  [BUGGY]            this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	replace	this.data  =  new  java.util.ArrayList(2000);	  	compilable	  [FE]  IllegalArgumentException	148256	1
990662	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  if(domain  ==  null)  {  this.domain  =  domain;  this.range  =  range;  }  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	if(domain  ==  null)  {  this.domain  =  domain;  this.range  =  range;  }	  if(domain!=    null)    {    this.domain    =    domain;    this.range    =    range;    }    	compilable	  [FE]  IllegalArgumentException	165111	1
990663	[BUG]  [BUGGY]  if(domain  ==  null)  {  this.domain  =  domain;  this.range  =  range;  }  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  if(domain  ==  null)  {  this.domain  =  domain;  this.range  =  range;  }  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	if(domain  ==  null)  {  this.domain  =  domain;  this.range  =  range;  }	  if(domain!=    null)    {    this.domain    =    domain;    this.range    =    range;    }    	compilable	  [FE]  IllegalArgumentException	165111	1
998366	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  if(this.domain!=  null)  {  this.domain  =  domain;  }  else  {  timePeriodClass  =  timePeriodClass;  }  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	if(this.domain!=  null)  {  this.domain  =  domain;  }  else  {  timePeriodClass  =  timePeriodClass;  }	  this.range    =    domain    +    DEFAULT_DOMAIN_DESCRIPTION    +    DEFAULT_RANGE_DESCRIPTION;    	compilable	  [FE]  IllegalArgumentException	166395	1
998367	[BUG]  [BUGGY]  if(this.domain!=  null)  {  this.domain  =  domain;  }  else  {  timePeriodClass  =  timePeriodClass;  }  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  if(this.domain!=  null)  {  this.domain  =  domain;  }  else  {  timePeriodClass  =  timePeriodClass;  }  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	if(this.domain!=  null)  {  this.domain  =  domain;  }  else  {  timePeriodClass  =  timePeriodClass;  }	  this.range    =    domain    +    DEFAULT_DOMAIN_DESCRIPTION    +    DEFAULT_RANGE_DESCRIPTION;    	compilable	  [FE]  IllegalArgumentException	166395	1
2996900	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.	  	compilable	  [FE]  IllegalArgumentException	499484	1
2996901	[BUG]  [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.	  	compilable	  [FE]  IllegalArgumentException	499484	1
2996648	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996649	[BUG]  [BUGGY]  //  removedAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }    [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996642	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true,  item);  if(notify)  {  fireSeriesChanged();  }  ;  }?  b.toString()  :  null;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true,  item);  if(notify)  {  fireSeriesChanged();  }  ;  }?  b.toString()  :  null;  }	  	compilable	  [FE]  IllegalArgumentException	499441	1
2996643	[BUG]  [BUGGY]  //  removeAgedItems(true,  item);  if(notify)  {  fireSeriesChanged();  }  ;  }?  b.toString()  :  null;  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true,  item);  if(notify)  {  fireSeriesChanged();  }  ;  }?  b.toString()  :  null;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true,  item);  if(notify)  {  fireSeriesChanged();  }  ;  }?  b.toString()  :  null;  }	  	compilable	  [FE]  IllegalArgumentException	499441	1
2996643	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true,  item);  if(notify)  {  fireSeriesChanged();  }  ;  }?  b.toString()  :  null;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true,  item);  if(notify)  {  fireSeriesChanged();  }  ;  }?  b.toString()  :  null;	  	compilable	  [FE]  IllegalArgumentException	499441	1
2996644	[BUG]  [BUGGY]  //  removeAgedItems(true,  item);  if(notify)  {  fireSeriesChanged();  }  ;  }?  b.toString()  :  null;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true,  item);  if(notify)  {  fireSeriesChanged();  }  ;  }?  b.toString()  :  null;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true,  item);  if(notify)  {  fireSeriesChanged();  }  ;  }?  b.toString()  :  null;	  	compilable	  [FE]  IllegalArgumentException	499441	1
889142	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);            [BUGGY]  this.maximumItemCount  =  Integer.MIN_VALUE  -  1;  [BUGGY]            this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	add	this.maximumItemCount  =  Integer.MIN_VALUE  -  1;	  this.maximumItemCount    =    Integer.MIN_VALUE    +    1;    	compilable	  [FE]  IllegalArgumentException	148191	1
889143	[BUG]  [BUGGY]  this.maximumItemCount  =  Integer.MIN_VALUE  -  1;  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);            [BUGGY]  this.maximumItemCount  =  Integer.MIN_VALUE  -  1;  [BUGGY]            this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	replace	this.maximumItemCount  =  Integer.MIN_VALUE  -  1;	  this.maximumItemCount    =    Integer.MIN_VALUE    +    1;    	compilable	  [FE]  IllegalArgumentException	148191	1
2996839	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  propag  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  if(notify)  propag  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  //    deleteAgedItems(true);    if(notify)    propag    fireSeriesChanged();    }    &&    item.getPeriod().getTime().equals(this.timePeriodClass.getName()))    {    this.data.remove    	compilable	  [FE]  IllegalArgumentException	499474	1
2996840	[BUG]  [BUGGY]  //  deleteAgedItems(true);  if(notify)  propag  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  propag  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  if(notify)  propag  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  //    deleteAgedItems(true);    if(notify)    propag    fireSeriesChanged();    }    &&    item.getPeriod().getTime().equals(this.timePeriodClass.getName()))    {    this.data.remove    	compilable	  [FE]  IllegalArgumentException	499474	1
2996840	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  propag  fireSeriesChanged();  fought  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  if(notify)  propag  fireSeriesChanged();  fought  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  //    deleteAgedItems(true);    if(notify)    propag    fireSeriesChanged();    }    &&    item.getPeriod().getTime().equals(this.timePeriodClass.getName()))    {    this.data.remove    	compilable	  [FE]  IllegalArgumentException	499474	1
2996841	[BUG]  [BUGGY]  //  deleteAgedItems(true);  if(notify)  propag  fireSeriesChanged();  fought  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  propag  fireSeriesChanged();  fought  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  if(notify)  propag  fireSeriesChanged();  fought  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  //    deleteAgedItems(true);    if(notify)    propag    fireSeriesChanged();    }    &&    item.getPeriod().getTime().equals(this.timePeriodClass.getName()))    {    this.data.remove    	compilable	  [FE]  IllegalArgumentException	499474	1
2996395	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied    ;    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499400	1
2996396	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied    ;    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499400	1
2996396	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  hopped  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  hopped  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied    ;    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499400	1
2996397	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  hopped  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  hopped  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  hopped  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied    ;    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499400	1
2996618	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996619	[BUG]  [BUGGY]  //  removedAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }    [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996654	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(false,  true);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllAgedItems(false,  true);	  //    deleteAgedItems(false,    item);    	compilable	  [FE]  IllegalArgumentException	499443	1
2996655	[BUG]  [BUGGY]  //  removedAllAgedItems(false,  true);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(false,  true);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllAgedItems(false,  true);	  //    deleteAgedItems(false,    item);    	compilable	  [FE]  IllegalArgumentException	499443	1
2996613	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  	compilable	  [FE]  IllegalArgumentException	499436	1
2996614	[BUG]  [BUGGY]  //  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  	compilable	  [FE]  IllegalArgumentException	499436	1
2998166	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  removeAgedItems(true);//  remove  old  items  if  needed,  //  don't  notify  any,  because  that  //  happens  next  anyway;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	removeAgedItems(true);//  remove  old  items  if  needed,  //  don't  notify  any,  because  that  //  happens  next  anyway;	  removeAgedItems(true);//    remove    old    items    if    required,    //    don't    notify    any,    because    that    //    happens    next    anyway;    	compilable	  [FE]  IllegalArgumentException	499695	1
2998167	[BUG]  [BUGGY]  removeAgedItems(true);//  remove  old  items  if  needed,  //  don't  notify  any,  because  that  //  happens  next  anyway;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  removeAgedItems(true);//  remove  old  items  if  needed,  //  don't  notify  any,  because  that  //  happens  next  anyway;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	removeAgedItems(true);//  remove  old  items  if  needed,  //  don't  notify  any,  because  that  //  happens  next  anyway;	  removeAgedItems(true);//    remove    old    items    if    required,    //    don't    notify    any,    because    that    //    happens    next    anyway;    	compilable	  [FE]  IllegalArgumentException	499695	1
998372	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  if(timePeriodClass!=  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range;  timePeriodClass  =  timePeriodClass;  }  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	if(timePeriodClass!=  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range;  timePeriodClass  =  timePeriodClass;  }	  if(this.domain!=    null)    {    this.domain    =    domain;    }    else    {    this.range    =    range;    timePeriodClass    =    timePeriodClass;    }    	compilable	  [FE]  IllegalArgumentException	166396	1
998373	[BUG]  [BUGGY]  if(timePeriodClass!=  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range;  timePeriodClass  =  timePeriodClass;  }  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  if(timePeriodClass!=  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range;  timePeriodClass  =  timePeriodClass;  }  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	if(timePeriodClass!=  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range;  timePeriodClass  =  timePeriodClass;  }	  if(this.domain!=    null)    {    this.domain    =    domain;    }    else    {    this.range    =    range;    timePeriodClass    =    timePeriodClass;    }    	compilable	  [FE]  IllegalArgumentException	166396	1
2996425	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bod  ;  bod?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bod  ;  bod?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();	  	compilable	  [FE]  IllegalArgumentException	499405	1
2996426	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bod  ;  bod?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bod  ;  bod?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bod  ;  bod?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();	  	compilable	  [FE]  IllegalArgumentException	499405	1
2996426	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  bod?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  bod?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();	  	compilable	  [FE]  IllegalArgumentException	499405	1
2996427	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  bod?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  bod?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  bod?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();	  	compilable	  [FE]  IllegalArgumentException	499405	1
2996906	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  limb  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString()  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  limb  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString()	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    >>    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499485	1
2996907	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  limb  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString()  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  limb  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString()  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  limb  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString()	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    >>    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499485	1
2996474	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.addAgedItems(true);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.addAgedItems(true);	  //    removeAgedItems(false);    this.data.remove(item);    	compilable	  [FE]  IllegalArgumentException	499413	1
2996475	[BUG]  [BUGGY]  //  this.data.addAgedItems(true);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.addAgedItems(true);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.addAgedItems(true);	  //    removeAgedItems(false);    this.data.remove(item);    	compilable	  [FE]  IllegalArgumentException	499413	1
990631	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  if(this.domain!=  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.domain  =  domain;  this.timePeriodClass  =  timePeriodClass;  this.maximumItemAge  =  0;  }  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	if(this.domain!=  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.domain  =  domain;  this.timePeriodClass  =  timePeriodClass;  this.maximumItemAge  =  0;  }	  if(domain    ==    null)    {    this.data    =    new    java.util.ArrayList();    }    else    {    this.domain    =    domain;    this.maximumItemCount    =    0;    }    	compilable	  [FE]  IllegalArgumentException	165106	1
990632	[BUG]  [BUGGY]  if(this.domain!=  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.domain  =  domain;  this.timePeriodClass  =  timePeriodClass;  this.maximumItemAge  =  0;  }  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  if(this.domain!=  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.domain  =  domain;  this.timePeriodClass  =  timePeriodClass;  this.maximumItemAge  =  0;  }  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	if(this.domain!=  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.domain  =  domain;  this.timePeriodClass  =  timePeriodClass;  this.maximumItemAge  =  0;  }	  if(domain    ==    null)    {    this.data    =    new    java.util.ArrayList();    }    else    {    this.domain    =    domain;    this.maximumItemCount    =    0;    }    	compilable	  [FE]  IllegalArgumentException	165106	1
25136	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( ",Usage:  failed  to  add  cloned  item. ");  [BUGGY]            }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( ",Usage:  failed  to  add  cloned  item. ");	  	compilable	  [FE]  IllegalArgumentException	4190	1
25137	[BUG]  [BUGGY]  System.err.println( ",Usage:  failed  to  add  cloned  item. ");  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( ",Usage:  failed  to  add  cloned  item. ");  [BUGGY]            }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( ",Usage:  failed  to  add  cloned  item. ");	  	compilable	  [FE]  IllegalArgumentException	4190	1
25137	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( ".Usage:  failed  to  add  cloned  item. ");  [BUGGY]            }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( ".Usage:  failed  to  add  cloned  item. ");	  	compilable	  [FE]  IllegalArgumentException	4190	1
25138	[BUG]  [BUGGY]  System.err.println( ".Usage:  failed  to  add  cloned  item. ");  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( ".Usage:  failed  to  add  cloned  item. ");  [BUGGY]            }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( ".Usage:  failed  to  add  cloned  item. ");	  	compilable	  [FE]  IllegalArgumentException	4190	1
2996649	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(True,  item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(True,  item);	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996650	[BUG]  [BUGGY]  //  removeAgedItems(True,  item);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(True,  item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(True,  item);	  	compilable	  [FE]  IllegalArgumentException	499442	1
990621	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  4;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.maximumItemCount  =  4;	  	compilable	  [FE]  IllegalArgumentException	165104	1
990622	[BUG]  [BUGGY]  this.maximumItemCount  =  4;  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  4;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.maximumItemCount  =  4;	  	compilable	  [FE]  IllegalArgumentException	165104	1
2996617	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  bodied  if(notify)  {  fireSeriesChanged();  }  ;  }  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  bodied  if(notify)  {  fireSeriesChanged();  }  ;  }  ;	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996618	[BUG]  [BUGGY]  //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  bodied  if(notify)  {  fireSeriesChanged();  }  ;  }  ;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  bodied  if(notify)  {  fireSeriesChanged();  }  ;  }  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  bodied  if(notify)  {  fireSeriesChanged();  }  ;  }  ;	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996618	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ;  bodied  if(notify)  {  fireSeriesChanged();  }  ;  }  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ;  bodied  if(notify)  {  fireSeriesChanged();  }  ;  }  ;	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996619	[BUG]  [BUGGY]  //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ;  bodied  if(notify)  {  fireSeriesChanged();  }  ;  }  ;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ;  bodied  if(notify)  {  fireSeriesChanged();  }  ;  }  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ;  bodied  if(notify)  {  fireSeriesChanged();  }  ;  }  ;	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996613	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true,  item);  b.addChangeListener(this);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true,  item);  b.addChangeListener(this);	  	compilable	  [FE]  IllegalArgumentException	499436	1
2996614	[BUG]  [BUGGY]  //  removeAgedItems(true,  item);  b.addChangeListener(this);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true,  item);  b.addChangeListener(this);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true,  item);  b.addChangeListener(this);	  	compilable	  [FE]  IllegalArgumentException	499436	1
990651	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  if(domain!=  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.domain  =  domain;  this.maximumItemCount  =  0;  }  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	if(domain!=  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.domain  =  domain;  this.maximumItemCount  =  0;  }	  	compilable	  [FE]  IllegalArgumentException	165109	1
990652	[BUG]  [BUGGY]  if(domain!=  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.domain  =  domain;  this.maximumItemCount  =  0;  }  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  if(domain!=  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.domain  =  domain;  this.maximumItemCount  =  0;  }  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	if(domain!=  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.domain  =  domain;  this.maximumItemCount  =  0;  }	  	compilable	  [FE]  IllegalArgumentException	165109	1
2996870	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  &&  item.getPeriod()!=  this.data.get(item.getPeriod())))  {  this.data.remove(0);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  &&  item.getPeriod()!=  this.data.get(item.getPeriod())))  {  this.data.remove(0);	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    bodied    &&    item.getPeriod()!=    this.data.get(item.getPeriod()))    {    this.data.remove(0);    	compilable	  [FE]  IllegalArgumentException	499479	1
2996871	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  &&  item.getPeriod()!=  this.data.get(item.getPeriod())))  {  this.data.remove(0);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  &&  item.getPeriod()!=  this.data.get(item.getPeriod())))  {  this.data.remove(0);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  &&  item.getPeriod()!=  this.data.get(item.getPeriod())))  {  this.data.remove(0);	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    bodied    &&    item.getPeriod()!=    this.data.get(item.getPeriod()))    {    this.data.remove(0);    	compilable	  [FE]  IllegalArgumentException	499479	1
2996618	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  >>  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  >>  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996619	[BUG]  [BUGGY]  //  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  >>  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  >>  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  >>  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996648	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996649	[BUG]  [BUGGY]  //  removedAllAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996649	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996650	[BUG]  [BUGGY]  //  removedAllAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996864	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);	  //    deleteAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    &&    item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))    {    this.data.    	compilable	  [FE]  IllegalArgumentException	499478	1
2996865	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);	  //    deleteAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    &&    item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))    {    this.data.    	compilable	  [FE]  IllegalArgumentException	499478	1
2996863	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod())))  {  this.data.remove(0);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod())))  {  this.data.remove(0);	  //    deleteAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    &&    item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))    {    this.data.    	compilable	  [FE]  IllegalArgumentException	499478	1
2996864	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod())))  {  this.data.remove(0);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod())))  {  this.data.remove(0);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod())))  {  this.data.remove(0);	  //    deleteAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    &&    item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))    {    this.data.    	compilable	  [FE]  IllegalArgumentException	499478	1
2996648	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false;  if(notify)  {  fireSeriesChanged();  }  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(false;  if(notify)  {  fireSeriesChanged();  }  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996649	[BUG]  [BUGGY]  //  removedAgedItems(false;  if(notify)  {  fireSeriesChanged();  }  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false;  if(notify)  {  fireSeriesChanged();  }  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(false;  if(notify)  {  fireSeriesChanged();  }  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996900	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  this.data.add(item,  this.maximumItemCount);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  this.data.add(item,  this.maximumItemCount);  if(notify)  {  fireSeriesChanged();  }  	  	compilable	  [FE]  IllegalArgumentException	499484	1
2996901	[BUG]  [BUGGY]  //  deleteAgedItems(false);  this.data.add(item,  this.maximumItemCount);  if(notify)  {  fireSeriesChanged();  }    [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  this.data.add(item,  this.maximumItemCount);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  this.data.add(item,  this.maximumItemCount);  if(notify)  {  fireSeriesChanged();  }  	  	compilable	  [FE]  IllegalArgumentException	499484	1
2996901	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  this.data.add(item,  this.maximumItemCount);  if(notify)  {  fireSeriesChanged();  }  ;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  this.data.add(item,  this.maximumItemCount);  if(notify)  {  fireSeriesChanged();  }  ;  }  	  	compilable	  [FE]  IllegalArgumentException	499484	1
2996902	[BUG]  [BUGGY]  //  deleteAgedItems(false);  this.data.add(item,  this.maximumItemCount);  if(notify)  {  fireSeriesChanged();  }  ;  }    [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  this.data.add(item,  this.maximumItemCount);  if(notify)  {  fireSeriesChanged();  }  ;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  this.data.add(item,  this.maximumItemCount);  if(notify)  {  fireSeriesChanged();  }  ;  }  	  	compilable	  [FE]  IllegalArgumentException	499484	1
889357	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);            [BUGGY]  this.maximumItemCount  =  Integer.MAX_VALUE  /  2;  [BUGGY]            this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	add	this.maximumItemCount  =  Integer.MAX_VALUE  /  2;	  this.maximumItemCount    =    Integer.MAX_VALUE    /    1;    	compilable	  [FE]  IllegalArgumentException	148227	1
889358	[BUG]  [BUGGY]  this.maximumItemCount  =  Integer.MAX_VALUE  /  2;  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);            [BUGGY]  this.maximumItemCount  =  Integer.MAX_VALUE  /  2;  [BUGGY]            this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	replace	this.maximumItemCount  =  Integer.MAX_VALUE  /  2;	  this.maximumItemCount    =    Integer.MAX_VALUE    /    1;    	compilable	  [FE]  IllegalArgumentException	148227	1
889358	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);            [BUGGY]  this.maximumItemCount  =  Integer.MAX_VALUE  *  1;  [BUGGY]            this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	add	this.maximumItemCount  =  Integer.MAX_VALUE  *  1;	  this.maximumItemCount    =    Integer.MAX_VALUE    /    1;    	compilable	  [FE]  IllegalArgumentException	148227	1
889359	[BUG]  [BUGGY]  this.maximumItemCount  =  Integer.MAX_VALUE  *  1;  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);            [BUGGY]  this.maximumItemCount  =  Integer.MAX_VALUE  *  1;  [BUGGY]            this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	replace	this.maximumItemCount  =  Integer.MAX_VALUE  *  1;	  this.maximumItemCount    =    Integer.MAX_VALUE    /    1;    	compilable	  [FE]  IllegalArgumentException	148227	1
2996618	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.add(item,  this.maximumItemCount);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.add(item,  this.maximumItemCount);	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996619	[BUG]  [BUGGY]  //  this.data.add(item,  this.maximumItemCount);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.add(item,  this.maximumItemCount);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.add(item,  this.maximumItemCount);	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996618	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(true);  item.addChangeListener(this);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(true);  item.addChangeListener(this);  if(notify)  {  fireSeriesChanged();  }  	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996619	[BUG]  [BUGGY]  //  removedAgedItems(true);  item.addChangeListener(this);  if(notify)  {  fireSeriesChanged();  }    [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(true);  item.addChangeListener(this);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(true);  item.addChangeListener(this);  if(notify)  {  fireSeriesChanged();  }  	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
56025	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println(   "Requires  end  <  start.   ");  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println(   "Requires  end  <  start.   ");	  	compilable	  [FE]  IllegalArgumentException	9338	1
56026	[BUG]  [BUGGY]  System.err.println(   "Requires  end  <  start.   ");  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println(   "Requires  end  <  start.   ");  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println(   "Requires  end  <  start.   ");	  	compilable	  [FE]  IllegalArgumentException	9338	1
2996425	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;	  	compilable	  [FE]  IllegalArgumentException	499405	1
2996426	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;	  	compilable	  [FE]  IllegalArgumentException	499405	1
2996863	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }	  //    deleteAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    &&    item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))    {    this.data.    	compilable	  [FE]  IllegalArgumentException	499478	1
2996864	[BUG]  [BUGGY]  //  deleteAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }	  //    deleteAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    &&    item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))    {    this.data.    	compilable	  [FE]  IllegalArgumentException	499478	1
2996431	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996432	[BUG]  [BUGGY]  //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996432	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  bodied  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  bodied	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996433	[BUG]  [BUGGY]  //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  bodied  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  bodied  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  bodied	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996468	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  this.data.remove(item);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  this.data.remove(item);  if(notify)  {  fireSeriesChanged();  }  	  	compilable	  [FE]  IllegalArgumentException	499412	1
2996469	[BUG]  [BUGGY]  //  removeAgedItems(false);  this.data.remove(item);  if(notify)  {  fireSeriesChanged();  }    [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  this.data.remove(item);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  this.data.remove(item);  if(notify)  {  fireSeriesChanged();  }  	  	compilable	  [FE]  IllegalArgumentException	499412	1
2996469	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  this.data.remove(item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  this.data.remove(item);	  	compilable	  [FE]  IllegalArgumentException	499412	1
2996470	[BUG]  [BUGGY]  //  removeAgedItems(true);  this.data.remove(item);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  this.data.remove(item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  this.data.remove(item);	  	compilable	  [FE]  IllegalArgumentException	499412	1
2996396	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied    ;    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499400	1
2996397	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied    ;    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499400	1
2996906	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  this.data.add(item,  this.maximumItemCount);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  this.data.add(item,  this.maximumItemCount);	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    >>    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499485	1
2996907	[BUG]  [BUGGY]  //  removeAgedItems(false);  this.data.add(item,  this.maximumItemCount);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  this.data.add(item,  this.maximumItemCount);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  this.data.add(item,  this.maximumItemCount);	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    >>    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499485	1
2996431	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996432	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
889317	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);            [BUGGY]  this.maximumItemCount  =  Integer.MAX_VALUE  +  3;  [BUGGY]            this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	add	this.maximumItemCount  =  Integer.MAX_VALUE  +  3;	  	compilable	  [FE]  IllegalArgumentException	148220	1
889318	[BUG]  [BUGGY]  this.maximumItemCount  =  Integer.MAX_VALUE  +  3;  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);            [BUGGY]  this.maximumItemCount  =  Integer.MAX_VALUE  +  3;  [BUGGY]            this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	replace	this.maximumItemCount  =  Integer.MAX_VALUE  +  3;	  	compilable	  [FE]  IllegalArgumentException	148220	1
2996654	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(true,  item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(true,  item);	  //    deleteAgedItems(false,    item);    	compilable	  [FE]  IllegalArgumentException	499443	1
2996655	[BUG]  [BUGGY]  //  removedAgedItems(true,  item);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(true,  item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(true,  item);	  //    deleteAgedItems(false,    item);    	compilable	  [FE]  IllegalArgumentException	499443	1
998403	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  if(this.domain  ==  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range;  timePeriodClass  =  timePeriodClass;  }  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	if(this.domain  ==  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range;  timePeriodClass  =  timePeriodClass;  }	  	compilable	  [FE]  IllegalArgumentException	166401	1
998404	[BUG]  [BUGGY]  if(this.domain  ==  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range;  timePeriodClass  =  timePeriodClass;  }  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  if(this.domain  ==  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range;  timePeriodClass  =  timePeriodClass;  }  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	if(this.domain  ==  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range;  timePeriodClass  =  timePeriodClass;  }	  	compilable	  [FE]  IllegalArgumentException	166401	1
2996469	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  >>  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  >>	  	compilable	  [FE]  IllegalArgumentException	499412	1
2996470	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  >>  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  >>  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  >>	  	compilable	  [FE]  IllegalArgumentException	499412	1
998181	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  if(this.range!=  null)  {  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  }  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	if(this.range!=  null)  {  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  }	  	compilable	  [FE]  IllegalArgumentException	166364	1
998182	[BUG]  [BUGGY]  if(this.range!=  null)  {  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  }  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  if(this.range!=  null)  {  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  }  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	if(this.range!=  null)  {  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  }	  	compilable	  [FE]  IllegalArgumentException	166364	1
889544	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);            [BUGGY]  if(domain  ==  null)  {  this.domain  =  domain;  this.range  =  range;  this.maximumItemAge  =  Integer.MAX_VALUE;  }  [BUGGY]            this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	add	if(domain  ==  null)  {  this.domain  =  domain;  this.range  =  range;  this.maximumItemAge  =  Integer.MAX_VALUE;  }	  this.data    =    new    java.util.ArrayList(200);    	compilable	  [FE]  IllegalArgumentException	148258	1
889545	[BUG]  [BUGGY]  if(domain  ==  null)  {  this.domain  =  domain;  this.range  =  range;  this.maximumItemAge  =  Integer.MAX_VALUE;  }  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);            [BUGGY]  if(domain  ==  null)  {  this.domain  =  domain;  this.range  =  range;  this.maximumItemAge  =  Integer.MAX_VALUE;  }  [BUGGY]            this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	replace	if(domain  ==  null)  {  this.domain  =  domain;  this.range  =  range;  this.maximumItemAge  =  Integer.MAX_VALUE;  }	  this.data    =    new    java.util.ArrayList(200);    	compilable	  [FE]  IllegalArgumentException	148258	1
2996438	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(add)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(add)  {  fireSeriesChanged();  }	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996439	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(add)  {  fireSeriesChanged();  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(add)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(add)  {  fireSeriesChanged();  }	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996468	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.addAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.addAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  	  	compilable	  [FE]  IllegalArgumentException	499412	1
2996469	[BUG]  [BUGGY]  //  this.data.addAgedItems(false);  if(notify)  {  fireSeriesChanged();  }    [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.addAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.addAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  	  	compilable	  [FE]  IllegalArgumentException	499412	1
2996611	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  bodied  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  bodied  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;	  	compilable	  [FE]  IllegalArgumentException	499436	1
2996612	[BUG]  [BUGGY]  //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  bodied  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  bodied  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  bodied  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;	  	compilable	  [FE]  IllegalArgumentException	499436	1
2996612	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  hopped  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  hopped  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;	  	compilable	  [FE]  IllegalArgumentException	499436	1
2996613	[BUG]  [BUGGY]  //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  hopped  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  hopped  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  hopped  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;  }  ;	  	compilable	  [FE]  IllegalArgumentException	499436	1
998217	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  Integer.MAX_VALUE  +  3;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.maximumItemCount  =  Integer.MAX_VALUE  +  3;	  	compilable	  [FE]  IllegalArgumentException	166370	1
998218	[BUG]  [BUGGY]  this.maximumItemCount  =  Integer.MAX_VALUE  +  3;  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  Integer.MAX_VALUE  +  3;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.maximumItemCount  =  Integer.MAX_VALUE  +  3;	  	compilable	  [FE]  IllegalArgumentException	166370	1
2996863	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }	  //    deleteAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    &&    item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))    {    this.data.    	compilable	  [FE]  IllegalArgumentException	499478	1
2996864	[BUG]  [BUGGY]  //  deleteAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }	  //    deleteAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    &&    item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))    {    this.data.    	compilable	  [FE]  IllegalArgumentException	499478	1
2996864	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  bodied  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  bodied	  //    deleteAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    &&    item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))    {    this.data.    	compilable	  [FE]  IllegalArgumentException	499478	1
2996865	[BUG]  [BUGGY]  //  deleteAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  bodied  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  bodied  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  bodied	  //    deleteAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    &&    item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))    {    this.data.    	compilable	  [FE]  IllegalArgumentException	499478	1
25101	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println(   "Unable  to  add  cloned  data  item...   ");  [BUGGY]            }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println(   "Unable  to  add  cloned  data  item...   ");	  	compilable	  [FE]  IllegalArgumentException	4184	1
25102	[BUG]  [BUGGY]  System.err.println(   "Unable  to  add  cloned  data  item...   ");  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println(   "Unable  to  add  cloned  data  item...   ");  [BUGGY]            }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println(   "Unable  to  add  cloned  data  item...   ");	  	compilable	  [FE]  IllegalArgumentException	4184	1
997287	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  Math.max(this.maximumItemCount,  3);  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.maximumItemCount  =  Math.max(this.maximumItemCount,  3);	  	compilable	  [FE]  IllegalArgumentException	166215	1
997288	[BUG]  [BUGGY]  this.maximumItemCount  =  Math.max(this.maximumItemCount,  3);  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  Math.max(this.maximumItemCount,  3);  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.maximumItemCount  =  Math.max(this.maximumItemCount,  3);	  	compilable	  [FE]  IllegalArgumentException	166215	1
2996401	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  boolean  alert  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  boolean  alert  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();	  	compilable	  [FE]  IllegalArgumentException	499401	1
2996402	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  boolean  alert  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  boolean  alert  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  boolean  alert  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();	  	compilable	  [FE]  IllegalArgumentException	499401	1
2996403	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  boolean!  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  boolean!  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.	  	compilable	  [FE]  IllegalArgumentException	499401	1
2996404	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  boolean!  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  boolean!  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  boolean!  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.	  	compilable	  [FE]  IllegalArgumentException	499401	1
997993	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  if(this.range!=  null)  {  this.domain  =  domain;  }  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	if(this.range!=  null)  {  this.domain  =  domain;  }	  	compilable	  [FE]  IllegalArgumentException	166333	1
997994	[BUG]  [BUGGY]  if(this.range!=  null)  {  this.domain  =  domain;  }  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  if(this.range!=  null)  {  this.domain  =  domain;  }  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	if(this.range!=  null)  {  this.domain  =  domain;  }	  	compilable	  [FE]  IllegalArgumentException	166333	1
998432	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.range  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  2;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.range  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  2;	  	compilable	  [FE]  IllegalArgumentException	166406	1
998433	[BUG]  [BUGGY]  this.range  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  2;  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.range  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  2;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.range  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  2;	  	compilable	  [FE]  IllegalArgumentException	166406	1
2996432	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.getAgedItems(true);  b.addChangeListener(this);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.getAgedItems(true);  b.addChangeListener(this);	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996433	[BUG]  [BUGGY]  //  this.data.getAgedItems(true);  b.addChangeListener(this);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.getAgedItems(true);  b.addChangeListener(this);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.getAgedItems(true);  b.addChangeListener(this);	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996618	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(true);  b.addChangeListener(this);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllAgedItems(true);  b.addChangeListener(this);	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996619	[BUG]  [BUGGY]  //  removedAllAgedItems(true);  b.addChangeListener(this);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(true);  b.addChangeListener(this);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllAgedItems(true);  b.addChangeListener(this);	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996437	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.removeAgedItems(false);  b.addChangeListener(this);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.removeAgedItems(false);  b.addChangeListener(this);	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996438	[BUG]  [BUGGY]  //  this.data.removeAgedItems(false);  b.addChangeListener(this);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.removeAgedItems(false);  b.addChangeListener(this);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.removeAgedItems(false);  b.addChangeListener(this);	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
70647	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( ",Requires  start  %  2  exceeded  0   ");  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( ",Requires  start  %  2  exceeded  0   ");	  	compilable	  [FE]  IllegalArgumentException	11775	1
70648	[BUG]  [BUGGY]  System.err.println( ",Requires  start  %  2  exceeded  0   ");  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( ",Requires  start  %  2  exceeded  0   ");  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( ",Requires  start  %  2  exceeded  0   ");	  	compilable	  [FE]  IllegalArgumentException	11775	1
2996431	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied?  b.toString()  :  null;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied?  b.toString()  :  null;	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996432	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied?  b.toString()  :  null;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied?  b.toString()  :  null;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied?  b.toString()  :  null;	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996432	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  bodied?  b.toString()  :  null;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  bodied?  b.toString()  :  null;	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996433	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  bodied?  b.toString()  :  null;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  bodied?  b.toString()  :  null;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  bodied?  b.toString()  :  null;	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
998221	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  Integer.MAX_VALUE  /  2;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.maximumItemCount  =  Integer.MAX_VALUE  /  2;	  this.maximumItemCount    =    Integer.MAX_VALUE    +    2;    	compilable	  [FE]  IllegalArgumentException	166371	1
998222	[BUG]  [BUGGY]  this.maximumItemCount  =  Integer.MAX_VALUE  /  2;  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  Integer.MAX_VALUE  /  2;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.maximumItemCount  =  Integer.MAX_VALUE  /  2;	  this.maximumItemCount    =    Integer.MAX_VALUE    +    2;    	compilable	  [FE]  IllegalArgumentException	166371	1
2996462	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  	  	compilable	  [FE]  IllegalArgumentException	499411	1
2996463	[BUG]  [BUGGY]  //  this.data.removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }    [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  	  	compilable	  [FE]  IllegalArgumentException	499411	1
2996463	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  }  	  	compilable	  [FE]  IllegalArgumentException	499411	1
2996464	[BUG]  [BUGGY]  //  this.data.removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  }    [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  }  	  	compilable	  [FE]  IllegalArgumentException	499411	1
2817806	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            b.append(           "You  are  attempting  to  add  an  observation  for             ");  b.append(           "the  time  period             ");  b.append(item.getPeriod().toString());  b.append(           "  but  the  series  already  contains  an  observation           ");  b.append(           "  for  that  time  period.  Duplicates  are  not             ");  b.append(           "permitted.Try  using  the  addOrUpdate()  method.           ");  throw  new  SeriesException(b.toString());  }  }  }            [BUGGY]  if(!item.getPeriod().equals( "Period "))  {  [BUGGY]              if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	534	534	1	add	if(!item.getPeriod().equals( "Period "))  {	  if(item.getPeriod().equals(   "/.   "))    {    	compilable	  [FE]  IllegalArgumentException	469635	1
2817807	[BUG]  [BUGGY]  if(!item.getPeriod().equals( "Period "))  {  [FE]  IllegalArgumentException  [CONTEXT]            b.append(           "You  are  attempting  to  add  an  observation  for             ");  b.append(           "the  time  period             ");  b.append(item.getPeriod().toString());  b.append(           "  but  the  series  already  contains  an  observation           ");  b.append(           "  for  that  time  period.  Duplicates  are  not             ");  b.append(           "permitted.Try  using  the  addOrUpdate()  method.           ");  throw  new  SeriesException(b.toString());  }  }  }            [BUGGY]  if(!item.getPeriod().equals( "Period "))  {  [BUGGY]              if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	534	534	1	replace	if(!item.getPeriod().equals( "Period "))  {	  if(item.getPeriod().equals(   "/.   "))    {    	compilable	  [FE]  IllegalArgumentException	469635	1
49905	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println(   "Requires  start  <  start.   ");  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println(   "Requires  start  <  start.   ");	  	compilable	  [FE]  IllegalArgumentException	8318	1
49906	[BUG]  [BUGGY]  System.err.println(   "Requires  start  <  start.   ");  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println(   "Requires  start  <  start.   ");  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println(   "Requires  start  <  start.   ");	  	compilable	  [FE]  IllegalArgumentException	8318	1
2996618	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllAgedItems(false);  if(notify))  {  fireSeriesChanged();  }	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996619	[BUG]  [BUGGY]  //  removedAllAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllAgedItems(false);  if(notify))  {  fireSeriesChanged();  }	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2998155	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  don't  notify  any,  because  that  //  happens  next  anyway...  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  don't  notify  any,  because  that  //  happens  next  anyway...	  	compilable	  [FE]  IllegalArgumentException	499693	1
2998156	[BUG]  [BUGGY]  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  don't  notify  any,  because  that  //  happens  next  anyway...  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  don't  notify  any,  because  that  //  happens  next  anyway...  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	if(notify)  {  fireSeriesChanged();  }  ;  //  removeAgedItems(false);  //  remove  old  items  if  needed,  //  don't  notify  any,  because  that  //  happens  next  anyway...	  	compilable	  [FE]  IllegalArgumentException	499693	1
2996858	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  bodied  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  bodied	  	compilable	  [FE]  IllegalArgumentException	499477	1
2996859	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  bodied  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  bodied  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  bodied	  	compilable	  [FE]  IllegalArgumentException	499477	1
2996425	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;  }  ;  &  b.toString()  :  null;  bodied  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;  }  ;  &  b.toString()  :  null;  bodied	  	compilable	  [FE]  IllegalArgumentException	499405	1
2996426	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;  }  ;  &  b.toString()  :  null;  bodied  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;  }  ;  &  b.toString()  :  null;  bodied  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;  }  ;  &  b.toString()  :  null;  bodied	  	compilable	  [FE]  IllegalArgumentException	499405	1
2996426	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;  }  ;  &  b.toString()  :  null;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;  }  ;  &  b.toString()  :  null;  }	  	compilable	  [FE]  IllegalArgumentException	499405	1
2996427	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;  }  ;  &  b.toString()  :  null;  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;  }  ;  &  b.toString()  :  null;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;  }  ;  &  b.toString()  :  null;  }	  	compilable	  [FE]  IllegalArgumentException	499405	1
2996468	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.getAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.getAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  	  	compilable	  [FE]  IllegalArgumentException	499412	1
2996469	[BUG]  [BUGGY]  //  this.data.getAgedItems(false);  if(notify)  {  fireSeriesChanged();  }    [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.getAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.getAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  	  	compilable	  [FE]  IllegalArgumentException	499412	1
2996469	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.getAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.getAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  }  	  	compilable	  [FE]  IllegalArgumentException	499412	1
2996470	[BUG]  [BUGGY]  //  this.data.getAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  }    [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.getAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.getAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  }  	  	compilable	  [FE]  IllegalArgumentException	499412	1
2996648	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996649	[BUG]  [BUGGY]  //  deleteAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }    [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996624	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false,  item);  b.append('ufffd');  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false,  item);  b.append('ufffd');	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499438	1
2996625	[BUG]  [BUGGY]  //  deleteAgedItems(false,  item);  b.append('ufffd');  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false,  item);  b.append('ufffd');  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false,  item);  b.append('ufffd');	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499438	1
2996864	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))!=  this.data.  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))!=  this.data.	  //    deleteAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    &&    item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))    {    this.data.    	compilable	  [FE]  IllegalArgumentException	499478	1
2996865	[BUG]  [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))!=  this.data.  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))!=  this.data.  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))!=  this.data.	  //    deleteAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    &&    item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))    {    this.data.    	compilable	  [FE]  IllegalArgumentException	499478	1
990482	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  if(timePeriodClass  ==  null)  {  this.domain  =  domain;  this.range  =  range;  }  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	if(timePeriodClass  ==  null)  {  this.domain  =  domain;  this.range  =  range;  }	  if(timePeriodClass!=    null)    {    this.domain    =    domain;    this.range    =    range;    }    	compilable	  [FE]  IllegalArgumentException	165081	1
990483	[BUG]  [BUGGY]  if(timePeriodClass  ==  null)  {  this.domain  =  domain;  this.range  =  range;  }  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  if(timePeriodClass  ==  null)  {  this.domain  =  domain;  this.range  =  range;  }  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	if(timePeriodClass  ==  null)  {  this.domain  =  domain;  this.range  =  range;  }	  if(timePeriodClass!=    null)    {    this.domain    =    domain;    this.range    =    range;    }    	compilable	  [FE]  IllegalArgumentException	165081	1
2996474	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied?  b.toString()  :  null;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied?  b.toString()  :  null;  }	  //    removeAgedItems(false);    this.data.remove(item);    	compilable	  [FE]  IllegalArgumentException	499413	1
2996475	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied?  b.toString()  :  null;  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied?  b.toString()  :  null;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied?  b.toString()  :  null;  }	  //    removeAgedItems(false);    this.data.remove(item);    	compilable	  [FE]  IllegalArgumentException	499413	1
2996432	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.getAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.getAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996433	[BUG]  [BUGGY]  //  this.data.getAgedItems(true);  if(notify)  {  fireSeriesChanged();  }    [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.getAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.getAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996899	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  figured  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  figured  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  	compilable	  [FE]  IllegalArgumentException	499484	1
2996900	[BUG]  [BUGGY]  //  deleteAgedItems(false);  figured  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  figured  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  figured  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  	compilable	  [FE]  IllegalArgumentException	499484	1
997353	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  Math.max(this.maximumItemCount,  11);  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.maximumItemCount  =  Math.max(this.maximumItemCount,  11);	  	compilable	  [FE]  IllegalArgumentException	166226	1
997354	[BUG]  [BUGGY]  this.maximumItemCount  =  Math.max(this.maximumItemCount,  11);  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  Math.max(this.maximumItemCount,  11);  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.maximumItemCount  =  Math.max(this.maximumItemCount,  11);	  	compilable	  [FE]  IllegalArgumentException	166226	1
2996654	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(true;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(true;	  //    deleteAgedItems(false,    item);    	compilable	  [FE]  IllegalArgumentException	499443	1
2996655	[BUG]  [BUGGY]  //  removedAgedItems(true;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(true;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(true;	  //    deleteAgedItems(false,    item);    	compilable	  [FE]  IllegalArgumentException	499443	1
70652	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( ",Requires  start  ->  0   ");  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( ",Requires  start  ->  0   ");	  System.err.println(   "Requires    start    %    2    exceeded    0.   ");    	compilable	  [FE]  AssertionFailedError	11776	1
70653	[BUG]  [BUGGY]  System.err.println( ",Requires  start  ->  0   ");  [FE]  AssertionFailedError  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( ",Requires  start  ->  0   ");  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( ",Requires  start  ->  0   ");	  System.err.println(   "Requires    start    %    2    exceeded    0.   ");    	compilable	  [FE]  AssertionFailedError	11776	1
2996437	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  delt  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  delt	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996438	[BUG]  [BUGGY]  //  this.data.removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  delt  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  delt  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  delt	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996438	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  delt  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  delt	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996439	[BUG]  [BUGGY]  //  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  delt  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  delt  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  delt	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996426	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(added)  {  fireSeriesChanged();  bodied  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(added)  {  fireSeriesChanged();  bodied	  	compilable	  [FE]  IllegalArgumentException	499405	1
2996427	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(added)  {  fireSeriesChanged();  bodied  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(added)  {  fireSeriesChanged();  bodied  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(added)  {  fireSeriesChanged();  bodied	  	compilable	  [FE]  IllegalArgumentException	499405	1
2996427	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }	  	compilable	  [FE]  IllegalArgumentException	499405	1
2996428	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }	  	compilable	  [FE]  IllegalArgumentException	499405	1
2996389	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;	  	compilable	  [FE]  IllegalArgumentException	499399	1
2996390	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;	  	compilable	  [FE]  IllegalArgumentException	499399	1
2996618	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996619	[BUG]  [BUGGY]  //  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
996927	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  this.maximumItemCount  +  3;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.maximumItemCount  =  this.maximumItemCount  +  3;	  	compilable	  [FE]  IllegalArgumentException	166155	1
996928	[BUG]  [BUGGY]  this.maximumItemCount  =  this.maximumItemCount  +  3;  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  this.maximumItemCount  +  3;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.maximumItemCount  =  this.maximumItemCount  +  3;	  	compilable	  [FE]  IllegalArgumentException	166155	1
2996461	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  }  ;  b.toString()  :  null;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  }  ;  b.toString()  :  null;  }	  	compilable	  [FE]  IllegalArgumentException	499411	1
2996462	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  }  ;  b.toString()  :  null;  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  }  ;  b.toString()  :  null;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  }  ;  b.toString()  :  null;  }	  	compilable	  [FE]  IllegalArgumentException	499411	1
2996462	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  }  ;  b.toString()  :  null;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  }  ;  b.toString()  :  null;  }	  	compilable	  [FE]  IllegalArgumentException	499411	1
2996463	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  }  ;  b.toString()  :  null;  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  }  ;  b.toString()  :  null;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  }  ;  b.toString()  :  null;  }	  	compilable	  [FE]  IllegalArgumentException	499411	1
2996463	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  }  ;  b.toString()  :  null;  }  ;  b.toString()  :  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  }  ;  b.toString()  :  null;  }  ;  b.toString()  :	  	compilable	  [FE]  IllegalArgumentException	499411	1
2996464	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  }  ;  b.toString()  :  null;  }  ;  b.toString()  :  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  }  ;  b.toString()  :  null;  }  ;  b.toString()  :  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  }  ;  b.toString()  :  null;  }  ;  b.toString()  :	  	compilable	  [FE]  IllegalArgumentException	499411	1
2996611	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  }	  	compilable	  [FE]  IllegalArgumentException	499436	1
2996612	[BUG]  [BUGGY]  //  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  }	  	compilable	  [FE]  IllegalArgumentException	499436	1
2996612	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  }	  	compilable	  [FE]  IllegalArgumentException	499436	1
2996613	[BUG]  [BUGGY]  //  removedAllAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  }	  	compilable	  [FE]  IllegalArgumentException	499436	1
998438	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  Integer.MIN_VALUE  /  2;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.maximumItemCount  =  Integer.MIN_VALUE  /  2;	  this.domain    =    domain    +    DEFAULT_DOMAIN_DESCRIPTION    +    2;    	compilable	  [FE]  IllegalArgumentException	166407	1
998439	[BUG]  [BUGGY]  this.maximumItemCount  =  Integer.MIN_VALUE  /  2;  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  Integer.MIN_VALUE  /  2;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.maximumItemCount  =  Integer.MIN_VALUE  /  2;	  this.domain    =    domain    +    DEFAULT_DOMAIN_DESCRIPTION    +    2;    	compilable	  [FE]  IllegalArgumentException	166407	1
2817806	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            b.append(           "You  are  attempting  to  add  an  observation  for             ");  b.append(           "the  time  period             ");  b.append(item.getPeriod().toString());  b.append(           "  but  the  series  already  contains  an  observation           ");  b.append(           "  for  that  time  period.  Duplicates  are  not             ");  b.append(           "permitted.Try  using  the  addOrUpdate()  method.           ");  throw  new  SeriesException(b.toString());  }  }  }            [BUGGY]  if(!item.getPeriod().equals( "/. "))  {  [BUGGY]              if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	534	534	1	add	if(!item.getPeriod().equals( "/. "))  {	  if(item.getPeriod().equals(   "/.   "))    {    	compilable	  [FE]  IllegalArgumentException	469635	1
2817807	[BUG]  [BUGGY]  if(!item.getPeriod().equals( "/. "))  {  [FE]  IllegalArgumentException  [CONTEXT]            b.append(           "You  are  attempting  to  add  an  observation  for             ");  b.append(           "the  time  period             ");  b.append(item.getPeriod().toString());  b.append(           "  but  the  series  already  contains  an  observation           ");  b.append(           "  for  that  time  period.  Duplicates  are  not             ");  b.append(           "permitted.Try  using  the  addOrUpdate()  method.           ");  throw  new  SeriesException(b.toString());  }  }  }            [BUGGY]  if(!item.getPeriod().equals( "/. "))  {  [BUGGY]              if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	534	534	1	replace	if(!item.getPeriod().equals( "/. "))  {	  if(item.getPeriod().equals(   "/.   "))    {    	compilable	  [FE]  IllegalArgumentException	469635	1
998397	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.range  =  DEFAULT_DOMAIN_DESCRIPTION  +  DEFAULT_RANGE_DESCRIPTION;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.range  =  DEFAULT_DOMAIN_DESCRIPTION  +  DEFAULT_RANGE_DESCRIPTION;	  	compilable	  [FE]  IllegalArgumentException	166400	1
998398	[BUG]  [BUGGY]  this.range  =  DEFAULT_DOMAIN_DESCRIPTION  +  DEFAULT_RANGE_DESCRIPTION;  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.range  =  DEFAULT_DOMAIN_DESCRIPTION  +  DEFAULT_RANGE_DESCRIPTION;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.range  =  DEFAULT_DOMAIN_DESCRIPTION  +  DEFAULT_RANGE_DESCRIPTION;	  	compilable	  [FE]  IllegalArgumentException	166400	1
2996432	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996433	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996899	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  meanwhile  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  meanwhile  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.	  	compilable	  [FE]  IllegalArgumentException	499484	1
2996900	[BUG]  [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  meanwhile  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  meanwhile  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  meanwhile  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.	  	compilable	  [FE]  IllegalArgumentException	499484	1
2996618	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  addAgedItems(false,  item);  b.addChangeListener(this);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  addAgedItems(false,  item);  b.addChangeListener(this);	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996619	[BUG]  [BUGGY]  //  addAgedItems(false,  item);  b.addChangeListener(this);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  addAgedItems(false,  item);  b.addChangeListener(this);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  addAgedItems(false,  item);  b.addChangeListener(this);	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996426	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  b.toString()  :  null;	  	compilable	  [FE]  IllegalArgumentException	499405	1
2996427	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  b.toString()  :  null;	  	compilable	  [FE]  IllegalArgumentException	499405	1
996889	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  maximumItemCount  /  3;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.maximumItemCount  =  maximumItemCount  /  3;	  	compilable	  [FE]  IllegalArgumentException	166149	1
996890	[BUG]  [BUGGY]  this.maximumItemCount  =  maximumItemCount  /  3;  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  maximumItemCount  /  3;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.maximumItemCount  =  maximumItemCount  /  3;	  	compilable	  [FE]  IllegalArgumentException	166149	1
2996901	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  limb  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  limb  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  	compilable	  [FE]  IllegalArgumentException	499484	1
2996902	[BUG]  [BUGGY]  //  deleteAgedItems(false);  limb  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  limb  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  limb  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  	compilable	  [FE]  IllegalArgumentException	499484	1
2996431	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996432	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996870	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  bodied  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  bodied	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    bodied    &&    item.getPeriod()!=    this.data.get(item.getPeriod()))    {    this.data.remove(0);    	compilable	  [FE]  IllegalArgumentException	499479	1
2996871	[BUG]  [BUGGY]  //  deleteAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  bodied  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  bodied  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  bodied	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    bodied    &&    item.getPeriod()!=    this.data.get(item.getPeriod()))    {    this.data.remove(0);    	compilable	  [FE]  IllegalArgumentException	499479	1
2996467	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied?  b.toString()  :  null;  }  ;  bodied?  b.toString()  :  null;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied?  b.toString()  :  null;  }  ;  bodied?  b.toString()  :  null;  }	  	compilable	  [FE]  IllegalArgumentException	499412	1
2996468	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied?  b.toString()  :  null;  }  ;  bodied?  b.toString()  :  null;  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied?  b.toString()  :  null;  }  ;  bodied?  b.toString()  :  null;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  bodied?  b.toString()  :  null;  }  ;  bodied?  b.toString()  :  null;  }	  	compilable	  [FE]  IllegalArgumentException	499412	1
2996468	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ;  bodied?  b.toString()  :  null;  }  ;  bodied?  b.toString()  :  null;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ;  bodied?  b.toString()  :  null;  }  ;  bodied?  b.toString()  :  null;  }	  	compilable	  [FE]  IllegalArgumentException	499412	1
2996469	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ;  bodied?  b.toString()  :  null;  }  ;  bodied?  b.toString()  :  null;  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ;  bodied?  b.toString()  :  null;  }  ;  bodied?  b.toString()  :  null;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ;  bodied?  b.toString()  :  null;  }  ;  bodied?  b.toString()  :  null;  }	  	compilable	  [FE]  IllegalArgumentException	499412	1
2996469	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  bodied?  b.toString()  :  null;  }  ;  bodied?  b.toString()  :  null;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  bodied?  b.toString()  :  null;  }  ;  bodied?  b.toString()  :  null;  }	  	compilable	  [FE]  IllegalArgumentException	499412	1
2996470	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  bodied?  b.toString()  :  null;  }  ;  bodied?  b.toString()  :  null;  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  bodied?  b.toString()  :  null;  }  ;  bodied?  b.toString()  :  null;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  bodied?  b.toString()  :  null;  }  ;  bodied?  b.toString()  :  null;  }	  	compilable	  [FE]  IllegalArgumentException	499412	1
2996431	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bodied	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996432	[BUG]  [BUGGY]  //  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bodied	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996432	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.removeAgedItems(true);  if(notify))  {  fireSeriesChanged();  }  ;  bodied  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.removeAgedItems(true);  if(notify))  {  fireSeriesChanged();  }  ;  bodied	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996433	[BUG]  [BUGGY]  //  this.data.removeAgedItems(true);  if(notify))  {  fireSeriesChanged();  }  ;  bodied  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.removeAgedItems(true);  if(notify))  {  fireSeriesChanged();  }  ;  bodied  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.removeAgedItems(true);  if(notify))  {  fireSeriesChanged();  }  ;  bodied	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996653	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllUnagedItems(false);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllUnagedItems(false);	  //    deleteAgedItems(false,    item);    	compilable	  [FE]  IllegalArgumentException	499443	1
2996654	[BUG]  [BUGGY]  //  removedAllUnagedItems(false);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllUnagedItems(false);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllUnagedItems(false);	  //    deleteAgedItems(false,    item);    	compilable	  [FE]  IllegalArgumentException	499443	1
2996654	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(true,  false);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(true,  false);	  //    deleteAgedItems(false,    item);    	compilable	  [FE]  IllegalArgumentException	499443	1
2996655	[BUG]  [BUGGY]  //  removedAgedItems(true,  false);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(true,  false);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(true,  false);	  //    deleteAgedItems(false,    item);    	compilable	  [FE]  IllegalArgumentException	499443	1
2996835	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  >>  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  >>  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  	compilable	  [FE]  IllegalArgumentException	499473	1
2996836	[BUG]  [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  >>  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  >>  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  >>  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  	compilable	  [FE]  IllegalArgumentException	499473	1
996932	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  getMaximumItemCount()  -  1;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.maximumItemCount  =  getMaximumItemCount()  -  1;	  this.maximumItemCount    =    this.maximumItemCount    +    2;    	compilable	  [FE]  IllegalArgumentException	166156	1
996933	[BUG]  [BUGGY]  this.maximumItemCount  =  getMaximumItemCount()  -  1;  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  getMaximumItemCount()  -  1;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.maximumItemCount  =  getMaximumItemCount()  -  1;	  this.maximumItemCount    =    this.maximumItemCount    +    2;    	compilable	  [FE]  IllegalArgumentException	166156	1
2996427	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify))  {  fireSeriesChanged();  }  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(notify))  {  fireSeriesChanged();  }  ;	  	compilable	  [FE]  IllegalArgumentException	499405	1
2996428	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(notify))  {  fireSeriesChanged();  }  ;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify))  {  fireSeriesChanged();  }  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(notify))  {  fireSeriesChanged();  }  ;	  	compilable	  [FE]  IllegalArgumentException	499405	1
49911	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println(   "Requires  begin  >>  start.   ");  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println(   "Requires  begin  >>  start.   ");	  	compilable	  [FE]  IllegalArgumentException	8319	1
49912	[BUG]  [BUGGY]  System.err.println(   "Requires  begin  >>  start.   ");  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println(   "Requires  begin  >>  start.   ");  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println(   "Requires  begin  >>  start.   ");	  	compilable	  [FE]  IllegalArgumentException	8319	1
2996624	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false);  item.addChangeListener(this);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(false);  item.addChangeListener(this);	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499438	1
2996625	[BUG]  [BUGGY]  //  removedAgedItems(false);  item.addChangeListener(this);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false);  item.addChangeListener(this);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(false);  item.addChangeListener(this);	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499438	1
996919	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  this.maximumItemCount  *  2;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.maximumItemCount  =  this.maximumItemCount  *  2;	  this.maximumItemCount    =    maximumItemCount    *    2;    	compilable	  [FE]  IllegalArgumentException	166154	1
996920	[BUG]  [BUGGY]  this.maximumItemCount  =  this.maximumItemCount  *  2;  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  this.maximumItemCount  *  2;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.maximumItemCount  =  this.maximumItemCount  *  2;	  this.maximumItemCount    =    maximumItemCount    *    2;    	compilable	  [FE]  IllegalArgumentException	166154	1
2996900	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  	compilable	  [FE]  IllegalArgumentException	499484	1
2996901	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  	compilable	  [FE]  IllegalArgumentException	499484	1
2996396	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  boolean  alert  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  boolean  alert  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied    ;    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499400	1
2996397	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  boolean  alert  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  boolean  alert  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  boolean  alert  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied    ;    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499400	1
2996618	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996619	[BUG]  [BUGGY]  //  removedAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }    [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996863	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove;	  //    deleteAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    &&    item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))    {    this.data.    	compilable	  [FE]  IllegalArgumentException	499478	1
2996864	[BUG]  [BUGGY]  //  deleteAgedItems(true);  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove;	  //    deleteAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    &&    item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))    {    this.data.    	compilable	  [FE]  IllegalArgumentException	499478	1
2996864	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove;  rang  &&  item.getPeriod().get  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove;  rang  &&  item.getPeriod().get	  //    deleteAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    &&    item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))    {    this.data.    	compilable	  [FE]  IllegalArgumentException	499478	1
2996865	[BUG]  [BUGGY]  //  deleteAgedItems(true);  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove;  rang  &&  item.getPeriod().get  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove;  rang  &&  item.getPeriod().get  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove;  rang  &&  item.getPeriod().get	  //    deleteAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    &&    item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))    {    this.data.    	compilable	  [FE]  IllegalArgumentException	499478	1
2996427	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();	  	compilable	  [FE]  IllegalArgumentException	499405	1
2996428	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();	  	compilable	  [FE]  IllegalArgumentException	499405	1
2996894	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))	  	compilable	  [FE]  IllegalArgumentException	499483	1
2996895	[BUG]  [BUGGY]  //  deleteAgedItems(true);  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))	  	compilable	  [FE]  IllegalArgumentException	499483	1
889353	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);            [BUGGY]  this.maximumItemCount  =  Integer.MAX_VALUE  /  10;  [BUGGY]            this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	add	this.maximumItemCount  =  Integer.MAX_VALUE  /  10;	  	compilable	  [FE]  IllegalArgumentException	148226	1
889354	[BUG]  [BUGGY]  this.maximumItemCount  =  Integer.MAX_VALUE  /  10;  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);            [BUGGY]  this.maximumItemCount  =  Integer.MAX_VALUE  /  10;  [BUGGY]            this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	replace	this.maximumItemCount  =  Integer.MAX_VALUE  /  10;	  	compilable	  [FE]  IllegalArgumentException	148226	1
889358	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);            [BUGGY]  if(domain  ==  null)  {  this.domain  =  domain;  this.range  =  range;  this.maximumItemCount  =  Integer.MAX_VALUE;  }  [BUGGY]            this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	add	if(domain  ==  null)  {  this.domain  =  domain;  this.range  =  range;  this.maximumItemCount  =  Integer.MAX_VALUE;  }	  this.maximumItemCount    =    Integer.MAX_VALUE    /    1;    	compilable	  [FE]  IllegalArgumentException	148227	1
889359	[BUG]  [BUGGY]  if(domain  ==  null)  {  this.domain  =  domain;  this.range  =  range;  this.maximumItemCount  =  Integer.MAX_VALUE;  }  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);            [BUGGY]  if(domain  ==  null)  {  this.domain  =  domain;  this.range  =  range;  this.maximumItemCount  =  Integer.MAX_VALUE;  }  [BUGGY]            this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	replace	if(domain  ==  null)  {  this.domain  =  domain;  this.range  =  range;  this.maximumItemCount  =  Integer.MAX_VALUE;  }	  this.maximumItemCount    =    Integer.MAX_VALUE    /    1;    	compilable	  [FE]  IllegalArgumentException	148227	1
2996432	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bod?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.to  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bod?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.to	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996433	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bod?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.to  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bod?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.to  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bod?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.to	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996438	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedItems(true);  b.addChangeListener(this);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedItems(true);  b.addChangeListener(this);	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996439	[BUG]  [BUGGY]  //  removedItems(true);  b.addChangeListener(this);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedItems(true);  b.addChangeListener(this);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedItems(true);  b.addChangeListener(this);	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996900	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  }  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  }  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  	compilable	  [FE]  IllegalArgumentException	499484	1
2996901	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  }  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  }  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  }  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  	compilable	  [FE]  IllegalArgumentException	499484	1
2996901	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  >>  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  >>  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  	compilable	  [FE]  IllegalArgumentException	499484	1
2996902	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  >>  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  >>  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  >>  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  	compilable	  [FE]  IllegalArgumentException	499484	1
2996648	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(true,  true);  if(notify)  {  fireSeriesChanged();  }  ;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(true,  true);  if(notify)  {  fireSeriesChanged();  }  ;  }  	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996649	[BUG]  [BUGGY]  //  removedAgedItems(true,  true);  if(notify)  {  fireSeriesChanged();  }  ;  }    [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(true,  true);  if(notify)  {  fireSeriesChanged();  }  ;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(true,  true);  if(notify)  {  fireSeriesChanged();  }  ;  }  	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996649	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(true,  true);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(true,  true);  if(notify)  {  fireSeriesChanged();  }  	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996650	[BUG]  [BUGGY]  //  removedAgedItems(true,  true);  if(notify)  {  fireSeriesChanged();  }    [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(true,  true);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(true,  true);  if(notify)  {  fireSeriesChanged();  }  	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996648	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllUnagedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllUnagedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996649	[BUG]  [BUGGY]  //  removedAllUnagedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllUnagedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllUnagedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996649	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllUnagedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  }?  b.toString()  :  null;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllUnagedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  }?  b.toString()  :  null;	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996650	[BUG]  [BUGGY]  //  removedAllUnagedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  }?  b.toString()  :  null;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllUnagedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  }?  b.toString()  :  null;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllUnagedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  }?  b.toString()  :  null;	  	compilable	  [FE]  IllegalArgumentException	499442	1
56421	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  start  <  0   ".length()  +  1);  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  start  <  0   ".length()  +  1);	  	compilable	  [FE]  IllegalArgumentException	9404	1
56422	[BUG]  [BUGGY]  System.err.println( "Requires  start  <  0   ".length()  +  1);  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  start  <  0   ".length()  +  1);  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  start  <  0   ".length()  +  1);	  	compilable	  [FE]  IllegalArgumentException	9404	1
2996624	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(false);  if(notify))  {  fireSeriesChanged();  }	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499438	1
2996625	[BUG]  [BUGGY]  //  removedAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(false);  if(notify))  {  fireSeriesChanged();  }	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499438	1
2996858	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.	  	compilable	  [FE]  IllegalArgumentException	499477	1
2996859	[BUG]  [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.	  	compilable	  [FE]  IllegalArgumentException	499477	1
2996859	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data	  	compilable	  [FE]  IllegalArgumentException	499477	1
2996860	[BUG]  [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data	  	compilable	  [FE]  IllegalArgumentException	499477	1
2996648	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(true,  true);  if(notify)  {  fireSeriesChanged();  }  ;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllAgedItems(true,  true);  if(notify)  {  fireSeriesChanged();  }  ;  }  	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996649	[BUG]  [BUGGY]  //  removedAllAgedItems(true,  true);  if(notify)  {  fireSeriesChanged();  }  ;  }    [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(true,  true);  if(notify)  {  fireSeriesChanged();  }  ;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllAgedItems(true,  true);  if(notify)  {  fireSeriesChanged();  }  ;  }  	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996649	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(true,  true);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllAgedItems(true,  true);  if(notify)  {  fireSeriesChanged();  }  	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996650	[BUG]  [BUGGY]  //  removedAllAgedItems(true,  true);  if(notify)  {  fireSeriesChanged();  }    [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(true,  true);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllAgedItems(true,  true);  if(notify)  {  fireSeriesChanged();  }  	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996438	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  bodied?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  bodied?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996439	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  bodied?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  bodied?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  bodied?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996617	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996618	[BUG]  [BUGGY]  //  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996437	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.removeAgedItems(false);  if(added)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.removeAgedItems(false);  if(added)  {  fireSeriesChanged();  }	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996438	[BUG]  [BUGGY]  //  this.data.removeAgedItems(false);  if(added)  {  fireSeriesChanged();  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.removeAgedItems(false);  if(added)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.removeAgedItems(false);  if(added)  {  fireSeriesChanged();  }	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996438	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.removeAgedItems(false);  if(add)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.removeAgedItems(false);  if(add)  {  fireSeriesChanged();  }	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996439	[BUG]  [BUGGY]  //  this.data.removeAgedItems(false);  if(add)  {  fireSeriesChanged();  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.removeAgedItems(false);  if(add)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.removeAgedItems(false);  if(add)  {  fireSeriesChanged();  }	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
56241	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  end  <=  0.0 ");  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  end  <=  0.0 ");	  	compilable	  [FE]  IllegalArgumentException	9374	1
56242	[BUG]  [BUGGY]  System.err.println( "Requires  end  <=  0.0 ");  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  end  <=  0.0 ");  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  end  <=  0.0 ");	  	compilable	  [FE]  IllegalArgumentException	9374	1
889544	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);            [BUGGY]  this.data  =  new  java.util.ArrayList(102);  [BUGGY]            this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	add	this.data  =  new  java.util.ArrayList(102);	  this.data    =    new    java.util.ArrayList(200);    	compilable	  [FE]  IllegalArgumentException	148258	1
889545	[BUG]  [BUGGY]  this.data  =  new  java.util.ArrayList(102);  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);            [BUGGY]  this.data  =  new  java.util.ArrayList(102);  [BUGGY]            this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	replace	this.data  =  new  java.util.ArrayList(102);	  this.data    =    new    java.util.ArrayList(200);    	compilable	  [FE]  IllegalArgumentException	148258	1
70671	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  start  +  end.   ");  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  start  +  end.   ");	  	compilable	  [FE]  IllegalArgumentException	11779	1
70672	[BUG]  [BUGGY]  System.err.println( "Requires  start  +  end.   ");  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  start  +  end.   ");  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  start  +  end.   ");	  	compilable	  [FE]  IllegalArgumentException	11779	1
2996617	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(false);  if(added)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllAgedItems(false);  if(added)  {  fireSeriesChanged();  }	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996618	[BUG]  [BUGGY]  //  removedAllAgedItems(false);  if(added)  {  fireSeriesChanged();  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(false);  if(added)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllAgedItems(false);  if(added)  {  fireSeriesChanged();  }	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996618	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllAgedItems(true);  if(notify)  {  fireSeriesChanged();  }	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996619	[BUG]  [BUGGY]  //  removedAllAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllAgedItems(true);  if(notify)  {  fireSeriesChanged();  }	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996437	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(added)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(added)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996438	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(added)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(added)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(added)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996438	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996439	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  ;	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996396	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied    ;    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499400	1
2996397	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied    ;    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499400	1
2996431	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(added)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(added)  {  fireSeriesChanged();  }	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996432	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(added)  {  fireSeriesChanged();  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(added)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(added)  {  fireSeriesChanged();  }	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996906	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  meanwhile  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  }  this.data.remov  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  meanwhile  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  }  this.data.remov	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    >>    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499485	1
2996907	[BUG]  [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  meanwhile  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  }  this.data.remov  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  meanwhile  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  }  this.data.remov  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  meanwhile  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  }  this.data.remov	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    >>    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499485	1
2996870	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  this.data.add(item);  if(added)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  this.data.add(item);  if(added)  {  fireSeriesChanged();  }	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    bodied    &&    item.getPeriod()!=    this.data.get(item.getPeriod()))    {    this.data.remove(0);    	compilable	  [FE]  IllegalArgumentException	499479	1
2996871	[BUG]  [BUGGY]  //  deleteAgedItems(false);  this.data.add(item);  if(added)  {  fireSeriesChanged();  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  this.data.add(item);  if(added)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  this.data.add(item);  if(added)  {  fireSeriesChanged();  }	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    bodied    &&    item.getPeriod()!=    this.data.get(item.getPeriod()))    {    this.data.remove(0);    	compilable	  [FE]  IllegalArgumentException	499479	1
996931	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  getMaximumItemCount()  +  1;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.maximumItemCount  =  getMaximumItemCount()  +  1;	  this.maximumItemCount    =    this.maximumItemCount    +    2;    	compilable	  [FE]  IllegalArgumentException	166156	1
996932	[BUG]  [BUGGY]  this.maximumItemCount  =  getMaximumItemCount()  +  1;  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  getMaximumItemCount()  +  1;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.maximumItemCount  =  getMaximumItemCount()  +  1;	  this.maximumItemCount    =    this.maximumItemCount    +    2;    	compilable	  [FE]  IllegalArgumentException	166156	1
998432	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.range  =  range  +  DEFAULT_DOMAIN_DESCRIPTION  +  2;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.range  =  range  +  DEFAULT_DOMAIN_DESCRIPTION  +  2;	  	compilable	  [FE]  IllegalArgumentException	166406	1
998433	[BUG]  [BUGGY]  this.range  =  range  +  DEFAULT_DOMAIN_DESCRIPTION  +  2;  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.range  =  range  +  DEFAULT_DOMAIN_DESCRIPTION  +  2;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.range  =  range  +  DEFAULT_DOMAIN_DESCRIPTION  +  2;	  	compilable	  [FE]  IllegalArgumentException	166406	1
998433	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  3;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  3;	  	compilable	  [FE]  IllegalArgumentException	166406	1
998434	[BUG]  [BUGGY]  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  3;  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  3;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  3;	  	compilable	  [FE]  IllegalArgumentException	166406	1
2996431	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  bodied  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  bodied  ;	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996432	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  bodied  ;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  bodied  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  bodied  ;	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
996891	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  maximumItemCount  *  3;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.maximumItemCount  =  maximumItemCount  *  3;	  	compilable	  [FE]  IllegalArgumentException	166149	1
996892	[BUG]  [BUGGY]  this.maximumItemCount  =  maximumItemCount  *  3;  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  maximumItemCount  *  3;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.maximumItemCount  =  maximumItemCount  *  3;	  	compilable	  [FE]  IllegalArgumentException	166149	1
2996858	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  }  this.data.remove(0);  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  }  this.data.remove(0);  }	  	compilable	  [FE]  IllegalArgumentException	499477	1
2996859	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  }  this.data.remove(0);  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  }  this.data.remove(0);  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  }  this.data.remove(0);  }	  	compilable	  [FE]  IllegalArgumentException	499477	1
2996859	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  >>  this.data.remove(0);  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  >>  this.data.remove(0);  }	  	compilable	  [FE]  IllegalArgumentException	499477	1
2996860	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  >>  this.data.remove(0);  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  >>  this.data.remove(0);  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  >>  this.data.remove(0);  }	  	compilable	  [FE]  IllegalArgumentException	499477	1
2996617	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996618	[BUG]  [BUGGY]  //  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996618	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996619	[BUG]  [BUGGY]  //  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996473	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }	  //    removeAgedItems(false);    this.data.remove(item);    	compilable	  [FE]  IllegalArgumentException	499413	1
2996474	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  }	  //    removeAgedItems(false);    this.data.remove(item);    	compilable	  [FE]  IllegalArgumentException	499413	1
2996474	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  slated  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  slated	  //    removeAgedItems(false);    this.data.remove(item);    	compilable	  [FE]  IllegalArgumentException	499413	1
2996475	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  slated  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  slated  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  slated	  //    removeAgedItems(false);    this.data.remove(item);    	compilable	  [FE]  IllegalArgumentException	499413	1
998191	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.domain  =  domain;  if(timePeriodClass!=  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range  +  DEFAULT_DOMAIN_DESCRIPTION;  }  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.domain  =  domain;  if(timePeriodClass!=  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range  +  DEFAULT_DOMAIN_DESCRIPTION;  }	  if(timePeriodClass!=    null)    {    this.domain    =    domain;    }    else    {    this.range    =    range    +    DEFAULT_DOMAIN_DESCRIPTION;    }    	compilable	  [FE]  IllegalArgumentException	166366	1
998192	[BUG]  [BUGGY]  this.domain  =  domain;  if(timePeriodClass!=  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range  +  DEFAULT_DOMAIN_DESCRIPTION;  }  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.domain  =  domain;  if(timePeriodClass!=  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range  +  DEFAULT_DOMAIN_DESCRIPTION;  }  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.domain  =  domain;  if(timePeriodClass!=  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range  +  DEFAULT_DOMAIN_DESCRIPTION;  }	  if(timePeriodClass!=    null)    {    this.domain    =    domain;    }    else    {    this.range    =    range    +    DEFAULT_DOMAIN_DESCRIPTION;    }    	compilable	  [FE]  IllegalArgumentException	166366	1
998192	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.domain  =  domain;  if(timePeriodClass  ==  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range  +  DEFAULT_DOMAIN_DESCRIPTION;  }  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.domain  =  domain;  if(timePeriodClass  ==  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range  +  DEFAULT_DOMAIN_DESCRIPTION;  }	  if(timePeriodClass!=    null)    {    this.domain    =    domain;    }    else    {    this.range    =    range    +    DEFAULT_DOMAIN_DESCRIPTION;    }    	compilable	  [FE]  IllegalArgumentException	166366	1
998193	[BUG]  [BUGGY]  this.domain  =  domain;  if(timePeriodClass  ==  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range  +  DEFAULT_DOMAIN_DESCRIPTION;  }  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.domain  =  domain;  if(timePeriodClass  ==  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range  +  DEFAULT_DOMAIN_DESCRIPTION;  }  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.domain  =  domain;  if(timePeriodClass  ==  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range  +  DEFAULT_DOMAIN_DESCRIPTION;  }	  if(timePeriodClass!=    null)    {    this.domain    =    domain;    }    else    {    this.range    =    range    +    DEFAULT_DOMAIN_DESCRIPTION;    }    	compilable	  [FE]  IllegalArgumentException	166366	1
998402	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.domain  =  DEFAULT_DOMAIN_DESCRIPTION  +  DEFAULT_RANGE_DESCRIPTION  +  1;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.domain  =  DEFAULT_DOMAIN_DESCRIPTION  +  DEFAULT_RANGE_DESCRIPTION  +  1;	  	compilable	  [FE]  IllegalArgumentException	166401	1
998403	[BUG]  [BUGGY]  this.domain  =  DEFAULT_DOMAIN_DESCRIPTION  +  DEFAULT_RANGE_DESCRIPTION  +  1;  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.domain  =  DEFAULT_DOMAIN_DESCRIPTION  +  DEFAULT_RANGE_DESCRIPTION  +  1;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.domain  =  DEFAULT_DOMAIN_DESCRIPTION  +  DEFAULT_RANGE_DESCRIPTION  +  1;	  	compilable	  [FE]  IllegalArgumentException	166401	1
2996474	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.addAgedItems(false,  true);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.addAgedItems(false,  true);	  //    removeAgedItems(false);    this.data.remove(item);    	compilable	  [FE]  IllegalArgumentException	499413	1
2996475	[BUG]  [BUGGY]  //  this.data.addAgedItems(false,  true);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.addAgedItems(false,  true);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.addAgedItems(false,  true);	  //    removeAgedItems(false);    this.data.remove(item);    	compilable	  [FE]  IllegalArgumentException	499413	1
2996426	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(added)  {  fireSeriesChanged();  slated  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(added)  {  fireSeriesChanged();  slated	  	compilable	  [FE]  IllegalArgumentException	499405	1
2996427	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(added)  {  fireSeriesChanged();  slated  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(added)  {  fireSeriesChanged();  slated  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(added)  {  fireSeriesChanged();  slated	  	compilable	  [FE]  IllegalArgumentException	499405	1
2996427	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(added)  {  fireSeriesChanged();  figured  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(added)  {  fireSeriesChanged();  figured	  	compilable	  [FE]  IllegalArgumentException	499405	1
2996428	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(added)  {  fireSeriesChanged();  figured  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(added)  {  fireSeriesChanged();  figured  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(added)  {  fireSeriesChanged();  figured	  	compilable	  [FE]  IllegalArgumentException	499405	1
2996426	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  >>  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  >>  ;	  	compilable	  [FE]  IllegalArgumentException	499405	1
2996427	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  >>  ;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  >>  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  >>  ;	  	compilable	  [FE]  IllegalArgumentException	499405	1
2996427	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;	  	compilable	  [FE]  IllegalArgumentException	499405	1
2996428	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;	  	compilable	  [FE]  IllegalArgumentException	499405	1
70647	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  begin  %  2  exceeded  0 ");  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  begin  %  2  exceeded  0 ");	  	compilable	  [FE]  IllegalArgumentException	11775	1
70648	[BUG]  [BUGGY]  System.err.println( "Requires  begin  %  2  exceeded  0 ");  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  begin  %  2  exceeded  0 ");  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  begin  %  2  exceeded  0 ");	  	compilable	  [FE]  IllegalArgumentException	11775	1
2996395	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  &  b.toString()  :  null;  }  ;  &  b.toString()  :  null;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  &  b.toString()  :  null;  }  ;  &  b.toString()  :  null;	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied    ;    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499400	1
2996396	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  &  b.toString()  :  null;  }  ;  &  b.toString()  :  null;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  &  b.toString()  :  null;  }  ;  &  b.toString()  :  null;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  &  b.toString()  :  null;  }  ;  &  b.toString()  :  null;	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied    ;    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499400	1
2996396	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  &  b.toString()  :  null;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  &  b.toString()  :  null;	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied    ;    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499400	1
2996397	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  &  b.toString()  :  null;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  &  b.toString()  :  null;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  &  b.toString()  :  null;	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied    ;    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499400	1
56210	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  start  >>  0   ".length());  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  start  >>  0   ".length());	  	compilable	  [FE]  IllegalArgumentException	9369	1
56211	[BUG]  [BUGGY]  System.err.println( "Requires  start  >>  0   ".length());  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  start  >>  0   ".length());  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  start  >>  0   ".length());	  	compilable	  [FE]  IllegalArgumentException	9369	1
2996859	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(1);  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(1);  }	  	compilable	  [FE]  IllegalArgumentException	499477	1
2996860	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(1);  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(1);  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(1);  }	  	compilable	  [FE]  IllegalArgumentException	499477	1
56215	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  start  %  2  >=  0 ");  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  start  %  2  >=  0 ");	  System.err.println(   "Requires    start    <    0       ".length());    	compilable	  [FE]  AssertionFailedError	9370	1
56216	[BUG]  [BUGGY]  System.err.println( "Requires  start  %  2  >=  0 ");  [FE]  AssertionFailedError  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  start  %  2  >=  0 ");  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  start  %  2  >=  0 ");	  System.err.println(   "Requires    start    <    0       ".length());    	compilable	  [FE]  AssertionFailedError	9370	1
56216	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  start  -  0 ".length());  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  start  -  0 ".length());	  System.err.println(   "Requires    start    <    0       ".length());    	compilable	  [FE]  AssertionFailedError	9370	1
56217	[BUG]  [BUGGY]  System.err.println( "Requires  start  -  0 ".length());  [FE]  AssertionFailedError  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  start  -  0 ".length());  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  start  -  0 ".length());	  System.err.println(   "Requires    start    <    0       ".length());    	compilable	  [FE]  AssertionFailedError	9370	1
2996431	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996432	[BUG]  [BUGGY]  //  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996432	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  meanwhile  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  meanwhile	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996433	[BUG]  [BUGGY]  //  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  meanwhile  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  meanwhile  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  meanwhile	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996906	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  limb  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  limb  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  }	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    >>    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499485	1
2996907	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  limb  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  limb  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  limb  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  }	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    >>    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499485	1
990626	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  500;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.maximumItemCount  =  500;	  this.maximumItemCount    =    3;    	compilable	  [FE]  IllegalArgumentException	165105	1
990627	[BUG]  [BUGGY]  this.maximumItemCount  =  500;  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  500;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.maximumItemCount  =  500;	  this.maximumItemCount    =    3;    	compilable	  [FE]  IllegalArgumentException	165105	1
2996463	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  Added  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  Added	  	compilable	  [FE]  IllegalArgumentException	499411	1
2996464	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  Added  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  Added  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  Added	  	compilable	  [FE]  IllegalArgumentException	499411	1
2996611	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;	  	compilable	  [FE]  IllegalArgumentException	499436	1
2996612	[BUG]  [BUGGY]  //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;	  	compilable	  [FE]  IllegalArgumentException	499436	1
2996612	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  &!b.append(item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  &!b.append(item);	  	compilable	  [FE]  IllegalArgumentException	499436	1
2996613	[BUG]  [BUGGY]  //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  &!b.append(item);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  &!b.append(item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  &!b.append(item);	  	compilable	  [FE]  IllegalArgumentException	499436	1
25130	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Usage:  failed  to  add  cloned  item.... ");  [BUGGY]            }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Usage:  failed  to  add  cloned  item.... ");	  	compilable	  [FE]  IllegalArgumentException	4189	1
25131	[BUG]  [BUGGY]  System.err.println( "Usage:  failed  to  add  cloned  item.... ");  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Usage:  failed  to  add  cloned  item.... ");  [BUGGY]            }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Usage:  failed  to  add  cloned  item.... ");	  	compilable	  [FE]  IllegalArgumentException	4189	1
2996618	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  Added  if(added)  {  fireSeriesChanged();  }  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  Added  if(added)  {  fireSeriesChanged();  }  ;	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996619	[BUG]  [BUGGY]  //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  Added  if(added)  {  fireSeriesChanged();  }  ;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  Added  if(added)  {  fireSeriesChanged();  }  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  Added  if(added)  {  fireSeriesChanged();  }  ;	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996648	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllUnagedItems(true);  b.addChangeListener(this);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllUnagedItems(true);  b.addChangeListener(this);	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996649	[BUG]  [BUGGY]  //  removedAllUnagedItems(true);  b.addChangeListener(this);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllUnagedItems(true);  b.addChangeListener(this);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllUnagedItems(true);  b.addChangeListener(this);	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996401	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;	  	compilable	  [FE]  IllegalArgumentException	499401	1
2996402	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;	  	compilable	  [FE]  IllegalArgumentException	499401	1
2996402	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;	  	compilable	  [FE]  IllegalArgumentException	499401	1
2996403	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;	  	compilable	  [FE]  IllegalArgumentException	499401	1
2996403	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  hopped  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  hopped  ;	  	compilable	  [FE]  IllegalArgumentException	499401	1
2996404	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  hopped  ;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  hopped  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bodied  ;  hopped  ;	  	compilable	  [FE]  IllegalArgumentException	499401	1
2996653	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(false,  false);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllAgedItems(false,  false);	  //    deleteAgedItems(false,    item);    	compilable	  [FE]  IllegalArgumentException	499443	1
2996654	[BUG]  [BUGGY]  //  removedAllAgedItems(false,  false);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(false,  false);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllAgedItems(false,  false);	  //    deleteAgedItems(false,    item);    	compilable	  [FE]  IllegalArgumentException	499443	1
889142	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);            [BUGGY]  this.maximumItemCount  =  Integer.MIN_VALUE  /  1;  [BUGGY]            this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	add	this.maximumItemCount  =  Integer.MIN_VALUE  /  1;	  this.maximumItemCount    =    Integer.MIN_VALUE    +    1;    	compilable	  [FE]  IllegalArgumentException	148191	1
889143	[BUG]  [BUGGY]  this.maximumItemCount  =  Integer.MIN_VALUE  /  1;  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);            [BUGGY]  this.maximumItemCount  =  Integer.MIN_VALUE  /  1;  [BUGGY]            this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	replace	this.maximumItemCount  =  Integer.MIN_VALUE  /  1;	  this.maximumItemCount    =    Integer.MIN_VALUE    +    1;    	compilable	  [FE]  IllegalArgumentException	148191	1
56025	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  end  >>  start.   ");  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  end  >>  start.   ");	  	compilable	  [FE]  IllegalArgumentException	9338	1
56026	[BUG]  [BUGGY]  System.err.println( "Requires  end  >>  start.   ");  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  end  >>  start.   ");  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  end  >>  start.   ");	  	compilable	  [FE]  IllegalArgumentException	9338	1
2996437	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  this.data.add(item);  if(added)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  this.data.add(item);  if(added)  {  fireSeriesChanged();  }	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996438	[BUG]  [BUGGY]  //  removeAgedItems(false);  this.data.add(item);  if(added)  {  fireSeriesChanged();  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  this.data.add(item);  if(added)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  this.data.add(item);  if(added)  {  fireSeriesChanged();  }	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
998403	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.range  =  domain  +  DEFAULT_RANGE_DESCRIPTION  +  1;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.range  =  domain  +  DEFAULT_RANGE_DESCRIPTION  +  1;	  	compilable	  [FE]  IllegalArgumentException	166401	1
998404	[BUG]  [BUGGY]  this.range  =  domain  +  DEFAULT_RANGE_DESCRIPTION  +  1;  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.range  =  domain  +  DEFAULT_RANGE_DESCRIPTION  +  1;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.range  =  domain  +  DEFAULT_RANGE_DESCRIPTION  +  1;	  	compilable	  [FE]  IllegalArgumentException	166401	1
2996870	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  }	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    bodied    &&    item.getPeriod()!=    this.data.get(item.getPeriod()))    {    this.data.remove(0);    	compilable	  [FE]  IllegalArgumentException	499479	1
2996871	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  }	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    bodied    &&    item.getPeriod()!=    this.data.get(item.getPeriod()))    {    this.data.remove(0);    	compilable	  [FE]  IllegalArgumentException	499479	1
2996905	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  this.data.add(item,  this.maximumItemCount);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  this.data.add(item,  this.maximumItemCount);	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    >>    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499485	1
2996906	[BUG]  [BUGGY]  //  deleteAgedItems(true);  this.data.add(item,  this.maximumItemCount);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  this.data.add(item,  this.maximumItemCount);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  this.data.add(item,  this.maximumItemCount);	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    >>    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499485	1
2996906	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  this.data.add(item,  getItemCount()  -  this.maximumItemCount);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  this.data.add(item,  getItemCount()  -  this.maximumItemCount);	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    >>    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499485	1
2996907	[BUG]  [BUGGY]  //  deleteAgedItems(false);  this.data.add(item,  getItemCount()  -  this.maximumItemCount);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  this.data.add(item,  getItemCount()  -  this.maximumItemCount);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  this.data.add(item,  getItemCount()  -  this.maximumItemCount);	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    >>    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499485	1
2996648	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false,  item);  b.addChangeListener(this);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(false,  item);  b.addChangeListener(this);	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996649	[BUG]  [BUGGY]  //  removedAgedItems(false,  item);  b.addChangeListener(this);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false,  item);  b.addChangeListener(this);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(false,  item);  b.addChangeListener(this);	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996649	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false,  item);  b.append('n');  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(false,  item);  b.append('n');	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996650	[BUG]  [BUGGY]  //  removedAgedItems(false,  item);  b.append('n');  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false,  item);  b.append('n');  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(false,  item);  b.append('n');	  	compilable	  [FE]  IllegalArgumentException	499442	1
56246	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  end  =  0.0 ");  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  end  =  0.0 ");	  System.err.println(   "Requires    end    <=    0.       ");    	compilable	  [FE]  AssertionFailedError	9375	1
56247	[BUG]  [BUGGY]  System.err.println( "Requires  end  =  0.0 ");  [FE]  AssertionFailedError  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  end  =  0.0 ");  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  end  =  0.0 ");	  System.err.println(   "Requires    end    <=    0.       ");    	compilable	  [FE]  AssertionFailedError	9375	1
2996432	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  >>  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  >>  ;	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996433	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  >>  ;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  >>  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  >>  ;	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996648	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(true,  true);  b.addChangeListener(this);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(true,  true);  b.addChangeListener(this);	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996649	[BUG]  [BUGGY]  //  removedAgedItems(true,  true);  b.addChangeListener(this);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(true,  true);  b.addChangeListener(this);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(true,  true);  b.addChangeListener(this);	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996649	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(true,  true);  this.data.add(item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(true,  true);  this.data.add(item);	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996650	[BUG]  [BUGGY]  //  removedAgedItems(true,  true);  this.data.add(item);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(true,  true);  this.data.add(item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(true,  true);  this.data.add(item);	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996648	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(true,  true);  b.addChangeListener(this);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllAgedItems(true,  true);  b.addChangeListener(this);	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996649	[BUG]  [BUGGY]  //  removedAllAgedItems(true,  true);  b.addChangeListener(this);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(true,  true);  b.addChangeListener(this);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllAgedItems(true,  true);  b.addChangeListener(this);	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996618	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.add(item,  getItemCount()  -  this.maximumItemCount);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.add(item,  getItemCount()  -  this.maximumItemCount);	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996619	[BUG]  [BUGGY]  //  this.data.add(item,  getItemCount()  -  this.maximumItemCount);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.add(item,  getItemCount()  -  this.maximumItemCount);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.add(item,  getItemCount()  -  this.maximumItemCount);	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996653	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false,  false);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(false,  false);	  //    deleteAgedItems(false,    item);    	compilable	  [FE]  IllegalArgumentException	499443	1
2996654	[BUG]  [BUGGY]  //  removedAgedItems(false,  false);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false,  false);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(false,  false);	  //    deleteAgedItems(false,    item);    	compilable	  [FE]  IllegalArgumentException	499443	1
2996654	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false,  true);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(false,  true);	  //    deleteAgedItems(false,    item);    	compilable	  [FE]  IllegalArgumentException	499443	1
2996655	[BUG]  [BUGGY]  //  removedAgedItems(false,  true);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false,  true);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(false,  true);	  //    deleteAgedItems(false,    item);    	compilable	  [FE]  IllegalArgumentException	499443	1
2996624	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false);  item.removeChangeListener(this);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(false);  item.removeChangeListener(this);	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499438	1
2996625	[BUG]  [BUGGY]  //  removedAgedItems(false);  item.removeChangeListener(this);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false);  item.removeChangeListener(this);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(false);  item.removeChangeListener(this);	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499438	1
49905	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  start  >>  start.   ");  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  start  >>  start.   ");	  	compilable	  [FE]  IllegalArgumentException	8318	1
49906	[BUG]  [BUGGY]  System.err.println( "Requires  start  >>  start.   ");  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  start  >>  start.   ");  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  start  >>  start.   ");	  	compilable	  [FE]  IllegalArgumentException	8318	1
2996432	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996433	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996403	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify))  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(notify))  {  fireSeriesChanged();  }	  	compilable	  [FE]  IllegalArgumentException	499401	1
2996404	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(notify))  {  fireSeriesChanged();  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify))  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(notify))  {  fireSeriesChanged();  }	  	compilable	  [FE]  IllegalArgumentException	499401	1
2996425	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  bodied  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  bodied  ;	  	compilable	  [FE]  IllegalArgumentException	499405	1
2996426	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  bodied  ;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  bodied  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  bodied  ;	  	compilable	  [FE]  IllegalArgumentException	499405	1
2996864	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.	  //    deleteAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    &&    item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))    {    this.data.    	compilable	  [FE]  IllegalArgumentException	499478	1
2996865	[BUG]  [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.	  //    deleteAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    &&    item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))    {    this.data.    	compilable	  [FE]  IllegalArgumentException	499478	1
2996653	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true,  item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true,  item);	  //    deleteAgedItems(false,    item);    	compilable	  [FE]  IllegalArgumentException	499443	1
2996654	[BUG]  [BUGGY]  //  deleteAgedItems(true,  item);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true,  item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true,  item);	  //    deleteAgedItems(false,    item);    	compilable	  [FE]  IllegalArgumentException	499443	1
858464	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);            [BUGGY]  this.domain  =  domain  + "DEFAULT_DOMAIN_DESCRIPTION "  +  DEFAULT_RANGE_DESCRIPTION;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	add	this.domain  =  domain  + "DEFAULT_DOMAIN_DESCRIPTION "  +  DEFAULT_RANGE_DESCRIPTION;	  this.domain    =    domain    +   "DOMAIN_DESCRIPTION   "    +    DEFAULT_RANGE_DESCRIPTION;    	compilable	  [FE]  IllegalArgumentException	143078	1
858465	[BUG]  [BUGGY]  this.domain  =  domain  + "DEFAULT_DOMAIN_DESCRIPTION "  +  DEFAULT_RANGE_DESCRIPTION;  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);            [BUGGY]  this.domain  =  domain  + "DEFAULT_DOMAIN_DESCRIPTION "  +  DEFAULT_RANGE_DESCRIPTION;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	replace	this.domain  =  domain  + "DEFAULT_DOMAIN_DESCRIPTION "  +  DEFAULT_RANGE_DESCRIPTION;	  this.domain    =    domain    +   "DOMAIN_DESCRIPTION   "    +    DEFAULT_RANGE_DESCRIPTION;    	compilable	  [FE]  IllegalArgumentException	143078	1
2996900	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  }	  	compilable	  [FE]  IllegalArgumentException	499484	1
2996901	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  }	  	compilable	  [FE]  IllegalArgumentException	499484	1
2996901	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  	compilable	  [FE]  IllegalArgumentException	499484	1
2996902	[BUG]  [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  	compilable	  [FE]  IllegalArgumentException	499484	1
2996431	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  &  b.toString()  :  null;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  &  b.toString()  :  null;  }	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996432	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  &  b.toString()  :  null;  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  &  b.toString()  :  null;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  &  b.toString()  :  null;  }	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996432	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(add)  {  fireSeriesChanged();  meanwhile  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(add)  {  fireSeriesChanged();  meanwhile	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996433	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(add)  {  fireSeriesChanged();  meanwhile  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(add)  {  fireSeriesChanged();  meanwhile  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(add)  {  fireSeriesChanged();  meanwhile	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996869	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  b.addChangeListener(this,  item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  b.addChangeListener(this,  item);	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    bodied    &&    item.getPeriod()!=    this.data.get(item.getPeriod()))    {    this.data.remove(0);    	compilable	  [FE]  IllegalArgumentException	499479	1
2996870	[BUG]  [BUGGY]  //  deleteAgedItems(true);  b.addChangeListener(this,  item);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  b.addChangeListener(this,  item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  b.addChangeListener(this,  item);	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    bodied    &&    item.getPeriod()!=    this.data.get(item.getPeriod()))    {    this.data.remove(0);    	compilable	  [FE]  IllegalArgumentException	499479	1
2996438	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.addAgedItems(false);  b.addChangeListener(this);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.addAgedItems(false);  b.addChangeListener(this);	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996439	[BUG]  [BUGGY]  //  this.data.addAgedItems(false);  b.addChangeListener(this);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.addAgedItems(false);  b.addChangeListener(this);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.addAgedItems(false);  b.addChangeListener(this);	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996649	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(dangerous,  item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(dangerous,  item);	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996650	[BUG]  [BUGGY]  //  removeAgedItems(dangerous,  item);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(dangerous,  item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(dangerous,  item);	  	compilable	  [FE]  IllegalArgumentException	499442	1
998371	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.domain  =  domain;  if(this.range!=  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range;  timePeriodClass  =  timePeriodClass;  }  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.domain  =  domain;  if(this.range!=  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range;  timePeriodClass  =  timePeriodClass;  }	  if(this.domain!=    null)    {    this.domain    =    domain;    }    else    {    this.range    =    range;    timePeriodClass    =    timePeriodClass;    }    	compilable	  [FE]  IllegalArgumentException	166396	1
998372	[BUG]  [BUGGY]  this.domain  =  domain;  if(this.range!=  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range;  timePeriodClass  =  timePeriodClass;  }  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.domain  =  domain;  if(this.range!=  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range;  timePeriodClass  =  timePeriodClass;  }  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.domain  =  domain;  if(this.range!=  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range;  timePeriodClass  =  timePeriodClass;  }	  if(this.domain!=    null)    {    this.domain    =    domain;    }    else    {    this.range    =    range;    timePeriodClass    =    timePeriodClass;    }    	compilable	  [FE]  IllegalArgumentException	166396	1
2996613	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(false);  b.add(item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllAgedItems(false);  b.add(item);	  	compilable	  [FE]  IllegalArgumentException	499436	1
2996614	[BUG]  [BUGGY]  //  removedAllAgedItems(false);  b.add(item);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(false);  b.add(item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllAgedItems(false);  b.add(item);	  	compilable	  [FE]  IllegalArgumentException	499436	1
2996906	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  }	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    >>    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499485	1
2996907	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  }	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    >>    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499485	1
2996900	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  }  this.data.remove  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  }  this.data.remove	  	compilable	  [FE]  IllegalArgumentException	499484	1
2996901	[BUG]  [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  }  this.data.remove  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  }  this.data.remove  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  }  this.data.remove	  	compilable	  [FE]  IllegalArgumentException	499484	1
2996654	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllAgedItems();	  //    deleteAgedItems(false,    item);    	compilable	  [FE]  IllegalArgumentException	499443	1
2996655	[BUG]  [BUGGY]  //  removedAllAgedItems();  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllAgedItems();	  //    deleteAgedItems(false,    item);    	compilable	  [FE]  IllegalArgumentException	499443	1
2996649	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false,  item);  b.addChangeListener(this);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false,  item);  b.addChangeListener(this);	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996650	[BUG]  [BUGGY]  //  deleteAgedItems(false,  item);  b.addChangeListener(this);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false,  item);  b.addChangeListener(this);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false,  item);  b.addChangeListener(this);	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996906	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  }  this.data.remov  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  }  this.data.remov	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    >>    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499485	1
2996907	[BUG]  [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  }  this.data.remov  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  }  this.data.remov  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  }  this.data.remov	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    >>    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499485	1
2996431	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bod  ;  bod?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bod  ;  bod?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  }	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996432	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bod  ;  bod?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bod  ;  bod?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bod  ;  bod?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  }	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996432	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bod  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bod  ;	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996433	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bod  ;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bod  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bod  ;	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
997353	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  Math.max(this.maximumItemCount,  13);  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.maximumItemCount  =  Math.max(this.maximumItemCount,  13);	  	compilable	  [FE]  IllegalArgumentException	166226	1
997354	[BUG]  [BUGGY]  this.maximumItemCount  =  Math.max(this.maximumItemCount,  13);  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  Math.max(this.maximumItemCount,  13);  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.maximumItemCount  =  Math.max(this.maximumItemCount,  13);	  	compilable	  [FE]  IllegalArgumentException	166226	1
2996623	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499438	1
2996624	[BUG]  [BUGGY]  //  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499438	1
2996624	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499438	1
2996625	[BUG]  [BUGGY]  //  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499438	1
996920	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  maximumItemCount  *  2  +  1;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.maximumItemCount  =  maximumItemCount  *  2  +  1;	  this.maximumItemCount    =    maximumItemCount    *    2;    	compilable	  [FE]  IllegalArgumentException	166154	1
996921	[BUG]  [BUGGY]  this.maximumItemCount  =  maximumItemCount  *  2  +  1;  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  maximumItemCount  *  2  +  1;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.maximumItemCount  =  maximumItemCount  *  2  +  1;	  this.maximumItemCount    =    maximumItemCount    *    2;    	compilable	  [FE]  IllegalArgumentException	166154	1
996926	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemAge  =  getMaximumItemAge();  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.maximumItemAge  =  getMaximumItemAge();	  	compilable	  [FE]  IllegalArgumentException	166155	1
996927	[BUG]  [BUGGY]  this.maximumItemAge  =  getMaximumItemAge();  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemAge  =  getMaximumItemAge();  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.maximumItemAge  =  getMaximumItemAge();	  	compilable	  [FE]  IllegalArgumentException	166155	1
2996870	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    bodied    &&    item.getPeriod()!=    this.data.get(item.getPeriod()))    {    this.data.remove(0);    	compilable	  [FE]  IllegalArgumentException	499479	1
2996871	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    bodied    &&    item.getPeriod()!=    this.data.get(item.getPeriod()))    {    this.data.remove(0);    	compilable	  [FE]  IllegalArgumentException	499479	1
2996426	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  &  b.toString()  :  null;  }  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  &  b.toString()  :  null;  }  ;	  	compilable	  [FE]  IllegalArgumentException	499405	1
2996427	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  &  b.toString()  :  null;  }  ;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  &  b.toString()  :  null;  }  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  &  b.toString()  :  null;  }  ;	  	compilable	  [FE]  IllegalArgumentException	499405	1
2996427	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  &  b.toString()  :  null;  }  ;  &  b.toString()  :  null;  &  b.toString();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  &  b.toString()  :  null;  }  ;  &  b.toString()  :  null;  &  b.toString();	  	compilable	  [FE]  IllegalArgumentException	499405	1
2996428	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  &  b.toString()  :  null;  }  ;  &  b.toString()  :  null;  &  b.toString();  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  &  b.toString()  :  null;  }  ;  &  b.toString()  :  null;  &  b.toString();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  &  b.toString()  :  null;  }  ;  &  b.toString()  :  null;  &  b.toString();	  	compilable	  [FE]  IllegalArgumentException	499405	1
56420	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  start  >>  0   ".length()  +  1);  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  start  >>  0   ".length()  +  1);	  	compilable	  [FE]  IllegalArgumentException	9404	1
56421	[BUG]  [BUGGY]  System.err.println( "Requires  start  >>  0   ".length()  +  1);  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  start  >>  0   ".length()  +  1);  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  start  >>  0   ".length()  +  1);	  	compilable	  [FE]  IllegalArgumentException	9404	1
996951	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  maximumItemCount  /  2  +  1;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.maximumItemCount  =  maximumItemCount  /  2  +  1;	  	compilable	  [FE]  IllegalArgumentException	166159	1
996952	[BUG]  [BUGGY]  this.maximumItemCount  =  maximumItemCount  /  2  +  1;  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  maximumItemCount  /  2  +  1;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.maximumItemCount  =  maximumItemCount  /  2  +  1;	  	compilable	  [FE]  IllegalArgumentException	166159	1
2996438	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedItems(false);  b.addChangeListener(this,  item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedItems(false);  b.addChangeListener(this,  item);	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996439	[BUG]  [BUGGY]  //  removedItems(false);  b.addChangeListener(this,  item);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedItems(false);  b.addChangeListener(this,  item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedItems(false);  b.addChangeListener(this,  item);	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996396	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied    ;    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499400	1
2996397	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied    ;    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499400	1
2996864	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  //    deleteAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    &&    item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))    {    this.data.    	compilable	  [FE]  IllegalArgumentException	499478	1
2996865	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  //    deleteAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    &&    item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))    {    this.data.    	compilable	  [FE]  IllegalArgumentException	499478	1
2996468	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  slated  ;  b.toString()  :  null;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  slated  ;  b.toString()  :  null;  }	  	compilable	  [FE]  IllegalArgumentException	499412	1
2996469	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  slated  ;  b.toString()  :  null;  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  slated  ;  b.toString()  :  null;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  slated  ;  b.toString()  :  null;  }	  	compilable	  [FE]  IllegalArgumentException	499412	1
2996623	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.add(item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.add(item);	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499438	1
2996624	[BUG]  [BUGGY]  //  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.add(item);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.add(item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.add(item);	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499438	1
2996624	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.add(item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.add(item);	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499438	1
2996625	[BUG]  [BUGGY]  //  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.add(item);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.add(item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.add(item);	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499438	1
2996623	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false);  if(added)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(false);  if(added)  {  fireSeriesChanged();  }	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499438	1
2996624	[BUG]  [BUGGY]  //  removedAgedItems(false);  if(added)  {  fireSeriesChanged();  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false);  if(added)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(false);  if(added)  {  fireSeriesChanged();  }	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499438	1
2996624	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  }	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499438	1
2996625	[BUG]  [BUGGY]  //  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  }	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499438	1
2996870	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    bodied    &&    item.getPeriod()!=    this.data.get(item.getPeriod()))    {    this.data.remove(0);    	compilable	  [FE]  IllegalArgumentException	499479	1
2996871	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    bodied    &&    item.getPeriod()!=    this.data.get(item.getPeriod()))    {    this.data.remove(0);    	compilable	  [FE]  IllegalArgumentException	499479	1
2996654	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedUnagedItems(false);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedUnagedItems(false);	  //    deleteAgedItems(false,    item);    	compilable	  [FE]  IllegalArgumentException	499443	1
2996655	[BUG]  [BUGGY]  //  removedUnagedItems(false);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedUnagedItems(false);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedUnagedItems(false);	  //    deleteAgedItems(false,    item);    	compilable	  [FE]  IllegalArgumentException	499443	1
2996900	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))	  	compilable	  [FE]  IllegalArgumentException	499484	1
2996901	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))	  	compilable	  [FE]  IllegalArgumentException	499484	1
2996901	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))	  	compilable	  [FE]  IllegalArgumentException	499484	1
2996902	[BUG]  [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))	  	compilable	  [FE]  IllegalArgumentException	499484	1
2996906	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  figured  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  figured  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    >>    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499485	1
2996907	[BUG]  [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  figured  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  figured  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  figured  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    >>    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499485	1
2996613	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  slated  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  slated	  	compilable	  [FE]  IllegalArgumentException	499436	1
2996614	[BUG]  [BUGGY]  //  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  slated  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  slated  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  slated	  	compilable	  [FE]  IllegalArgumentException	499436	1
2996438	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.getAgedItems();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.getAgedItems();	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996439	[BUG]  [BUGGY]  //  this.data.getAgedItems();  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.getAgedItems();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.getAgedItems();	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996624	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false);  this.data.add(item,  getItemCount()  -  this.maximumItemCount);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(false);  this.data.add(item,  getItemCount()  -  this.maximumItemCount);	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499438	1
2996625	[BUG]  [BUGGY]  //  removedAgedItems(false);  this.data.add(item,  getItemCount()  -  this.maximumItemCount);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false);  this.data.add(item,  getItemCount()  -  this.maximumItemCount);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(false);  this.data.add(item,  getItemCount()  -  this.maximumItemCount);	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499438	1
2996901	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  meanwhile  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  meanwhile  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))	  	compilable	  [FE]  IllegalArgumentException	499484	1
2996902	[BUG]  [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  meanwhile  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  meanwhile  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  meanwhile  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))	  	compilable	  [FE]  IllegalArgumentException	499484	1
2996869	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  consulted  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  if(notify)  consulted  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    bodied    &&    item.getPeriod()!=    this.data.get(item.getPeriod()))    {    this.data.remove(0);    	compilable	  [FE]  IllegalArgumentException	499479	1
2996870	[BUG]  [BUGGY]  //  deleteAgedItems(true);  if(notify)  consulted  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  consulted  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  if(notify)  consulted  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    bodied    &&    item.getPeriod()!=    this.data.get(item.getPeriod()))    {    this.data.remove(0);    	compilable	  [FE]  IllegalArgumentException	499479	1
2996474	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.addAgedItem(true);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.addAgedItem(true);	  //    removeAgedItems(false);    this.data.remove(item);    	compilable	  [FE]  IllegalArgumentException	499413	1
2996475	[BUG]  [BUGGY]  //  this.data.addAgedItem(true);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.addAgedItem(true);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.addAgedItem(true);	  //    removeAgedItems(false);    this.data.remove(item);    	compilable	  [FE]  IllegalArgumentException	499413	1
858254	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);            [BUGGY]  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  5;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	add	this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  5;	  	compilable	  [FE]  IllegalArgumentException	143043	1
858255	[BUG]  [BUGGY]  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  5;  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);            [BUGGY]  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  5;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	replace	this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  5;	  	compilable	  [FE]  IllegalArgumentException	143043	1
2996870	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  figured  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  figured	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    bodied    &&    item.getPeriod()!=    this.data.get(item.getPeriod()))    {    this.data.remove(0);    	compilable	  [FE]  IllegalArgumentException	499479	1
2996871	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  figured  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  figured  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  figured	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    bodied    &&    item.getPeriod()!=    this.data.get(item.getPeriod()))    {    this.data.remove(0);    	compilable	  [FE]  IllegalArgumentException	499479	1
2996438	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false);  b.addChangeListener(this,  item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(false);  b.addChangeListener(this,  item);	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996439	[BUG]  [BUGGY]  //  removedAgedItems(false);  b.addChangeListener(this,  item);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false);  b.addChangeListener(this,  item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(false);  b.addChangeListener(this,  item);	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
990661	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  if(range!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	if(range!=  null)  {  this.domain  =  domain;  this.range  =  range;  }	  if(domain!=    null)    {    this.domain    =    domain;    this.range    =    range;    }    	compilable	  [FE]  IllegalArgumentException	165111	1
990662	[BUG]  [BUGGY]  if(range!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  if(range!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	if(range!=  null)  {  this.domain  =  domain;  this.range  =  range;  }	  if(domain!=    null)    {    this.domain    =    domain;    this.range    =    range;    }    	compilable	  [FE]  IllegalArgumentException	165111	1
2996432	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bod  ;?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bod  ;?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996433	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bod  ;?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bod  ;?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  bod  ;?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
56246	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  end  <<  0. ");  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  end  <<  0. ");	  System.err.println(   "Requires    end    <=    0.       ");    	compilable	  [FE]  AssertionFailedError	9375	1
56247	[BUG]  [BUGGY]  System.err.println( "Requires  end  <<  0. ");  [FE]  AssertionFailedError  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  end  <<  0. ");  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  end  <<  0. ");	  System.err.println(   "Requires    end    <=    0.       ");    	compilable	  [FE]  AssertionFailedError	9375	1
2996437	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  slated  ;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  slated  ;  }	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996438	[BUG]  [BUGGY]  //  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  slated  ;  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  slated  ;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  slated  ;  }	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996438	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.getItemCount(true);  b.addChangeListener(this);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.getItemCount(true);  b.addChangeListener(this);	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996439	[BUG]  [BUGGY]  //  this.data.getItemCount(true);  b.addChangeListener(this);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.getItemCount(true);  b.addChangeListener(this);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.getItemCount(true);  b.addChangeListener(this);	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996438	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bodied?  b.toString()  :  null;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bodied?  b.toString()  :  null;	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996439	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bodied?  b.toString()  :  null;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bodied?  b.toString()  :  null;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bodied?  b.toString()  :  null;	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996624	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedItems(true);  this.data.add(item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedItems(true);  this.data.add(item);	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499438	1
2996625	[BUG]  [BUGGY]  //  removedItems(true);  this.data.add(item);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedItems(true);  this.data.add(item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedItems(true);  this.data.add(item);	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499438	1
70675	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  start  -  start.   ");  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  start  -  start.   ");	  System.err.println(   "Requires    start    %    2    ==    0       ");    	compilable	  [FE]  AssertionFailedError	11780	1
70676	[BUG]  [BUGGY]  System.err.println( "Requires  start  -  start.   ");  [FE]  AssertionFailedError  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  start  -  start.   ");  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  start  -  start.   ");	  System.err.println(   "Requires    start    %    2    ==    0       ");    	compilable	  [FE]  AssertionFailedError	11780	1
2996438	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(true);  b.addChangeListener(this,  item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(true);  b.addChangeListener(this,  item);	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996439	[BUG]  [BUGGY]  //  removedAgedItems(true);  b.addChangeListener(this,  item);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(true);  b.addChangeListener(this,  item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(true);  b.addChangeListener(this,  item);	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996905	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();  figured  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();  figured  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    >>    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499485	1
2996906	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();  figured  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();  figured  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();  figured  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    >>    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499485	1
2996906	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  induced  fireSeriesChanged();  figured  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  induced  fireSeriesChanged();  figured  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    >>    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499485	1
2996907	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  induced  fireSeriesChanged();  figured  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  induced  fireSeriesChanged();  figured  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  induced  fireSeriesChanged();  figured  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    >>    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499485	1
2996906	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.remov  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.remov	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    >>    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499485	1
2996907	[BUG]  [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.remov  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.remov  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.remov	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    >>    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499485	1
2996431	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  slated  ;  &  b.toString()  :  null;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  slated  ;  &  b.toString()  :  null;  }	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996432	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  slated  ;  &  b.toString()  :  null;  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  slated  ;  &  b.toString()  :  null;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  slated  ;  &  b.toString()  :  null;  }	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996432	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  &  b.toString()  :  null;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  &  b.toString()  :  null;  }	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996433	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  &  b.toString()  :  null;  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  &  b.toString()  :  null;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  ;  &  b.toString()  :  null;  }	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996648	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false,  items);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false,  items);	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996649	[BUG]  [BUGGY]  //  removeAgedItems(false,  items);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false,  items);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false,  items);	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996396	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  slated  ;  bodied  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  slated  ;  bodied  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied    ;    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499400	1
2996397	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  slated  ;  bodied  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  slated  ;  bodied  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  slated  ;  bodied  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied    ;    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499400	1
2996863	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  }	  //    deleteAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    &&    item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))    {    this.data.    	compilable	  [FE]  IllegalArgumentException	499478	1
2996864	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  }	  //    deleteAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    &&    item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))    {    this.data.    	compilable	  [FE]  IllegalArgumentException	499478	1
2996649	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(true);  b.append(item.getPeriod()).append('n');  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllAgedItems(true);  b.append(item.getPeriod()).append('n');	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996650	[BUG]  [BUGGY]  //  removedAllAgedItems(true);  b.append(item.getPeriod()).append('n');  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(true);  b.append(item.getPeriod()).append('n');  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllAgedItems(true);  b.append(item.getPeriod()).append('n');	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996624	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedItems(false);  this.data.add(item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedItems(false);  this.data.add(item);	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499438	1
2996625	[BUG]  [BUGGY]  //  removedItems(false);  this.data.add(item);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedItems(false);  this.data.add(item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedItems(false);  this.data.add(item);	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499438	1
2996827	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getPeriod()!=    this.data.get(item.getPeriod()))    {    this.data.remove(0);    bodied    	compilable	  [FE]  IllegalArgumentException	499472	1
2996828	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getPeriod()!=    this.data.get(item.getPeriod()))    {    this.data.remove(0);    bodied    	compilable	  [FE]  IllegalArgumentException	499472	1
56421	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  begin  <=  0   ".length()  +  1);  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  begin  <=  0   ".length()  +  1);	  	compilable	  [FE]  IllegalArgumentException	9404	1
56422	[BUG]  [BUGGY]  System.err.println( "Requires  begin  <=  0   ".length()  +  1);  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  begin  <=  0   ".length()  +  1);  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  begin  <=  0   ".length()  +  1);	  	compilable	  [FE]  IllegalArgumentException	9404	1
2996402	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify))  {  fireSeriesChanged();  }  ;  bodied  ;  b.toString()  :  null;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(notify))  {  fireSeriesChanged();  }  ;  bodied  ;  b.toString()  :  null;	  	compilable	  [FE]  IllegalArgumentException	499401	1
2996403	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(notify))  {  fireSeriesChanged();  }  ;  bodied  ;  b.toString()  :  null;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify))  {  fireSeriesChanged();  }  ;  bodied  ;  b.toString()  :  null;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(notify))  {  fireSeriesChanged();  }  ;  bodied  ;  b.toString()  :  null;	  	compilable	  [FE]  IllegalArgumentException	499401	1
2996403	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(notify))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;	  	compilable	  [FE]  IllegalArgumentException	499401	1
2996404	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(notify))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(notify))  {  fireSeriesChanged();  bodied  ;  b.toString()  :  null;	  	compilable	  [FE]  IllegalArgumentException	499401	1
2996828	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  if(added)  {  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	if(added)  {  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  }	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getPeriod()!=    this.data.get(item.getPeriod()))    {    this.data.remove(0);    bodied    	compilable	  [FE]  IllegalArgumentException	499472	1
2996829	[BUG]  [BUGGY]  if(added)  {  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  if(added)  {  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	if(added)  {  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  }	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getPeriod()!=    this.data.get(item.getPeriod()))    {    this.data.remove(0);    bodied    	compilable	  [FE]  IllegalArgumentException	499472	1
70671	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  start  %  2  ==  0   ");System.err.println( "Requires  start  %  2  ==  0   ");  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  start  %  2  ==  0   ");System.err.println( "Requires  start  %  2  ==  0   ");	  	compilable	  [FE]  IllegalArgumentException	11779	1
70672	[BUG]  [BUGGY]  System.err.println( "Requires  start  %  2  ==  0   ");System.err.println( "Requires  start  %  2  ==  0   ");  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  start  %  2  ==  0   ");System.err.println( "Requires  start  %  2  ==  0   ");  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  start  %  2  ==  0   ");System.err.println( "Requires  start  %  2  ==  0   ");	  	compilable	  [FE]  IllegalArgumentException	11779	1
998360	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemAge  =  maximumItemAge;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.maximumItemAge  =  maximumItemAge;	  	compilable	  [FE]  IllegalArgumentException	166394	1
998361	[BUG]  [BUGGY]  this.maximumItemAge  =  maximumItemAge;  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemAge  =  maximumItemAge;  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.maximumItemAge  =  maximumItemAge;	  	compilable	  [FE]  IllegalArgumentException	166394	1
997358	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  Math.max(this.maximumItemCount,  20);  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.maximumItemCount  =  Math.max(this.maximumItemCount,  20);	  this.maximumItemCount    =    Math.max(this.maximumItemCount,    12);    	compilable	  [FE]  IllegalArgumentException	166227	1
997359	[BUG]  [BUGGY]  this.maximumItemCount  =  Math.max(this.maximumItemCount,  20);  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  Math.max(this.maximumItemCount,  20);  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.maximumItemCount  =  Math.max(this.maximumItemCount,  20);	  this.maximumItemCount    =    Math.max(this.maximumItemCount,    12);    	compilable	  [FE]  IllegalArgumentException	166227	1
2996624	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499438	1
2996625	[BUG]  [BUGGY]  //  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499438	1
2996654	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllUnagedItems(false,  item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllUnagedItems(false,  item);	  //    deleteAgedItems(false,    item);    	compilable	  [FE]  IllegalArgumentException	499443	1
2996655	[BUG]  [BUGGY]  //  removedAllUnagedItems(false,  item);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllUnagedItems(false,  item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllUnagedItems(false,  item);	  //    deleteAgedItems(false,    item);    	compilable	  [FE]  IllegalArgumentException	499443	1
889142	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);            [BUGGY]  this.maximumItemCount  =  Integer.MIN_VALUE  +  2;  [BUGGY]            this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	add	this.maximumItemCount  =  Integer.MIN_VALUE  +  2;	  this.maximumItemCount    =    Integer.MIN_VALUE    +    1;    	compilable	  [FE]  IllegalArgumentException	148191	1
889143	[BUG]  [BUGGY]  this.maximumItemCount  =  Integer.MIN_VALUE  +  2;  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);            [BUGGY]  this.maximumItemCount  =  Integer.MIN_VALUE  +  2;  [BUGGY]            this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	replace	this.maximumItemCount  =  Integer.MIN_VALUE  +  2;	  this.maximumItemCount    =    Integer.MIN_VALUE    +    1;    	compilable	  [FE]  IllegalArgumentException	148191	1
2996624	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false);  item.addChangeListener(this,  this);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(false);  item.addChangeListener(this,  this);	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499438	1
2996625	[BUG]  [BUGGY]  //  removedAgedItems(false);  item.addChangeListener(this,  this);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false);  item.addChangeListener(this,  this);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(false);  item.addChangeListener(this,  this);	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499438	1
2996624	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  limb  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  limb  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499438	1
2996625	[BUG]  [BUGGY]  //  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  limb  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  limb  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  limb  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499438	1
2996612	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.add(item,  null);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.add(item,  null);	  	compilable	  [FE]  IllegalArgumentException	499436	1
2996613	[BUG]  [BUGGY]  //  this.data.add(item,  null);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.add(item,  null);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.add(item,  null);	  	compilable	  [FE]  IllegalArgumentException	499436	1
2996613	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.add(item,  this.data.size());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.add(item,  this.data.size());	  	compilable	  [FE]  IllegalArgumentException	499436	1
2996614	[BUG]  [BUGGY]  //  this.data.add(item,  this.data.size());  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.add(item,  this.data.size());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.add(item,  this.data.size());	  	compilable	  [FE]  IllegalArgumentException	499436	1
2996401	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;	  	compilable	  [FE]  IllegalArgumentException	499401	1
2996402	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;	  	compilable	  [FE]  IllegalArgumentException	499401	1
2996432	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.getAgedItems(true);  item.addChangeListener(this);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.getAgedItems(true);  item.addChangeListener(this);	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996433	[BUG]  [BUGGY]  //  this.data.getAgedItems(true);  item.addChangeListener(this);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.getAgedItems(true);  item.addChangeListener(this);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.getAgedItems(true);  item.addChangeListener(this);	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
70652	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  start  %  2!=  0.   ");  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  start  %  2!=  0.   ");	  System.err.println(   "Requires    start    %    2    exceeded    0.   ");    	compilable	  [FE]  AssertionFailedError	11776	1
70653	[BUG]  [BUGGY]  System.err.println( "Requires  start  %  2!=  0.   ");  [FE]  AssertionFailedError  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  start  %  2!=  0.   ");  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  start  %  2!=  0.   ");	  System.err.println(   "Requires    start    %    2    exceeded    0.   ");    	compilable	  [FE]  AssertionFailedError	11776	1
2996905	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  this.data.add(item,  getItemCount()  -  1);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  this.data.add(item,  getItemCount()  -  1);	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    >>    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499485	1
2996906	[BUG]  [BUGGY]  //  deleteAgedItems(true);  this.data.add(item,  getItemCount()  -  1);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  this.data.add(item,  getItemCount()  -  1);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  this.data.add(item,  getItemCount()  -  1);	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    >>    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499485	1
2996906	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  this.data.add(item,  0);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  this.data.add(item,  0);	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    >>    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499485	1
2996907	[BUG]  [BUGGY]  //  deleteAgedItems(true);  this.data.add(item,  0);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  this.data.add(item,  0);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  this.data.add(item,  0);	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    >>    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499485	1
2996864	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);	  //    deleteAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    &&    item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))    {    this.data.    	compilable	  [FE]  IllegalArgumentException	499478	1
2996865	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);	  //    deleteAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    &&    item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))    {    this.data.    	compilable	  [FE]  IllegalArgumentException	499478	1
2996654	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(false,  item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllAgedItems(false,  item);	  //    deleteAgedItems(false,    item);    	compilable	  [FE]  IllegalArgumentException	499443	1
2996655	[BUG]  [BUGGY]  //  removedAllAgedItems(false,  item);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(false,  item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllAgedItems(false,  item);	  //    deleteAgedItems(false,    item);    	compilable	  [FE]  IllegalArgumentException	499443	1
2996618	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  limb  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  limb  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996619	[BUG]  [BUGGY]  //  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  limb  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  limb  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  limb  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996648	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(true,  true);  b.addChangeListener(item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllAgedItems(true,  true);  b.addChangeListener(item);	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996649	[BUG]  [BUGGY]  //  removedAllAgedItems(true,  true);  b.addChangeListener(item);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(true,  true);  b.addChangeListener(item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllAgedItems(true,  true);  b.addChangeListener(item);	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996438	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedItems(true);  b.addChangeListener(this,  item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedItems(true);  b.addChangeListener(this,  item);	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996439	[BUG]  [BUGGY]  //  removedItems(true);  b.addChangeListener(this,  item);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedItems(true);  b.addChangeListener(this,  item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedItems(true);  b.addChangeListener(this,  item);	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996864	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  consulted  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  if(notify)  consulted  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  //    deleteAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    &&    item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))    {    this.data.    	compilable	  [FE]  IllegalArgumentException	499478	1
2996865	[BUG]  [BUGGY]  //  deleteAgedItems(true);  if(notify)  consulted  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  consulted  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  if(notify)  consulted  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  //    deleteAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    &&    item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))    {    this.data.    	compilable	  [FE]  IllegalArgumentException	499478	1
2996648	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(true,  true);  b.addChangeListener(item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(true,  true);  b.addChangeListener(item);	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996649	[BUG]  [BUGGY]  //  removedAgedItems(true,  true);  b.addChangeListener(item);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(true,  true);  b.addChangeListener(item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(true,  true);  b.addChangeListener(item);	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996870	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  Afterward  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  Afterward	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    bodied    &&    item.getPeriod()!=    this.data.get(item.getPeriod()))    {    this.data.remove(0);    	compilable	  [FE]  IllegalArgumentException	499479	1
2996871	[BUG]  [BUGGY]  //  deleteAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  Afterward  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  Afterward  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  Afterward	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    bodied    &&    item.getPeriod()!=    this.data.get(item.getPeriod()))    {    this.data.remove(0);    	compilable	  [FE]  IllegalArgumentException	499479	1
2996906	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  induced  fireSeriesChanged();  limb  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  induced  fireSeriesChanged();  limb  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    >>    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499485	1
2996907	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  induced  fireSeriesChanged();  limb  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  induced  fireSeriesChanged();  limb  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  induced  fireSeriesChanged();  limb  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    >>    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499485	1
998180	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  if(domain!=  null)  {  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;  }  else  {  this.range  =  range  +  DEFAULT_RANGE_DESCRIPTION;  }  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	if(domain!=  null)  {  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;  }  else  {  this.range  =  range  +  DEFAULT_RANGE_DESCRIPTION;  }	  	compilable	  [FE]  IllegalArgumentException	166364	1
998181	[BUG]  [BUGGY]  if(domain!=  null)  {  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;  }  else  {  this.range  =  range  +  DEFAULT_RANGE_DESCRIPTION;  }  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  if(domain!=  null)  {  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;  }  else  {  this.range  =  range  +  DEFAULT_RANGE_DESCRIPTION;  }  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	if(domain!=  null)  {  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;  }  else  {  this.range  =  range  +  DEFAULT_RANGE_DESCRIPTION;  }	  	compilable	  [FE]  IllegalArgumentException	166364	1
998181	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  if(domain  ==  null)  {  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;  }  else  {  this.range  =  range  +  DEFAULT_RANGE_DESCRIPTION;  }  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	if(domain  ==  null)  {  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;  }  else  {  this.range  =  range  +  DEFAULT_RANGE_DESCRIPTION;  }	  	compilable	  [FE]  IllegalArgumentException	166364	1
998182	[BUG]  [BUGGY]  if(domain  ==  null)  {  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;  }  else  {  this.range  =  range  +  DEFAULT_RANGE_DESCRIPTION;  }  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  if(domain  ==  null)  {  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;  }  else  {  this.range  =  range  +  DEFAULT_RANGE_DESCRIPTION;  }  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	if(domain  ==  null)  {  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;  }  else  {  this.range  =  range  +  DEFAULT_RANGE_DESCRIPTION;  }	  	compilable	  [FE]  IllegalArgumentException	166364	1
56241	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  end  <<  0.0   ");  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  end  <<  0.0   ");	  	compilable	  [FE]  IllegalArgumentException	9374	1
56242	[BUG]  [BUGGY]  System.err.println( "Requires  end  <<  0.0   ");  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  end  <<  0.0   ");  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  end  <<  0.0   ");	  	compilable	  [FE]  IllegalArgumentException	9374	1
2996438	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(add)  {  fireSeriesChanged();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(add)  {  fireSeriesChanged();	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996439	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(add)  {  fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(add)  {  fireSeriesChanged();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(add)  {  fireSeriesChanged();	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996900	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  consulted  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.remove  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  if(notify)  consulted  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.remove	  	compilable	  [FE]  IllegalArgumentException	499484	1
2996901	[BUG]  [BUGGY]  //  deleteAgedItems(true);  if(notify)  consulted  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.remove  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  consulted  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.remove  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  if(notify)  consulted  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.remove	  	compilable	  [FE]  IllegalArgumentException	499484	1
2996900	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  	compilable	  [FE]  IllegalArgumentException	499484	1
2996901	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  	compilable	  [FE]  IllegalArgumentException	499484	1
2996901	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  induced  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  induced  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  	compilable	  [FE]  IllegalArgumentException	499484	1
2996902	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  induced  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  induced  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  induced  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  	compilable	  [FE]  IllegalArgumentException	499484	1
2996474	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.getAgedItems(0);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.getAgedItems(0);	  //    removeAgedItems(false);    this.data.remove(item);    	compilable	  [FE]  IllegalArgumentException	499413	1
2996475	[BUG]  [BUGGY]  //  this.data.getAgedItems(0);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.getAgedItems(0);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.getAgedItems(0);	  //    removeAgedItems(false);    this.data.remove(item);    	compilable	  [FE]  IllegalArgumentException	499413	1
70460	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  end  >=  0   ");  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  end  >=  0   ");	  System.err.println(       "Requires    start    >=    0       ");    	compilable	  [FE]  AssertionFailedError	11744	1
70461	[BUG]  [BUGGY]  System.err.println( "Requires  end  >=  0   ");  [FE]  AssertionFailedError  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  end  >=  0   ");  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  end  >=  0   ");	  System.err.println(       "Requires    start    >=    0       ");    	compilable	  [FE]  AssertionFailedError	11744	1
2996402	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  slated  ;  hopped  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  slated  ;  hopped  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();	  	compilable	  [FE]  IllegalArgumentException	499401	1
2996403	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  slated  ;  hopped  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  slated  ;  hopped  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  slated  ;  hopped  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();	  	compilable	  [FE]  IllegalArgumentException	499401	1
2996618	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(true);  b.addChangeListener(this,  item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllAgedItems(true);  b.addChangeListener(this,  item);	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996619	[BUG]  [BUGGY]  //  removedAllAgedItems(true);  b.addChangeListener(this,  item);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllAgedItems(true);  b.addChangeListener(this,  item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllAgedItems(true);  b.addChangeListener(this,  item);	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
56215	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  start  ->  0   ".length());  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  start  ->  0   ".length());	  System.err.println(   "Requires    start    <    0       ".length());    	compilable	  [FE]  AssertionFailedError	9370	1
56216	[BUG]  [BUGGY]  System.err.println( "Requires  start  ->  0   ".length());  [FE]  AssertionFailedError  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  start  ->  0   ".length());  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  start  ->  0   ".length());	  System.err.println(   "Requires    start    <    0       ".length());    	compilable	  [FE]  AssertionFailedError	9370	1
56216	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  start  %  2  <  0   ".length());  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  start  %  2  <  0   ".length());	  System.err.println(   "Requires    start    <    0       ".length());    	compilable	  [FE]  AssertionFailedError	9370	1
56217	[BUG]  [BUGGY]  System.err.println( "Requires  start  %  2  <  0   ".length());  [FE]  AssertionFailedError  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  start  %  2  <  0   ".length());  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  start  %  2  <  0   ".length());	  System.err.println(   "Requires    start    <    0       ".length());    	compilable	  [FE]  AssertionFailedError	9370	1
2996906	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  consulted  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.remov  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  if(notify)  consulted  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.remov	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    >>    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499485	1
2996907	[BUG]  [BUGGY]  //  deleteAgedItems(true);  if(notify)  consulted  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.remov  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  consulted  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.remov  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  if(notify)  consulted  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.remov	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    >>    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499485	1
2996869	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();  bodied  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();  bodied  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    bodied    &&    item.getPeriod()!=    this.data.get(item.getPeriod()))    {    this.data.remove(0);    	compilable	  [FE]  IllegalArgumentException	499479	1
2996870	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();  bodied  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();  bodied  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();  bodied  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    bodied    &&    item.getPeriod()!=    this.data.get(item.getPeriod()))    {    this.data.remove(0);    	compilable	  [FE]  IllegalArgumentException	499479	1
2996870	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  induced  fireSeriesChanged();  bodied  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  induced  fireSeriesChanged();  bodied  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    bodied    &&    item.getPeriod()!=    this.data.get(item.getPeriod()))    {    this.data.remove(0);    	compilable	  [FE]  IllegalArgumentException	499479	1
2996871	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  induced  fireSeriesChanged();  bodied  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  induced  fireSeriesChanged();  bodied  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  induced  fireSeriesChanged();  bodied  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    bodied    &&    item.getPeriod()!=    this.data.get(item.getPeriod()))    {    this.data.remove(0);    	compilable	  [FE]  IllegalArgumentException	499479	1
2996905	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    >>    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499485	1
2996906	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    >>    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499485	1
2996906	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    >>    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499485	1
2996907	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  consulted  fireSeriesChanged();	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    >>    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	499485	1
2996396	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  b.toString()  :  null;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  b.toString()  :  null;	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied    ;    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499400	1
2996397	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  b.toString()  :  null;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  b.toString()  :  null;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  b.toString()  :  null;	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied    ;    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499400	1
2996864	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  borne  this.data.remove(0);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  borne  this.data.remove(0);	  //    deleteAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    &&    item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))    {    this.data.    	compilable	  [FE]  IllegalArgumentException	499478	1
2996865	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  borne  this.data.remove(0);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  borne  this.data.remove(0);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  borne  this.data.remove(0);	  //    deleteAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    &&    item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))    {    this.data.    	compilable	  [FE]  IllegalArgumentException	499478	1
2996648	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllUnagedItems(true);  this.data.add(item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllUnagedItems(true);  this.data.add(item);	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996649	[BUG]  [BUGGY]  //  removedAllUnagedItems(true);  this.data.add(item);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllUnagedItems(true);  this.data.add(item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllUnagedItems(true);  this.data.add(item);	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996649	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllUnagedItems(true);  item.addChangeListener(this);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllUnagedItems(true);  item.addChangeListener(this);	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996650	[BUG]  [BUGGY]  //  removedAllUnagedItems(true);  item.addChangeListener(this);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAllUnagedItems(true);  item.addChangeListener(this);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllUnagedItems(true);  item.addChangeListener(this);	  	compilable	  [FE]  IllegalArgumentException	499442	1
2996618	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.add(item,  this.data.size()  -  1);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.add(item,  this.data.size()  -  1);	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996619	[BUG]  [BUGGY]  //  this.data.add(item,  this.data.size()  -  1);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.add(item,  this.data.size()  -  1);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.add(item,  this.data.size()  -  1);	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996617	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  limb  ;  }  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  limb  ;  }  ;	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996618	[BUG]  [BUGGY]  //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  limb  ;  }  ;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  limb  ;  }  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  limb  ;  }  ;	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996618	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  limb  ;  }  ;  Afterward  if(notify)  {  fireSeriesChanged();  }  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  limb  ;  }  ;  Afterward  if(notify)  {  fireSeriesChanged();  }  ;	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996619	[BUG]  [BUGGY]  //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  limb  ;  }  ;  Afterward  if(notify)  {  fireSeriesChanged();  }  ;  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  limb  ;  }  ;  Afterward  if(notify)  {  fireSeriesChanged();  }  ;  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  limb  ;  }  ;  Afterward  if(notify)  {  fireSeriesChanged();  }  ;	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996870	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  consulted  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  if(notify)  consulted  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    bodied    &&    item.getPeriod()!=    this.data.get(item.getPeriod()))    {    this.data.remove(0);    	compilable	  [FE]  IllegalArgumentException	499479	1
2996871	[BUG]  [BUGGY]  //  deleteAgedItems(true);  if(notify)  consulted  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  deleteAgedItems(true);  if(notify)  consulted  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  if(notify)  consulted  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    bodied    &&    item.getPeriod()!=    this.data.get(item.getPeriod()))    {    this.data.remove(0);    	compilable	  [FE]  IllegalArgumentException	499479	1
2996432	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  else  if(added)  {  this.data.add(item);  b.toString()  :  null;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  else  if(added)  {  this.data.add(item);  b.toString()  :  null;  }	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996433	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  else  if(added)  {  this.data.add(item);  b.toString()  :  null;  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  else  if(added)  {  this.data.add(item);  b.toString()  :  null;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  else  if(added)  {  this.data.add(item);  b.toString()  :  null;  }	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
70455	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  start  >=  0   ");System.err.println( "Requires  start  >=  0   ");  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  start  >=  0   ");System.err.println( "Requires  start  >=  0   ");	  	compilable	  [FE]  IllegalArgumentException	11743	1
70456	[BUG]  [BUGGY]  System.err.println( "Requires  start  >=  0   ");System.err.println( "Requires  start  >=  0   ");  [FE]  IllegalArgumentException  [CONTEXT]            throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(           "Requires  start  >=  0.           ");  }  if  (end  <  start)  {            [BUGGY]  System.err.println( "Requires  start  >=  0   ");System.err.println( "Requires  start  >=  0   ");  [BUGGY]            throw  new  IllegalArgumentException(           "Requires  start  <=  end.           ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  start  >=  0   ");System.err.println( "Requires  start  >=  0   ");	  	compilable	  [FE]  IllegalArgumentException	11743	1
2996469	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.getAgedItems(false);  b.addChangeListener(this);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.getAgedItems(false);  b.addChangeListener(this);	  	compilable	  [FE]  IllegalArgumentException	499412	1
2996470	[BUG]  [BUGGY]  //  this.data.getAgedItems(false);  b.addChangeListener(this);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.getAgedItems(false);  b.addChangeListener(this);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.getAgedItems(false);  b.addChangeListener(this);	  	compilable	  [FE]  IllegalArgumentException	499412	1
2996431	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  if(!added)  {  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	if(!added)  {  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
2996432	[BUG]  [BUGGY]  if(!added)  {  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  if(!added)  {  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	if(!added)  {  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  ;  }	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bod?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499406	1
990470	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  Math.max(0,  0);  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.maximumItemCount  =  Math.max(0,  0);	  	compilable	  [FE]  IllegalArgumentException	165079	1
990471	[BUG]  [BUGGY]  this.maximumItemCount  =  Math.max(0,  0);  [FE]  IllegalArgumentException  [CONTEXT]            public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;            [BUGGY]  this.maximumItemCount  =  Math.max(0,  0);  [BUGGY]            this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.maximumItemCount  =  Math.max(0,  0);	  	compilable	  [FE]  IllegalArgumentException	165079	1
2996618	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996619	[BUG]  [BUGGY]  //  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  //    removedAllAgedItems(false);    if(notify)    {    fireSeriesChanged();    }        	compilable	  [FE]  IllegalArgumentException	499437	1
2996438	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.getAgedItems(false,  item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.getAgedItems(false,  item);	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
2996439	[BUG]  [BUGGY]  //  this.data.getAgedItems(false,  item);  [FE]  IllegalArgumentException  [CONTEXT]            throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }            [BUGGY]  //  this.data.getAgedItems(false,  item);  [BUGGY]              if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.getAgedItems(false,  item);	  //    removeAgedItems(true);    if(notify)    {    fireSeriesChanged();    }    ;    bodied?    boolean    notify    =    b.toString()!=    this.data.get(item);    b.toString();    b.toString();    	compilable	  [FE]  IllegalArgumentException	499407	1
