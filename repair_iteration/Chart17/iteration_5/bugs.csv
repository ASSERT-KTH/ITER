bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	original_buggy	action	patch	execution_result	diagnosis	previous_bug_id	original_failing_test_number
148226	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);          [BUGGY]  this.maximumItemCount  =  Integer.MAX_VALUE  /  1;  [BUGGY]          this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	add	this.maximumItemCount  =  Integer.MAX_VALUE  /  1;	  if(this.domain!=    null)    {    this.domain    =    domain;    this.range    =    range;    this.maximumItemCount    =    Integer.MAX_VALUE;    }    	compilable	  [FE]  IllegalArgumentException	24705	1
148227	[BUG]  [BUGGY]  this.maximumItemCount  =  Integer.MAX_VALUE  /  1;  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);          [BUGGY]  this.maximumItemCount  =  Integer.MAX_VALUE  /  1;  [BUGGY]          this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	replace	this.maximumItemCount  =  Integer.MAX_VALUE  /  1;	  if(this.domain!=    null)    {    this.domain    =    domain;    this.range    =    range;    this.maximumItemCount    =    Integer.MAX_VALUE;    }    	compilable	  [FE]  IllegalArgumentException	24705	1
165104	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.maximumItemCount  =  3;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.maximumItemCount  =  3;	  	compilable	  [FE]  IllegalArgumentException	27518	1
165105	[BUG]  [BUGGY]  this.maximumItemCount  =  3;  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.maximumItemCount  =  3;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.maximumItemCount  =  3;	  	compilable	  [FE]  IllegalArgumentException	27518	1
8319	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( "Requires  begin  <  start.   ");  [BUGGY]          throw  new  IllegalArgumentException(         "Requires  start  <=  end.         ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  begin  <  start.   ");	  	compilable	  [FE]  IllegalArgumentException	1387	1
8320	[BUG]  [BUGGY]  System.err.println( "Requires  begin  <  start.   ");  [FE]  IllegalArgumentException  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( "Requires  begin  <  start.   ");  [BUGGY]          throw  new  IllegalArgumentException(         "Requires  start  <=  end.         ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  begin  <  start.   ");	  	compilable	  [FE]  IllegalArgumentException	1387	1
499436	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  	  	compilable	  [FE]  IllegalArgumentException	83240	1
499437	[BUG]  [BUGGY]  //  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  }    [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  	  	compilable	  [FE]  IllegalArgumentException	83240	1
499437	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  	compilable	  [FE]  IllegalArgumentException	83240	1
499438	[BUG]  [BUGGY]  //  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  	compilable	  [FE]  IllegalArgumentException	83240	1
165109	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  if(domain!=  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.domain  =  domain;  this.timePeriodClass  =  timePeriodClass;  this.maximumItemCount  =  0;  }  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	if(domain!=  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.domain  =  domain;  this.timePeriodClass  =  timePeriodClass;  this.maximumItemCount  =  0;  }	  this.maximumItemCount    =    2;    	compilable	  [FE]  IllegalArgumentException	27519	1
165110	[BUG]  [BUGGY]  if(domain!=  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.domain  =  domain;  this.timePeriodClass  =  timePeriodClass;  this.maximumItemCount  =  0;  }  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  if(domain!=  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.domain  =  domain;  this.timePeriodClass  =  timePeriodClass;  this.maximumItemCount  =  0;  }  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	if(domain!=  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.domain  =  domain;  this.timePeriodClass  =  timePeriodClass;  this.maximumItemCount  =  0;  }	  this.maximumItemCount    =    2;    	compilable	  [FE]  IllegalArgumentException	27519	1
499477	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.	  removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    	compilable	  [FE]  IllegalArgumentException	83247	1
499478	[BUG]  [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.	  removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    	compilable	  [FE]  IllegalArgumentException	83247	1
499405	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bod?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bod?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
499406	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bod?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bod?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bod?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
499406	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bodied?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bodied?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
499407	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bodied?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bodied?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bodied?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
9410	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( "Requires  start  <<  0   ".length());  [BUGGY]          throw  new  IllegalArgumentException(         "Requires  start  <=  end.         ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  start  <<  0   ".length());	  System.err.println(   "Requires    start    >=    0       ".length()    +    1);    	compilable	  [FE]  AssertionFailedError	1569	1
9411	[BUG]  [BUGGY]  System.err.println( "Requires  start  <<  0   ".length());  [FE]  AssertionFailedError  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( "Requires  start  <<  0   ".length());  [BUGGY]          throw  new  IllegalArgumentException(         "Requires  start  <=  end.         ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  start  <<  0   ".length());	  System.err.println(   "Requires    start    >=    0       ".length()    +    1);    	compilable	  [FE]  AssertionFailedError	1569	1
148220	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);          [BUGGY]  this.maximumItemCount  =  Integer.MAX_VALUE  +  2;  [BUGGY]          this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	add	this.maximumItemCount  =  Integer.MAX_VALUE  +  2;	  	compilable	  [FE]  IllegalArgumentException	24704	1
148221	[BUG]  [BUGGY]  this.maximumItemCount  =  Integer.MAX_VALUE  +  2;  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);          [BUGGY]  this.maximumItemCount  =  Integer.MAX_VALUE  +  2;  [BUGGY]          this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	replace	this.maximumItemCount  =  Integer.MAX_VALUE  +  2;	  	compilable	  [FE]  IllegalArgumentException	24704	1
148262	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);          [BUGGY]  if(domain  ==  null)  {  this.domain  =  domain;  this.range  =  range;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [BUGGY]          this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	add	if(domain  ==  null)  {  this.domain  =  domain;  this.range  =  range;  this.maximumItemAge  =  Long.MAX_VALUE;  }	  if(domain!=    null)    {    this.domain    =    domain;    this.range    =    range;    this.maximumItemAge    =    Long.MAX_VALUE;    }    	compilable	  [FE]  IllegalArgumentException	24711	1
148263	[BUG]  [BUGGY]  if(domain  ==  null)  {  this.domain  =  domain;  this.range  =  range;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);          [BUGGY]  if(domain  ==  null)  {  this.domain  =  domain;  this.range  =  range;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [BUGGY]          this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	replace	if(domain  ==  null)  {  this.domain  =  domain;  this.range  =  range;  this.maximumItemAge  =  Long.MAX_VALUE;  }	  if(domain!=    null)    {    this.domain    =    domain;    this.range    =    range;    this.maximumItemAge    =    Long.MAX_VALUE;    }    	compilable	  [FE]  IllegalArgumentException	24711	1
499484	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  >>  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  >>  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	83248	1
499485	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  >>  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  >>  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  >>  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	83248	1
499693	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  //  don't  notify  any,  because  that  //  happens  next  anyway...  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	removeAgedItems(false);//  remove  old  items  if  needed,  //  don't  notify  any,  because  that  //  happens  next  anyway...	  removeAgedItems(true);//    remove    old    items    if    required,    //    don't    notify    anyone,    because    that    //    happens    next    anyway;    	compilable	  [FE]  IllegalArgumentException	83283	1
499694	[BUG]  [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  //  don't  notify  any,  because  that  //  happens  next  anyway...  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  //  don't  notify  any,  because  that  //  happens  next  anyway...  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	removeAgedItems(false);//  remove  old  items  if  needed,  //  don't  notify  any,  because  that  //  happens  next  anyway...	  removeAgedItems(true);//    remove    old    items    if    required,    //    don't    notify    anyone,    because    that    //    happens    next    anyway;    	compilable	  [FE]  IllegalArgumentException	83283	1
166401	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  if(this.domain  ==  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  }  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	if(this.domain  ==  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  }	  	compilable	  [FE]  IllegalArgumentException	27734	1
166402	[BUG]  [BUGGY]  if(this.domain  ==  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  }  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  if(this.domain  ==  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  }  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	if(this.domain  ==  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  }	  	compilable	  [FE]  IllegalArgumentException	27734	1
499436	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  	compilable	  [FE]  IllegalArgumentException	83240	1
499437	[BUG]  [BUGGY]  //  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  	compilable	  [FE]  IllegalArgumentException	83240	1
499437	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  	  	compilable	  [FE]  IllegalArgumentException	83240	1
499438	[BUG]  [BUGGY]  //  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  }    [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  	  	compilable	  [FE]  IllegalArgumentException	83240	1
166333	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  if(range!=  null)  {  this.range  =  range;  }  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	if(range!=  null)  {  this.range  =  range;  }	  this.maximumItemAge    =    Long.MAX_VALUE;    	compilable	  [FE]  IllegalArgumentException	27723	1
166334	[BUG]  [BUGGY]  if(range!=  null)  {  this.range  =  range;  }  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  if(range!=  null)  {  this.range  =  range;  }  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	if(range!=  null)  {  this.range  =  range;  }	  this.maximumItemAge    =    Long.MAX_VALUE;    	compilable	  [FE]  IllegalArgumentException	27723	1
499477	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);	  removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    	compilable	  [FE]  IllegalArgumentException	83247	1
499478	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);	  removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    	compilable	  [FE]  IllegalArgumentException	83247	1
499478	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);	  removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    	compilable	  [FE]  IllegalArgumentException	83247	1
499479	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  bodied  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);	  removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    	compilable	  [FE]  IllegalArgumentException	83247	1
9404	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( "Requires  start  <=  0   ".length()  +  1);  [BUGGY]          throw  new  IllegalArgumentException(         "Requires  start  <=  end.         ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  start  <=  0   ".length()  +  1);	  	compilable	  [FE]  IllegalArgumentException	1568	1
9405	[BUG]  [BUGGY]  System.err.println( "Requires  start  <=  0   ".length()  +  1);  [FE]  IllegalArgumentException  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( "Requires  start  <=  0   ".length()  +  1);  [BUGGY]          throw  new  IllegalArgumentException(         "Requires  start  <=  end.         ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  start  <=  0   ".length()  +  1);	  	compilable	  [FE]  IllegalArgumentException	1568	1
9374	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( "Requires  end  <=  0.   ");  [BUGGY]          throw  new  IllegalArgumentException(         "Requires  start  <=  end.         ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  end  <=  0.   ");	  System.err.println(   "Requires    start    <=    0       ".length());    	compilable	  [FE]  AssertionFailedError	1563	1
9375	[BUG]  [BUGGY]  System.err.println( "Requires  end  <=  0.   ");  [FE]  AssertionFailedError  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( "Requires  end  <=  0.   ");  [BUGGY]          throw  new  IllegalArgumentException(         "Requires  start  <=  end.         ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  end  <=  0.   ");	  System.err.println(   "Requires    start    <=    0       ".length());    	compilable	  [FE]  AssertionFailedError	1563	1
143047	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);          [BUGGY]  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  -1;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	add	this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  -1;	  this.domain    =    domain    +    DEFAULT_DOMAIN_DESCRIPTION    +    3;    	compilable	  [FE]  IllegalArgumentException	23842	1
143048	[BUG]  [BUGGY]  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  -1;  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);          [BUGGY]  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  -1;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	replace	this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  -1;	  this.domain    =    domain    +    DEFAULT_DOMAIN_DESCRIPTION    +    3;    	compilable	  [FE]  IllegalArgumentException	23842	1
11779	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( "Requires  start  %  2  ==  0   ");  [BUGGY]          throw  new  IllegalArgumentException(         "Requires  start  <=  end.         ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  start  %  2  ==  0   ");	  System.err.println(   "Requires    start    %    2    exceeded    0   ");    	compilable	  [FE]  AssertionFailedError	1964	1
11780	[BUG]  [BUGGY]  System.err.println( "Requires  start  %  2  ==  0   ");  [FE]  AssertionFailedError  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( "Requires  start  %  2  ==  0   ");  [BUGGY]          throw  new  IllegalArgumentException(         "Requires  start  <=  end.         ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  start  %  2  ==  0   ");	  System.err.println(   "Requires    start    %    2    exceeded    0   ");    	compilable	  [FE]  AssertionFailedError	1964	1
11780	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( "Requires  start  %  2!=  0   ");  [BUGGY]          throw  new  IllegalArgumentException(         "Requires  start  <=  end.         ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  start  %  2!=  0   ");	  System.err.println(   "Requires    start    %    2    exceeded    0   ");    	compilable	  [FE]  AssertionFailedError	1964	1
11781	[BUG]  [BUGGY]  System.err.println( "Requires  start  %  2!=  0   ");  [FE]  AssertionFailedError  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( "Requires  start  %  2!=  0   ");  [BUGGY]          throw  new  IllegalArgumentException(         "Requires  start  <=  end.         ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  start  %  2!=  0   ");	  System.err.println(   "Requires    start    %    2    exceeded    0   ");    	compilable	  [FE]  AssertionFailedError	1964	1
499478	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  	  removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    	compilable	  [FE]  IllegalArgumentException	83247	1
499479	[BUG]  [BUGGY]  //  deleteAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }    [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  	  removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    	compilable	  [FE]  IllegalArgumentException	83247	1
166370	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.maximumItemCount  =  Integer.MAX_VALUE  +  2;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.maximumItemCount  =  Integer.MAX_VALUE  +  2;	  this.range    =    range;    if(this.range!=    null)    {    this.range    =    range;    }    	compilable	  [FE]  IllegalArgumentException	27729	1
166371	[BUG]  [BUGGY]  this.maximumItemCount  =  Integer.MAX_VALUE  +  2;  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.maximumItemCount  =  Integer.MAX_VALUE  +  2;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.maximumItemCount  =  Integer.MAX_VALUE  +  2;	  this.range    =    range;    if(this.range!=    null)    {    this.range    =    range;    }    	compilable	  [FE]  IllegalArgumentException	27729	1
166400	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.range  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  1;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.range  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  1;	  	compilable	  [FE]  IllegalArgumentException	27734	1
166401	[BUG]  [BUGGY]  this.range  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  1;  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.range  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  1;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.range  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  1;	  	compilable	  [FE]  IllegalArgumentException	27734	1
148196	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);          [BUGGY]  this.maximumItemAge  =  Integer.MAX_VALUE;  [BUGGY]          this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	add	this.maximumItemAge  =  Integer.MAX_VALUE;	  this.maximumItemAge    =    Long.MAX_VALUE;    	compilable	  [FE]  IllegalArgumentException	24700	1
148197	[BUG]  [BUGGY]  this.maximumItemAge  =  Integer.MAX_VALUE;  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);          [BUGGY]  this.maximumItemAge  =  Integer.MAX_VALUE;  [BUGGY]          this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	replace	this.maximumItemAge  =  Integer.MAX_VALUE;	  this.maximumItemAge    =    Long.MAX_VALUE;    	compilable	  [FE]  IllegalArgumentException	24700	1
499436	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  	compilable	  [FE]  IllegalArgumentException	83240	1
499437	[BUG]  [BUGGY]  //  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  	compilable	  [FE]  IllegalArgumentException	83240	1
499437	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.add(item);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.add(item);	  	compilable	  [FE]  IllegalArgumentException	83240	1
499438	[BUG]  [BUGGY]  //  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.add(item);  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.add(item);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.add(item);	  	compilable	  [FE]  IllegalArgumentException	83240	1
499483	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	83248	1
499484	[BUG]  [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	83248	1
499484	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.remov  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.remov	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	83248	1
499485	[BUG]  [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.remov  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.remov  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.remov	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	83248	1
165080	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  if(timePeriodClass!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	if(timePeriodClass!=  null)  {  this.domain  =  domain;  this.range  =  range;  }	  if(this.timePeriodClass!=    null)    {    this.domain    =    domain;    this.range    =    range;    }    	compilable	  [FE]  IllegalArgumentException	27514	1
165081	[BUG]  [BUGGY]  if(timePeriodClass!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  if(timePeriodClass!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	if(timePeriodClass!=  null)  {  this.domain  =  domain;  this.range  =  range;  }	  if(this.timePeriodClass!=    null)    {    this.domain    =    domain;    this.range    =    range;    }    	compilable	  [FE]  IllegalArgumentException	27514	1
4149	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println(   "Unable  to  add  cloned  item...   ");  [BUGGY]          }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println(   "Unable  to  add  cloned  item...   ");	  	compilable	  [FE]  IllegalArgumentException	692	1
4150	[BUG]  [BUGGY]  System.err.println(   "Unable  to  add  cloned  item...   ");  [FE]  IllegalArgumentException  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println(   "Unable  to  add  cloned  item...   ");  [BUGGY]          }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println(   "Unable  to  add  cloned  item...   ");	  	compilable	  [FE]  IllegalArgumentException	692	1
166149	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.maximumItemCount  =  maximumItemCount  -  2;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.maximumItemCount  =  maximumItemCount  -  2;	  	compilable	  [FE]  IllegalArgumentException	27692	1
166150	[BUG]  [BUGGY]  this.maximumItemCount  =  maximumItemCount  -  2;  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.maximumItemCount  =  maximumItemCount  -  2;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.maximumItemCount  =  maximumItemCount  -  2;	  	compilable	  [FE]  IllegalArgumentException	27692	1
499412	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(false);  this.data.remove(item);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  this.data.remove(item);	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    }    	compilable	  [FE]  IllegalArgumentException	83236	1
499413	[BUG]  [BUGGY]  //  removeAgedItems(false);  this.data.remove(item);  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(false);  this.data.remove(item);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  this.data.remove(item);	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    }    	compilable	  [FE]  IllegalArgumentException	83236	1
499401	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedAgedItems(true);  b.addChangeListener(this);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(true);  b.addChangeListener(this);	  	compilable	  [FE]  IllegalArgumentException	83234	1
499402	[BUG]  [BUGGY]  //  removedAgedItems(true);  b.addChangeListener(this);  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedAgedItems(true);  b.addChangeListener(this);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(true);  b.addChangeListener(this);	  	compilable	  [FE]  IllegalArgumentException	83234	1
166160	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.maximumItemCount  =  this.maximumItemCount  /  1;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.maximumItemCount  =  this.maximumItemCount  /  1;	  this.maximumItemCount    =    maximumItemCount    /    1;    	compilable	  [FE]  IllegalArgumentException	27694	1
166161	[BUG]  [BUGGY]  this.maximumItemCount  =  this.maximumItemCount  /  1;  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.maximumItemCount  =  this.maximumItemCount  /  1;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.maximumItemCount  =  this.maximumItemCount  /  1;	  this.maximumItemCount    =    maximumItemCount    /    1;    	compilable	  [FE]  IllegalArgumentException	27694	1
499405	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
499406	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
499406	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  bodied?  b.toString()  :  null;  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  bodied?  b.toString()  :  null;	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
499407	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  bodied?  b.toString()  :  null;  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  bodied?  b.toString()  :  null;  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  bodied?  b.toString()  :  null;	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
166339	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.domain  =  range;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.domain  =  range;	  if(this.domain!=    null)    {    this.domain    =    range;    }    	compilable	  [FE]  IllegalArgumentException	27724	1
166340	[BUG]  [BUGGY]  this.domain  =  range;  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.domain  =  range;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.domain  =  range;	  if(this.domain!=    null)    {    this.domain    =    range;    }    	compilable	  [FE]  IllegalArgumentException	27724	1
166340	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.domain  =  domain;  if(this.range!=  null)  {  this.domain  =  range;  }  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.domain  =  domain;  if(this.range!=  null)  {  this.domain  =  range;  }	  if(this.domain!=    null)    {    this.domain    =    range;    }    	compilable	  [FE]  IllegalArgumentException	27724	1
166341	[BUG]  [BUGGY]  this.domain  =  domain;  if(this.range!=  null)  {  this.domain  =  range;  }  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.domain  =  domain;  if(this.range!=  null)  {  this.domain  =  range;  }  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.domain  =  domain;  if(this.range!=  null)  {  this.domain  =  range;  }	  if(this.domain!=    null)    {    this.domain    =    range;    }    	compilable	  [FE]  IllegalArgumentException	27724	1
148256	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);          [BUGGY]  this.data  =  new  java.util.ArrayList(1000);  [BUGGY]          this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	add	this.data  =  new  java.util.ArrayList(1000);	  	compilable	  [FE]  IllegalArgumentException	24710	1
148257	[BUG]  [BUGGY]  this.data  =  new  java.util.ArrayList(1000);  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);          [BUGGY]  this.data  =  new  java.util.ArrayList(1000);  [BUGGY]          this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	replace	this.data  =  new  java.util.ArrayList(1000);	  	compilable	  [FE]  IllegalArgumentException	24710	1
148257	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);          [BUGGY]  this.data  =  new  java.util.ArrayList(200);  [BUGGY]          this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	add	this.data  =  new  java.util.ArrayList(200);	  	compilable	  [FE]  IllegalArgumentException	24710	1
148258	[BUG]  [BUGGY]  this.data  =  new  java.util.ArrayList(200);  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);          [BUGGY]  this.data  =  new  java.util.ArrayList(200);  [BUGGY]          this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	replace	this.data  =  new  java.util.ArrayList(200);	  	compilable	  [FE]  IllegalArgumentException	24710	1
8295	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println(   "Requires  begin  >>  end.   ");  [BUGGY]          throw  new  IllegalArgumentException(         "Requires  start  <=  end.         ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println(   "Requires  begin  >>  end.   ");	  	compilable	  [FE]  IllegalArgumentException	1383	1
8296	[BUG]  [BUGGY]  System.err.println(   "Requires  begin  >>  end.   ");  [FE]  IllegalArgumentException  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println(   "Requires  begin  >>  end.   ");  [BUGGY]          throw  new  IllegalArgumentException(         "Requires  start  <=  end.         ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println(   "Requires  begin  >>  end.   ");	  	compilable	  [FE]  IllegalArgumentException	1383	1
407421	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {          [BUGGY]  RegularTimePeriod  second  =  getTimePeriod(getItemCount()  /  3);  [BUGGY]          if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	511	511	1	add	RegularTimePeriod  second  =  getTimePeriod(getItemCount()  /  3);	  	compilable	  [FE]  IllegalArgumentException	67904	1
407422	[BUG]  [BUGGY]  RegularTimePeriod  second  =  getTimePeriod(getItemCount()  /  3);  [FE]  IllegalArgumentException  [CONTEXT]          if  (count  ==  0)  {  this.data.add(item);  added  =  true;  }  else  {          [BUGGY]  RegularTimePeriod  second  =  getTimePeriod(getItemCount()  /  3);  [BUGGY]          if  (item.getPeriod().compareTo(last)  >  0)  {  this.data.add(item);  added  =  true;  }  else  {  int  index  =  Collections.binarySearch(this.data,  item);  if  (index  <  0)  {  this.data.add(-index  -  1,  item);  added  =  true;  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	511	511	1	replace	RegularTimePeriod  second  =  getTimePeriod(getItemCount()  /  3);	  	compilable	  [FE]  IllegalArgumentException	67904	1
499411	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  this.data.removeAgedItems(false);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.removeAgedItems(false);	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    }    	compilable	  [FE]  IllegalArgumentException	83236	1
499412	[BUG]  [BUGGY]  //  this.data.removeAgedItems(false);  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  this.data.removeAgedItems(false);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.removeAgedItems(false);	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    }    	compilable	  [FE]  IllegalArgumentException	83236	1
143077	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);          [BUGGY]  this.domain  =  domain  + "DOMAIN_DESCRIPTION "  +  DEFAULT_RANGE_DESCRIPTION;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	add	this.domain  =  domain  + "DOMAIN_DESCRIPTION "  +  DEFAULT_RANGE_DESCRIPTION;	  this.domain    =    domain    +   "DOMAIN_DESCRIPTION   "    +    DEFAULT_DOMAIN_DESCRIPTION;    	compilable	  [FE]  IllegalArgumentException	23847	1
143078	[BUG]  [BUGGY]  this.domain  =  domain  + "DOMAIN_DESCRIPTION "  +  DEFAULT_RANGE_DESCRIPTION;  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);          [BUGGY]  this.domain  =  domain  + "DOMAIN_DESCRIPTION "  +  DEFAULT_RANGE_DESCRIPTION;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	replace	this.domain  =  domain  + "DOMAIN_DESCRIPTION "  +  DEFAULT_RANGE_DESCRIPTION;	  this.domain    =    domain    +   "DOMAIN_DESCRIPTION   "    +    DEFAULT_DOMAIN_DESCRIPTION;    	compilable	  [FE]  IllegalArgumentException	23847	1
11743	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println(   "Requires  start  >=  0   ");  [BUGGY]          throw  new  IllegalArgumentException(         "Requires  start  <=  end.         ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println(   "Requires  start  >=  0   ");	  	compilable	  [FE]  IllegalArgumentException	1958	1
11744	[BUG]  [BUGGY]  System.err.println(   "Requires  start  >=  0   ");  [FE]  IllegalArgumentException  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println(   "Requires  start  >=  0   ");  [BUGGY]          throw  new  IllegalArgumentException(         "Requires  start  <=  end.         ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println(   "Requires  start  >=  0   ");	  	compilable	  [FE]  IllegalArgumentException	1958	1
166159	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.maximumItemCount  =  maximumItemCount  /  2;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.maximumItemCount  =  maximumItemCount  /  2;	  this.maximumItemCount    =    maximumItemCount    /    1;    	compilable	  [FE]  IllegalArgumentException	27694	1
166160	[BUG]  [BUGGY]  this.maximumItemCount  =  maximumItemCount  /  2;  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.maximumItemCount  =  maximumItemCount  /  2;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.maximumItemCount  =  maximumItemCount  /  2;	  this.maximumItemCount    =    maximumItemCount    /    1;    	compilable	  [FE]  IllegalArgumentException	27694	1
166155	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.maximumItemCount  =  this.maximumItemCount  +  2;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.maximumItemCount  =  this.maximumItemCount  +  2;	  	compilable	  [FE]  IllegalArgumentException	27693	1
166156	[BUG]  [BUGGY]  this.maximumItemCount  =  this.maximumItemCount  +  2;  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.maximumItemCount  =  this.maximumItemCount  +  2;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.maximumItemCount  =  this.maximumItemCount  +  2;	  	compilable	  [FE]  IllegalArgumentException	27693	1
166333	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  if(this.domain!=  null)  {  this.domain  =  domain;  }  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	if(this.domain!=  null)  {  this.domain  =  domain;  }	  this.maximumItemAge    =    Long.MAX_VALUE;    	compilable	  [FE]  IllegalArgumentException	27723	1
166334	[BUG]  [BUGGY]  if(this.domain!=  null)  {  this.domain  =  domain;  }  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  if(this.domain!=  null)  {  this.domain  =  domain;  }  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	if(this.domain!=  null)  {  this.domain  =  domain;  }	  this.maximumItemAge    =    Long.MAX_VALUE;    	compilable	  [FE]  IllegalArgumentException	27723	1
166394	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.range  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  DEFAULT_RANGE_DESCRIPTION;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.range  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  DEFAULT_RANGE_DESCRIPTION;	  	compilable	  [FE]  IllegalArgumentException	27733	1
166395	[BUG]  [BUGGY]  this.range  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  DEFAULT_RANGE_DESCRIPTION;  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.range  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  DEFAULT_RANGE_DESCRIPTION;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.range  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  DEFAULT_RANGE_DESCRIPTION;	  	compilable	  [FE]  IllegalArgumentException	27733	1
148190	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);          [BUGGY]  this.maximumItemCount  =  Integer.MIN_VALUE  +  1;  [BUGGY]          this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	add	this.maximumItemCount  =  Integer.MIN_VALUE  +  1;	  this.maximumItemCount    =    Integer.MIN_VALUE;    	compilable	  [FE]  IllegalArgumentException	24699	1
148191	[BUG]  [BUGGY]  this.maximumItemCount  =  Integer.MIN_VALUE  +  1;  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);          [BUGGY]  this.maximumItemCount  =  Integer.MIN_VALUE  +  1;  [BUGGY]          this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	replace	this.maximumItemCount  =  Integer.MIN_VALUE  +  1;	  this.maximumItemCount    =    Integer.MIN_VALUE;    	compilable	  [FE]  IllegalArgumentException	24699	1
499406	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
499407	[BUG]  [BUGGY]  //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }    [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
9369	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( "Requires  start  <  0   ".length());  [BUGGY]          throw  new  IllegalArgumentException(         "Requires  start  <=  end.         ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  start  <  0   ".length());	  	compilable	  [FE]  IllegalArgumentException	1562	1
9370	[BUG]  [BUGGY]  System.err.println( "Requires  start  <  0   ".length());  [FE]  IllegalArgumentException  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( "Requires  start  <  0   ".length());  [BUGGY]          throw  new  IllegalArgumentException(         "Requires  start  <=  end.         ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  start  <  0   ".length());	  	compilable	  [FE]  IllegalArgumentException	1562	1
499473	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(true);  if(notify)  propag  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  if(notify)  propag  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  	compilable	  [FE]  IllegalArgumentException	83246	1
499474	[BUG]  [BUGGY]  //  deleteAgedItems(true);  if(notify)  propag  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(true);  if(notify)  propag  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  if(notify)  propag  fireSeriesChanged();  }  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  	compilable	  [FE]  IllegalArgumentException	83246	1
165110	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  if(domain!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	if(domain!=  null)  {  this.domain  =  domain;  this.range  =  range;  }	  this.maximumItemCount    =    2;    	compilable	  [FE]  IllegalArgumentException	27519	1
165111	[BUG]  [BUGGY]  if(domain!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  if(domain!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	if(domain!=  null)  {  this.domain  =  domain;  this.range  =  range;  }	  this.maximumItemCount    =    2;    	compilable	  [FE]  IllegalArgumentException	27519	1
499405	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  bodied  ;  b.toString()  :  null;  }  ;  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  bodied  ;  b.toString()  :  null;  }  ;	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
499406	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  bodied  ;  b.toString()  :  null;  }  ;  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  bodied  ;  b.toString()  :  null;  }  ;  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  bodied  ;  b.toString()  :  null;  }  ;	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
499406	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  b.toString()  :  null;  }  ;  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  b.toString()  :  null;  }  ;	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
499407	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  b.toString()  :  null;  }  ;  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  b.toString()  :  null;  }  ;  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  b.toString()  :  null;  }  ;	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
499694	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  removeAgedItems(true);//  remove  old  items  if  required,  //  don't  notify  any,  because  that  //  happens  next  anyway;  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	removeAgedItems(true);//  remove  old  items  if  required,  //  don't  notify  any,  because  that  //  happens  next  anyway;	  removeAgedItems(true);//    remove    old    items    if    required,    //    don't    notify    anyone,    because    that    //    happens    next    anyway;    	compilable	  [FE]  IllegalArgumentException	83283	1
499695	[BUG]  [BUGGY]  removeAgedItems(true);//  remove  old  items  if  required,  //  don't  notify  any,  because  that  //  happens  next  anyway;  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  removeAgedItems(true);//  remove  old  items  if  required,  //  don't  notify  any,  because  that  //  happens  next  anyway;  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	removeAgedItems(true);//  remove  old  items  if  required,  //  don't  notify  any,  because  that  //  happens  next  anyway;	  removeAgedItems(true);//    remove    old    items    if    required,    //    don't    notify    anyone,    because    that    //    happens    next    anyway;    	compilable	  [FE]  IllegalArgumentException	83283	1
4190	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( ",Unable  to  add  cloned  data  item. ");  [BUGGY]          }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( ",Unable  to  add  cloned  data  item. ");	  System.err.println(   ",Unable    to    add    cloned    item.   ");    	compilable	  [FE]  AssertionFailedError	699	1
4191	[BUG]  [BUGGY]  System.err.println( ",Unable  to  add  cloned  data  item. ");  [FE]  AssertionFailedError  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( ",Unable  to  add  cloned  data  item. ");  [BUGGY]          }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( ",Unable  to  add  cloned  data  item. ");	  System.err.println(   ",Unable    to    add    cloned    item.   ");    	compilable	  [FE]  AssertionFailedError	699	1
166334	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.maximumItemAge  =  Integer.MAX_VALUE;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.maximumItemAge  =  Integer.MAX_VALUE;	  this.maximumItemAge    =    Long.MAX_VALUE;    	compilable	  [FE]  IllegalArgumentException	27723	1
166335	[BUG]  [BUGGY]  this.maximumItemAge  =  Integer.MAX_VALUE;  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.maximumItemAge  =  Integer.MAX_VALUE;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.maximumItemAge  =  Integer.MAX_VALUE;	  this.maximumItemAge    =    Long.MAX_VALUE;    	compilable	  [FE]  IllegalArgumentException	27723	1
499478	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  	  removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    	compilable	  [FE]  IllegalArgumentException	83247	1
499479	[BUG]  [BUGGY]  //  deleteAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }    [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  	  removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    	compilable	  [FE]  IllegalArgumentException	83247	1
499442	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(false,  item);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false,  item);	  //    removedAgedItems(false);    	compilable	  [FE]  IllegalArgumentException	83241	1
499443	[BUG]  [BUGGY]  //  deleteAgedItems(false,  item);  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(false,  item);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false,  item);	  //    removedAgedItems(false);    	compilable	  [FE]  IllegalArgumentException	83241	1
499399	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();	  	compilable	  [FE]  IllegalArgumentException	83234	1
499400	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();	  	compilable	  [FE]  IllegalArgumentException	83234	1
499400	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();	  	compilable	  [FE]  IllegalArgumentException	83234	1
499401	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  hopped  ;  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();	  	compilable	  [FE]  IllegalArgumentException	83234	1
166215	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.maximumItemCount  =  Math.max(this.maximumItemCount,  2);  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.maximumItemCount  =  Math.max(this.maximumItemCount,  2);	  	compilable	  [FE]  IllegalArgumentException	27703	1
166216	[BUG]  [BUGGY]  this.maximumItemCount  =  Math.max(this.maximumItemCount,  2);  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.maximumItemCount  =  Math.max(this.maximumItemCount,  2);  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.maximumItemCount  =  Math.max(this.maximumItemCount,  2);	  	compilable	  [FE]  IllegalArgumentException	27703	1
499411	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  }  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  }	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    }    	compilable	  [FE]  IllegalArgumentException	83236	1
499412	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  }  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  }  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  b.toString()  :  null;  }	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    }    	compilable	  [FE]  IllegalArgumentException	83236	1
499412	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  bodied?  b.toString()  :  null;  }  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  bodied?  b.toString()  :  null;  }	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    }    	compilable	  [FE]  IllegalArgumentException	83236	1
499413	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  bodied?  b.toString()  :  null;  }  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  bodied?  b.toString()  :  null;  }  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  bodied?  b.toString()  :  null;  }	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    }    	compilable	  [FE]  IllegalArgumentException	83236	1
9369	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( "Requires  end  >>  0.   ");  [BUGGY]          throw  new  IllegalArgumentException(         "Requires  start  <=  end.         ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  end  >>  0.   ");	  	compilable	  [FE]  IllegalArgumentException	1562	1
9370	[BUG]  [BUGGY]  System.err.println( "Requires  end  >>  0.   ");  [FE]  IllegalArgumentException  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( "Requires  end  >>  0.   ");  [BUGGY]          throw  new  IllegalArgumentException(         "Requires  start  <=  end.         ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  end  >>  0.   ");	  	compilable	  [FE]  IllegalArgumentException	1562	1
499436	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ;  }  if(notify)  {  fireSeriesChanged();  }  ;  }  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ;  }  if(notify)  {  fireSeriesChanged();  }  ;  }  	  	compilable	  [FE]  IllegalArgumentException	83240	1
499437	[BUG]  [BUGGY]  //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ;  }  if(notify)  {  fireSeriesChanged();  }  ;  }    [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ;  }  if(notify)  {  fireSeriesChanged();  }  ;  }  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false,  item);  if(notify)  {  fireSeriesChanged();  }  ;  }  ;  }  if(notify)  {  fireSeriesChanged();  }  ;  }  	  	compilable	  [FE]  IllegalArgumentException	83240	1
499442	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedAllAgedItems(true);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllAgedItems(true);	  //    removedAgedItems(false);    	compilable	  [FE]  IllegalArgumentException	83241	1
499443	[BUG]  [BUGGY]  //  removedAllAgedItems(true);  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedAllAgedItems(true);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllAgedItems(true);	  //    removedAgedItems(false);    	compilable	  [FE]  IllegalArgumentException	83241	1
499406	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
499407	[BUG]  [BUGGY]  //  removeAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }    [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  this.data.add(item);  if(notify)  {  fireSeriesChanged();  }  	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
166364	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.range  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.range  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;	  	compilable	  [FE]  IllegalArgumentException	27728	1
166365	[BUG]  [BUGGY]  this.range  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.range  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.range  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION;	  	compilable	  [FE]  IllegalArgumentException	27728	1
166395	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  if(this.domain!=  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range;  timePeriodClass  =  timePeriodClass;  }  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	if(this.domain!=  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range;  timePeriodClass  =  timePeriodClass;  }	  	compilable	  [FE]  IllegalArgumentException	27733	1
166396	[BUG]  [BUGGY]  if(this.domain!=  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range;  timePeriodClass  =  timePeriodClass;  }  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  if(this.domain!=  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range;  timePeriodClass  =  timePeriodClass;  }  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	if(this.domain!=  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range;  timePeriodClass  =  timePeriodClass;  }	  	compilable	  [FE]  IllegalArgumentException	27733	1
165105	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  if(domain  ==  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.domain  =  domain;  this.maximumItemCount  =  0;  }  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	if(domain  ==  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.domain  =  domain;  this.maximumItemCount  =  0;  }	  	compilable	  [FE]  IllegalArgumentException	27518	1
165106	[BUG]  [BUGGY]  if(domain  ==  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.domain  =  domain;  this.maximumItemCount  =  0;  }  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  if(domain  ==  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.domain  =  domain;  this.maximumItemCount  =  0;  }  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	if(domain  ==  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.domain  =  domain;  this.maximumItemCount  =  0;  }	  	compilable	  [FE]  IllegalArgumentException	27518	1
166406	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  2;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  2;	  this.maximumItemCount    =    Integer.MIN_VALUE    -    1;    	compilable	  [FE]  IllegalArgumentException	27735	1
166407	[BUG]  [BUGGY]  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  2;  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  2;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  2;	  this.maximumItemCount    =    Integer.MIN_VALUE    -    1;    	compilable	  [FE]  IllegalArgumentException	27735	1
499473	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  if(notify)  {  fireSeriesChanged();  }  ;  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	if(notify)  {  fireSeriesChanged();  }  ;	  	compilable	  [FE]  IllegalArgumentException	83246	1
499474	[BUG]  [BUGGY]  if(notify)  {  fireSeriesChanged();  }  ;  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  if(notify)  {  fireSeriesChanged();  }  ;  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	if(notify)  {  fireSeriesChanged();  }  ;	  	compilable	  [FE]  IllegalArgumentException	83246	1
499478	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    	compilable	  [FE]  IllegalArgumentException	83247	1
499479	[BUG]  [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  hopped  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    	compilable	  [FE]  IllegalArgumentException	83247	1
499471	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  bodied  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  bodied	  	compilable	  [FE]  IllegalArgumentException	83246	1
499472	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  bodied  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  bodied  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  bodied	  	compilable	  [FE]  IllegalArgumentException	83246	1
148226	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);          [BUGGY]  if(domain!=  null)  {  this.domain  =  domain;  this.range  =  range;  this.maximumItemCount  =  Integer.MAX_VALUE;  }  [BUGGY]          this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	add	if(domain!=  null)  {  this.domain  =  domain;  this.range  =  range;  this.maximumItemCount  =  Integer.MAX_VALUE;  }	  if(this.domain!=    null)    {    this.domain    =    domain;    this.range    =    range;    this.maximumItemCount    =    Integer.MAX_VALUE;    }    	compilable	  [FE]  IllegalArgumentException	24705	1
148227	[BUG]  [BUGGY]  if(domain!=  null)  {  this.domain  =  domain;  this.range  =  range;  this.maximumItemCount  =  Integer.MAX_VALUE;  }  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);          [BUGGY]  if(domain!=  null)  {  this.domain  =  domain;  this.range  =  range;  this.maximumItemCount  =  Integer.MAX_VALUE;  }  [BUGGY]          this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	replace	if(domain!=  null)  {  this.domain  =  domain;  this.range  =  range;  this.maximumItemCount  =  Integer.MAX_VALUE;  }	  if(this.domain!=    null)    {    this.domain    =    domain;    this.range    =    range;    this.maximumItemCount    =    Integer.MAX_VALUE;    }    	compilable	  [FE]  IllegalArgumentException	24705	1
499399	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  b.toString()  :  null;  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  b.toString()  :  null;	  	compilable	  [FE]  IllegalArgumentException	83234	1
499400	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  b.toString()  :  null;  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  b.toString()  :  null;  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  bodied  ;  b.toString()  :  null;	  	compilable	  [FE]  IllegalArgumentException	83234	1
499400	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  bodied  ;  b.toString()  :  null;  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  bodied  ;  b.toString()  :  null;	  	compilable	  [FE]  IllegalArgumentException	83234	1
499401	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  bodied  ;  b.toString()  :  null;  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  bodied  ;  b.toString()  :  null;  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify))  {  fireSeriesChanged();  }  ;  bodied  ;  b.toString()  :  null;	  	compilable	  [FE]  IllegalArgumentException	83234	1
499406	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  }  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  }  	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
499407	[BUG]  [BUGGY]  //  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  }    [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  }  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  }  	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
499472	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;	  	compilable	  [FE]  IllegalArgumentException	83246	1
499473	[BUG]  [BUGGY]  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;	  	compilable	  [FE]  IllegalArgumentException	83246	1
11775	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( "Requires  start  %  2  exceeded  0. ");  [BUGGY]          throw  new  IllegalArgumentException(         "Requires  start  <=  end.         ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  start  %  2  exceeded  0. ");	  	compilable	  [FE]  IllegalArgumentException	1963	1
11776	[BUG]  [BUGGY]  System.err.println( "Requires  start  %  2  exceeded  0. ");  [FE]  IllegalArgumentException  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( "Requires  start  %  2  exceeded  0. ");  [BUGGY]          throw  new  IllegalArgumentException(         "Requires  start  <=  end.         ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  start  %  2  exceeded  0. ");	  	compilable	  [FE]  IllegalArgumentException	1963	1
166155	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.maximumItemCount  =  getMaximumItemCount();  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.maximumItemCount  =  getMaximumItemCount();	  	compilable	  [FE]  IllegalArgumentException	27693	1
166156	[BUG]  [BUGGY]  this.maximumItemCount  =  getMaximumItemCount();  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.maximumItemCount  =  getMaximumItemCount();  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.maximumItemCount  =  getMaximumItemCount();	  	compilable	  [FE]  IllegalArgumentException	27693	1
499441	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(true,  item);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true,  item);	  //    removedAgedItems(false);    	compilable	  [FE]  IllegalArgumentException	83241	1
499442	[BUG]  [BUGGY]  //  removeAgedItems(true,  item);  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(true,  item);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true,  item);	  //    removedAgedItems(false);    	compilable	  [FE]  IllegalArgumentException	83241	1
469634	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          b.append(         "You  are  attempting  to  add  an  observation  for           ");  b.append(         "the  time  period           ");  b.append(item.getPeriod().toString());  b.append(         "  but  the  series  already  contains  an  observation         ");  b.append(         "  for  that  time  period.  Duplicates  are  not           ");  b.append(         "permitted.Try  using  the  addOrUpdate()  method.         ");  throw  new  SeriesException(b.toString());  }  }  }          [BUGGY]  if(item.getPeriod().equals( "/. "))  {  [BUGGY]            if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	534	534	1	add	if(item.getPeriod().equals( "/. "))  {	  if(item.getPeriod().equals(   "/   "))    {    	compilable	  [FE]  IllegalArgumentException	78273	1
469635	[BUG]  [BUGGY]  if(item.getPeriod().equals( "/. "))  {  [FE]  IllegalArgumentException  [CONTEXT]          b.append(         "You  are  attempting  to  add  an  observation  for           ");  b.append(         "the  time  period           ");  b.append(item.getPeriod().toString());  b.append(         "  but  the  series  already  contains  an  observation         ");  b.append(         "  for  that  time  period.  Duplicates  are  not           ");  b.append(         "permitted.Try  using  the  addOrUpdate()  method.         ");  throw  new  SeriesException(b.toString());  }  }  }          [BUGGY]  if(item.getPeriod().equals( "/. "))  {  [BUGGY]            if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	534	534	1	replace	if(item.getPeriod().equals( "/. "))  {	  if(item.getPeriod().equals(   "/   "))    {    	compilable	  [FE]  IllegalArgumentException	78273	1
165105	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  if(this.data  ==  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.domain  =  domain;  this.timePeriodClass  =  timePeriodClass;  this.maximumItemAge  =  0;  }  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	if(this.data  ==  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.domain  =  domain;  this.timePeriodClass  =  timePeriodClass;  this.maximumItemAge  =  0;  }	  	compilable	  [FE]  IllegalArgumentException	27518	1
165106	[BUG]  [BUGGY]  if(this.data  ==  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.domain  =  domain;  this.timePeriodClass  =  timePeriodClass;  this.maximumItemAge  =  0;  }  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  if(this.data  ==  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.domain  =  domain;  this.timePeriodClass  =  timePeriodClass;  this.maximumItemAge  =  0;  }  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	if(this.data  ==  null)  {  this.data  =  new  java.util.ArrayList();  }  else  {  this.domain  =  domain;  this.timePeriodClass  =  timePeriodClass;  this.maximumItemAge  =  0;  }	  	compilable	  [FE]  IllegalArgumentException	27518	1
165105	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.maximumItemCount  =  5500;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.maximumItemCount  =  5500;	  	compilable	  [FE]  IllegalArgumentException	27518	1
165106	[BUG]  [BUGGY]  this.maximumItemCount  =  5500;  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.maximumItemCount  =  5500;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.maximumItemCount  =  5500;	  	compilable	  [FE]  IllegalArgumentException	27518	1
499436	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedAgedItems(false);  b.addChangeListener(this);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(false);  b.addChangeListener(this);	  	compilable	  [FE]  IllegalArgumentException	83240	1
499437	[BUG]  [BUGGY]  //  removedAgedItems(false);  b.addChangeListener(this);  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedAgedItems(false);  b.addChangeListener(this);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(false);  b.addChangeListener(this);	  	compilable	  [FE]  IllegalArgumentException	83240	1
499437	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedAgedItems(false);  this.data.add(item);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(false);  this.data.add(item);	  	compilable	  [FE]  IllegalArgumentException	83240	1
499438	[BUG]  [BUGGY]  //  removedAgedItems(false);  this.data.add(item);  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedAgedItems(false);  this.data.add(item);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(false);  this.data.add(item);	  	compilable	  [FE]  IllegalArgumentException	83240	1
499694	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  //  don't  notify  any,  because  that  //  happens  next  anyway;  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	removeAgedItems(false);//  remove  old  items  if  needed,  //  don't  notify  any,  because  that  //  happens  next  anyway;	  removeAgedItems(true);//    remove    old    items    if    required,    //    don't    notify    anyone,    because    that    //    happens    next    anyway;    	compilable	  [FE]  IllegalArgumentException	83283	1
499695	[BUG]  [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  //  don't  notify  any,  because  that  //  happens  next  anyway;  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  removeAgedItems(false);//  remove  old  items  if  needed,  //  don't  notify  any,  because  that  //  happens  next  anyway;  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	removeAgedItems(false);//  remove  old  items  if  needed,  //  don't  notify  any,  because  that  //  happens  next  anyway;	  removeAgedItems(true);//    remove    old    items    if    required,    //    don't    notify    anyone,    because    that    //    happens    next    anyway;    	compilable	  [FE]  IllegalArgumentException	83283	1
166400	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.range  =  range  +  DEFAULT_DOMAIN_DESCRIPTION  +  1;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.range  =  range  +  DEFAULT_DOMAIN_DESCRIPTION  +  1;	  	compilable	  [FE]  IllegalArgumentException	27734	1
166401	[BUG]  [BUGGY]  this.range  =  range  +  DEFAULT_DOMAIN_DESCRIPTION  +  1;  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.range  =  range  +  DEFAULT_DOMAIN_DESCRIPTION  +  1;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.range  =  range  +  DEFAULT_DOMAIN_DESCRIPTION  +  1;	  	compilable	  [FE]  IllegalArgumentException	27734	1
165079	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.domain  =  domain;  this.range  =  range;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.domain  =  domain;  this.range  =  range;	  if(this.timePeriodClass!=    null)    {    this.domain    =    domain;    this.range    =    range;    }    	compilable	  [FE]  IllegalArgumentException	27514	1
165080	[BUG]  [BUGGY]  this.domain  =  domain;  this.range  =  range;  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.domain  =  domain;  this.range  =  range;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.domain  =  domain;  this.range  =  range;	  if(this.timePeriodClass!=    null)    {    this.domain    =    domain;    this.range    =    range;    }    	compilable	  [FE]  IllegalArgumentException	27514	1
499483	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	83248	1
499484	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	83248	1
499484	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  figured  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  figured  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	83248	1
499485	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  figured  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  figured  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  figured  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	83248	1
166148	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.maximumItemCount  =  maximumItemCount  +  3;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.maximumItemCount  =  maximumItemCount  +  3;	  	compilable	  [FE]  IllegalArgumentException	27692	1
166149	[BUG]  [BUGGY]  this.maximumItemCount  =  maximumItemCount  +  3;  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.maximumItemCount  =  maximumItemCount  +  3;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.maximumItemCount  =  maximumItemCount  +  3;	  	compilable	  [FE]  IllegalArgumentException	27692	1
499442	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedAgedItems(false;  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(false;	  //    removedAgedItems(false);    	compilable	  [FE]  IllegalArgumentException	83241	1
499443	[BUG]  [BUGGY]  //  removedAgedItems(false;  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedAgedItems(false;  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(false;	  //    removedAgedItems(false);    	compilable	  [FE]  IllegalArgumentException	83241	1
499412	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  this.data.addAgedItems(false);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.addAgedItems(false);	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    }    	compilable	  [FE]  IllegalArgumentException	83236	1
499413	[BUG]  [BUGGY]  //  this.data.addAgedItems(false);  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  this.data.addAgedItems(false);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.addAgedItems(false);	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    }    	compilable	  [FE]  IllegalArgumentException	83236	1
499405	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(false);  if(added)  {  fireSeriesChanged();  }  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(added)  {  fireSeriesChanged();  }	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
499406	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(added)  {  fireSeriesChanged();  }  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(false);  if(added)  {  fireSeriesChanged();  }  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(added)  {  fireSeriesChanged();  }	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
499406	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(true);  if(add)  {  fireSeriesChanged();  }  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(add)  {  fireSeriesChanged();  }	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
499407	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(add)  {  fireSeriesChanged();  }  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(true);  if(add)  {  fireSeriesChanged();  }  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(add)  {  fireSeriesChanged();  }	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
499442	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedAllUnagedItems(true);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllUnagedItems(true);	  //    removedAgedItems(false);    	compilable	  [FE]  IllegalArgumentException	83241	1
499443	[BUG]  [BUGGY]  //  removedAllUnagedItems(true);  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedAllUnagedItems(true);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllUnagedItems(true);	  //    removedAgedItems(false);    	compilable	  [FE]  IllegalArgumentException	83241	1
499483	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.remove  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.remove	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	83248	1
499484	[BUG]  [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.remove  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.remove  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.remove	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	83248	1
499484	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  meanwhile  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.remov  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  meanwhile  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.remov	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	83248	1
499485	[BUG]  [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  meanwhile  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.remov  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  meanwhile  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.remov  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  meanwhile  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.remov	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	83248	1
4185	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( "Unable  to  add  cloned  item.   "  +  end  + "  or  cloned  item.   ");  [BUGGY]          }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Unable  to  add  cloned  item.   "  +  end  + "  or  cloned  item.   ");	  	compilable	  [FE]  IllegalArgumentException	698	1
4186	[BUG]  [BUGGY]  System.err.println( "Unable  to  add  cloned  item.   "  +  end  + "  or  cloned  item.   ");  [FE]  IllegalArgumentException  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( "Unable  to  add  cloned  item.   "  +  end  + "  or  cloned  item.   ");  [BUGGY]          }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Unable  to  add  cloned  item.   "  +  end  + "  or  cloned  item.   ");	  	compilable	  [FE]  IllegalArgumentException	698	1
499405	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;  }  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;  }	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
499406	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;  }  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;  }  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;  }	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
499405	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
499406	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
499406	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
499407	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
143078	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);          [BUGGY]  this.domain  =  domain  + "DOMAIN_DESCRIPTION  DEFAULT_DOMAIN_DESCRIPTION "  +  DEFAULT_RANGE_DESCRIPTION;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	add	this.domain  =  domain  + "DOMAIN_DESCRIPTION  DEFAULT_DOMAIN_DESCRIPTION "  +  DEFAULT_RANGE_DESCRIPTION;	  this.domain    =    domain    +   "DOMAIN_DESCRIPTION   "    +    DEFAULT_DOMAIN_DESCRIPTION;    	compilable	  [FE]  IllegalArgumentException	23847	1
143079	[BUG]  [BUGGY]  this.domain  =  domain  + "DOMAIN_DESCRIPTION  DEFAULT_DOMAIN_DESCRIPTION "  +  DEFAULT_RANGE_DESCRIPTION;  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);          [BUGGY]  this.domain  =  domain  + "DOMAIN_DESCRIPTION  DEFAULT_DOMAIN_DESCRIPTION "  +  DEFAULT_RANGE_DESCRIPTION;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	replace	this.domain  =  domain  + "DOMAIN_DESCRIPTION  DEFAULT_DOMAIN_DESCRIPTION "  +  DEFAULT_RANGE_DESCRIPTION;	  this.domain    =    domain    +   "DOMAIN_DESCRIPTION   "    +    DEFAULT_DOMAIN_DESCRIPTION;    	compilable	  [FE]  IllegalArgumentException	23847	1
11775	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( "Requires  start  =>  0   ");  [BUGGY]          throw  new  IllegalArgumentException(         "Requires  start  <=  end.         ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  start  =>  0   ");	  	compilable	  [FE]  IllegalArgumentException	1963	1
11776	[BUG]  [BUGGY]  System.err.println( "Requires  start  =>  0   ");  [FE]  IllegalArgumentException  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( "Requires  start  =>  0   ");  [BUGGY]          throw  new  IllegalArgumentException(         "Requires  start  <=  end.         ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  start  =>  0   ");	  	compilable	  [FE]  IllegalArgumentException	1963	1
166363	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.range  =  range;  if(this.range!=  null)  {  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  }  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.range  =  range;  if(this.range!=  null)  {  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  }	  	compilable	  [FE]  IllegalArgumentException	27728	1
166364	[BUG]  [BUGGY]  this.range  =  range;  if(this.range!=  null)  {  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  }  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.range  =  range;  if(this.range!=  null)  {  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  }  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.range  =  range;  if(this.range!=  null)  {  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  }	  	compilable	  [FE]  IllegalArgumentException	27728	1
499484	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(false);  this.data.add(item,  this.maximumItemCount);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  this.data.add(item,  this.maximumItemCount);	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	83248	1
499485	[BUG]  [BUGGY]  //  deleteAgedItems(false);  this.data.add(item,  this.maximumItemCount);  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(false);  this.data.add(item,  this.maximumItemCount);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  this.data.add(item,  this.maximumItemCount);	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	83248	1
499436	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedAllAgedItems(false);  b.addChangeListener(this);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllAgedItems(false);  b.addChangeListener(this);	  	compilable	  [FE]  IllegalArgumentException	83240	1
499437	[BUG]  [BUGGY]  //  removedAllAgedItems(false);  b.addChangeListener(this);  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedAllAgedItems(false);  b.addChangeListener(this);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllAgedItems(false);  b.addChangeListener(this);	  	compilable	  [FE]  IllegalArgumentException	83240	1
166369	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.range  =  range  +  DEFAULT_DOMAIN_DESCRIPTION  +  DEFAULT_RANGE_DESCRIPTION;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.range  =  range  +  DEFAULT_DOMAIN_DESCRIPTION  +  DEFAULT_RANGE_DESCRIPTION;	  this.range    =    range;    if(this.range!=    null)    {    this.range    =    range;    }    	compilable	  [FE]  IllegalArgumentException	27729	1
166370	[BUG]  [BUGGY]  this.range  =  range  +  DEFAULT_DOMAIN_DESCRIPTION  +  DEFAULT_RANGE_DESCRIPTION;  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.range  =  range  +  DEFAULT_DOMAIN_DESCRIPTION  +  DEFAULT_RANGE_DESCRIPTION;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.range  =  range  +  DEFAULT_DOMAIN_DESCRIPTION  +  DEFAULT_RANGE_DESCRIPTION;	  this.range    =    range;    if(this.range!=    null)    {    this.range    =    range;    }    	compilable	  [FE]  IllegalArgumentException	27729	1
499436	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(false,  item);  b.addChangeListener(this);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false,  item);  b.addChangeListener(this);	  	compilable	  [FE]  IllegalArgumentException	83240	1
499437	[BUG]  [BUGGY]  //  removeAgedItems(false,  item);  b.addChangeListener(this);  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(false,  item);  b.addChangeListener(this);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false,  item);  b.addChangeListener(this);	  	compilable	  [FE]  IllegalArgumentException	83240	1
499437	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(false,  item);  b.append('ufffd');  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false,  item);  b.append('ufffd');	  	compilable	  [FE]  IllegalArgumentException	83240	1
499438	[BUG]  [BUGGY]  //  removeAgedItems(false,  item);  b.append('ufffd');  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(false,  item);  b.append('ufffd');  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false,  item);  b.append('ufffd');	  	compilable	  [FE]  IllegalArgumentException	83240	1
166153	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.maximumItemCount  =  maximumItemCount  *  2;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.maximumItemCount  =  maximumItemCount  *  2;	  	compilable	  [FE]  IllegalArgumentException	27693	1
166154	[BUG]  [BUGGY]  this.maximumItemCount  =  maximumItemCount  *  2;  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.maximumItemCount  =  maximumItemCount  *  2;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.maximumItemCount  =  maximumItemCount  *  2;	  	compilable	  [FE]  IllegalArgumentException	27693	1
148226	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);          [BUGGY]  this.domain  =  domain;  this.range  =  range;  this.maximumItemCount  =  Integer.MAX_VALUE;  [BUGGY]          this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	add	this.domain  =  domain;  this.range  =  range;  this.maximumItemCount  =  Integer.MAX_VALUE;	  if(this.domain!=    null)    {    this.domain    =    domain;    this.range    =    range;    this.maximumItemCount    =    Integer.MAX_VALUE;    }    	compilable	  [FE]  IllegalArgumentException	24705	1
148227	[BUG]  [BUGGY]  this.domain  =  domain;  this.range  =  range;  this.maximumItemCount  =  Integer.MAX_VALUE;  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);          [BUGGY]  this.domain  =  domain;  this.range  =  range;  this.maximumItemCount  =  Integer.MAX_VALUE;  [BUGGY]          this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	replace	this.domain  =  domain;  this.range  =  range;  this.maximumItemCount  =  Integer.MAX_VALUE;	  if(this.domain!=    null)    {    this.domain    =    domain;    this.range    =    range;    this.maximumItemCount    =    Integer.MAX_VALUE;    }    	compilable	  [FE]  IllegalArgumentException	24705	1
499477	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);	  removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    	compilable	  [FE]  IllegalArgumentException	83247	1
499478	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);	  removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    	compilable	  [FE]  IllegalArgumentException	83247	1
499478	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  figured  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  figured	  removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    	compilable	  [FE]  IllegalArgumentException	83247	1
499479	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  figured  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  figured  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  figured	  removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    	compilable	  [FE]  IllegalArgumentException	83247	1
11779	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( "Requires  start  -  end.   ");  [BUGGY]          throw  new  IllegalArgumentException(         "Requires  start  <=  end.         ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  start  -  end.   ");	  System.err.println(   "Requires    start    %    2    exceeded    0   ");    	compilable	  [FE]  AssertionFailedError	1964	1
11780	[BUG]  [BUGGY]  System.err.println( "Requires  start  -  end.   ");  [FE]  AssertionFailedError  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( "Requires  start  -  end.   ");  [BUGGY]          throw  new  IllegalArgumentException(         "Requires  start  <=  end.         ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  start  -  end.   ");	  System.err.println(   "Requires    start    %    2    exceeded    0   ");    	compilable	  [FE]  AssertionFailedError	1964	1
499406	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  this.data.removeAgedItems(true);  b.addChangeListener(this);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.removeAgedItems(true);  b.addChangeListener(this);	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
499407	[BUG]  [BUGGY]  //  this.data.removeAgedItems(true);  b.addChangeListener(this);  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  this.data.removeAgedItems(true);  b.addChangeListener(this);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.removeAgedItems(true);  b.addChangeListener(this);	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
9338	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( "Requires  end  <=  start.   ");  [BUGGY]          throw  new  IllegalArgumentException(         "Requires  start  <=  end.         ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  end  <=  start.   ");	  	compilable	  [FE]  IllegalArgumentException	1557	1
9339	[BUG]  [BUGGY]  System.err.println( "Requires  end  <=  start.   ");  [FE]  IllegalArgumentException  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( "Requires  end  <=  start.   ");  [BUGGY]          throw  new  IllegalArgumentException(         "Requires  start  <=  end.         ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  end  <=  start.   ");	  	compilable	  [FE]  IllegalArgumentException	1557	1
4184	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( "Unable  to  add  cloned  data  item.... ");  [BUGGY]          }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Unable  to  add  cloned  data  item.... ");	  	compilable	  [FE]  IllegalArgumentException	698	1
4185	[BUG]  [BUGGY]  System.err.println( "Unable  to  add  cloned  data  item.... ");  [FE]  IllegalArgumentException  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( "Unable  to  add  cloned  data  item.... ");  [BUGGY]          }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Unable  to  add  cloned  data  item.... ");	  	compilable	  [FE]  IllegalArgumentException	698	1
148257	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);          [BUGGY]  if(domain!=  null)  {  this.domain  =  domain;  this.range  =  range;  this.maximumItemAge  =  Integer.MAX_VALUE;  }  [BUGGY]          this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	add	if(domain!=  null)  {  this.domain  =  domain;  this.range  =  range;  this.maximumItemAge  =  Integer.MAX_VALUE;  }	  	compilable	  [FE]  IllegalArgumentException	24710	1
148258	[BUG]  [BUGGY]  if(domain!=  null)  {  this.domain  =  domain;  this.range  =  range;  this.maximumItemAge  =  Integer.MAX_VALUE;  }  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);          [BUGGY]  if(domain!=  null)  {  this.domain  =  domain;  this.range  =  range;  this.maximumItemAge  =  Integer.MAX_VALUE;  }  [BUGGY]          this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	replace	if(domain!=  null)  {  this.domain  =  domain;  this.range  =  range;  this.maximumItemAge  =  Integer.MAX_VALUE;  }	  	compilable	  [FE]  IllegalArgumentException	24710	1
166370	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.range  =  range;  if(this.range  ==  null)  {  this.range  =  range;  }  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.range  =  range;  if(this.range  ==  null)  {  this.range  =  range;  }	  this.range    =    range;    if(this.range!=    null)    {    this.range    =    range;    }    	compilable	  [FE]  IllegalArgumentException	27729	1
166371	[BUG]  [BUGGY]  this.range  =  range;  if(this.range  ==  null)  {  this.range  =  range;  }  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.range  =  range;  if(this.range  ==  null)  {  this.range  =  range;  }  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.range  =  range;  if(this.range  ==  null)  {  this.range  =  range;  }	  this.range    =    range;    if(this.range!=    null)    {    this.range    =    range;    }    	compilable	  [FE]  IllegalArgumentException	27729	1
165075	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.maximumItemCount  =  2000  -  1;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.maximumItemCount  =  2000  -  1;	  	compilable	  [FE]  IllegalArgumentException	27513	1
165076	[BUG]  [BUGGY]  this.maximumItemCount  =  2000  -  1;  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.maximumItemCount  =  2000  -  1;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.maximumItemCount  =  2000  -  1;	  	compilable	  [FE]  IllegalArgumentException	27513	1
499400	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;	  	compilable	  [FE]  IllegalArgumentException	83234	1
499401	[BUG]  [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  &  b.toString()  :  null;	  	compilable	  [FE]  IllegalArgumentException	83234	1
499477	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    	compilable	  [FE]  IllegalArgumentException	83247	1
499478	[BUG]  [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    	compilable	  [FE]  IllegalArgumentException	83247	1
8318	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( "Requires  start  <=  start.   ");  [BUGGY]          throw  new  IllegalArgumentException(         "Requires  start  <=  end.         ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  start  <=  start.   ");	  	compilable	  [FE]  IllegalArgumentException	1387	1
8319	[BUG]  [BUGGY]  System.err.println( "Requires  start  <=  start.   ");  [FE]  IllegalArgumentException  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( "Requires  start  <=  start.   ");  [BUGGY]          throw  new  IllegalArgumentException(         "Requires  start  <=  end.         ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  start  <=  start.   ");	  	compilable	  [FE]  IllegalArgumentException	1387	1
499437	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedAgedItems(true);  this.data.add(item);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(true);  this.data.add(item);	  	compilable	  [FE]  IllegalArgumentException	83240	1
499438	[BUG]  [BUGGY]  //  removedAgedItems(true);  this.data.add(item);  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedAgedItems(true);  this.data.add(item);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(true);  this.data.add(item);	  	compilable	  [FE]  IllegalArgumentException	83240	1
166400	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.domain  =  DEFAULT_DOMAIN_DESCRIPTION  +  DEFAULT_RANGE_DESCRIPTION;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.domain  =  DEFAULT_DOMAIN_DESCRIPTION  +  DEFAULT_RANGE_DESCRIPTION;	  	compilable	  [FE]  IllegalArgumentException	27734	1
166401	[BUG]  [BUGGY]  this.domain  =  DEFAULT_DOMAIN_DESCRIPTION  +  DEFAULT_RANGE_DESCRIPTION;  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.domain  =  DEFAULT_DOMAIN_DESCRIPTION  +  DEFAULT_RANGE_DESCRIPTION;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.domain  =  DEFAULT_DOMAIN_DESCRIPTION  +  DEFAULT_RANGE_DESCRIPTION;	  	compilable	  [FE]  IllegalArgumentException	27734	1
499406	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedItems(false);  b.addChangeListener(this);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedItems(false);  b.addChangeListener(this);	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
499407	[BUG]  [BUGGY]  //  removedItems(false);  b.addChangeListener(this);  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedItems(false);  b.addChangeListener(this);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedItems(false);  b.addChangeListener(this);	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
499436	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedAllAgedItems(false);  this.data.add(item);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllAgedItems(false);  this.data.add(item);	  	compilable	  [FE]  IllegalArgumentException	83240	1
499437	[BUG]  [BUGGY]  //  removedAllAgedItems(false);  this.data.add(item);  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedAllAgedItems(false);  this.data.add(item);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllAgedItems(false);  this.data.add(item);	  	compilable	  [FE]  IllegalArgumentException	83240	1
143043	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);          [BUGGY]  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  4;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	add	this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  4;	  	compilable	  [FE]  IllegalArgumentException	23841	1
143044	[BUG]  [BUGGY]  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  4;  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);          [BUGGY]  this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  4;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	replace	this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  4;	  	compilable	  [FE]  IllegalArgumentException	23841	1
499478	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    	compilable	  [FE]  IllegalArgumentException	83247	1
499479	[BUG]  [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  rang  &&  item.getPeriod().getTime().equals(this.timePeriodClass.getName()))  {  this.data.remove	  removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    	compilable	  [FE]  IllegalArgumentException	83247	1
499405	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
499406	[BUG]  [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  if(notify)  {  fireSeriesChanged();  }  ;?  boolean  notify  =  b.toString()!=  this.data.get(item);  b.toString();  b.toString();	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
499406	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  this.data.getAgedItems(true);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.getAgedItems(true);	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
499407	[BUG]  [BUGGY]  //  this.data.getAgedItems(true);  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  this.data.getAgedItems(true);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.getAgedItems(true);	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
166333	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  if(this.range!=  null)  {  this.domain  =  range;  }  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	if(this.range!=  null)  {  this.domain  =  range;  }	  this.maximumItemAge    =    Long.MAX_VALUE;    	compilable	  [FE]  IllegalArgumentException	27723	1
166334	[BUG]  [BUGGY]  if(this.range!=  null)  {  this.domain  =  range;  }  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  if(this.range!=  null)  {  this.domain  =  range;  }  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	if(this.range!=  null)  {  this.domain  =  range;  }	  this.maximumItemAge    =    Long.MAX_VALUE;    	compilable	  [FE]  IllegalArgumentException	27723	1
499412	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  this.data.getAgedItems(false);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.getAgedItems(false);	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    }    	compilable	  [FE]  IllegalArgumentException	83236	1
499413	[BUG]  [BUGGY]  //  this.data.getAgedItems(false);  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  this.data.getAgedItems(false);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.getAgedItems(false);	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    }    	compilable	  [FE]  IllegalArgumentException	83236	1
499442	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedAgedItems(true,  true);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(true,  true);	  //    removedAgedItems(false);    	compilable	  [FE]  IllegalArgumentException	83241	1
499443	[BUG]  [BUGGY]  //  removedAgedItems(true,  true);  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedAgedItems(true,  true);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(true,  true);	  //    removedAgedItems(false);    	compilable	  [FE]  IllegalArgumentException	83241	1
670515	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();          [BUGGY]  long  max  =  getTimePeriod(getItemCount()  /  2).getSerialIndex();  [BUGGY]          boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	740	740	1	add	long  max  =  getTimePeriod(getItemCount()  /  2).getSerialIndex();	  	compilable	  [FE]  IllegalArgumentException	111753	1
670516	[BUG]  [BUGGY]  long  max  =  getTimePeriod(getItemCount()  /  2).getSerialIndex();  [FE]  IllegalArgumentException  [CONTEXT]          public  void  removeAgedItems(boolean  notify)  {    if  (getItemCount()  >  1)  {  long  latest  =  getTimePeriod(getItemCount()  -  1).getSerialIndex();          [BUGGY]  long  max  =  getTimePeriod(getItemCount()  /  2).getSerialIndex();  [BUGGY]          boolean  removed  =  false;  while  ((latest  -  getTimePeriod(0).getSerialIndex())  >  this.maximumItemAge)  {  this.data.remove(0);  removed  =  true;  }  if  (removed  &&  notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  removeAgedItems  [RETURN_TYPE]  void  boolean  notify  [VARIABLES]  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  notify  removed  long  latest  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	740	740	1	replace	long  max  =  getTimePeriod(getItemCount()  /  2).getSerialIndex();	  	compilable	  [FE]  IllegalArgumentException	111753	1
166160	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.maximumItemCount  =  maximumItemCount  *  1;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.maximumItemCount  =  maximumItemCount  *  1;	  this.maximumItemCount    =    maximumItemCount    /    1;    	compilable	  [FE]  IllegalArgumentException	27694	1
166161	[BUG]  [BUGGY]  this.maximumItemCount  =  maximumItemCount  *  1;  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.maximumItemCount  =  maximumItemCount  *  1;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.maximumItemCount  =  maximumItemCount  *  1;	  this.maximumItemCount    =    maximumItemCount    /    1;    	compilable	  [FE]  IllegalArgumentException	27694	1
166226	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.maximumItemCount  =  Math.max(this.maximumItemCount,  12);  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.maximumItemCount  =  Math.max(this.maximumItemCount,  12);	  this.maximumItemCount    =    Math.max(this.maximumItemCount,    10);    	compilable	  [FE]  IllegalArgumentException	27705	1
166227	[BUG]  [BUGGY]  this.maximumItemCount  =  Math.max(this.maximumItemCount,  12);  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.maximumItemCount  =  Math.max(this.maximumItemCount,  12);  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.maximumItemCount  =  Math.max(this.maximumItemCount,  12);	  this.maximumItemCount    =    Math.max(this.maximumItemCount,    10);    	compilable	  [FE]  IllegalArgumentException	27705	1
499484	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.remov  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.remov	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	83248	1
499485	[BUG]  [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.remov  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.remov  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(true);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod().getTime().equals(this.data.get(item.getPeriod()))  {  this.data.remov	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	83248	1
499436	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  this.data.add(item);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  this.data.add(item);	  	compilable	  [FE]  IllegalArgumentException	83240	1
499437	[BUG]  [BUGGY]  //  this.data.add(item);  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  this.data.add(item);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  this.data.add(item);	  	compilable	  [FE]  IllegalArgumentException	83240	1
499471	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  if(added)  {  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  }  ;  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	if(added)  {  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  }  ;	  	compilable	  [FE]  IllegalArgumentException	83246	1
499472	[BUG]  [BUGGY]  if(added)  {  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  }  ;  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  if(added)  {  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  }  ;  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	if(added)  {  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  }  ;	  	compilable	  [FE]  IllegalArgumentException	83246	1
499473	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  if(added)  {  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  }  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	if(added)  {  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  }	  	compilable	  [FE]  IllegalArgumentException	83246	1
499474	[BUG]  [BUGGY]  if(added)  {  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  }  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  if(added)  {  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  }  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	if(added)  {  removeAgedItems(false);  if(notify)  {  fireSeriesChanged();  }  ;  }	  	compilable	  [FE]  IllegalArgumentException	83246	1
499484	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  limb  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  limb  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	83248	1
499485	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  limb  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  limb  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  limb  &&  item.getDataItemCount()  >  this.maximumItemCount);  b.append(item.getPeriod().toString());	  //    deleteAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    &&    item.getDataItemCount()    >    this.maximumItemCount);    b.append(item.getPeriod().toString());    	compilable	  [FE]  IllegalArgumentException	83248	1
9374	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( "Requires  end  >=  0.0 ");  [BUGGY]          throw  new  IllegalArgumentException(         "Requires  start  <=  end.         ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  end  >=  0.0 ");	  System.err.println(   "Requires    start    <=    0       ".length());    	compilable	  [FE]  AssertionFailedError	1563	1
9375	[BUG]  [BUGGY]  System.err.println( "Requires  end  >=  0.0 ");  [FE]  AssertionFailedError  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( "Requires  end  >=  0.0 ");  [BUGGY]          throw  new  IllegalArgumentException(         "Requires  start  <=  end.         ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  end  >=  0.0 ");	  System.err.println(   "Requires    start    <=    0       ".length());    	compilable	  [FE]  AssertionFailedError	1563	1
166406	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.maximumItemCount  =  Integer.MIN_VALUE  +  2;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	this.maximumItemCount  =  Integer.MIN_VALUE  +  2;	  this.maximumItemCount    =    Integer.MIN_VALUE    -    1;    	compilable	  [FE]  IllegalArgumentException	27735	1
166407	[BUG]  [BUGGY]  this.maximumItemCount  =  Integer.MIN_VALUE  +  2;  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  this.maximumItemCount  =  Integer.MIN_VALUE  +  2;  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	this.maximumItemCount  =  Integer.MIN_VALUE  +  2;	  this.maximumItemCount    =    Integer.MIN_VALUE    -    1;    	compilable	  [FE]  IllegalArgumentException	27735	1
499477	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  }  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  }	  removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    	compilable	  [FE]  IllegalArgumentException	83247	1
499478	[BUG]  [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  }  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  }  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  if(notify)  {  fireSeriesChanged();  &&  item.getPeriod()!=  this.data.get(item.getPeriod()))  {  this.data.remove(0);  }	  removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    	compilable	  [FE]  IllegalArgumentException	83247	1
4189	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( "Usage:  failed  to  add  cloned  item. ");  [BUGGY]          }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Usage:  failed  to  add  cloned  item. ");	  System.err.println(   ",Unable    to    add    cloned    item.   ");    	compilable	  [FE]  AssertionFailedError	699	1
4190	[BUG]  [BUGGY]  System.err.println( "Usage:  failed  to  add  cloned  item. ");  [FE]  AssertionFailedError  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( "Usage:  failed  to  add  cloned  item. ");  [BUGGY]          }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Usage:  failed  to  add  cloned  item. ");	  System.err.println(   ",Unable    to    add    cloned    item.   ");    	compilable	  [FE]  AssertionFailedError	699	1
148257	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);          [BUGGY]  this.data  =  new  java.util.ArrayList(101);  [BUGGY]          this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	add	this.data  =  new  java.util.ArrayList(101);	  	compilable	  [FE]  IllegalArgumentException	24710	1
148258	[BUG]  [BUGGY]  this.data  =  new  java.util.ArrayList(101);  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);          [BUGGY]  this.data  =  new  java.util.ArrayList(101);  [BUGGY]          this.domain  =  domain;  this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	173	173	1	replace	this.data  =  new  java.util.ArrayList(101);	  	compilable	  [FE]  IllegalArgumentException	24710	1
469634	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          b.append(         "You  are  attempting  to  add  an  observation  for           ");  b.append(         "the  time  period           ");  b.append(item.getPeriod().toString());  b.append(         "  but  the  series  already  contains  an  observation         ");  b.append(         "  for  that  time  period.  Duplicates  are  not           ");  b.append(         "permitted.Try  using  the  addOrUpdate()  method.         ");  throw  new  SeriesException(b.toString());  }  }  }          [BUGGY]  if(item.getPeriod().equals( "Period "))  {  [BUGGY]            if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	534	534	1	add	if(item.getPeriod().equals( "Period "))  {	  if(item.getPeriod().equals(   "/   "))    {    	compilable	  [FE]  IllegalArgumentException	78273	1
469635	[BUG]  [BUGGY]  if(item.getPeriod().equals( "Period "))  {  [FE]  IllegalArgumentException  [CONTEXT]          b.append(         "You  are  attempting  to  add  an  observation  for           ");  b.append(         "the  time  period           ");  b.append(item.getPeriod().toString());  b.append(         "  but  the  series  already  contains  an  observation         ");  b.append(         "  for  that  time  period.  Duplicates  are  not           ");  b.append(         "permitted.Try  using  the  addOrUpdate()  method.         ");  throw  new  SeriesException(b.toString());  }  }  }          [BUGGY]  if(item.getPeriod().equals( "Period "))  {  [BUGGY]            if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	534	534	1	replace	if(item.getPeriod().equals( "Period "))  {	  if(item.getPeriod().equals(   "/   "))    {    	compilable	  [FE]  IllegalArgumentException	78273	1
499442	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedAgedItems(false,  item);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(false,  item);	  //    removedAgedItems(false);    	compilable	  [FE]  IllegalArgumentException	83241	1
499443	[BUG]  [BUGGY]  //  removedAgedItems(false,  item);  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedAgedItems(false,  item);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(false,  item);	  //    removedAgedItems(false);    	compilable	  [FE]  IllegalArgumentException	83241	1
499437	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedAgedItems(true);  item.addChangeListener(this);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAgedItems(true);  item.addChangeListener(this);	  	compilable	  [FE]  IllegalArgumentException	83240	1
499438	[BUG]  [BUGGY]  //  removedAgedItems(true);  item.addChangeListener(this);  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedAgedItems(true);  item.addChangeListener(this);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAgedItems(true);  item.addChangeListener(this);	  	compilable	  [FE]  IllegalArgumentException	83240	1
499478	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(false);  b.addChangeListener(this,  item);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  deleteAgedItems(false);  b.addChangeListener(this,  item);	  removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    	compilable	  [FE]  IllegalArgumentException	83247	1
499479	[BUG]  [BUGGY]  //  deleteAgedItems(false);  b.addChangeListener(this,  item);  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  deleteAgedItems(false);  b.addChangeListener(this,  item);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  deleteAgedItems(false);  b.addChangeListener(this,  item);	  removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    	compilable	  [FE]  IllegalArgumentException	83247	1
166365	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  if(timePeriodClass!=  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range  +  DEFAULT_DOMAIN_DESCRIPTION;  }  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	add	if(timePeriodClass!=  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range  +  DEFAULT_DOMAIN_DESCRIPTION;  }	  	compilable	  [FE]  IllegalArgumentException	27728	1
166366	[BUG]  [BUGGY]  if(timePeriodClass!=  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range  +  DEFAULT_DOMAIN_DESCRIPTION;  }  [FE]  IllegalArgumentException  [CONTEXT]          public  TimeSeries(Comparable  name,  String  domain,  String  range,  Class  timePeriodClass)  {  super(name);  this.domain  =  domain;          [BUGGY]  if(timePeriodClass!=  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range  +  DEFAULT_DOMAIN_DESCRIPTION;  }  [BUGGY]          this.range  =  range;  this.timePeriodClass  =  timePeriodClass;  this.data  =  new  java.util.ArrayList();  this.maximumItemCount  =  Integer.MAX_VALUE;  this.maximumItemAge  =  Long.MAX_VALUE;  }  [CLASS]  TimeSeries  [METHOD]  <init>  [RETURN_TYPE]  Class)  Comparable  name  String  domain  String  range  Class  timePeriodClass  [VARIABLES]  Comparable  name  boolean  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  domain  range  long  maximumItemAge  serialVersionUID  int  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	174	174	1	replace	if(timePeriodClass!=  null)  {  this.domain  =  domain;  }  else  {  this.range  =  range  +  DEFAULT_DOMAIN_DESCRIPTION;  }	  	compilable	  [FE]  IllegalArgumentException	27728	1
11775	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( "Requires  start  ->  0   ");System.err.println( "Requires  start  ->  0   ");  [BUGGY]          throw  new  IllegalArgumentException(         "Requires  start  <=  end.         ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  start  ->  0   ");System.err.println( "Requires  start  ->  0   ");	  	compilable	  [FE]  IllegalArgumentException	1963	1
11776	[BUG]  [BUGGY]  System.err.println( "Requires  start  ->  0   ");System.err.println( "Requires  start  ->  0   ");  [FE]  IllegalArgumentException  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( "Requires  start  ->  0   ");System.err.println( "Requires  start  ->  0   ");  [BUGGY]          throw  new  IllegalArgumentException(         "Requires  start  <=  end.         ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  start  ->  0   ");System.err.println( "Requires  start  ->  0   ");	  	compilable	  [FE]  IllegalArgumentException	1963	1
499406	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(false);  b.addChangeListener(this,  item);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(false);  b.addChangeListener(this,  item);	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
499407	[BUG]  [BUGGY]  //  removeAgedItems(false);  b.addChangeListener(this,  item);  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(false);  b.addChangeListener(this,  item);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(false);  b.addChangeListener(this,  item);	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
499442	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedAllAgedItems(true,  true);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removedAllAgedItems(true,  true);	  //    removedAgedItems(false);    	compilable	  [FE]  IllegalArgumentException	83241	1
499443	[BUG]  [BUGGY]  //  removedAllAgedItems(true,  true);  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removedAllAgedItems(true,  true);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removedAllAgedItems(true,  true);	  //    removedAgedItems(false);    	compilable	  [FE]  IllegalArgumentException	83241	1
499406	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(true);  b.addChangeListener(this,  item);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	add	//  removeAgedItems(true);  b.addChangeListener(this,  item);	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
499407	[BUG]  [BUGGY]  //  removeAgedItems(true);  b.addChangeListener(this,  item);  [FE]  IllegalArgumentException  [CONTEXT]          throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }          [BUGGY]  //  removeAgedItems(true);  b.addChangeListener(this,  item);  [BUGGY]            if  (notify)  {  fireSeriesChanged();  }  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	540	542	1	replace	//  removeAgedItems(true);  b.addChangeListener(this,  item);	  //    removeAgedItems(false);    if(notify)    {    fireSeriesChanged();    }    ;    }?    b.toString()    :    null;    	compilable	  [FE]  IllegalArgumentException	83235	1
11774	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( "Requires  start  %  2  exceeded  0   ");System.err.println( "Requires  start  %  2  exceeded  0   ");  [BUGGY]          throw  new  IllegalArgumentException(         "Requires  start  <=  end.         ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	add	System.err.println( "Requires  start  %  2  exceeded  0   ");System.err.println( "Requires  start  %  2  exceeded  0   ");	  	compilable	  [FE]  IllegalArgumentException	1963	1
11775	[BUG]  [BUGGY]  System.err.println( "Requires  start  %  2  exceeded  0   ");System.err.println( "Requires  start  %  2  exceeded  0   ");  [FE]  IllegalArgumentException  [CONTEXT]          throws  CloneNotSupportedException  {  if  (start  <  0)  {  throw  new  IllegalArgumentException(         "Requires  start  >=  0.         ");  }  if  (end  <  start)  {          [BUGGY]  System.err.println( "Requires  start  %  2  exceeded  0   ");System.err.println( "Requires  start  %  2  exceeded  0   ");  [BUGGY]          throw  new  IllegalArgumentException(         "Requires  start  <=  end.         ");  }  TimeSeries  copy  =  (TimeSeries)  super.clone();  copy.data  =  new  java.util.ArrayList();  if  (this.data.size()  >  0)  {  for  (int  index  =  start;  index  <=  end;  index++)  {  TimeSeriesDataItem  item  =  (TimeSeriesDataItem)  this.data.get(index);  TimeSeriesDataItem  clone  =  (TimeSeriesDataItem)  item.clone();  try  {  [CLASS]  TimeSeries  [METHOD]  createCopy  [RETURN_TYPE]  TimeSeries  int  start  int  end  [VARIABLES]  TimeSeries  copy  boolean  TimeSeriesDataItem  clone  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  SeriesException  e  long  index  latest  maximumItemAge  periods  serialVersionUID  int  count  end  i  index  maximum  maximumItemCount  start  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.7071067811865475	880	880	1	replace	System.err.println( "Requires  start  %  2  exceeded  0   ");System.err.println( "Requires  start  %  2  exceeded  0   ");	  	compilable	  [FE]  IllegalArgumentException	1963	1
