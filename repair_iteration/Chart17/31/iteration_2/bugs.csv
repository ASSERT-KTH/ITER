bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.data.remove(0);  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    b.append(   "You  are  attempting  to  add  an  observation  for     ");  b.append(   "the  time  period     ");  b.append(item.getPeriod().toString());  b.append(   "  but  the  series  already  contains  an  observation   ");  b.append(   "  for  that  time  period.  Duplicates  are  not     ");  b.append(   "permitted.Try  using  the  addOrUpdate()  method.   ");  throw  new  SeriesException(b.toString());  }  }  }    [BUGGY]  this.data.remove(0);  [BUGGY]    if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	534	534	1	replace	this.data.remove(0);	      if(this.data!=    null)    {    if(getItemCount()    >    this.maximumItemCount)    {    this.data.remove(0);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
2	[BUG]  [BUGGY]  this.data.add(item);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    b.append(   "You  are  attempting  to  add  an  observation  for     ");  b.append(   "the  time  period     ");  b.append(item.getPeriod().toString());  b.append(   "  but  the  series  already  contains  an  observation   ");  b.append(   "  for  that  time  period.  Duplicates  are  not     ");  b.append(   "permitted.Try  using  the  addOrUpdate()  method.   ");  throw  new  SeriesException(b.toString());  }  }  }    [BUGGY]  this.data.add(item);  [BUGGY]    if  (added)  {  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	534	534	1	replace	this.data.add(item);	      if(this.data!=    null)    {    if(getItemCount()    >    this.maximumItemCount)    {    this.data.add(item);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  if(this.data!=  null  ||  this.data.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    b.append(   "You  are  attempting  to  add  an  observation  for     ");  b.append(   "the  time  period     ");  b.append(item.getPeriod().toString());  b.append(   "  but  the  series  already  contains  an  observation   ");  b.append(   "  for  that  time  period.  Duplicates  are  not     ");  b.append(   "permitted.Try  using  the  addOrUpdate()  method.   ");  throw  new  SeriesException(b.toString());  }  }  }    [BUGGY]  if(this.data!=  null  ||  this.data.size()  ==  0)  {  [BUGGY]      if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	534	534	1	replace	if(this.data!=  null  ||  this.data.size()  ==  0)  {	  if(this.data!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
4	[BUG]  [BUGGY]  if(this.data  ==  null)  {  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    b.append(   "You  are  attempting  to  add  an  observation  for     ");  b.append(   "the  time  period     ");  b.append(item.getPeriod().toString());  b.append(   "  but  the  series  already  contains  an  observation   ");  b.append(   "  for  that  time  period.  Duplicates  are  not     ");  b.append(   "permitted.Try  using  the  addOrUpdate()  method.   ");  throw  new  SeriesException(b.toString());  }  }  }    [BUGGY]  if(this.data  ==  null)  {  [BUGGY]      if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	534	534	1	replace	if(this.data  ==  null)  {	  if(this.data!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
5	[BUG]  [BUGGY]  if(this.data!=  null  ||  this.data.size()  >  0)  {  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException    [CONTEXT]    b.append(   "You  are  attempting  to  add  an  observation  for     ");  b.append(   "the  time  period     ");  b.append(item.getPeriod().toString());  b.append(   "  but  the  series  already  contains  an  observation   ");  b.append(   "  for  that  time  period.  Duplicates  are  not     ");  b.append(   "permitted.Try  using  the  addOrUpdate()  method.   ");  throw  new  SeriesException(b.toString());  }  }  }    [BUGGY]  if(this.data!=  null  ||  this.data.size()  >  0)  {  [BUGGY]      if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	534	534	1	replace	if(this.data!=  null  ||  this.data.size()  >  0)  {	  if(this.data!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
