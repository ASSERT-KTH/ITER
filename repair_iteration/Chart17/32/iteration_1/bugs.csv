bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    this.data.remove(0);  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException  [CONTEXT]  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {    [BUGGY]    this.data.remove(0);  [BUGGY]  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	536	536	1	replace	    this.data.remove(0);		non-compiled	[CE]  illegal  start  of  type	64	None	add
2	[BUG]  [BUGGY]    b.append( "  but  the  series  already  contains  an  observation ");  [CE]  illegal  start  of  type  [FE]      IllegalArgumentException  [CONTEXT]  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {    [BUGGY]    b.append( "  but  the  series  already  contains  an  observation ");  [BUGGY]  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	536	536	1	replace	    b.append( "  but  the  series  already  contains  an  observation ");		non-compiled	[CE]  illegal  start  of  type	64	None	add
3	[BUG]  [BUGGY]    b.append( "  but  the  series  already  contains  an  observation. ");  [CE]  illegal  start  of  type  [FE]        IllegalArgumentException  [CONTEXT]  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {    [BUGGY]    b.append( "  but  the  series  already  contains  an  observation. ");  [BUGGY]  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	536	536	1	replace	    b.append( "  but  the  series  already  contains  an  observation. ");		non-compiled	[CE]  illegal  start  of  type	64	None	add
4	[BUG]  [BUGGY]  if  (getItemCount()  >  this.maximumItemCount  -  1)  {  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException  [CONTEXT]  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {    [BUGGY]  if  (getItemCount()  >  this.maximumItemCount  -  1)  {  [BUGGY]  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	536	536	1	replace	if  (getItemCount()  >  this.maximumItemCount  -  1)  {	if  (getItemCount()  >  this.maximumItemCount)  {  	non-compiled	[CE]  illegal  start  of  type	63	None	replace
5	[BUG]  [BUGGY]  if  (getItemCount()  <  this.maximumItemCount)  {  [CE]  illegal  start  of  type  [FE]      IllegalArgumentException  [CONTEXT]  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {    [BUGGY]  if  (getItemCount()  <  this.maximumItemCount)  {  [BUGGY]  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	536	536	1	replace	if  (getItemCount()  <  this.maximumItemCount)  {	if  (getItemCount()  >  this.maximumItemCount)  {  	non-compiled	[CE]  illegal  start  of  type	63	None	replace
6	[BUG]  [BUGGY]  if(getItemCount()  >  this.maximumItemAge)  {  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException  [CONTEXT]  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {    [BUGGY]  if(getItemCount()  >  this.maximumItemAge)  {  [BUGGY]  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	536	536	1	replace	if(getItemCount()  >  this.maximumItemAge)  {	if  (getItemCount()  >  this.maximumItemCount)  {  	non-compiled	[CE]  illegal  start  of  type	63	None	replace
7	[BUG]  [BUGGY]    this.data.add(item);  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException  [CONTEXT]  b.append(item.getPeriod().toString());  b.append( "  but  the  series  already  contains  an  observation ");  b.append( "  for  that  time  period.  Duplicates  are  not   ");  b.append( "permitted.Try  using  the  addOrUpdate()  method. ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {    [BUGGY]    this.data.add(item);  [BUGGY]  if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	536	536	1	replace	    this.data.add(item);		non-compiled	[CE]  illegal  start  of  type	64	None	add
