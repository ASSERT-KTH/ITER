bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(getItemCount()  >  this.maximumItemAge  ||  this.data!=  null)  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      b.append(item.getPeriod().toString());  b.append(     "  but  the  series  already  contains  an  observation     ");  b.append(     "  for  that  time  period.  Duplicates  are  not       ");  b.append(     "permitted.Try  using  the  addOrUpdate()  method.     ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {        [BUGGY]  if(getItemCount()  >  this.maximumItemAge  ||  this.data!=  null)  {  [BUGGY]      this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	536	536	1	replace	if(getItemCount()  >  this.maximumItemAge  ||  this.data!=  null)  {	  if(getItemCount()    >    this.maximumItemAge    &&    this.data!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
2	[BUG]  [BUGGY]  this.data.add(item.getPeriod().toString());  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      b.append(item.getPeriod().toString());  b.append(     "  but  the  series  already  contains  an  observation     ");  b.append(     "  for  that  time  period.  Duplicates  are  not       ");  b.append(     "permitted.Try  using  the  addOrUpdate()  method.     ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {        [BUGGY]  this.data.add(item.getPeriod().toString());  [BUGGY]      if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	536	536	1	replace	this.data.add(item.getPeriod().toString());	  this.data.remove(item.getPeriod().toString());    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
3	[BUG]  [BUGGY]  if(this.maximumItemAge  >  getItemCount()  -  1)  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      b.append(item.getPeriod().toString());  b.append(     "  but  the  series  already  contains  an  observation     ");  b.append(     "  for  that  time  period.  Duplicates  are  not       ");  b.append(     "permitted.Try  using  the  addOrUpdate()  method.     ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {        [BUGGY]  if(this.maximumItemAge  >  getItemCount()  -  1)  {  [BUGGY]      this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	536	536	1	replace	if(this.maximumItemAge  >  getItemCount()  -  1)  {	  if(this.maximumItemAge    >    getItemCount())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
4	[BUG]  [BUGGY]  if(this.maximumItemAge  >=  getItemCount())  {  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      b.append(item.getPeriod().toString());  b.append(     "  but  the  series  already  contains  an  observation     ");  b.append(     "  for  that  time  period.  Duplicates  are  not       ");  b.append(     "permitted.Try  using  the  addOrUpdate()  method.     ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {        [BUGGY]  if(this.maximumItemAge  >=  getItemCount())  {  [BUGGY]      this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	536	536	1	replace	if(this.maximumItemAge  >=  getItemCount())  {	  if(this.maximumItemAge    >    getItemCount())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
5	[BUG]  [BUGGY]  this.data.remove(item.getPeriod());  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      b.append(item.getPeriod().toString());  b.append(     "  but  the  series  already  contains  an  observation     ");  b.append(     "  for  that  time  period.  Duplicates  are  not       ");  b.append(     "permitted.Try  using  the  addOrUpdate()  method.     ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {        [BUGGY]  this.data.remove(item.getPeriod());  [BUGGY]      if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	536	536	1	replace	this.data.remove(item.getPeriod());	  this.data.remove(item);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
6	[BUG]  [BUGGY]  this.data.add(item,  this.maximumItemCount,  this.periodClass);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      b.append(item.getPeriod().toString());  b.append(     "  but  the  series  already  contains  an  observation     ");  b.append(     "  for  that  time  period.  Duplicates  are  not       ");  b.append(     "permitted.Try  using  the  addOrUpdate()  method.     ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {        [BUGGY]  this.data.add(item,  this.maximumItemCount,  this.periodClass);  [BUGGY]      if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	536	536	1	replace	this.data.add(item,  this.maximumItemCount,  this.periodClass);	  this.data.add(item,    this.maximumItemCount);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
7	[BUG]  [BUGGY]  this.data.add(item,  this.maximumItemCount  -  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      b.append(item.getPeriod().toString());  b.append(     "  but  the  series  already  contains  an  observation     ");  b.append(     "  for  that  time  period.  Duplicates  are  not       ");  b.append(     "permitted.Try  using  the  addOrUpdate()  method.     ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {        [BUGGY]  this.data.add(item,  this.maximumItemCount  -  1);  [BUGGY]      if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	536	536	1	replace	this.data.add(item,  this.maximumItemCount  -  1);	  this.data.add(item,    this.maximumItemCount);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
8	[BUG]  [BUGGY]  if(getItemCount()  ==  this.maximumItemAge)  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      b.append(item.getPeriod().toString());  b.append(     "  but  the  series  already  contains  an  observation     ");  b.append(     "  for  that  time  period.  Duplicates  are  not       ");  b.append(     "permitted.Try  using  the  addOrUpdate()  method.     ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {        [BUGGY]  if(getItemCount()  ==  this.maximumItemAge)  {  [BUGGY]      this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	536	536	1	replace	if(getItemCount()  ==  this.maximumItemAge)  {	  if(getItemCount()    <    this.maximumItemAge)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
9	[BUG]  [BUGGY]  if(getItemCount()  >  this.data.size()  &&  this.maximumItemAge!=  null)  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      b.append(item.getPeriod().toString());  b.append(     "  but  the  series  already  contains  an  observation     ");  b.append(     "  for  that  time  period.  Duplicates  are  not       ");  b.append(     "permitted.Try  using  the  addOrUpdate()  method.     ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {        [BUGGY]  if(getItemCount()  >  this.data.size()  &&  this.maximumItemAge!=  null)  {  [BUGGY]      this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	536	536	1	replace	if(getItemCount()  >  this.data.size()  &&  this.maximumItemAge!=  null)  {	  if(getItemCount()    >    this.maximumItemAge    &&    this.data!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
10	[BUG]  [BUGGY]  if(item.getItemCount()  >  this.maximumItemAge)  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      b.append(item.getPeriod().toString());  b.append(     "  but  the  series  already  contains  an  observation     ");  b.append(     "  for  that  time  period.  Duplicates  are  not       ");  b.append(     "permitted.Try  using  the  addOrUpdate()  method.     ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {        [BUGGY]  if(item.getItemCount()  >  this.maximumItemAge)  {  [BUGGY]      this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	536	536	1	replace	if(item.getItemCount()  >  this.maximumItemAge)  {	  if(this.maximumItemAge    >    getItemCount())    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
11	[BUG]  [BUGGY]  this.data.add(item,  this.maximumItemAge);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      b.append(item.getPeriod().toString());  b.append(     "  but  the  series  already  contains  an  observation     ");  b.append(     "  for  that  time  period.  Duplicates  are  not       ");  b.append(     "permitted.Try  using  the  addOrUpdate()  method.     ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {        [BUGGY]  this.data.add(item,  this.maximumItemAge);  [BUGGY]      if  (getItemCount()  >  this.maximumItemCount)  {  this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	536	536	1	replace	this.data.add(item,  this.maximumItemAge);	  this.data.add(item,    this.maximumItemCount);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
12	[BUG]  [BUGGY]  if(getItemCount()  >  this.maximumItemAge  &&  item!=  null)  {  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      b.append(item.getPeriod().toString());  b.append(     "  but  the  series  already  contains  an  observation     ");  b.append(     "  for  that  time  period.  Duplicates  are  not       ");  b.append(     "permitted.Try  using  the  addOrUpdate()  method.     ");  throw  new  SeriesException(b.toString());  }  }  }  if  (added)  {        [BUGGY]  if(getItemCount()  >  this.maximumItemAge  &&  item!=  null)  {  [BUGGY]      this.data.remove(0);  }  removeAgedItems(false);//  remove  old  items  if  necessary,  but    if  (notify)  {  fireSeriesChanged();  }  }  [CLASS]  TimeSeries  [METHOD]  add  [RETURN_TYPE]  void  TimeSeriesDataItem  item  boolean  notify  [VARIABLES]  StringBuffer  b  boolean  added  notify  TimeSeriesDataItem  item  Class  timePeriodClass  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  RegularTimePeriod  last  long  maximumItemAge  periods  serialVersionUID  int  count  i  index  maximum  maximumItemCount  	projects/Chart17/source/org/jfree/data/time/TimeSeries.java	0.2182178902359924	536	536	1	replace	if(getItemCount()  >  this.maximumItemAge  &&  item!=  null)  {	  if(getItemCount()    >    this.maximumItemAge    &&    this.data!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
