bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  map.put(entry.getValue(),  values[col]);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  map.put(entry.getValue(),  values[col]);  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  values[col]);	  map.put(entry.getValue(),    col);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
2	[BUG]  [BUGGY]  map.put(entry.getValue(),  col  +  1);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  map.put(entry.getValue(),  col  +  1);  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  col  +  1);	  map.put(entry.getValue(),    col);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
3	[BUG]  [BUGGY]  map.put(entry.getValue(),  data[col]);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  map.put(entry.getValue(),  data[col]);  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  data[col]);	  map.put(entry.getValue(),    col);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
4	[BUG]  [BUGGY]  map.put(entry.getValue(),  value);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  map.put(entry.getValue(),  value);  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  value);	  map.put(entry.getValue(),    col);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
5	[BUG]  [BUGGY]  map.put(entry.getValue(),  entries[col]);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  map.put(entry.getValue(),  entries[col]);  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  entries[col]);	  map.put(entry.getValue(),    col);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
6	[BUG]  [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
7	[BUG]  [BUGGY]  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
8	[BUG]  [BUGGY]  null  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  null  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	null  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
9	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  maps.put(entry.getKey(),  values[col]);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  maps.put(entry.getKey(),  values[col]);  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue()  -  1;  maps.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
10	[BUG]  [BUGGY]  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
11	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
12	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  <  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  <  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  -  1;  col  <  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
13	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
14	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
15	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
16	[BUG]  [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  <  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  <  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getKey().intValue();  col  <  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
17	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
18	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
19	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
20	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
21	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
22	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  <identifier>  expected  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
23	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(keys,  values[col]);  }  [CE]  <identifier>  expected  [FE]                                ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(keys,  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(keys,  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
24	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  mapping.put(entry.getKey(),  values[col]);  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  mapping.put(entry.getKey(),  values[col]);  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue()  -  1;  mapping.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getValue().intValue();    mapping.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
25	[BUG]  [BUGGY]  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getValue().intValue();    mapping.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
26	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue()  +  1;  mapping.put(entry.getKey(),  values[col]);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  final  int  col  =  entry.getValue().intValue()  +  1;  mapping.put(entry.getKey(),  values[col]);  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue()  +  1;  mapping.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getValue().intValue();    mapping.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
27	[BUG]  [BUGGY]  null  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  null  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	null  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getValue().intValue();    mapping.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
28	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  map.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  map.put(entry.getKey(),  values[col]);  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue()  -  1;  map.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getValue().intValue();    mapping.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
29	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  map.put(entry.getKey(),  values[col].intValue());  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  map.put(entry.getKey(),  values[col].intValue());  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue()  -  1;  map.put(entry.getKey(),  values[col].intValue());	  final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col].intValue());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
30	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue()  +  1;  map.put(entry.getKey(),  values[col].intValue());  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  final  int  col  =  entry.getValue().intValue()  +  1;  map.put(entry.getKey(),  values[col].intValue());  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue()  +  1;  map.put(entry.getKey(),  values[col].intValue());	  final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col].intValue());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
31	[BUG]  [BUGGY]  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());	  final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col].intValue());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
32	[BUG]  [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }	  final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col].intValue());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
33	[BUG]  [BUGGY]  null  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  null  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	null  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());	  final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col].intValue());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
34	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING	  for(final    int    col    =    entry.getValue().intValue();    col!=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  <identifier>  expected	5	None	replace
35	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING	  for(final    int    col    =    entry.getValue().intValue();    col!=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  <identifier>  expected	5	None	replace
36	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()	  for(final    int    col    =    entry.getValue().intValue();    col!=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
37	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY	  for(final    int    col    =    entry.getValue().intValue();    col!=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
38	[BUG]  [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getKey().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING	  for(final    int    col    =    entry.getValue().intValue();    col!=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
39	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length();  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()	  for(final    int    col    =    entry.getValue().intValue();    col!=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
40	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING	  for(final    int    col    =    entry.getValue().intValue();    col!=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
41	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
42	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  <  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  <  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  -  1;  col  <  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
43	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
44	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
45	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
46	[BUG]  [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  <  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  <  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getKey().intValue();  col  <  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
47	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
48	[BUG]  [BUGGY]  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
49	[BUG]  [BUGGY]  Map.Entry  <  String,  Integer>  entry  =  map.entrySet().iterator().next();  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  Map.Entry  <  String,  Integer>  entry  =  map.entrySet().iterator().next();  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	Map.Entry  <  String,  Integer>  entry  =  map.entrySet().iterator().next();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
50	[BUG]  [BUGGY]  final  int  col  =  entry.getValue();  map.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  final  int  col  =  entry.getValue();  map.put(entry.getKey(),  values[col]);  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue();  map.put(entry.getKey(),  values[col]);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
51	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  final  int  col  =  entry.getValue().intValue();  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
52	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
53	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
54	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
55	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
56	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
57	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
58	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
59	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
60	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
61	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
62	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col!=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col!=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col!=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
63	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().longValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().longValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().longValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
64	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  2;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  2;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  -  2;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
65	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
66	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length();  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
67	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
68	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
69	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
70	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
71	[BUG]  [BUGGY]  final  int  col  =  entry.getColumn().intValue();  map.put(entry.getKey(),  values[col]);  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  final  int  col  =  entry.getColumn().intValue();  map.put(entry.getKey(),  values[col]);  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getColumn().intValue();  map.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
72	[BUG]  [BUGGY]  final  int  col  =  entry.getColumnNumber().intValue();  map.put(entry.getKey(),  values[col]);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  final  int  col  =  entry.getColumnNumber().intValue();  map.put(entry.getKey(),  values[col]);  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getColumnNumber().intValue();  map.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
73	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue()  +  1;  map.put(entry.getKey(),  values[col]);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  final  int  col  =  entry.getValue().intValue()  +  1;  map.put(entry.getKey(),  values[col]);  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue()  +  1;  map.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
74	[BUG]  [BUGGY]  map.put(entry.getKey(),  valueValues[col]);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  map.put(entry.getKey(),  valueValues[col]);  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  valueValues[col]);	  map.put(entry.getKey(),    col);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
75	[BUG]  [BUGGY]  map.put(entry.getKey(),  values[col].intValue());  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  map.put(entry.getKey(),  values[col].intValue());  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  values[col].intValue());	  map.put(entry.getKey(),    col);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
76	[BUG]  [BUGGY]  map.put(entry.getName(),  col);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  map.put(entry.getName(),  col);  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getName(),  col);	  map.put(entry.getKey(),    col);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
77	[BUG]  [BUGGY]  map.put(entry.getKey(),  values[col],  col);  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  map.put(entry.getKey(),  values[col],  col);  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  values[col],  col);	  map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
78	[BUG]  [BUGGY]  map.put(entry.getKey(),  values[col  +  1]);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  map.put(entry.getKey(),  values[col  +  1]);  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  values[col  +  1]);	  map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
79	[BUG]  [BUGGY]  map.put(entry.getKey(),  valueNames[col]);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  map.put(entry.getKey(),  valueNames[col]);  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  valueNames[col]);	  map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
80	[BUG]  [BUGGY]  map.put(entry.getKey(),  values[col]  +  1);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  map.put(entry.getKey(),  values[col]  +  1);  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  values[col]  +  1);	  map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
81	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
82	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
83	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
84	[BUG]  [BUGGY]  map.put(entry.getKey(),  this.values[col]);  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  map.put(entry.getKey(),  this.values[col]);  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  this.values[col]);	  map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
85	[BUG]  [BUGGY]  map.put(entry.getKey(),  value);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  map.put(entry.getKey(),  value);  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  value);	  map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
86	[BUG]  [BUGGY]  map.put(entry.getKey(),  new  Integer(values[col]));  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  map.put(entry.getKey(),  new  Integer(values[col]));  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  new  Integer(values[col]));	  map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
87	[BUG]  [BUGGY]  if(values!=  null)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  if(values!=  null)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(values!=  null)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
88	[BUG]  [BUGGY]  if(values!=  null)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  if(values!=  null)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(values!=  null)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
89	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col!=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col!=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col!=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
90	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  -  1;  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
91	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
92	[BUG]  [BUGGY]  map.put(entry.getKey(),  data[col]);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  map.put(entry.getKey(),  data[col]);  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  data[col]);	  map.put(entry.getKey(),    col);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
93	[BUG]  [BUGGY]  map.put(entry.getKey(),  col  +  1);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  map.put(entry.getKey(),  col  +  1);  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  col  +  1);	  map.put(entry.getKey(),    col);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
94	[BUG]  [BUGGY]  Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  String,  Integer>)entry.getValue();  map.put(entry.getKey(),  entry.getValue());  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  String,  Integer>)entry.getValue();  map.put(entry.getKey(),  entry.getValue());  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  String,  Integer>)entry.getValue();  map.put(entry.getKey(),  entry.getValue());	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
95	[BUG]  [BUGGY]  Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  String,  Integer>)entry.getValue();  map.put(entry.getKey(),  entry.intValue());  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  String,  Integer>)entry.getValue();  map.put(entry.getKey(),  entry.intValue());  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  String,  Integer>)entry.getValue();  map.put(entry.getKey(),  entry.intValue());	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
96	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col],  col);  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col],  col);  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col],  col);	  final    int    col    =    entry.getValue().intValue();    mapping.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
97	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
98	[BUG]  [BUGGY]  if(values!=  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  if(values!=  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(values!=  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
99	[BUG]  [BUGGY]  map.put(entry.getValue(),  col]);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  map.put(entry.getValue(),  col]);  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  col]);	  map.put(entry.getValue(),    col);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
100	[BUG]  [BUGGY]  if(values!=  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  if(values!=  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(values!=  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }	  final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col].intValue());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
101	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
102	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
103	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
104	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING	  for(final    int    col    =    entry.getValue().intValue();    col!=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  <identifier>  expected	5	None	replace
105	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING	  for(final    int    col    =    entry.getValue().intValue();    col!=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  <identifier>  expected	5	None	replace
106	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()	  for(final    int    col    =    entry.getValue().intValue();    col!=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  <identifier>  expected	5	None	replace
107	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY	  for(final    int    col    =    entry.getValue().intValue();    col!=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  <identifier>  expected	5	None	replace
108	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STR  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STR  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STR	  for(final    int    col    =    entry.getValue().intValue();    col!=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
109	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING	  for(final    int    col    =    entry.getValue().intValue();    col!=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
110	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
111	[BUG]  [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  <  col;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  <  col;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getKey().intValue();  col  <  col;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
112	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
113	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  col;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  col;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  <  col;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
114	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
115	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
116	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  <  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
117	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  2);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  2);  map.put(comment,  comment);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  2);  map.put(comment,  comment);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
118	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
119	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
120	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  <  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
121	[BUG]  [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
122	[BUG]  [BUGGY]  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
123	[BUG]  [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
124	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  new  Integer(col));  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  new  Integer(col));  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  new  Integer(col));	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
125	[BUG]  [BUGGY]  for(final  String  comment  :  map.keySet())  {  final  int  col  =  comment.intValue();  map.put(comment,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  String  comment  :  map.keySet())  {  final  int  col  =  comment.intValue();  map.put(comment,  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  String  comment  :  map.keySet())  {  final  int  col  =  comment.intValue();  map.put(comment,  values[col]);  }	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
126	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  col);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  col);  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  col);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
127	[BUG]  [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    mapping.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
128	[BUG]  [BUGGY]  if(entry.getValue()  ==  null)  {  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  if(entry.getValue()  ==  null)  {  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getValue()  ==  null)  {  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    mapping.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
129	[BUG]  [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    mapping.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
130	[BUG]  [BUGGY]  final  int  col  =  entry.getKey().intValue();  mapping.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  final  int  col  =  entry.getKey().intValue();  mapping.put(entry.getKey(),  values[col]);  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getKey().intValue();  mapping.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getValue().intValue();    mapping.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
131	[BUG]  [BUGGY]  map.put(entry.getKey(),  entry.getValue());  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  map.put(entry.getKey(),  entry.getValue());  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  entry.getValue());	  map.put(entry.getValue(),    col);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
132	[BUG]  [BUGGY]  if(entry.getValue()  ==  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  if(entry.getValue()  ==  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getValue()  ==  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }	  final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col].intValue());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
133	[BUG]  [BUGGY]  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());	  final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col].intValue());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
134	[BUG]  [BUGGY]  map.put(entry.getKey(),  new  Integer(col));  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  map.put(entry.getKey(),  new  Integer(col));  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  new  Integer(col));	  map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
135	[BUG]  [BUGGY]  if(entry.getValue()  ==  null)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  if(entry.getValue()  ==  null)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getValue()  ==  null)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
136	[BUG]  [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
137	[BUG]  [BUGGY]  if(entry.getValue()  ==  null)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  if(entry.getValue()  ==  null)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getValue()  ==  null)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
138	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMP  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMP  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMP	  for(final    int    col    =    entry.getValue().intValue();    col!=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
139	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col!=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col!=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col!=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY	  for(final    int    col    =    entry.getValue().intValue();    col!=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
140	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
141	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  col;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);    [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  col;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]    return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  <  col;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
