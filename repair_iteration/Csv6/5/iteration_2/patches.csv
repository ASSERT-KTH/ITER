bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  -  1;  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
2	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col!=  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col!=  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col!=  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
3	[BUG]  [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getKey().intValue();  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
4	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
5	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    1;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
6	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);	  for(final    int    col    =    entry.getValue().intValue();    col    <    1;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
7	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col!=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col!=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col!=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING	  for(final    int    col    =    entry.getValue().intValue()    -    1;    col    >=    0;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
8	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STR  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STR  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STR	  for(final    int    col    =    entry.getValue().intValue()    -    1;    col    >=    0;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
9	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];	  for(final    int    col    =    entry.getValue().intValue()    -    1;    col    >=    0;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
10	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()	  for(final    int    col    =    entry.getValue().intValue()    -    1;    col    >=    0;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
11	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY  [CE]  illegal  start  of  type  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY	  for(final    int    col    =    entry.getValue().intValue()    -    1;    col    >=    0;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
12	[BUG]  [BUGGY]  if(values!=  null)  {  map.put(entry.getKey(),  values[col]);  }  else  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(values!=  null)  {  map.put(entry.getKey(),  values[col]);  }  else  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(values!=  null)  {  map.put(entry.getKey(),  values[col]);  }  else  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }	  map.put(entry.getKey(),    valueValues[col]);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
13	[BUG]  [BUGGY]  if(values!=  null)  {  map.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getValue(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(values!=  null)  {  map.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getValue(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(values!=  null)  {  map.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getValue(),  values[col]);  }	  map.put(entry.getKey(),    valueValues[col]);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
14	[BUG]  [BUGGY]  if(values!=  null)  {  map.put(entry.getKey(),  values[col]);  }  else  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getValue(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(values!=  null)  {  map.put(entry.getKey(),  values[col]);  }  else  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getValue(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(values!=  null)  {  map.put(entry.getKey(),  values[col]);  }  else  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getValue(),  values[col]);  }	  map.put(entry.getKey(),    valueValues[col]);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
15	[BUG]  [BUGGY]  if(values!=  null)  {  map.put(entry.getKey(),  valueValues[col]);  }  else  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(values!=  null)  {  map.put(entry.getKey(),  valueValues[col]);  }  else  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(values!=  null)  {  map.put(entry.getKey(),  valueValues[col]);  }  else  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }	  map.put(entry.getKey(),    valueValues[col]);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
16	[BUG]  [BUGGY]  final  int  col  =  entry.getKey().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getKey().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getKey().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    1;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
17	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  >  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    1;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
18	[BUG]  [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue()  +  1;  mapping.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue()  +  1;  mapping.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue()  +  1;  mapping.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue()    +    1;    mapping.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
19	[BUG]  [BUGGY]  final  int  col  =  entry.getKey().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(keys,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getKey().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(keys,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getKey().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(keys,  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(keys,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
20	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(keys,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(keys,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(keys,  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(keys,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
21	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(keys,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(keys,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(keys,  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(keys,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
22	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(keys,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(keys,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(keys,  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(keys,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
23	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(keys,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(keys,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(keys,  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(keys,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
24	[BUG]  [BUGGY]  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(keys,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(keys,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(keys,  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(keys,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
25	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];	  for(final    int    col    =    entry.getValue().intValue()    -    1;    col    >=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
26	[BUG]  [BUGGY]  for(final  int  col  =  entry.getKey().intValue()  -  1;  col  <  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getKey().intValue()  -  1;  col  <  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getKey().intValue()  -  1;  col  <  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getKey().intValue();    col    <    col;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
27	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getKey().intValue();    col    <    col;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
28	[BUG]  [BUGGY]  final  int  col  =  entry.getKey().intValue();  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getKey().intValue();  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getKey().intValue();  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getKey().intValue();    col    <    col;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
29	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().doubleValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().doubleValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().doubleValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }	  for(final    int    col    =    entry.getValue().longValue();    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
30	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(entry,  comment);  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(entry,  comment);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(entry,  comment);  }	  for(final    int    col    =    entry.getValue().longValue();    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
31	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(entry.getKey(),  comment);  }  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(entry.getKey(),  comment);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(entry.getKey(),  comment);  }	  for(final    int    col    =    entry.getValue().longValue();    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
32	[BUG]  [BUGGY]  map.put(entry.getKey(),  values[col  +  2]);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  values[col  +  2]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  values[col  +  2]);	  map.put(entry.getKey(),    values[col    +    1]);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
33	[BUG]  [BUGGY]  map.put(entry.getValue(),  values[col  +  1]);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getValue(),  values[col  +  1]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  values[col  +  1]);	  map.put(entry.getKey(),    values[col    +    1]);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
34	[BUG]  [BUGGY]  map.put(entry.getKey(),  values[col  +  3]);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  values[col  +  3]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  values[col  +  3]);	  map.put(entry.getKey(),    values[col    +    1]);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
35	[BUG]  [BUGGY]  map.put(entry.getKey(),  values[col  *  col  +  1]);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  values[col  *  col  +  1]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  values[col  *  col  +  1]);	  map.put(entry.getKey(),    values[col    +    1]);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
36	[BUG]  [BUGGY]  map.put(entry.getKey(),  values[col],  col  +  1]);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  values[col],  col  +  1]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  values[col],  col  +  1]);	  map.put(entry.getKey(),    values[col    +    1]);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
37	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length()  -  1;  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length()  -  1;  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length()  -  1;  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING	  for(final    int    col    =    entry.getValue().length();    col    >=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  <identifier>  expected	34	None	replace
38	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length()  -  1;  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length()  -  1;  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length()  -  1;  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING	  for(final    int    col    =    entry.getValue().length();    col    >=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  <identifier>  expected	34	None	replace
39	[BUG]  [BUGGY]  for(final  int  col  =  entry.getKey().length();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getKey().length();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getKey().length();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING	  for(final    int    col    =    entry.getValue().length();    col    >=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
40	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length()  -  2;  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length()  -  2;  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length()  -  2;  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING	  for(final    int    col    =    entry.getValue().length();    col    >=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  <identifier>  expected	34	None	replace
41	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length()  -  1;  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length()  -  1;  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length()  -  1;  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY	  for(final    int    col    =    entry.getValue().length();    col    >=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  <identifier>  expected	34	None	replace
42	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length();  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col!=    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
43	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col!=    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
44	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length();  col!=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length();  col!=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length();  col!=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col!=    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
45	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col!=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col!=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  -  1;  col!=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col!=    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
46	[BUG]  [BUGGY]  if(values!=  null)  {  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(values!=  null)  {  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(values!=  null)  {  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }	  if(entry.getValue()!=    null)    {    final    int    col    =    entry.getValue().intValue();    mapping.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
47	[BUG]  [BUGGY]  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);	  if(entry.getValue()!=    null)    {    final    int    col    =    entry.getValue().intValue();    mapping.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
48	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
49	[BUG]  [BUGGY]  final  int  col  =  entry.getKey().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getKey().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getKey().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
50	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }	  if(entry.getValue()!=    null)    {    final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col].intValue());    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
51	[BUG]  [BUGGY]  if(col  ==  0)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(col  ==  0)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(col  ==  0)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }	  if(entry.getValue()    ==    null)    {    final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col].intValue());    }    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
52	[BUG]  [BUGGY]  if(col!=  0)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(col!=  0)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(col!=  0)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }	  if(entry.getValue()    ==    null)    {    final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col].intValue());    }    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
53	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  <  1;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  <  1;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  -  1;  col  <  1;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    1;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
54	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  <  1;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  <  1;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length();  col  <  1;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    1;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
55	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  1;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  1;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  1;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    1;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
56	[BUG]  [BUGGY]  int  col  =  entry.getValue().intValue()  -  1;  mapping.put(entry.getKey(),  values[col]);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  int  col  =  entry.getValue().intValue()  -  1;  mapping.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	int  col  =  entry.getValue().intValue()  -  1;  mapping.put(entry.getKey(),  values[col]);	  int    col    =    entry.getValue().intValue();    mapping.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
57	[BUG]  [BUGGY]  int  col  =  entry.getValue().intValue()  +  1;  mapping.put(entry.getKey(),  values[col]);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  int  col  =  entry.getValue().intValue()  +  1;  mapping.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	int  col  =  entry.getValue().intValue()  +  1;  mapping.put(entry.getKey(),  values[col]);	  int    col    =    entry.getValue().intValue();    mapping.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
58	[BUG]  [BUGGY]  int  col  =  entry.getColumn().intValue();  mapping.put(entry.getKey(),  values[col]);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  int  col  =  entry.getColumn().intValue();  mapping.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	int  col  =  entry.getColumn().intValue();  mapping.put(entry.getKey(),  values[col]);	  int    col    =    entry.getValue().intValue();    mapping.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
59	[BUG]  [BUGGY]  map.put(entry.getKey(),  new  Integer(0));  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  new  Integer(0));  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  new  Integer(0));	  map.put(entry.getKey(),    new    Integer(col));    	non-compiled	[CE]  <identifier>  expected	134	None	replace
60	[BUG]  [BUGGY]  map.put(entry.getKey(),  new  Integer(col),  values);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  new  Integer(col),  values);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  new  Integer(col),  values);	  map.put(entry.getKey(),    new    Integer(col));    	non-compiled	[CE]  <identifier>  expected	134	None	replace
61	[BUG]  [BUGGY]  map.put(entry.getValue(),  new  Integer(col));  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getValue(),  new  Integer(col));  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  new  Integer(col));	  map.put(entry.getKey(),    new    Integer(col));    	non-compiled	[CE]  <identifier>  expected	134	None	replace
62	[BUG]  [BUGGY]  map.put(entry.getKey(),  new  Integer(col),  values[col]);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  new  Integer(col),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  new  Integer(col),  values[col]);	  map.put(entry.getKey(),    new    Integer(col));    	non-compiled	[CE]  <identifier>  expected	134	None	replace
63	[BUG]  [BUGGY]  col  =  entry.getValue().intValue()  +  1;  maps.put(entry.getKey(),  values[col]);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().intValue()  +  1;  maps.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().intValue()  +  1;  maps.put(entry.getKey(),  values[col]);	  col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
64	[BUG]  [BUGGY]  col  =  entry.getValue().intValue()  -  1;  maps.put(entry.getKey(),  values[col]);  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().intValue()  -  1;  maps.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().intValue()  -  1;  maps.put(entry.getKey(),  values[col]);	  col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
65	[BUG]  [BUGGY]  col  =  entry.getValue().longValue();  maps.put(entry.getKey(),  values[col]);  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().longValue();  maps.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().longValue();  maps.put(entry.getKey(),  values[col]);	  col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
66	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  <  1;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  <  1;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  -  1;  col  <  1;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    1;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
67	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  <  1;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  <  1;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length();  col  <  1;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    1;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
68	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  1;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  1;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  1;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    1;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
69	[BUG]  [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  <  1;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  <  1;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getKey().intValue();  col  <  1;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    1;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
70	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    ==    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
71	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  col  ==  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  col  ==  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue()  -  1;  col  ==  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    ==    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
72	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    ==    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
73	[BUG]  [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getKey().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
74	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
75	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMP  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMP  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMP	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
76	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue()  -  1;  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
77	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
78	[BUG]  [BUGGY]  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
79	[BUG]  [BUGGY]  final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
80	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
81	[BUG]  [BUGGY]  final  int  col  =  entry.getColumn().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getColumn().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getColumn().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
82	[BUG]  [BUGGY]  final  int  col  =  entry.getColumn().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getColumn().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getColumn().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
83	[BUG]  [BUGGY]  final  int  col  =  entry.getColumn().intValue();  col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getColumn().intValue();  col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getColumn().intValue();  col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
84	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue()  -  1;  col  <  col;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue()  -  1;  col  <  col;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue()  -  1;  col  <  col;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
85	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
86	[BUG]  [BUGGY]  map.put(entry.getValue(),  col  +  2);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getValue(),  col  +  2);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  col  +  2);	  map.put(entry.getValue(),    col    +    1);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
87	[BUG]  [BUGGY]  map.put(entry.getValue(),  values[col]  +  1);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getValue(),  values[col]  +  1);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  values[col]  +  1);	  map.put(entry.getValue(),    col    +    1);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
88	[BUG]  [BUGGY]  map.put(entry.getValue(),  col  +  3);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getValue(),  col  +  3);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  col  +  3);	  map.put(entry.getValue(),    col    +    1);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
89	[BUG]  [BUGGY]  map.put(entry.getValue(),  data[col  +  1]);  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getValue(),  data[col  +  1]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  data[col  +  1]);	  map.put(entry.getValue(),    col    +    1);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
90	[BUG]  [BUGGY]  Map.Entry  <  String,  Integer>  entry  =  mapping.entrySet().iterator().next();  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  Map.Entry  <  String,  Integer>  entry  =  mapping.entrySet().iterator().next();  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	Map.Entry  <  String,  Integer>  entry  =  mapping.entrySet().iterator().next();	  Map.Entry    <    String,    Integer>    entry    =    map.entrySet().iterator().next();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
91	[BUG]  [BUGGY]  final  Map.Entry  <  String,  Integer>  entry  =  map.entrySet().iterator().next();  [CE]  <identifier>  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  Map.Entry  <  String,  Integer>  entry  =  map.entrySet().iterator().next();  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  Map.Entry  <  String,  Integer>  entry  =  map.entrySet().iterator().next();	  Map.Entry    <    String,    Integer>    entry    =    map.entrySet().iterator().next();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
92	[BUG]  [BUGGY]  Map.Entry  <  String,  Integer>  entry  =  map.entrySet().iterator();  [CE]  <identifier>  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  Map.Entry  <  String,  Integer>  entry  =  map.entrySet().iterator();  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	Map.Entry  <  String,  Integer>  entry  =  map.entrySet().iterator();	  Map.Entry    <    String,    Integer>    entry    =    map.entrySet().iterator().next();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
93	[BUG]  [BUGGY]  Map.Entry  <  String,  Integer>  entry  =  map.entrySet().iterator(),  col.next();  [CE]  <identifier>  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  Map.Entry  <  String,  Integer>  entry  =  map.entrySet().iterator(),  col.next();  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	Map.Entry  <  String,  Integer>  entry  =  map.entrySet().iterator(),  col.next();	  Map.Entry    <    String,    Integer>    entry    =    map.entrySet().iterator().next();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
94	[BUG]  [BUGGY]  Map.Entry  <  String,  Integer>  entry  =  map.keySet().iterator().next();  [CE]  <identifier>  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  Map.Entry  <  String,  Integer>  entry  =  map.keySet().iterator().next();  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	Map.Entry  <  String,  Integer>  entry  =  map.keySet().iterator().next();	  Map.Entry    <    String,    Integer>    entry    =    map.entrySet().iterator().next();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
95	[BUG]  [BUGGY]  Map.Entry  <  String,  Integer>  entry  =  map.entrySet().iterator(),  col);  [CE]  <identifier>  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  Map.Entry  <  String,  Integer>  entry  =  map.entrySet().iterator(),  col);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	Map.Entry  <  String,  Integer>  entry  =  map.entrySet().iterator(),  col);	  Map.Entry    <    String,    Integer>    entry    =    map.entrySet().iterator().next();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
96	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col!=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col!=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  -  1;  col!=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }	  for(final    int    col    =    entry.getValue().intValue();    col!=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
97	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()  }  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()  }	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey()    	non-compiled	[CE]  <identifier>  expected	82	None	replace
98	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey()    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
99	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey()    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
100	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey()    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
101	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey()    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
102	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey()    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
103	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  map.put(entry.getKey(),  col);  [CE]  <identifier>  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  map.put(entry.getKey(),  col);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue()  -  1;  map.put(entry.getKey(),  col);	  final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    col);    	non-compiled	[CE]  <identifier>  expected	126	None	replace
104	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue()  +  1;  map.put(entry.getKey(),  col);  [CE]  <identifier>  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue()  +  1;  map.put(entry.getKey(),  col);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue()  +  1;  map.put(entry.getKey(),  col);	  final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    col);    	non-compiled	[CE]  <identifier>  expected	126	None	replace
105	[BUG]  [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  col);  }  [CE]  <identifier>  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  col);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  col);  }	  final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    col);    	non-compiled	[CE]  <identifier>  expected	126	None	replace
106	[BUG]  [BUGGY]  null  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  col);  [CE]  <identifier>  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  null  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  col);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	null  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  col);	  final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    col);    	non-compiled	[CE]  <identifier>  expected	126	None	replace
107	[BUG]  [BUGGY]  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  col);  [CE]  <identifier>  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  col);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  col);	  final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    col);    	non-compiled	[CE]  <identifier>  expected	126	None	replace
108	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMP  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMP  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMP	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMP    	non-compiled	[CE]  <identifier>  expected	138	None	replace
109	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMP  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMP  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMP	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMP    	non-compiled	[CE]  <identifier>  expected	138	None	replace
110	[BUG]  [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMP  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMP  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getKey().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMP	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMP    	non-compiled	[CE]  <identifier>  expected	138	None	replace
111	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMP  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMP  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMP	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMP    	non-compiled	[CE]  <identifier>  expected	138	None	replace
112	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMP  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMP  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMP	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMP    	non-compiled	[CE]  <identifier>  expected	138	None	replace
113	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  <identifier>  expected	105	None	replace
114	[BUG]  [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getKey().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  <identifier>  expected	105	None	replace
115	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
116	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumnNumber().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumnNumber().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumnNumber().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
117	[BUG]  [BUGGY]  final  Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  String,  Integer>)entry.getValue();  map.put(entry.getKey(),  entry.getValue());  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  String,  Integer>)entry.getValue();  map.put(entry.getKey(),  entry.getValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  String,  Integer>)entry.getValue();  map.put(entry.getKey(),  entry.getValue());	  Map.Entry    <    String,    Integer>    entry    =(Map.Entry    <    String,    Integer>)entry.getValue();    map.put(entry.getKey(),    entry.getValue());    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
118	[BUG]  [BUGGY]  Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  String,  Integer>)entry.getKey();  map.put(entry.getKey(),  entry.getValue());  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  String,  Integer>)entry.getKey();  map.put(entry.getKey(),  entry.getValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  String,  Integer>)entry.getKey();  map.put(entry.getKey(),  entry.getValue());	  Map.Entry    <    String,    Integer>    entry    =(Map.Entry    <    String,    Integer>)entry.getValue();    map.put(entry.getKey(),    entry.getValue());    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
119	[BUG]  [BUGGY]  Entry  <  String,  Integer>  entry  =(Entry  <  String,  Integer>)entry.getValue();  map.put(entry.getKey(),  entry.getValue());  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  Entry  <  String,  Integer>  entry  =(Entry  <  String,  Integer>)entry.getValue();  map.put(entry.getKey(),  entry.getValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	Entry  <  String,  Integer>  entry  =(Entry  <  String,  Integer>)entry.getValue();  map.put(entry.getKey(),  entry.getValue());	  Map.Entry    <    String,    Integer>    entry    =(Map.Entry    <    String,    Integer>)entry.getValue();    map.put(entry.getKey(),    entry.getValue());    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
120	[BUG]  [BUGGY]  Entry  <  String,  Integer>  entry  =(Entry  <  String,  Integer>)entry.getKey();  map.put(entry.getKey(),  entry.getValue());  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  Entry  <  String,  Integer>  entry  =(Entry  <  String,  Integer>)entry.getKey();  map.put(entry.getKey(),  entry.getValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	Entry  <  String,  Integer>  entry  =(Entry  <  String,  Integer>)entry.getKey();  map.put(entry.getKey(),  entry.getValue());	  Map.Entry    <    String,    Integer>    entry    =(Map.Entry    <    String,    Integer>)entry.getValue();    map.put(entry.getKey(),    entry.getValue());    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
121	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  >=  0;  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  >=  0;  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length();  col  >=  0;  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    0;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
122	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    0;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
123	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  >=  0;  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STR  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  >=  0;  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STR  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length();  col  >=  0;  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STR	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    0;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
124	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  >=  0;  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY  [CE]  illegal  start  of  type  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  >=  0;  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length();  col  >=  0;  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    0;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
125	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue()  -  1;  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
126	[BUG]  [BUGGY]  null  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  null  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	null  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getValue().intValue()    +    1;    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
127	[BUG]  [BUGGY]  if(entry.getValue()  ==  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(entry.getValue()  ==  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getValue()  ==  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue()    +    1;    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
128	[BUG]  [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue()  +  1;  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue()  +  1;  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue()  +  1;  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue()    +    1;    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
129	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length()  -  1;  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length()  -  1;  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length()  -  1;  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()	  for(final    int    col    =    entry.getValue().length();    col    >=    0;    col    <    EMPTY_STRING_ARRAY;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey()    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
130	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length()  -  2;  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length()  -  2;  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length()  -  2;  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()	  for(final    int    col    =    entry.getValue().length();    col    >=    0;    col    <    EMPTY_STRING_ARRAY;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey()    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
131	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length()  -  1;  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.get  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length()  -  1;  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.get  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length()  -  1;  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.get	  for(final    int    col    =    entry.getValue().length();    col    >=    0;    col    <    EMPTY_STRING_ARRAY;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey()    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
132	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length()  +  1;  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length()  +  1;  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length()  +  1;  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()	  for(final    int    col    =    entry.getValue().length();    col    >=    0;    col    <    EMPTY_STRING_ARRAY;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey()    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
133	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length();  col!=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length();  col!=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length();  col!=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()	  for(final    int    col    =    entry.getValue().length();    col    >=    0;    col    <    EMPTY_STRING_ARRAY;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey()    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
134	[BUG]  [BUGGY]  final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
135	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
136	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue()  -  1;  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue()  -  1;  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue()  -  1;  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
137	[BUG]  [BUGGY]  final  int  col  =  entry.getColumn().intValue();  col  >  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getColumn().intValue();  col  >  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getColumn().intValue();  col  >  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
138	[BUG]  [BUGGY]  final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
139	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().length();  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().length();  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().length();  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  ';'  expected	112	None	replace
140	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue()  -  1;  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
141	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
142	[BUG]  [BUGGY]  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
143	[BUG]  [BUGGY]  final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
144	[BUG]  [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
145	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  =  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  =  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  <  =  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    >    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  ';'  expected	56	None	replace
146	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    >    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
147	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >  0;  col--)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >  0;  col--)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  >  0;  col--)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    >    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  ';'  expected	56	None	replace
148	[BUG]  [BUGGY]  final  int  col  =  entry.getKey().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getKey().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getKey().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    1;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  ';'  expected	20	None	replace
149	[BUG]  [BUGGY]  final  int  col  =  entry.getColumn().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getColumn().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getColumn().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    1;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  ';'  expected	20	None	replace
150	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  >  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    1;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  ';'  expected	20	None	replace
151	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  2;  col  <  2;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  2;  col  <  2;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  -  2;  col  <  2;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    2;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
152	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    2;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
153	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  <  2;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  <  2;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  -  1;  col  <  2;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    2;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
154	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  new  Integer(col  +  1));  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  new  Integer(col  +  1));  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  new  Integer(col  +  1));	  final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    new    Integer(col));    	non-compiled	[CE]  ';'  expected	124	None	replace
155	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  map.put(entry.getKey(),  new  Integer(col));  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  map.put(entry.getKey(),  new  Integer(col));  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue()  -  1;  map.put(entry.getKey(),  new  Integer(col));	  final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    new    Integer(col));    	non-compiled	[CE]  ';'  expected	124	None	replace
156	[BUG]  [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  new  Integer(col));  }  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  new  Integer(col));  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  new  Integer(col));  }	  final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    new    Integer(col));    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
157	[BUG]  [BUGGY]  null  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  new  Integer(col));  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  null  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  new  Integer(col));  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	null  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  new  Integer(col));	  final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    new    Integer(col));    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
158	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue()  +  1;  map.put(entry.getKey(),  new  Integer(col));  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue()  +  1;  map.put(entry.getKey(),  new  Integer(col));  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue()  +  1;  map.put(entry.getKey(),  new  Integer(col));	  final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    new    Integer(col));    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
159	[BUG]  [BUGGY]  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  new  Integer(col));  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  new  Integer(col));  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  new  Integer(col));	  final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    new    Integer(col));    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
160	[BUG]  [BUGGY]  final  int  col  =  entry.getKey().intValue();  col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getKey().intValue();  col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getKey().intValue();  col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    >    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
161	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  =  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  =  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  <  =  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    >    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
162	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    >    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
163	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >  0;  col--)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >  0;  col--)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  >  0;  col--)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    >    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
164	[BUG]  [BUGGY]  map.put(entry.getKey(),  new  Integer(values[col]),  EMPTY_STRING_ARRAY);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  new  Integer(values[col]),  EMPTY_STRING_ARRAY);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  new  Integer(values[col]),  EMPTY_STRING_ARRAY);	  map.put(entry.getKey(),    new    Integer(values[col]));    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
165	[BUG]  [BUGGY]  map.put(entry.getKey(),  new  Integer(values[col],  col));  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  new  Integer(values[col],  col));  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  new  Integer(values[col],  col));	  map.put(entry.getKey(),    new    Integer(values[col]));    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
166	[BUG]  [BUGGY]  map.put(entry.getValue(),  new  Integer(values[col]));  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getValue(),  new  Integer(values[col]));  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  new  Integer(values[col]));	  map.put(entry.getKey(),    new    Integer(values[col]));    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
167	[BUG]  [BUGGY]  map.put(entry.getKey(),  new  Integer(values[col]),  this);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  new  Integer(values[col]),  this);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  new  Integer(values[col]),  this);	  map.put(entry.getKey(),    new    Integer(values[col]));    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
168	[BUG]  [BUGGY]  map.put(entry.getKey(),  new  Integer(values[col]),  col);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  new  Integer(values[col]),  col);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  new  Integer(values[col]),  col);	  map.put(entry.getKey(),    new    Integer(values[col]));    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
169	[BUG]  [BUGGY]  map.put(entry.getKey(),  new  Integer(values[col]),  data);  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  new  Integer(values[col]),  data);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  new  Integer(values[col]),  data);	  map.put(entry.getKey(),    new    Integer(values[col]));    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
170	[BUG]  [BUGGY]  map.put(entry.getValue(),  data[col],  col);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getValue(),  data[col],  col);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  data[col],  col);	  map.put(entry.getValue(),    data[col]);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
171	[BUG]  [BUGGY]  map.put(entry.getValue(),  data[col],  EMPTY_STRING_ARRAY);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getValue(),  data[col],  EMPTY_STRING_ARRAY);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  data[col],  EMPTY_STRING_ARRAY);	  map.put(entry.getValue(),    data[col]);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
172	[BUG]  [BUGGY]  map.put(entry.getValue(),  data[col],  this);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getValue(),  data[col],  this);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  data[col],  this);	  map.put(entry.getValue(),    data[col]);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
173	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
174	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  >=  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  >=  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length();  col  >=  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
175	[BUG]  [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  >=  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  >=  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getKey().intValue();  col  >=  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
176	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col!=  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col!=  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col!=  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
177	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
178	[BUG]  [BUGGY]  final  int  col  =  entry.getKey().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getKey().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getKey().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
179	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue()  -  1;  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
180	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
181	[BUG]  [BUGGY]  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
182	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey()  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey()	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
183	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]!=  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]!=  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]!=  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
184	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue()  -  1;  col  <  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue()  -  1;  col  <  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue()  -  1;  col  <  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	120	None	replace
185	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  2;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  2;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  <  2;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	120	None	replace
186	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	120	None	replace
187	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  1;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  1;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  <  1;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	120	None	replace
188	[BUG]  [BUGGY]  if(values!=  null)  {  null  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(values!=  null)  {  null  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(values!=  null)  {  null  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }	  null    col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
189	[BUG]  [BUGGY]  null  col  =  entry.getValue().intValue()  +  1;  maps.put(entry.getKey(),  values[col]);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  null  col  =  entry.getValue().intValue()  +  1;  maps.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	null  col  =  entry.getValue().intValue()  +  1;  maps.put(entry.getKey(),  values[col]);	  null    col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
190	[BUG]  [BUGGY]  null  col  =  entry.getValue().intValue()  -  1;  maps.put(entry.getKey(),  values[col]);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  null  col  =  entry.getValue().intValue()  -  1;  maps.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	null  col  =  entry.getValue().intValue()  -  1;  maps.put(entry.getKey(),  values[col]);	  null    col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
191	[BUG]  [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getKey().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  for(final    int    col    =    entry.getKey().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
192	[BUG]  [BUGGY]  final  int  col  =  entry.getKey().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getKey().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getKey().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  for(final    int    col    =    entry.getKey().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
193	[BUG]  [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  <identifier>  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getKey().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  for(final    int    col    =    entry.getKey().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
194	[BUG]  [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]	  if(entry.getValue()!=    null)    {    final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col]);    }    else    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
195	[BUG]  [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey()	  if(entry.getValue()!=    null)    {    final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col]);    }    else    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
196	[BUG]  [BUGGY]  for(final  Entry  <  String,  Integer>  entry  :  map.entrySet())  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  Entry  <  String,  Integer>  entry  :  map.entrySet())  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  Entry  <  String,  Integer>  entry  :  map.entrySet())  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }	  if(entry.getValue()    ==    null)    {    final    int    col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    }    else    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	137	None	replace
197	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }	  if(entry.getValue()    ==    null)    {    final    int    col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    }    else    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	137	None	replace
198	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue()  +  1;  [CE]  <identifier>  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue()  +  1;  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue()  +  1;	  final    int    col    =    entry.getValue().intValue();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
199	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  [CE]  <identifier>  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue()  -  1;	  final    int    col    =    entry.getValue().intValue();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
200	[BUG]  [BUGGY]  final  int  col  =  entry.getColumn().intValue();  [CE]  <identifier>  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getColumn().intValue();  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getColumn().intValue();	  final    int    col    =    entry.getValue().intValue();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
201	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().longValue();  [CE]  <identifier>  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().longValue();  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().longValue();	  final    int    col    =    entry.getValue().intValue();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
202	[BUG]  [BUGGY]  final  int  col  =  entry.getKey().intValue();  [CE]  <identifier>  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getKey().intValue();  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getKey().intValue();	  final    int    col    =    entry.getValue().intValue();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
203	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  2;  [CE]  <identifier>  expected  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  2;  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue()  -  2;	  final    int    col    =    entry.getValue().intValue();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
204	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
205	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
206	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
207	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col!=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col!=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col!=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
208	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY	  for(final    int    col    =    entry.getKey().intValue();    col    >=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  <identifier>  expected	38	None	replace
209	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()	  for(final    int    col    =    entry.getKey().intValue();    col    >=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  ';'  expected	38	None	replace
210	[BUG]  [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getKey().intValue();  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING	  for(final    int    col    =    entry.getKey().intValue();    col    >=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  ';'  expected	38	None	replace
211	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STR  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STR  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STR	  for(final    int    col    =    entry.getKey().intValue();    col    >=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  ';'  expected	38	None	replace
212	[BUG]  [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }  else  {  Map.Entry  <  String,  Integer>  entry  =  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }  else  {  Map.Entry  <  String,  Integer>  entry  =  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }  else  {  Map.Entry  <  String,  Integer>  entry  =	  final    int    col    =    entry.getValue().intValue()    +    1;    map.put(entry.getKey(),    values[col].intValue());    	non-compiled	[CE]  ';'  expected	30	None	replace
213	[BUG]  [BUGGY]  final  int  col  =  entry.getColumn().intValue()  -  1;  map.put(entry.getKey(),  values[col]);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getColumn().intValue()  -  1;  map.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getColumn().intValue()  -  1;  map.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getColumn().intValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
214	[BUG]  [BUGGY]  final  int  col  =  entry.getColumn().intValue()  +  1;  map.put(entry.getKey(),  values[col]);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getColumn().intValue()  +  1;  map.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getColumn().intValue()  +  1;  map.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getColumn().intValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
215	[BUG]  [BUGGY]  int  col  =  entry.getColumn().intValue();  map.put(entry.getKey(),  values[col]);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  int  col  =  entry.getColumn().intValue();  map.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	int  col  =  entry.getColumn().intValue();  map.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getColumn().intValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
216	[BUG]  [BUGGY]  final  int  col  =  entry.getColumn();  map.put(entry.getKey(),  values[col]);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getColumn();  map.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getColumn();  map.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getColumn().intValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
217	[BUG]  [BUGGY]  col  =  entry.getColumn().intValue();  map.put(entry.getKey(),  values[col]);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getColumn().intValue();  map.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getColumn().intValue();  map.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getColumn().intValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
218	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  4;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  4;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  <  4;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    2;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
219	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  3;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  3;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  <  3;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    2;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
220	[BUG]  [BUGGY]  null  col  =  entry.getValue().intValue()  +  1;  map.put(entry.getKey(),  values[col].intValue());  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  null  col  =  entry.getValue().intValue()  +  1;  map.put(entry.getKey(),  values[col].intValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	null  col  =  entry.getValue().intValue()  +  1;  map.put(entry.getKey(),  values[col].intValue());	  null    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col].intValue());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
221	[BUG]  [BUGGY]  null  col  =  entry.getValue().intValue()  -  1;  map.put(entry.getKey(),  values[col].intValue());  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  null  col  =  entry.getValue().intValue()  -  1;  map.put(entry.getKey(),  values[col].intValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	null  col  =  entry.getValue().intValue()  -  1;  map.put(entry.getKey(),  values[col].intValue());	  null    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col].intValue());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
222	[BUG]  [BUGGY]  if(col  ==  0)  {  null  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(col  ==  0)  {  null  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(col  ==  0)  {  null  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }	  null    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col].intValue());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
223	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
224	[BUG]  [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  >=  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  >=  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getKey().intValue();  col  >=  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
225	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  >=  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  >=  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length();  col  >=  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
226	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
227	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length();  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING	  for(final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  <identifier>  expected	35	None	replace
228	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING	  for(final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  <identifier>  expected	35	None	replace
229	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY	  for(final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  <identifier>  expected	35	None	replace
230	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING	  for(final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  <identifier>  expected	35	None	replace
231	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length()  -  1;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length()  -  1;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length()  -  1;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }	  for(final    int    col    =    entry.getValue().length();    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
232	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length()  -  2;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length()  -  2;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length()  -  2;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }	  for(final    int    col    =    entry.getValue().length();    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
233	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length()  +  1;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length()  +  1;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length()  +  1;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }	  for(final    int    col    =    entry.getValue().length();    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
234	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length();  col!=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length();  col!=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length();  col!=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }	  for(final    int    col    =    entry.getValue().length();    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
235	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length()  -  1;  col!=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length()  -  1;  col!=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length()  -  1;  col!=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }	  for(final    int    col    =    entry.getValue().length();    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
236	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
237	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue()  -  1;  col  <  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue()  -  1;  col  <  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue()  -  1;  col  <  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
238	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  2;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  2;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  <  2;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
239	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
240	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  1;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  1;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  <  1;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
241	[BUG]  [BUGGY]  final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
242	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col].intValue());  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col].intValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col].intValue());	  final    int    col    =    entry.getValue().intValue()    -    1;    map.put(entry.getKey(),    values[col].intValue());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
243	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  2;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  2;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue()  -  2;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    2;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
244	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  col  <  2;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  col  <  2;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue()  -  1;  col  <  2;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    2;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
245	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  3;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  3;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  <  3;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    2;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
246	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY	  for(final    int    col    =    entry.getValue().intValue();    col!=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
247	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY	  for(final    int    col    =    entry.getValue().intValue();    col!=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
248	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col],  col);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col],  col);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col],  col);	  final    int    col    =    entry.getValue().intValue();    mapping.put(entry.getKey(),    values[col],    col);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
249	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  mapping.put(entry.getKey(),  values[col],  col);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  mapping.put(entry.getKey(),  values[col],  col);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue()  -  1;  mapping.put(entry.getKey(),  values[col],  col);	  final    int    col    =    entry.getValue().intValue();    mapping.put(entry.getKey(),    values[col],    col);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
250	[BUG]  [BUGGY]  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col],  col);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col],  col);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col],  col);	  final    int    col    =    entry.getValue().intValue();    mapping.put(entry.getKey(),    values[col],    col);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
251	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue()  +  1;  mapping.put(entry.getKey(),  values[col],  col);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue()  +  1;  mapping.put(entry.getKey(),  values[col],  col);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue()  +  1;  mapping.put(entry.getKey(),  values[col],  col);	  final    int    col    =    entry.getValue().intValue();    mapping.put(entry.getKey(),    values[col],    col);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
252	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col],  col  +  1);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col],  col  +  1);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col],  col  +  1);	  final    int    col    =    entry.getValue().intValue();    mapping.put(entry.getKey(),    values[col],    col);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
253	[BUG]  [BUGGY]  map.put(entry.getValue(),  values[col].intValue());  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getValue(),  values[col].intValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  values[col].intValue());	  map.put(entry.getKey(),    values[col].intValue());    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
254	[BUG]  [BUGGY]  map.put(entry.getKey(),  values[col].intValue()  +  1);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  values[col].intValue()  +  1);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  values[col].intValue()  +  1);	  map.put(entry.getKey(),    values[col].intValue());    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
255	[BUG]  [BUGGY]  map.put(entry.getKey(),  values[col].longValue());  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  values[col].longValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  values[col].longValue());	  map.put(entry.getKey(),    values[col].intValue());    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
256	[BUG]  [BUGGY]  map.put(entry.getKey(),  values[col-1].intValue());  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  values[col-1].intValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  values[col-1].intValue());	  map.put(entry.getKey(),    values[col].intValue());    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
257	[BUG]  [BUGGY]  map.put(entry.getName(),  values[col].intValue());  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getName(),  values[col].intValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getName(),  values[col].intValue());	  map.put(entry.getKey(),    values[col].intValue());    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
258	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
259	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue()  -  1;  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
260	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
261	[BUG]  [BUGGY]  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
262	[BUG]  [BUGGY]  map.put(entry.getKey(),  valueNames[col],  EMPTY_STRING_ARRAY);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  valueNames[col],  EMPTY_STRING_ARRAY);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  valueNames[col],  EMPTY_STRING_ARRAY);	  map.put(entry.getKey(),    valueNames[col]);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
263	[BUG]  [BUGGY]  map.put(entry.getValue(),  valueNames[col]);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getValue(),  valueNames[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  valueNames[col]);	  map.put(entry.getKey(),    valueNames[col]);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
264	[BUG]  [BUGGY]  map.put(entry.getKey(),  valueNames[col],  col);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  valueNames[col],  col);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  valueNames[col],  col);	  map.put(entry.getKey(),    valueNames[col]);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
265	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue()    -    1;    col    <    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
266	[BUG]  [BUGGY]  int  col  =  entry.getValue().intValue()  -  1;  map.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  int  col  =  entry.getValue().intValue()  -  1;  map.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	int  col  =  entry.getValue().intValue()  -  1;  map.put(entry.getKey(),  values[col]);	  int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
267	[BUG]  [BUGGY]  int  col  =  entry.getValue().intValue()  +  1;  map.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  int  col  =  entry.getValue().intValue()  +  1;  map.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	int  col  =  entry.getValue().intValue()  +  1;  map.put(entry.getKey(),  values[col]);	  int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
268	[BUG]  [BUGGY]  boolean  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  boolean  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	boolean  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);	  int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
269	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    col;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
270	[BUG]  [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  >=  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  >=  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getKey().intValue();  col  >=  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    col;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
271	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >>  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >>  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >>  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }	  for(final    int    col    =    entry.getValue().intValue()    -    1;    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
272	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);	  for(final    int    col    =    entry.getValue().intValue()    -    1;    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
273	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  2)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  2)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  <  2)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue()    -    1;    col    <    col;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
274	[BUG]  [BUGGY]  final  int  col  =  entry.getColumn().intValue();  mapping.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getColumn().intValue();  mapping.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getColumn().intValue();  mapping.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getKey().intValue();    mapping.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
275	[BUG]  [BUGGY]  final  int  col  =  entry.getColumnNumber().intValue();  mapping.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getColumnNumber().intValue();  mapping.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getColumnNumber().intValue();  mapping.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getKey().intValue();    mapping.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
276	[BUG]  [BUGGY]  map.put(entry.getValue(),  this.values[col]);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getValue(),  this.values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  this.values[col]);	  map.put(entry.getKey(),    this.values[col]);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
277	[BUG]  [BUGGY]  map.put(entry.getKey(),  this.values[col],  col);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  this.values[col],  col);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  this.values[col],  col);	  map.put(entry.getKey(),    this.values[col]);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
278	[BUG]  [BUGGY]  map.put(entry.getKey(),  this.values[col  +  1]);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  this.values[col  +  1]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  this.values[col  +  1]);	  map.put(entry.getKey(),    this.values[col]);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
279	[BUG]  [BUGGY]  map.put(entry.getKey(),  this.values[col].trim());  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  this.values[col].trim());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  this.values[col].trim());	  map.put(entry.getKey(),    this.values[col]);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
280	[BUG]  [BUGGY]  map.put(entry.getKey(),  this.values[col].toString());  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  this.values[col].toString());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  this.values[col].toString());	  map.put(entry.getKey(),    this.values[col]);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
281	[BUG]  [BUGGY]  col  =  entry.getValue().intValue()  +  1;  map.put(entry.getKey(),  values[col].intValue());  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().intValue()  +  1;  map.put(entry.getKey(),  values[col].intValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().intValue()  +  1;  map.put(entry.getKey(),  values[col].intValue());	  col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col].intValue());    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
282	[BUG]  [BUGGY]  col  =  entry.getValue().intValue()  -  1;  map.put(entry.getKey(),  values[col].intValue());  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().intValue()  -  1;  map.put(entry.getKey(),  values[col].intValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().intValue()  -  1;  map.put(entry.getKey(),  values[col].intValue());	  col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col].intValue());    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
283	[BUG]  [BUGGY]  col  =  entry.getValue().longValue();  map.put(entry.getKey(),  values[col].intValue());  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().longValue();  map.put(entry.getKey(),  values[col].intValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().longValue();  map.put(entry.getKey(),  values[col].intValue());	  col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col].intValue());    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
284	[BUG]  [BUGGY]  col  =  entry.getValue().doubleValue();  map.put(entry.getKey(),  values[col].intValue());  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().doubleValue();  map.put(entry.getKey(),  values[col].intValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().doubleValue();  map.put(entry.getKey(),  values[col].intValue());	  col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col].intValue());    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
285	[BUG]  [BUGGY]  for(final  String  comment  :  entry.keySet())  {  final  int  col  =  comment.intValue();  map.put(comment,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  String  comment  :  entry.keySet())  {  final  int  col  =  comment.intValue();  map.put(comment,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  String  comment  :  entry.keySet())  {  final  int  col  =  comment.intValue();  map.put(comment,  values[col]);  }	  for(final    String    comment    :    map.keySet())    {    final    int    col    =    comment.intValue();    map.put(comment,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
286	[BUG]  [BUGGY]  for(final  int  col  :  map.keySet())  {  final  String  comment  =  comment.intValue();  map.put(comment,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  :  map.keySet())  {  final  String  comment  =  comment.intValue();  map.put(comment,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  :  map.keySet())  {  final  String  comment  =  comment.intValue();  map.put(comment,  values[col]);  }	  for(final    String    comment    :    map.keySet())    {    final    int    col    =    comment.intValue();    map.put(comment,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
287	[BUG]  [BUGGY]  for(final  int  col  :  map.keySet())  {  final  String  comment  =  comment.intValue();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  :  map.keySet())  {  final  String  comment  =  comment.intValue();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  :  map.keySet())  {  final  String  comment  =  comment.intValue();  map.put(entry.getKey(),  values[col]);  }	  for(final    String    comment    :    map.keySet())    {    final    int    col    =    comment.intValue();    map.put(comment,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
288	[BUG]  [BUGGY]  final  int  col  =  map.intValue();  map.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  map.intValue();  map.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  map.intValue();  map.put(entry.getKey(),  values[col]);	  for(final    String    comment    :    map.keySet())    {    final    int    col    =    comment.intValue();    map.put(comment,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
289	[BUG]  [BUGGY]  final  int  col  =  comment.intValue();  map.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  comment.intValue();  map.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  comment.intValue();  map.put(entry.getKey(),  values[col]);	  for(final    String    comment    :    map.keySet())    {    final    int    col    =    comment.intValue();    map.put(comment,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
290	[BUG]  [BUGGY]  map.put(entry.getKey(),  col  +  2);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  col  +  2);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  col  +  2);	  map.put(entry.getKey(),    col    +    1);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
291	[BUG]  [BUGGY]  map.put(entry.getKey(),  values[col  +  1]  + " ");  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  values[col  +  1]  + " ");  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  values[col  +  1]  + " ");	  map.put(entry.getKey(),    col    +    1);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
292	[BUG]  [BUGGY]  map.put(entry.getKey(),  data[col  +  1]);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  data[col  +  1]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  data[col  +  1]);	  map.put(entry.getKey(),    col    +    1);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
293	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  2;  col  <  2;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  2;  col  <  2;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  -  2;  col  <  2;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    2;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
294	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  <  2;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  <  2;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  -  1;  col  <  2;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    2;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
295	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  <  2;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  <  2;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length();  col  <  2;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    2;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
296	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length()  -  1;  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length()  -  1;  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length()  -  1;  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().length();    col    <    0;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
297	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length()  -  2;  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length()  -  2;  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length()  -  2;  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().length();    col    <    0;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
298	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]!=  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]!=  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]!=  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().length();    col    <    0;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
299	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue()  -  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    2;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
300	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue()  -  1;  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    2;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
301	[BUG]  [BUGGY]  map.put(entry.getKey(),  value[col]);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  value[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  value[col]);	  map.put(entry.getKey(),    value);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
302	[BUG]  [BUGGY]  map.put(entry.getKey(),  EMPTY_STRING_ARRAY);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  EMPTY_STRING_ARRAY);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  EMPTY_STRING_ARRAY);	  map.put(entry.getKey(),    value);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
303	[BUG]  [BUGGY]  map.put(entry.getKey(),  values[col],  value);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  values[col],  value);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  values[col],  value);	  map.put(entry.getKey(),    value);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
304	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STR  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STR  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STR	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STR    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
305	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STR  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STR  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STR	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STR    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
306	[BUG]  [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STR  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STR  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getKey().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STR	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STR    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
307	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STR    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
308	[BUG]  [BUGGY]  map.put(entry.getKey(),  entry.getValue()  +  1);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  entry.getValue()  +  1);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  entry.getValue()  +  1);	  map.put(entry.getKey(),    entry.getValue());    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
309	[BUG]  [BUGGY]  map.put(entry.getKey(),  entry.getValue()  +  col);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  entry.getValue()  +  col);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  entry.getValue()  +  col);	  map.put(entry.getKey(),    entry.getValue());    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
310	[BUG]  [BUGGY]  map.put(entry.getValue(),  entry.getKey());  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getValue(),  entry.getKey());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  entry.getKey());	  map.put(entry.getKey(),    entry.getValue());    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
311	[BUG]  [BUGGY]  map.put(entry.getKey(),  entries.getValue());  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  entries.getValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  entries.getValue());	  map.put(entry.getKey(),    entry.getValue());    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
312	[BUG]  [BUGGY]  map.put(entry.getKey(),  values[col]  +  2);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  values[col]  +  2);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  values[col]  +  2);	  map.put(entry.getKey(),    values[col]    +    1);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
313	[BUG]  [BUGGY]  map.put(entry.getKey(),  values[col],  col  +  1);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  values[col],  col  +  1);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  values[col],  col  +  1);	  map.put(entry.getKey(),    values[col]    +    1);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
314	[BUG]  [BUGGY]  map.put(entry.getKey(),  values[col]  +  1],  col);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  values[col]  +  1],  col);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  values[col]  +  1],  col);	  map.put(entry.getKey(),    values[col]    +    1);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
315	[BUG]  [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]	  if(entry.getValue()!=    null)    {    final    int    col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    }    else    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	136	None	replace
316	[BUG]  [BUGGY]  map.put(entry.getKey(),  entries[col]);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  entries[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  entries[col]);	  map.put(entry.getValue(),    entries[col]);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
317	[BUG]  [BUGGY]  map.put(entry.getValue(),  items[col]);  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getValue(),  items[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  items[col]);	  map.put(entry.getValue(),    entries[col]);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
318	[BUG]  [BUGGY]  map.put(entry.getValue(),  elements[col]);  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getValue(),  elements[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  elements[col]);	  map.put(entry.getValue(),    entries[col]);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
319	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    col;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
320	[BUG]  [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  >=  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  >=  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getKey().intValue();  col  >=  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    col;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
321	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);	  final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
322	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }	  final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
323	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }	  final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
324	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }	  final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
325	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >>  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >>  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  >>  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }	  final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
326	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }	  final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
327	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
328	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
329	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue(),  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue(),  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue(),  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }	  for(final    int    col    =    entry.getValue().intValue()    +    1;    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
330	[BUG]  [BUGGY]  final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
331	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
332	[BUG]  [BUGGY]  final  int  col  =  entry.getColumn().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getColumn().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getColumn().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
333	[BUG]  [BUGGY]  final  int  col  =  entry.getColumn().intValue();  col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getColumn().intValue();  col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getColumn().intValue();  col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
334	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
335	[BUG]  [BUGGY]  final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(keys,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(keys,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(keys,  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
336	[BUG]  [BUGGY]  map.put(entry.getName(),  values[col]);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getName(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getName(),  values[col]);	  map.put(entry.getName(),    col);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
337	[BUG]  [BUGGY]  map.put(entry.getName(),  value);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getName(),  value);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getName(),  value);	  map.put(entry.getName(),    col);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
338	[BUG]  [BUGGY]  map.put(entry.getName(),  col  +  1);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getName(),  col  +  1);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getName(),  col  +  1);	  map.put(entry.getName(),    col);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
339	[BUG]  [BUGGY]  map.put(entry.getName(),  data[col]);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getName(),  data[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getName(),  data[col]);	  map.put(entry.getName(),    col);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
340	[BUG]  [BUGGY]  map.put(entry.getName(),  this.values[col]);  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getName(),  this.values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getName(),  this.values[col]);	  map.put(entry.getName(),    col);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
341	[BUG]  [BUGGY]  map.put(entry.getName(),  values);  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getName(),  values);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getName(),  values);	  map.put(entry.getName(),    col);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
342	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }	  if(entry.getValue()!=    null)    {    final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
343	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  ==  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  ==  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  -  1;  col  ==  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }	  for(final    int    col    =    entry.getValue().intValue();    col    ==    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
344	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length()  -  1;  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length()  -  1;  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length()  -  1;  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().length();    col    <    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
345	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().length();  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().length();  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().length();  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().length();    col    <    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
346	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().length();  col  >  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().length();  col  >  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().length();  col  >  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().length();    col    <    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
347	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().length();  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().length();  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().length();  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().length();    col    <    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
348	[BUG]  [BUGGY]  map.put(entry.getKey(),  data[col],  col);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  data[col],  col);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  data[col],  col);	  map.put(entry.getKey(),    data[col]);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
349	[BUG]  [BUGGY]  map.put(entry.getKey(),  data[col],  values[col]);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  data[col],  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  data[col],  values[col]);	  map.put(entry.getKey(),    data[col]);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
350	[BUG]  [BUGGY]  map.put(entry.getValue(),  values[col],  EMPTY_STRING_ARRAY);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getValue(),  values[col],  EMPTY_STRING_ARRAY);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  values[col],  EMPTY_STRING_ARRAY);	  map.put(entry.getValue(),    values[col]);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
351	[BUG]  [BUGGY]  map.put(entry.getValue(),  values[col],  col);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getValue(),  values[col],  col);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  values[col],  col);	  map.put(entry.getValue(),    values[col]);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
352	[BUG]  [BUGGY]  map.put(entry.getValue(),  values[col-1]);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getValue(),  values[col-1]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  values[col-1]);	  map.put(entry.getValue(),    values[col]);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
353	[BUG]  [BUGGY]  null  col  =  entry.getValue().intValue()  +  1;  mapping.put(entry.getKey(),  values[col]);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  null  col  =  entry.getValue().intValue()  +  1;  mapping.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	null  col  =  entry.getValue().intValue()  +  1;  mapping.put(entry.getKey(),  values[col]);	  null    col    =    entry.getValue().intValue();    mapping.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
354	[BUG]  [BUGGY]  null  col  =  entry.getValue().intValue()  -  1;  mapping.put(entry.getKey(),  values[col]);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  null  col  =  entry.getValue().intValue()  -  1;  mapping.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	null  col  =  entry.getValue().intValue()  -  1;  mapping.put(entry.getKey(),  values[col]);	  null    col    =    entry.getValue().intValue();    mapping.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
355	[BUG]  [BUGGY]  col  =  entry.getValue().intValue()  +  1;  map.put(entry.getKey(),  values[col]);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().intValue()  +  1;  map.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().intValue()  +  1;  map.put(entry.getKey(),  values[col]);	  col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
356	[BUG]  [BUGGY]  col  =  entry.getValue().intValue()  -  1;  map.put(entry.getKey(),  values[col]);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().intValue()  -  1;  map.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().intValue()  -  1;  map.put(entry.getKey(),  values[col]);	  col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
357	[BUG]  [BUGGY]  col  =  entry.getValue().longValue();  map.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().longValue();  map.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().longValue();  map.put(entry.getKey(),  values[col]);	  col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
358	[BUG]  [BUGGY]  col  =  entry.getValue().doubleValue();  map.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().doubleValue();  map.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().doubleValue();  map.put(entry.getKey(),  values[col]);	  col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
359	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  =  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  <  =  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  <  =  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    >    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
360	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  col  >  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue()  -  1;  col  >  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue()  -  1;  col  >  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    >    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
361	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col!=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col!=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col!=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    >    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
362	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  <  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  <  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  -  1;  col  <  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
363	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  <  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  <  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length();  col  <  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
364	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().longValue();  col  <  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().longValue();  col  <  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().longValue();  col  <  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
365	[BUG]  [BUGGY]  int  col  =  entry.getValue();  map.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  int  col  =  entry.getValue();  map.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	int  col  =  entry.getValue();  map.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
366	[BUG]  [BUGGY]  if(values!=  null)  {  final  int  col  =  entry.getValue();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(values!=  null)  {  final  int  col  =  entry.getValue();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(values!=  null)  {  final  int  col  =  entry.getValue();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
367	[BUG]  [BUGGY]  if(values!=  null)  {  final  int  col  =  entry.getValue();  map.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(values!=  null)  {  final  int  col  =  entry.getValue();  map.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(values!=  null)  {  final  int  col  =  entry.getValue();  map.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
368	[BUG]  [BUGGY]  final  int  col  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getKey();  map.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
369	[BUG]  [BUGGY]  final  int  col  =  entry.getColumnNumber().intValue()  -  1;  map.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getColumnNumber().intValue()  -  1;  map.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getColumnNumber().intValue()  -  1;  map.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getColumnNumber().intValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
370	[BUG]  [BUGGY]  final  int  col  =  entry.getColumnNumber().intValue()  +  1;  map.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getColumnNumber().intValue()  +  1;  map.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getColumnNumber().intValue()  +  1;  map.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getColumnNumber().intValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
371	[BUG]  [BUGGY]  int  col  =  entry.getColumnNumber().intValue();  map.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  int  col  =  entry.getColumnNumber().intValue();  map.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	int  col  =  entry.getColumnNumber().intValue();  map.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getColumnNumber().intValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
372	[BUG]  [BUGGY]  col  =  entry.getColumnNumber().intValue();  map.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getColumnNumber().intValue();  map.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getColumnNumber().intValue();  map.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getColumnNumber().intValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
373	[BUG]  [BUGGY]  final  int  col  =  entry.getRowNumber().intValue();  map.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getRowNumber().intValue();  map.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getRowNumber().intValue();  map.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getColumnNumber().intValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
374	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  -  1;  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
375	[BUG]  [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getKey().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
376	[BUG]  [BUGGY]  map.put(entry.getKey(),  col]);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  col]);	  map.put(entry.getValue(),    col]);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
377	[BUG]  [BUGGY]  map.put(entry.getValue(),  col  +  1]);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getValue(),  col  +  1]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  col  +  1]);	  map.put(entry.getValue(),    col]);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
378	[BUG]  [BUGGY]  map.put(entry.getValue(),  col],  EMPTY_STRING_ARRAY);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getValue(),  col],  EMPTY_STRING_ARRAY);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  col],  EMPTY_STRING_ARRAY);	  map.put(entry.getValue(),    col]);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
379	[BUG]  [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getKey().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey()    	non-compiled	[CE]  <identifier>  expected	106	None	replace
380	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey()    	non-compiled	[CE]  <identifier>  expected	106	None	replace
381	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey()    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
382	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey()    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
383	[BUG]  [BUGGY]  int  col  =  entry.getValue().intValue()  -  1;  map.put(entry.getKey(),  values[col].intValue());  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  int  col  =  entry.getValue().intValue()  -  1;  map.put(entry.getKey(),  values[col].intValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	int  col  =  entry.getValue().intValue()  -  1;  map.put(entry.getKey(),  values[col].intValue());	  int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col].intValue());    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
384	[BUG]  [BUGGY]  int  col  =  entry.getValue().intValue()  +  1;  map.put(entry.getKey(),  values[col].intValue());  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  int  col  =  entry.getValue().intValue()  +  1;  map.put(entry.getKey(),  values[col].intValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	int  col  =  entry.getValue().intValue()  +  1;  map.put(entry.getKey(),  values[col].intValue());	  int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col].intValue());    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
385	[BUG]  [BUGGY]  if(entry.getValue()!=  null)  {  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(entry.getValue()!=  null)  {  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getValue()!=  null)  {  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }	  int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col].intValue());    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
386	[BUG]  [BUGGY]  if(values!=  null)  {  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(values!=  null)  {  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(values!=  null)  {  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }	  int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col].intValue());    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
387	[BUG]  [BUGGY]  if(entry.getValue()!=  null)  {  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(entry.getValue()!=  null)  {  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getValue()!=  null)  {  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }	  int    col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
388	[BUG]  [BUGGY]  if(values!=  null)  {  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(values!=  null)  {  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(values!=  null)  {  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }	  int    col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
389	[BUG]  [BUGGY]  int  col  =  entry.getValue().intValue()  -  1;  maps.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  int  col  =  entry.getValue().intValue()  -  1;  maps.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	int  col  =  entry.getValue().intValue()  -  1;  maps.put(entry.getKey(),  values[col]);	  int    col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
390	[BUG]  [BUGGY]  int  col  =  entry.getValue().intValue()  +  1;  maps.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  int  col  =  entry.getValue().intValue()  +  1;  maps.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	int  col  =  entry.getValue().intValue()  +  1;  maps.put(entry.getKey(),  values[col]);	  int    col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
391	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    EMPTY_STRING_ARRAY;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey()    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
392	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.get  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.get  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.get	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    EMPTY_STRING_ARRAY;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey()    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
393	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col!=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col!=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col!=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    EMPTY_STRING_ARRAY;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey()    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
394	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().longValue();  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().longValue();  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().longValue();  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    EMPTY_STRING_ARRAY;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey()    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
395	[BUG]  [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getKey().intValue();  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    EMPTY_STRING_ARRAY;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey()    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
396	[BUG]  [BUGGY]  for(final  int  col  =  entry.getKey().intValue()  -  1;  col  <  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getKey().intValue()  -  1;  col  <  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getKey().intValue()  -  1;  col  <  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getKey().intValue();    col    <    col;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
397	[BUG]  [BUGGY]  map.put(entry.getKey(),  values[col],  col]);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  values[col],  col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  values[col],  col]);	  map.put(entry.getKey(),    values[col],    col);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
398	[BUG]  [BUGGY]  map.put(entry.getKey(),  values[col],  1);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  values[col],  1);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  values[col],  1);	  map.put(entry.getKey(),    values[col],    col);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
399	[BUG]  [BUGGY]  map.put(entry.getKey(),  values[col],  int  col);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  values[col],  int  col);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  values[col],  int  col);	  map.put(entry.getKey(),    values[col],    col);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
400	[BUG]  [BUGGY]  map.put(entry.getKey(),  values[col],  data[col]);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  values[col],  data[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  values[col],  data[col]);	  map.put(entry.getKey(),    values[col],    col);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
401	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  2);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  2);  map.put(comment,  comment);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  2);  map.put(comment,  comment);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    2);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
402	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  2);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  2);  map.put(comment,  comment);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  2);  map.put(comment,  comment);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    2);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
403	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  2;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  2);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  2;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  2);  map.put(comment,  comment);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  -  2;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  2);  map.put(comment,  comment);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    2);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
404	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  2);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  2);  map.put(comment,  comment);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  2);  map.put(comment,  comment);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    2);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
405	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().longValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  2);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().longValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  2);  map.put(comment,  comment);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().longValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  2);  map.put(comment,  comment);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    2);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
406	[BUG]  [BUGGY]  map.put(entry.getValue(),  value[col]);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getValue(),  value[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  value[col]);	  map.put(entry.getValue(),    value);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
407	[BUG]  [BUGGY]  map.put(entry.getValue(),  values);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getValue(),  values);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  values);	  map.put(entry.getValue(),    value);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
408	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey()	  for(final    int    col    =    entry.getValue().intValue()    -    1;    col    <    col;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
409	[BUG]  [BUGGY]  final  Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  String,  Integer>)entry.getValue();  map.put(entry.getKey(),  entry.intValue());  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  String,  Integer>)entry.getValue();  map.put(entry.getKey(),  entry.intValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  String,  Integer>)entry.getValue();  map.put(entry.getKey(),  entry.intValue());	  Map.Entry    <    String,    Integer>    entry    =(Map.Entry    <    String,    Integer>)entry.getValue();    map.put(entry.getKey(),    entry.intValue());    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
410	[BUG]  [BUGGY]  Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  String,  Integer>)entry.getKey();  map.put(entry.getKey(),  entry.intValue());  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  String,  Integer>)entry.getKey();  map.put(entry.getKey(),  entry.intValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  String,  Integer>)entry.getKey();  map.put(entry.getKey(),  entry.intValue());	  Map.Entry    <    String,    Integer>    entry    =(Map.Entry    <    String,    Integer>)entry.getValue();    map.put(entry.getKey(),    entry.intValue());    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
411	[BUG]  [BUGGY]  Entry  <  String,  Integer>  entry  =(Entry  <  String,  Integer>)entry.getValue();  map.put(entry.getKey(),  entry.intValue());  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  Entry  <  String,  Integer>  entry  =(Entry  <  String,  Integer>)entry.getValue();  map.put(entry.getKey(),  entry.intValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	Entry  <  String,  Integer>  entry  =(Entry  <  String,  Integer>)entry.getValue();  map.put(entry.getKey(),  entry.intValue());	  Map.Entry    <    String,    Integer>    entry    =(Map.Entry    <    String,    Integer>)entry.getValue();    map.put(entry.getKey(),    entry.intValue());    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
412	[BUG]  [BUGGY]  Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  Object,  Integer>)entry.getValue();  map.put(entry.getKey(),  entry.intValue());  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  Object,  Integer>)entry.getValue();  map.put(entry.getKey(),  entry.intValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  Object,  Integer>)entry.getValue();  map.put(entry.getKey(),  entry.intValue());	  Map.Entry    <    String,    Integer>    entry    =(Map.Entry    <    String,    Integer>)entry.getValue();    map.put(entry.getKey(),    entry.intValue());    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
413	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
414	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
415	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col!=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col!=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col!=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
416	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
417	[BUG]  [BUGGY]  if(values!=  null)  {  final  int  col  =  entry.getKey().intValue();  mapping.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(values!=  null)  {  final  int  col  =  entry.getKey().intValue();  mapping.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(values!=  null)  {  final  int  col  =  entry.getKey().intValue();  mapping.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getKey().intValue();    mapping.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
418	[BUG]  [BUGGY]  if(values!=  null)  {  final  int  col  =  entry.getKey().intValue();  mapping.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(values!=  null)  {  final  int  col  =  entry.getKey().intValue();  mapping.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(values!=  null)  {  final  int  col  =  entry.getKey().intValue();  mapping.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getKey().intValue();    mapping.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
419	[BUG]  [BUGGY]  map.put(entry.getKey(),  this.values[col].intValue());  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  this.values[col].intValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  this.values[col].intValue());	  map.put(entry.getKey(),    this.values[col]);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
420	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn();  col  <  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn();  col  <  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn();  col  <  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getKey().intValue();    col    <    col;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
421	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STR  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STR  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STR	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    0;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
422	[BUG]  [BUGGY]  map.put(entry.getValue(),  valueValues[col]);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getValue(),  valueValues[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  valueValues[col]);	  map.put(entry.getKey(),    valueValues[col]);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
423	[BUG]  [BUGGY]  if(col  ==  0)  {  final  int  col  =  entry.getValue().intValue()  +  1;  map.put(entry.getKey(),  values[col].intValue());  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(col  ==  0)  {  final  int  col  =  entry.getValue().intValue()  +  1;  map.put(entry.getKey(),  values[col].intValue());  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(col  ==  0)  {  final  int  col  =  entry.getValue().intValue()  +  1;  map.put(entry.getKey(),  values[col].intValue());  }	  final    int    col    =    entry.getValue().intValue()    +    1;    map.put(entry.getKey(),    values[col].intValue());    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
424	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey()	  for(final    int    col    =    entry.getValue().intValue()    -    1;    col    <    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
425	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey()	  for(final    int    col    =    entry.getValue().intValue()    -    1;    col    <    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
426	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue()  +  2;  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue()  +  2;  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue()  +  2;	  final    int    col    =    entry.getValue().intValue();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
427	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
428	[BUG]  [BUGGY]  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
429	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMP  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMP  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMP	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMP    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
430	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  +=  values.length;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  +=  values.length;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  +=  values.length;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMP    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
431	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMP  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMP  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMP	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMP    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
432	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  >  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMP  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  >  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMP  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  >  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMP	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMP    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
433	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
434	[BUG]  [BUGGY]  final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
435	[BUG]  [BUGGY]  final  int  col  =  entry.getColumn().intValue();  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getColumn().intValue();  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getColumn().intValue();  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
436	[BUG]  [BUGGY]  map.put(entry.getKey(),  values[col],  int);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  values[col],  int);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  values[col],  int);	  map.put(entry.getKey(),    values[col],    col);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
437	[BUG]  [BUGGY]  map.put(entry.getKey(),  values[col],  0);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  values[col],  0);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  values[col],  0);	  map.put(entry.getKey(),    values[col],    col);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
438	[BUG]  [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getKey().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    1;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
439	[BUG]  [BUGGY]  map.put(entry.getKey(),  values[col],  valueNames[col]);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  values[col],  valueNames[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  values[col],  valueNames[col]);	  map.put(entry.getKey(),    valueNames[col]);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
440	[BUG]  [BUGGY]  if(col!=  0)  {  final  int  value  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(col!=  0)  {  final  int  value  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(col!=  0)  {  final  int  value  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }	  if(entry.getValue()!=    null)    {    final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col].intValue());    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
441	[BUG]  [BUGGY]  map.put(entry.getKey(),  new  Integer(col  +  1));  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  new  Integer(col  +  1));  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  new  Integer(col  +  1));	  map.put(entry.getKey(),    new    Integer(values[col]));    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
442	[BUG]  [BUGGY]  map.put(entry.getKey(),  new  Integer(values[col]).intValue());  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  new  Integer(values[col]).intValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  new  Integer(values[col]).intValue());	  map.put(entry.getKey(),    new    Integer(values[col]));    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
443	[BUG]  [BUGGY]  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey()    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
444	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()  }	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey()    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
445	[BUG]  [BUGGY]  if(col  ==  0)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(col  ==  0)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(col  ==  0)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }	  if(entry.getValue()    ==    null)    {    final    int    col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    }    else    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
446	[BUG]  [BUGGY]  if(col  ==  0)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(col  ==  0)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(col  ==  0)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }	  if(entry.getValue()    ==    null)    {    final    int    col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    }    else    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
447	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    col;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	119	None	replace
448	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  <  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey()	  for(final    int    col    =    entry.getValue().intValue()    -    1;    col    <    col;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
449	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_OBJECT)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_OBJECT)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  <  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_OBJECT)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue()    -    1;    col    <    col;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
450	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  col;  col++)  {  if(values[col]!=  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  col;  col++)  {  if(values[col]!=  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  <  col;  col++)  {  if(values[col]!=  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue()    -    1;    col    <    col;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
451	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_OBJECT)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_OBJECT)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_OBJECT)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().length();    col    <    0;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
452	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]	  for(final    int    col    =    entry.getValue().length();    col    <    0;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
453	[BUG]  [BUGGY]  if(values!=  null)  {  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col],  col);  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(values!=  null)  {  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col],  col);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(values!=  null)  {  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col],  col);  }	  final    int    col    =    entry.getValue().intValue();    mapping.put(entry.getKey(),    values[col],    col);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
454	[BUG]  [BUGGY]  if(col  ==  0)  {  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(col  ==  0)  {  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(col  ==  0)  {  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue()    +    1;    mapping.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
455	[BUG]  [BUGGY]  if(col  ==  0)  {  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(col  ==  0)  {  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(col  ==  0)  {  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue()    +    1;    mapping.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
456	[BUG]  [BUGGY]  map.put(entry.getKey(),  valueValues[col  +  1]);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  valueValues[col  +  1]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  valueValues[col  +  1]);	  map.put(entry.getKey(),    values[col    +    1]);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
457	[BUG]  [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getKey().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
458	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
459	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
460	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
461	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  3);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  3);  map.put(comment,  comment);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  3);  map.put(comment,  comment);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    2);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
462	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue()  +  1;  col  ==  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue()  +  1;  col  ==  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue()  +  1;  col  ==  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    ==    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
463	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    col;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
464	[BUG]  [BUGGY]  if(col  ==  0)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }  else  {  Map.Entry  <  String,  Integer>  entry  =  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(col  ==  0)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }  else  {  Map.Entry  <  String,  Integer>  entry  =  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(col  ==  0)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }  else  {  Map.Entry  <  String,  Integer>  entry  =	  final    int    col    =    entry.getValue().intValue()    -    1;    map.put(entry.getKey(),    values[col].intValue());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
465	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  new  Integer(col),  values[col]);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  new  Integer(col),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  new  Integer(col),  values[col]);	  final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    new    Integer(col));    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
466	[BUG]  [BUGGY]  Map.Entry  <  String,  Integer>  entry  =  maps.entrySet().iterator().next();  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  Map.Entry  <  String,  Integer>  entry  =  maps.entrySet().iterator().next();  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	Map.Entry  <  String,  Integer>  entry  =  maps.entrySet().iterator().next();	  Map.Entry    <    String,    Integer>    entry    =    map.entrySet().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
467	[BUG]  [BUGGY]  for(final  Entry  <  String,  Integer>  entry  :  map.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  Entry  <  String,  Integer>  entry  :  map.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  Entry  <  String,  Integer>  entry  :  map.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }	  if(entry.getValue()!=    null)    {    final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
468	[BUG]  [BUGGY]  if(col!=  0)  {  final  int  value  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(col!=  0)  {  final  int  value  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(col!=  0)  {  final  int  value  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }	  if(entry.getValue()!=    null)    {    final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
469	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  map.put(entry,  values[col]);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  map.put(entry,  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  map.put(entry,  values[col]);	  if(entry.getValue()!=    null)    {    final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
470	[BUG]  [BUGGY]  map.put(entry.getKey(),  entry.getValue()).intValue();  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  entry.getValue()).intValue();  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  entry.getValue()).intValue();	  map.put(entry.getKey(),    entry.getValue());    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
471	[BUG]  [BUGGY]  map.put(entry.getName(),  entry.getValue());  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getName(),  entry.getValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getName(),  entry.getValue());	  map.put(entry.getKey(),    entry.getValue());    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
472	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);	  for(final    int    col    =    entry.getValue().intValue()    -    2;    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
473	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col!=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col!=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col!=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
474	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  ==  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  ==  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  ==  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
475	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
476	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
477	[BUG]  [BUGGY]  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
478	[BUG]  [BUGGY]  map.put(entry.getKey(),  valueValues[col].intValue());  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  valueValues[col].intValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  valueValues[col].intValue());	  map.put(entry.getKey(),    values[col].intValue());    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
479	[BUG]  [BUGGY]  map.put(entry.getKey(),  values[col],  values[col].intValue());  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  values[col],  values[col].intValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  values[col],  values[col].intValue());	  map.put(entry.getKey(),    values[col].intValue());    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
480	[BUG]  [BUGGY]  if(col!=  0)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(col!=  0)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(col!=  0)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }	  if(values!=    null)    {    final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
481	[BUG]  [BUGGY]  map.put(entry.getValue(),  entries[col].intValue());  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getValue(),  entries[col].intValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  entries[col].intValue());	  map.put(entry.getValue(),    entries[col]);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
482	[BUG]  [BUGGY]  map.put(entry.getValue(),  data[col].intValue());  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getValue(),  data[col].intValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  data[col].intValue());	  map.put(entry.getValue(),    data[col]);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
483	[BUG]  [BUGGY]  map.put(entry.getValue(),  data[col-1]);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getValue(),  data[col-1]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  data[col-1]);	  map.put(entry.getValue(),    data[col]);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
484	[BUG]  [BUGGY]  if(col  ==  0)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(col  ==  0)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(col  ==  0)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue()    +    1;    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
485	[BUG]  [BUGGY]  if(col  ==  0)  {  final  int  col  =  entry.getValue().intValue()  +  1;  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(col  ==  0)  {  final  int  col  =  entry.getValue().intValue()  +  1;  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(col  ==  0)  {  final  int  col  =  entry.getValue().intValue()  +  1;  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue()    +    1;    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
486	[BUG]  [BUGGY]  if(col  >=  0)  {  null  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(col  >=  0)  {  null  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(col  >=  0)  {  null  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }	  null    col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
487	[BUG]  [BUGGY]  if(col  ==  0)  {  null  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(col  ==  0)  {  null  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(col  ==  0)  {  null  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }	  null    col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
488	[BUG]  [BUGGY]  for(final  int  col  :  map.keySet())  {  final  String  comment  =  map.intValue();  map.put(comment,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  :  map.keySet())  {  final  String  comment  =  map.intValue();  map.put(comment,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  :  map.keySet())  {  final  String  comment  =  map.intValue();  map.put(comment,  values[col]);  }	  for(final    String    comment    :    map.keySet())    {    final    int    col    =    comment.intValue();    map.put(comment,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
489	[BUG]  [BUGGY]  for(final  String  comment  :  mapping.keySet())  {  final  int  col  =  comment.intValue();  map.put(comment,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  String  comment  :  mapping.keySet())  {  final  int  col  =  comment.intValue();  map.put(comment,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  String  comment  :  mapping.keySet())  {  final  int  col  =  comment.intValue();  map.put(comment,  values[col]);  }	  for(final    String    comment    :    map.keySet())    {    final    int    col    =    comment.intValue();    map.put(comment,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
490	[BUG]  [BUGGY]  for(final  String  comment  :  map.keySet())  {  final  int  col  =  col;  map.put(comment,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  String  comment  :  map.keySet())  {  final  int  col  =  col;  map.put(comment,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  String  comment  :  map.keySet())  {  final  int  col  =  col;  map.put(comment,  values[col]);  }	  for(final    String    comment    :    map.keySet())    {    final    int    col    =    comment.intValue();    map.put(comment,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
491	[BUG]  [BUGGY]  for(final  String  comment  :  map.keySet())  {  final  int  col  =  entry.intValue();  map.put(comment,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  String  comment  :  map.keySet())  {  final  int  col  =  entry.intValue();  map.put(comment,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  String  comment  :  map.keySet())  {  final  int  col  =  entry.intValue();  map.put(comment,  values[col]);  }	  for(final    String    comment    :    map.keySet())    {    final    int    col    =    comment.intValue();    map.put(comment,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
492	[BUG]  [BUGGY]  final  int  col  =  mapping.intValue();  map.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  mapping.intValue();  map.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  mapping.intValue();  map.put(entry.getKey(),  values[col]);	  for(final    String    comment    :    map.keySet())    {    final    int    col    =    comment.intValue();    map.put(comment,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
493	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
494	[BUG]  [BUGGY]  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    >    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
495	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col!=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col!=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col!=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    >    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
496	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  2;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  2;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  2;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    2;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
497	[BUG]  [BUGGY]  if(col  <  0)  {  Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  String,  Integer>)entry.getValue();  map.put(entry.getKey(),  entry.intValue());  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(col  <  0)  {  Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  String,  Integer>)entry.getValue();  map.put(entry.getKey(),  entry.intValue());  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(col  <  0)  {  Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  String,  Integer>)entry.getValue();  map.put(entry.getKey(),  entry.intValue());  }	  Map.Entry    <    String,    Integer>    entry    =(Map.Entry    <    String,    Integer>)entry.getValue();    map.put(entry.getKey(),    entry.intValue());    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
498	[BUG]  [BUGGY]  if(col  >=  0)  {  Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  String,  Integer>)entry.getValue();  map.put(entry.getKey(),  entry.intValue());  }  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(col  >=  0)  {  Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  String,  Integer>)entry.getValue();  map.put(entry.getKey(),  entry.intValue());  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(col  >=  0)  {  Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  String,  Integer>)entry.getValue();  map.put(entry.getKey(),  entry.intValue());  }	  Map.Entry    <    String,    Integer>    entry    =(Map.Entry    <    String,    Integer>)entry.getValue();    map.put(entry.getKey(),    entry.intValue());    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
499	[BUG]  [BUGGY]  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }	  final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
500	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().longValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().longValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().longValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }	  final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
501	[BUG]  [BUGGY]  mapping.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  mapping.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	mapping.put(entry.getKey(),  values[col]);	  if(entry.getValue()    ==    null)    {    final    int    col    =    entry.getValue().intValue();    mapping.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
502	[BUG]  [BUGGY]  final  int  col  =  entry.getValue();  map.put(entry.getKey(),  values[col].intValue());  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue();  map.put(entry.getKey(),  values[col].intValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue();  map.put(entry.getKey(),  values[col].intValue());	  final    int    col    =    entry.getValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
503	[BUG]  [BUGGY]  if(values!=  null)  {  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(values!=  null)  {  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(values!=  null)  {  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }	  int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
504	[BUG]  [BUGGY]  if(values!=  null)  {  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(values!=  null)  {  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(values!=  null)  {  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }	  int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
505	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey()    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
506	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  >  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  >  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  >  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey()    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
507	[BUG]  [BUGGY]  map.put(entry.getKey(),  col  +  1,  entry.intValue());  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  col  +  1,  entry.intValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  col  +  1,  entry.intValue());	  map.put(entry.getKey(),    col    +    1);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
508	[BUG]  [BUGGY]  map.put(entry.getKey(),  col  +  3);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  col  +  3);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  col  +  3);	  map.put(entry.getKey(),    col    +    1);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
509	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY	  for(final    int    col    =    entry.getValue().intValue();    col!=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
510	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY	  for(final    int    col    =    entry.getValue().intValue();    col!=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
511	[BUG]  [BUGGY]  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
512	[BUG]  [BUGGY]  if(col!=  0)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(col!=  0)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(col!=  0)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }	  if(values!=    null)    {    final    int    col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    }    else    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
513	[BUG]  [BUGGY]  if(col!=  0)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(col!=  0)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(col!=  0)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }	  if(values!=    null)    {    final    int    col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    }    else    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
514	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    EMPTY_STRING_ARRAY;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey()    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
515	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    EMPTY_STRING_ARRAY;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey()    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
516	[BUG]  [BUGGY]  map.put(entry.getValue(),  col  +  1,  entry.intValue());  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getValue(),  col  +  1,  entry.intValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  col  +  1,  entry.intValue());	  map.put(entry.getValue(),    col    +    1);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
517	[BUG]  [BUGGY]  map.put(entry.getValue(),  col  +  4);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getValue(),  col  +  4);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  col  +  4);	  map.put(entry.getValue(),    col    +    1);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
518	[BUG]  [BUGGY]  if(col!=  0)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(col!=  0)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(col!=  0)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }	  if(entry.getValue()!=    null)    {    final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col]);    }    else    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
519	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }	  if(entry.getValue()!=    null)    {    final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col]);    }    else    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
520	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  <  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey()	  for(final    int    col    =    entry.getValue().intValue()    -    1;    col    <    col;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
521	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  col;  col++)  {  if(values[col]  ==  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  col;  col++)  {  if(values[col]  ==  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  <  col;  col++)  {  if(values[col]  ==  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue()    -    1;    col    <    col;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
522	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING	  for(final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
523	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()	  for(final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
524	[BUG]  [BUGGY]  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()	  final    int    col    =    entry.getValue().intValue();    col    >    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
525	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col!=  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col!=  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col!=  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
526	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();	  final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
527	[BUG]  [BUGGY]  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()	  final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
528	[BUG]  [BUGGY]  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col],  values[col].intValue());  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col],  values[col].intValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col],  values[col].intValue());	  col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col].intValue());    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
529	[BUG]  [BUGGY]  if(col!=  0)  {  final  int  entry  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(col!=  0)  {  final  int  entry  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(col!=  0)  {  final  int  entry  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }	  if(entry.getValue()    ==    null)    {    final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col].intValue());    }    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
530	[BUG]  [BUGGY]  for(final  Entry  <  String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  Entry  <  String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  Entry  <  String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }	  if(entry.getValue()!=    null)    {    final    int    col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    }    else    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	136	None	replace
531	[BUG]  [BUGGY]  for(final  Entry  <  String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  Entry  <  String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  Entry  <  String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }	  if(entry.getValue()!=    null)    {    final    int    col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    }    else    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	136	None	replace
532	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().longValue()  -  1;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().longValue()  -  1;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().longValue()  -  1;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }	  for(final    int    col    =    entry.getValue().longValue();    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
533	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(keys,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(keys,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(keys,  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(keys,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
534	[BUG]  [BUGGY]  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(keys,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(keys,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(keys,  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(keys,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
535	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn();  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn();  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn();  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
536	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STR  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STR  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STR	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STR    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
537	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STR  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STR  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  +  1;  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STR	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STR    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
538	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col);  map.put(comment,  comment);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col);  map.put(comment,  comment);  }	  for(final    int    col    =    entry.getValue().intValue()    -    1;    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
539	[BUG]  [BUGGY]  if(col  ==  0)  {  null  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(col  ==  0)  {  null  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(col  ==  0)  {  null  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }	  null    col    =    entry.getValue().intValue();    mapping.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
540	[BUG]  [BUGGY]  if(values!=  null)  {  final  int  col  =  entry.getColumn().intValue();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(values!=  null)  {  final  int  col  =  entry.getColumn().intValue();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(values!=  null)  {  final  int  col  =  entry.getColumn().intValue();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getColumn().intValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
541	[BUG]  [BUGGY]  null  col  =  entry.getColumn().intValue();  map.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  null  col  =  entry.getColumn().intValue();  map.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	null  col  =  entry.getColumn().intValue();  map.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getColumn().intValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
542	[BUG]  [BUGGY]  final  int  col  =  entry.getColumn().intValue();  map.put(entry.getKey(),  values[col].intValue());  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getColumn().intValue();  map.put(entry.getKey(),  values[col].intValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getColumn().intValue();  map.put(entry.getKey(),  values[col].intValue());	  final    int    col    =    entry.getColumn().intValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
543	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getName()  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getName()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getName()	  for(final    int    col    =    entry.getValue().length();    col    >=    0;    col    <    EMPTY_STRING_ARRAY;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey()    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
544	[BUG]  [BUGGY]  if(col  >=  0)  {  null  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(col  >=  0)  {  null  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(col  >=  0)  {  null  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }	  null    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col].intValue());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
545	[BUG]  [BUGGY]  if(col  <  0)  {  null  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(col  <  0)  {  null  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(col  <  0)  {  null  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }	  null    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col].intValue());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
546	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
547	[BUG]  [BUGGY]  if(values!=  null)  {  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(values!=  null)  {  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(values!=  null)  {  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }	  int    col    =    entry.getValue().intValue();    mapping.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
548	[BUG]  [BUGGY]  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
549	[BUG]  [BUGGY]  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
550	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  mapping.put(entry,  values[col]);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  mapping.put(entry,  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  mapping.put(entry,  values[col]);	  if(entry.getValue()!=    null)    {    final    int    col    =    entry.getValue().intValue();    mapping.put(entry.getKey(),    values[col]);    }    else    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
551	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().length()  +  2;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().length()  +  2;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().length()  +  2;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }	  for(final    int    col    =    entry.getValue().length();    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
552	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
553	[BUG]  [BUGGY]  map.put(entry.getKey(),  values);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  values);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  values);	  map.put(entry.getKey(),    value);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
554	[BUG]  [BUGGY]  map.put(entry.getKey(),  data[col].intValue());  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  data[col].intValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  data[col].intValue());	  map.put(entry.getKey(),    data[col]);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
555	[BUG]  [BUGGY]  final  int  col  =  entry.getColumn().intValue();  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getColumn().intValue();  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getColumn().intValue();  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
556	[BUG]  [BUGGY]  map.put(entry.getName(),  entry.value);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getName(),  entry.value);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getName(),  entry.value);	  map.put(entry.getName(),    col);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
557	[BUG]  [BUGGY]  if(values!=  null)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col].intValue());  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(values!=  null)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col].intValue());  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(values!=  null)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col].intValue());  }	  if(values!=    null)    {    final    int    col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
558	[BUG]  [BUGGY]  Map.Entry  <  String,  Integer  >=  map  =  entry.getValue();  maps.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  Map.Entry  <  String,  Integer  >=  map  =  entry.getValue();  maps.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	Map.Entry  <  String,  Integer  >=  map  =  entry.getValue();  maps.put(entry.getKey(),  values[col]);	  if(values!=    null)    {    final    int    col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
559	[BUG]  [BUGGY]  col  =  entry.getColumn().intValue();  maps.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getColumn().intValue();  maps.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getColumn().intValue();  maps.put(entry.getKey(),  values[col]);	  col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
560	[BUG]  [BUGGY]  map.put(entry.getKey(),  valueValues[col]  +  1);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  valueValues[col]  +  1);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  valueValues[col]  +  1);	  map.put(entry.getKey(),    values[col]    +    1);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
561	[BUG]  [BUGGY]  map.put(entry.getKey(),  values[col]  *  1);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  values[col]  *  1);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  values[col]  *  1);	  map.put(entry.getKey(),    values[col]    +    1);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
562	[BUG]  [BUGGY]  if(values!=  null)  {  final  int  col  =  entry.getColumnNumber().intValue();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(values!=  null)  {  final  int  col  =  entry.getColumnNumber().intValue();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(values!=  null)  {  final  int  col  =  entry.getColumnNumber().intValue();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getColumnNumber().intValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
563	[BUG]  [BUGGY]  if(col  <  0)  {  Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  String,  Integer>)entry.getValue();  map.put(entry.getKey(),  entry.getValue());  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(col  <  0)  {  Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  String,  Integer>)entry.getValue();  map.put(entry.getKey(),  entry.getValue());  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(col  <  0)  {  Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  String,  Integer>)entry.getValue();  map.put(entry.getKey(),  entry.getValue());  }	  Map.Entry    <    String,    Integer>    entry    =(Map.Entry    <    String,    Integer>)entry.getValue();    map.put(entry.getKey(),    entry.getValue());    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
564	[BUG]  [BUGGY]  if(col  >=  0)  {  Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  String,  Integer>)entry.getValue();  map.put(entry.getKey(),  entry.getValue());  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(col  >=  0)  {  Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  String,  Integer>)entry.getValue();  map.put(entry.getKey(),  entry.getValue());  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(col  >=  0)  {  Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  String,  Integer>)entry.getValue();  map.put(entry.getKey(),  entry.getValue());  }	  Map.Entry    <    String,    Integer>    entry    =(Map.Entry    <    String,    Integer>)entry.getValue();    map.put(entry.getKey(),    entry.getValue());    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
565	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col!=    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
566	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comments);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comments);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comments);  }	  for(final    int    col    =    entry.getValue().intValue()    +    1;    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
567	[BUG]  [BUGGY]  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col],  col);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col],  col);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col],  col);	  col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
568	[BUG]  [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col],  col);  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col],  col);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col],  col);  }	  final    int    col    =    entry.getValue().intValue();    mapping.put(entry.getKey(),    values[col],    col);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
569	[BUG]  [BUGGY]  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col],  col);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col],  col);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col],  col);	  final    int    col    =    entry.getValue().intValue();    mapping.put(entry.getKey(),    values[col],    col);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
570	[BUG]  [BUGGY]  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
571	[BUG]  [BUGGY]  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
572	[BUG]  [BUGGY]  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
573	[BUG]  [BUGGY]  int  col  =  entry.getColumn().intValue();  map.put(entry.getKey(),  values[col].intValue());  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  int  col  =  entry.getColumn().intValue();  map.put(entry.getKey(),  values[col].intValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	int  col  =  entry.getColumn().intValue();  map.put(entry.getKey(),  values[col].intValue());	  int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col].intValue());    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
574	[BUG]  [BUGGY]  if(col  ==  0)  {  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(col  ==  0)  {  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(col  ==  0)  {  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }	  int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col].intValue());    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
575	[BUG]  [BUGGY]  col  +=  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  +=  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  +=  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());	  col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col].intValue());    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
576	[BUG]  [BUGGY]  col  <  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  <  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  <  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());	  col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col].intValue());    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
577	[BUG]  [BUGGY]  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    >    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
578	[BUG]  [BUGGY]  col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    >    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
579	[BUG]  [BUGGY]  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    >    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
580	[BUG]  [BUGGY]  map.put(entry.getKey(),  values[col]  }?  values[col]  +  1  :  col);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  values[col]  }?  values[col]  +  1  :  col);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  values[col]  }?  values[col]  +  1  :  col);	  map.put(entry.getKey(),    values[col]    +    1);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
581	[BUG]  [BUGGY]  map.put(entry.getKey(),  values[col]  }  &&  col  <  =  0);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  values[col]  }  &&  col  <  =  0);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  values[col]  }  &&  col  <  =  0);	  map.put(entry.getKey(),    values[col]    +    1);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
582	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
583	[BUG]  [BUGGY]  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }	  final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
584	[BUG]  [BUGGY]  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }	  final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
585	[BUG]  [BUGGY]  col  <  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  <  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  <  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }	  final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
586	[BUG]  [BUGGY]  map.put(entry.getKey(),  new  Integer(col),  value);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  new  Integer(col),  value);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  new  Integer(col),  value);	  map.put(entry.getKey(),    new    Integer(col));    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
587	[BUG]  [BUGGY]  col  +=  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  +=  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  +=  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);	  col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
588	[BUG]  [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  <  2;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  <  2;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getKey().intValue();  col  <  2;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getKey().intValue();    col    <    col;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
589	[BUG]  [BUGGY]  for(final  int  col  :  map.keySet())  {  final  int  comment  =  comment.intValue();  map.put(comment,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  :  map.keySet())  {  final  int  comment  =  comment.intValue();  map.put(comment,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  :  map.keySet())  {  final  int  comment  =  comment.intValue();  map.put(comment,  values[col]);  }	  for(final    String    comment    :    map.keySet())    {    final    int    col    =    comment.intValue();    map.put(comment,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
590	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STR  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STR  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STR	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
591	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
592	[BUG]  [BUGGY]  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    >    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
593	[BUG]  [BUGGY]  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey()	  final    int    col    =    entry.getValue().intValue();    col    >    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
594	[BUG]  [BUGGY]  col  =  entry.getValue().intValue();  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().intValue();  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().intValue();  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    >    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
595	[BUG]  [BUGGY]  col  >  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  >  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  >  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    >    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
596	[BUG]  [BUGGY]  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
597	[BUG]  [BUGGY]  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
598	[BUG]  [BUGGY]  if(col  >=  0)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(col  >=  0)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(col  >=  0)  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }	  if(entry.getValue()!=    null)    {    final    int    col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
599	[BUG]  [BUGGY]  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
600	[BUG]  [BUGGY]  if(values[col]!=  null)  {  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(values[col]!=  null)  {  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(values[col]!=  null)  {  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
601	[BUG]  [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey()	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
602	[BUG]  [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
603	[BUG]  [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue();  map.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue();  map.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue();  map.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
604	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  0)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  0)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  <  0)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue()    -    1;    col    <    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
605	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  2)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  <  2)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  <  2)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue()    -    1;    col    <    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
606	[BUG]  [BUGGY]  if(entry.getColumnNumber()!=  col)  {  final  int  col  =  entry.getColumnNumber().intValue();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(entry.getColumnNumber()!=  col)  {  final  int  col  =  entry.getColumnNumber().intValue();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getColumnNumber()!=  col)  {  final  int  col  =  entry.getColumnNumber().intValue();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getColumnNumber().intValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
607	[BUG]  [BUGGY]  if(entry.getColumnNumber()  ==  col)  {  final  int  col  =  entry.getColumnNumber().intValue();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(entry.getColumnNumber()  ==  col)  {  final  int  col  =  entry.getColumnNumber().intValue();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getColumnNumber()  ==  col)  {  final  int  col  =  entry.getColumnNumber().intValue();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getColumnNumber().intValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
608	[BUG]  [BUGGY]  if(col  >=  0)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(col  >=  0)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(col  >=  0)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }	  if(entry.getValue()!=    null)    {    final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
609	[BUG]  [BUGGY]  map.put(entry.getKey(),  values[col  +  col]);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  values[col  +  col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  values[col  +  col]);	  map.put(entry.getKey(),    values[col    +    1]);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
610	[BUG]  [BUGGY]  map.put(entry.getName(),  values[col  +  1]);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getName(),  values[col  +  1]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getName(),  values[col  +  1]);	  map.put(entry.getKey(),    values[col    +    1]);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
611	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.	  for(final    int    col    =    entry.getValue().length();    col    >=    0;    col    <    EMPTY_STRING_ARRAY;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey()    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
612	[BUG]  [BUGGY]  for(final  int  col  =  entry.getKey().length();  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getKey().length();  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getKey().length();  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey()	  for(final    int    col    =    entry.getValue().length();    col    >=    0;    col    <    EMPTY_STRING_ARRAY;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey()    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
613	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }	  if(entry.getValue()!=    null)    {    final    int    col    =    entry.getValue().intValue();    mapping.put(entry.getKey(),    values[col]);    }    else    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
614	[BUG]  [BUGGY]  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().intValue();  col  ==  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    ==    0;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
615	[BUG]  [BUGGY]  if(entry.getValue()!=  null)  {  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(entry.getValue()!=  null)  {  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getValue()!=  null)  {  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }	  int    col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
616	[BUG]  [BUGGY]  map.put(entry.getValue(),  col  +  1,  entry.getValue());  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getValue(),  col  +  1,  entry.getValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  col  +  1,  entry.getValue());	  map.put(entry.getValue(),    col    +    1);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
617	[BUG]  [BUGGY]  map.put(entry.getValue(),  col  +  1,  entry.toString());  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getValue(),  col  +  1,  entry.toString());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  col  +  1,  entry.toString());	  map.put(entry.getValue(),    col    +    1);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
618	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,	  for(final    int    col    =    entry.getValue().intValue()    -    2;    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
619	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMP  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMP  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMP	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMP    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
620	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col!=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMP  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col!=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMP  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col!=  0;  col  <  col;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMP	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMP    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
621	[BUG]  [BUGGY]  Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  String,  Integer>)entry.getKey();  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  String,  Integer>)entry.getKey();  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  String,  Integer>)entry.getKey();	  Map.Entry    <    String,    Integer>    entry    =(Map.Entry    <    String,    Integer>)entry.getValue();    map.put(entry.getKey(),    entry.getValue());    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
622	[BUG]  [BUGGY]  map.put(entry.getName(),  new  Integer(col));  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getName(),  new  Integer(col));  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getName(),  new  Integer(col));	  map.put(entry.getName(),    col);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
623	[BUG]  [BUGGY]  map.put(entry.getKey(),  col  +  1,  entry.getValue());  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  col  +  1,  entry.getValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  col  +  1,  entry.getValue());	  map.put(entry.getKey(),    col    +    1);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
624	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  >=  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  >=  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  >=  col;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
625	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  2)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  2)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  <  2)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
626	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  3;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  3;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  <  3;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
627	[BUG]  [BUGGY]  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
628	[BUG]  [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
629	[BUG]  [BUGGY]  Map.Entry  <  String,  Integer>  entry  =  this.map.entrySet().iterator().next();  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  Map.Entry  <  String,  Integer>  entry  =  this.map.entrySet().iterator().next();  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	Map.Entry  <  String,  Integer>  entry  =  this.map.entrySet().iterator().next();	  Map.Entry    <    String,    Integer>    entry    =    map.entrySet().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
630	[BUG]  [BUGGY]  Map.Entry  <  String,  Integer>  entry  =  mapping.entrySet().iterator();  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  Map.Entry  <  String,  Integer>  entry  =  mapping.entrySet().iterator();  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	Map.Entry  <  String,  Integer>  entry  =  mapping.entrySet().iterator();	  Map.Entry    <    String,    Integer>    entry    =    map.entrySet().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
631	[BUG]  [BUGGY]  for(final  Entry  <  String,  Integer>  entry  :  map.entrySet())  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.get  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  Entry  <  String,  Integer>  entry  :  map.entrySet())  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.get  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  Entry  <  String,  Integer>  entry  :  map.entrySet())  {  final  int  col  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.get	  if(entry.getValue()    ==    null)    {    final    int    col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    }    else    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
632	[BUG]  [BUGGY]  for(final  char  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  char  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  char  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    2;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
633	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
634	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  >=  col;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  >=  col;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  >=  col;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
635	[BUG]  [BUGGY]  for(final  char  col  =  entry.getColumn().intValue();  col  <  col;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  char  col  =  entry.getColumn().intValue();  col  <  col;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  char  col  =  entry.getColumn().intValue();  col  <  col;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
636	[BUG]  [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  <  2;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  <  2;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getKey().intValue();  col  <  2;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getKey().intValue();    col    <    col;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
637	[BUG]  [BUGGY]  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
638	[BUG]  [BUGGY]  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()	  final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
639	[BUG]  [BUGGY]  col  <  2;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  <  2;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  <  2;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    2;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
640	[BUG]  [BUGGY]  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    2;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
641	[BUG]  [BUGGY]  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    2;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
642	[BUG]  [BUGGY]  final  int  col  =  entry.getColumn().intValue();  col  <  2;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getColumn().intValue();  col  <  2;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getColumn().intValue();  col  <  2;  col++)  {  final  String[]  values  =  entry.getKey();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    2;    col++)    {    final    String[]    values    =    entry.getKey();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
643	[BUG]  [BUGGY]  for(final  Entry  <  String,  Integer>  entry  :  entry.getValue().entrySet())  {  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  Entry  <  String,  Integer>  entry  :  entry.getValue().entrySet())  {  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  Entry  <  String,  Integer>  entry  :  entry.getValue().entrySet())  {  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }	  if(entry.getValue()    ==    null)    {    final    int    col    =    entry.getValue().intValue();    mapping.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
644	[BUG]  [BUGGY]  for(final  Entry  <  String,  Integer>  entry  :  entry.entrySet())  {  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  Entry  <  String,  Integer>  entry  :  entry.entrySet())  {  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  Entry  <  String,  Integer>  entry  :  entry.entrySet())  {  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }	  if(entry.getValue()    ==    null)    {    final    int    col    =    entry.getValue().intValue();    mapping.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
645	[BUG]  [BUGGY]  if(col  >=  0)  {  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(col  >=  0)  {  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(col  >=  0)  {  final  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }	  if(entry.getValue()!=    null)    {    final    int    col    =    entry.getValue().intValue();    mapping.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
646	[BUG]  [BUGGY]  col  +=  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  +=  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  +=  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);	  col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
647	[BUG]  [BUGGY]  col  <  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  <  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  <  =  entry.getValue().intValue();  maps.put(entry.getKey(),  values[col]);	  col    =    entry.getValue().intValue();    maps.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
648	[BUG]  [BUGGY]  final  int  col  =  entry.getValue().intValue();  map.put(entry.getValue(),  values[col]);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getValue().intValue();  map.put(entry.getValue(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getValue().intValue();  map.put(entry.getValue(),  values[col]);	  map.put(entry.getValue(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
649	[BUG]  [BUGGY]  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(keys,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(keys,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(keys,  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(keys,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
650	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getKey().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getKey().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getKey().toCharArray();  map.put(values,  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
651	[BUG]  [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  <  1;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  <  1;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getKey().intValue();  col  <  1;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    1;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
652	[BUG]  [BUGGY]  if(entry.getColumn()!=  null)  {  final  int  col  =  entry.getColumn().intValue();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(entry.getColumn()!=  null)  {  final  int  col  =  entry.getColumn().intValue();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getColumn()!=  null)  {  final  int  col  =  entry.getColumn().intValue();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getColumn().intValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
653	[BUG]  [BUGGY]  if(entry.getColumn()!=  col)  {  final  int  col  =  entry.getColumn().intValue();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(entry.getColumn()!=  col)  {  final  int  col  =  entry.getColumn().intValue();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getColumn()!=  col)  {  final  int  col  =  entry.getColumn().intValue();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getColumn().intValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
654	[BUG]  [BUGGY]  map.put(entry.getValue(),  col].intValue());  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getValue(),  col].intValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  col].intValue());	  map.put(entry.getValue(),    col]);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
655	[BUG]  [BUGGY]  map.put(entry.getValue(),  keys[col]);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getValue(),  keys[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getValue(),  keys[col]);	  map.put(entry.getValue(),    entries[col]);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
656	[BUG]  [BUGGY]  if(entry.getValue()!=  null)  {  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(entry.getValue()!=  null)  {  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getValue()!=  null)  {  int  col  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  }	  int    col    =    entry.getValue().intValue();    mapping.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
657	[BUG]  [BUGGY]  for(final  char  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  char  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  char  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    1;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
658	[BUG]  [BUGGY]  if(entry.getValue()!=  null)  {  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(entry.getValue()!=  null)  {  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getValue()!=  null)  {  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }	  int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
659	[BUG]  [BUGGY]  if(entry.getValue()!=  null)  {  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(entry.getValue()!=  null)  {  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getValue()!=  null)  {  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }	  int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
660	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  >=  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
661	[BUG]  [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values	  final    int    col    =    entry.getValue().intValue();    col    <    1;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
662	[BUG]  [BUGGY]  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    1;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
663	[BUG]  [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getKey().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
664	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getKey().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getKey().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col++)  {  final  char[]  values  =  entry.getKey().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
665	[BUG]  [BUGGY]  if(col  >=  0)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(col  >=  0)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(col  >=  0)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }	  if(entry.getValue()!=    null)    {    final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col].intValue());    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
666	[BUG]  [BUGGY]  if(col  ==  0)  {  Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  String,  Integer>)entry.getValue();  map.put(entry.getKey(),  entry.intValue());  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(col  ==  0)  {  Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  String,  Integer>)entry.getValue();  map.put(entry.getKey(),  entry.intValue());  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(col  ==  0)  {  Map.Entry  <  String,  Integer>  entry  =(Map.Entry  <  String,  Integer>)entry.getValue();  map.put(entry.getKey(),  entry.intValue());  }	  Map.Entry    <    String,    Integer>    entry    =(Map.Entry    <    String,    Integer>)entry.getValue();    map.put(entry.getKey(),    entry.intValue());    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
667	[BUG]  [BUGGY]  for(final  Entry  <  String,  Integer>  entry  :  map.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  Entry  <  String,  Integer>  entry  :  map.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  Entry  <  String,  Integer>  entry  :  map.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col].intValue());  }	  if(entry.getValue()    ==    null)    {    final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    values[col].intValue());    }    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
668	[BUG]  [BUGGY]  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
669	[BUG]  [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey()	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
670	[BUG]  [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.get  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.get  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getKey().intValue();  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.get	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    EMPTY_STRING_ARRAY;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey()    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
671	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue()  -  1;  col  >=  0;  col  <  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    EMPTY_STRING_ARRAY;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey()    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
672	[BUG]  [BUGGY]  if(entry.getValue()  ==  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  new  Integer(col));  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(entry.getValue()  ==  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  new  Integer(col));  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getValue()  ==  null)  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  new  Integer(col));  }	  final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    new    Integer(col));    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
673	[BUG]  [BUGGY]  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  new  Integer(col));  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  new  Integer(col));  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().intValue();  map.put(entry.getKey(),  new  Integer(col));	  final    int    col    =    entry.getValue().intValue();    map.put(entry.getKey(),    new    Integer(col));    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
674	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  <  0;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.getKey(),  EMPTY_STRING	  for(final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey(),    EMPTY_STRING    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
675	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  +=  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.get  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  +=  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.get  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().intValue();  col  >=  0;  col  +=  EMPTY_STRING_ARRAY;  col++)  {  final  String[]  EMPTY_STRING_ARRAY  =  values[col];  map.put(entry.get	  for(final    int    col    =    entry.getValue().intValue();    col    >=    0;    col    <    col;    col++)    {    final    String[]    EMPTY_STRING_ARRAY    =    values[col];    map.put(entry.getKey()    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
676	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  <  1;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
677	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  >=  col;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  >=  col;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  >=  col;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
678	[BUG]  [BUGGY]  for(final  char  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  char  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  char  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
679	[BUG]  [BUGGY]  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey()    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
680	[BUG]  [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey()    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
681	[BUG]  [BUGGY]  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey()    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
682	[BUG]  [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.	  final    int    col    =    entry.getValue().intValue();    col    <    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey()    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
683	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().length();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().length();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().length();  col  <  0;  col++)  {  if(values[col]  ==  EMPTY_STRING_ARRAY)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getValue().length();    col    <    0;    col++)    {    if(values[col]    ==    EMPTY_STRING_ARRAY)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
684	[BUG]  [BUGGY]  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().intValue();  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey()	  final    int    col    =    entry.getValue().intValue();    col    <    1;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
685	[BUG]  [BUGGY]  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().intValue();  col  <  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    1;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
686	[BUG]  [BUGGY]  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    2;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
687	[BUG]  [BUGGY]  null  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  null  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	null  =  entry.getValue().intValue();  mapping.put(entry.getKey(),  values[col]);	  null    col    =    entry.getValue().intValue();    mapping.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
688	[BUG]  [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue().intValue();  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue().intValue();  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getValue()!=  null)  {  final  int  col  =  entry.getValue().intValue().intValue();  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getValue().intValue()    -    1;    map.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
689	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  >=  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  >=  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  >=  col;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
690	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  2)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  2)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  <  2)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
691	[BUG]  [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  3;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getColumn().intValue();  col  <  3;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getColumn().intValue();  col  <  3;  col++)  {  if(values[col]!=  null)  {  map.put(entry.getKey(),  values[col]);  }	  for(final    int    col    =    entry.getColumn().intValue();    col    <    col;    col++)    {    if(values[col]!=    null)    {    map.put(entry.getKey(),    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
692	[BUG]  [BUGGY]  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  <  2;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    <    2;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
693	[BUG]  [BUGGY]  for(final  char  col  =  entry.getKey().intValue();  col  <  col;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  char  col  =  entry.getKey().intValue();  col  <  col;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  char  col  =  entry.getKey().intValue();  col  <  col;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  for(final    int    col    =    entry.getKey().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
694	[BUG]  [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  >=  col;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getKey().intValue();  col  >=  col;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getKey().intValue();  col  >=  col;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  for(final    int    col    =    entry.getKey().intValue();    col    <    col;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
695	[BUG]  [BUGGY]  map.put(entry.getKey(),  entry.intValue());  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  entry.intValue());  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  entry.intValue());	  map.put(entry.getKey(),    value);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
696	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().longValue()  +  1;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().longValue()  +  1;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().longValue()  +  1;  col  >=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }	  for(final    int    col    =    entry.getValue().longValue();    col    >=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
697	[BUG]  [BUGGY]  if(entry.getKey()!=  null)  {  final  int  col  =  entry.getKey().intValue();  mapping.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(entry.getKey()!=  null)  {  final  int  col  =  entry.getKey().intValue();  mapping.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getKey()!=  null)  {  final  int  col  =  entry.getKey().intValue();  mapping.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getKey().intValue();    mapping.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
698	[BUG]  [BUGGY]  final  int  col  =  entry.getKey().intValue();  map.put(entry.getKey(),  values[col]);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  final  int  col  =  entry.getKey().intValue();  map.put(entry.getKey(),  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	final  int  col  =  entry.getKey().intValue();  map.put(entry.getKey(),  values[col]);	  final    int    col    =    entry.getKey().intValue();    mapping.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
699	[BUG]  [BUGGY]  if(entry.getKey()!=  null)  {  final  int  col  =  entry.getKey().intValue();  mapping.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  if(entry.getKey()!=  null)  {  final  int  col  =  entry.getKey().intValue();  mapping.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	if(entry.getKey()!=  null)  {  final  int  col  =  entry.getKey().intValue();  mapping.put(entry.getKey(),  values[col]);  }  else  {  map.put(entry.getKey(),  values[col]);  }	  final    int    col    =    entry.getKey().intValue();    mapping.put(entry.getKey(),    values[col]);    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
700	[BUG]  [BUGGY]  map.put(entry.getKey(),  col,  values[col]);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  map.put(entry.getKey(),  col,  values[col]);  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	map.put(entry.getKey(),  col,  values[col]);	  map.put(entry.getKey(),    values[col],    col);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
701	[BUG]  [BUGGY]  int  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  int  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	int  col  =  entry.getValue().intValue();  col  >  0;  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    >    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
702	[BUG]  [BUGGY]  col  =  entry.getValue().intValue();  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  col  =  entry.getValue().intValue();  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	col  =  entry.getValue().intValue();  col++)  {  final  char[]  values  =  entry.getValue().toCharArray();  map.put(values,  values[col]);  }	  final    int    col    =    entry.getValue().intValue();    col    >    0;    col++)    {    final    char[]    values    =    entry.getValue().toCharArray();    map.put(values,    values[col]);    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
703	[BUG]  [BUGGY]  for(final  int  col  =  entry.getValue().longValue();  col!=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      <M  extends  Map<String,  String>>  M  putIn(final  M  map)  {  for  (final  Entry<String,  Integer>  entry  :  mapping.entrySet())  {  final  int  col  =  entry.getValue().intValue();  map.put(entry.getKey(),  values[col]);      [BUGGY]  for(final  int  col  =  entry.getValue().longValue();  col!=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }  [BUGGY]      return  map;  }  [CLASS]  CSVRecord  [METHOD]  putIn  [RETURN_TYPE]  <M  final  M  map  [VARIABLES]  Entry  entry  boolean  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  Map  mapping  M  map  long  recordNumber  serialVersionUID  int  col  	projects/Csv6/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5	183	183	1	replace	for(final  int  col  =  entry.getValue().longValue();  col!=  0;  col++)  {  final  String  comment  =  entry.getKey().substring(col  +  1);  map.put(comment,  comment);  }	  for(final    int    col    =    entry.getValue().intValue();    col!=    0;    col++)    {    final    String    comment    =    entry.getKey().substring(col    +    1);    map.put(comment,    comment);    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
