bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  iter.add(option);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  iter.add(option);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	iter.add(option);	  iter.remove(option);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
2	[BUG]  [BUGGY]  iter.remove(pos);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  iter.remove(pos);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	iter.remove(pos);	  iter.remove(option);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
3	[BUG]  [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {  },  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {  },  stopAtNonOption);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {  },  stopAtNonOption);	  return(tokens    ==    null)?    null    :    tokens.toArray(new    String[]    {    },    opt);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
4	[BUG]  [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {  },  option);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {  },  option);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {  },  option);	  return(tokens    ==    null)?    null    :    tokens.toArray(new    String[]    {    },    opt);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
5	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  tokens.add(token);  }  else  {  for(int  pos  =  0;  pos  <  arguments.length;  pos++)  {  tokens.add(opt);  }  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  else  if(stopAtNonOption)  {  tokens.add(token);  }  else  {  for(int  pos  =  0;  pos  <  arguments.length;  pos++)  {  tokens.add(opt);  }  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	else  if(stopAtNonOption)  {  tokens.add(token);  }  else  {  for(int  pos  =  0;  pos  <  arguments.length;  pos++)  {  tokens.add(opt);  }  }	  else    if(stopAtNonOption)    {    tokens.add(token);    }    else    {    for(int    pos    =    0;    pos    <    arguments.length;    pos++)    {    tokens.add(opt);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
6	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  tokens.add(token);  }  else  {  for(int  pos  =  0;  pos  <  argument.length;  pos++)  {  tokens.add(opt);  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  else  if(stopAtNonOption)  {  tokens.add(token);  }  else  {  for(int  pos  =  0;  pos  <  argument.length;  pos++)  {  tokens.add(opt);  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	else  if(stopAtNonOption)  {  tokens.add(token);  }  else  {  for(int  pos  =  0;  pos  <  argument.length;  pos++)  {  tokens.add(opt);  }	  else    if(stopAtNonOption)    {    tokens.add(token);    }    else    {    for(int    pos    =    0;    pos    <    arguments.length;    pos++)    {    tokens.add(opt);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
7	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  options.values().iterator();  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Iterator  <  String>  iter  =  options.values().iterator();  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Iterator  <  String>  iter  =  options.values().iterator();	  Iterator    <    String>    iter    =    arguments.iterator();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
8	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  tokens.iterator();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Iterator  <  String>  iter  =  tokens.iterator();  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Iterator  <  String>  iter  =  tokens.iterator();	  Iterator    <    String>    iter    =    arguments.iterator();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
9	[BUG]  [BUGGY]  options.add(arguments[pos],  stopAtNonOption,  iter);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  options.add(arguments[pos],  stopAtNonOption,  iter);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	options.add(arguments[pos],  stopAtNonOption,  iter);	  options.add(arguments[pos],    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
10	[BUG]  [BUGGY]  options.add(arguments[pos],  stopAtNonOption,  tokens);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  options.add(arguments[pos],  stopAtNonOption,  tokens);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	options.add(arguments[pos],  stopAtNonOption,  tokens);	  options.add(arguments[pos],    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
11	[BUG]  [BUGGY]  options.add(arguments[pos],  eatTheRest);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  options.add(arguments[pos],  eatTheRest);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	options.add(arguments[pos],  eatTheRest);	  options.add(arguments[pos],    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
12	[BUG]  [BUGGY]  echtsuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  echtsuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	echtsuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti	  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti    else    {    	non-compiled	[CE]  <identifier>  expected	53	None	replace
13	[BUG]  [BUGGY]  thensuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  thensuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	thensuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti	  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti    else    {    	non-compiled	[CE]  <identifier>  expected	53	None	replace
14	[BUG]  [BUGGY]  dsuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  dsuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	dsuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti	  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti    else    {    	non-compiled	[CE]  <identifier>  expected	53	None	replace
15	[BUG]  [BUGGY]  Option  options  =  options.getOption(pos);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Option  options  =  options.getOption(pos);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Option  options  =  options.getOption(pos);	  Option    options    =    options.getOptions();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
16	[BUG]  [BUGGY]  Option  options  =  options.getOptions(pos);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Option  options  =  options.getOptions(pos);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Option  options  =  options.getOptions(pos);	  Option    options    =    options.getOptions();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
17	[BUG]  [BUGGY]  Option  options  =  iter.getOptions();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Option  options  =  iter.getOptions();  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Option  options  =  iter.getOptions();	  Option    options    =    options.getOptions();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
18	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  options.contains(opt))  {  tokens.add(token);  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  else  if(stopAtNonOption  &&  options.contains(opt))  {  tokens.add(token);  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	else  if(stopAtNonOption  &&  options.contains(opt))  {  tokens.add(token);  }	  else    if(stopAtNonOption)    {    tokens.add(token);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
19	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  tokens.add(opt);  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  else  if(stopAtNonOption)  {  tokens.add(opt);  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	else  if(stopAtNonOption)  {  tokens.add(opt);  }	  else    if(stopAtNonOption)    {    tokens.add(token);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
20	[BUG]  [BUGGY]  Option  option  =  options.getOption(token);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Option  option  =  options.getOption(token);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Option  option  =  options.getOption(token);	  Option    option    =    options.getOption(pos);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
21	[BUG]  [BUGGY]  Option  option  =  options.getOption(pos,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Option  option  =  options.getOption(pos,  stopAtNonOption);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Option  option  =  options.getOption(pos,  stopAtNonOption);	  Option    option    =    options.getOption(pos);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
22	[BUG]  [BUGGY]  Option  option  =  options.getOption(pos  +  1);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Option  option  =  options.getOption(pos  +  1);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Option  option  =  options.getOption(pos  +  1);	  Option    option    =    options.getOption(pos);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
23	[BUG]  [BUGGY]  safely(stopAtNonOption)  {  tokens.add(token);  }  else  {  for(int  pos  =  0;  pos  <  arguments.size();  pos++)  {  tokens.add(opt);  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  safely(stopAtNonOption)  {  tokens.add(token);  }  else  {  for(int  pos  =  0;  pos  <  arguments.size();  pos++)  {  tokens.add(opt);  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	safely(stopAtNonOption)  {  tokens.add(token);  }  else  {  for(int  pos  =  0;  pos  <  arguments.size();  pos++)  {  tokens.add(opt);  }	  else    if(stopAtNonOption)    {    tokens.add(token);    }    else    {    for(int    pos    =    0;    pos    <    arguments.size();    pos++)    {    tokens.add(opt);    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
24	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  tokens.add(token);  }  else  {  for(int  pos  =  0;  pos  <  arguments.size();  pos++)  {  tokens.add(opt);  }  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  else  if(stopAtNonOption)  {  tokens.add(token);  }  else  {  for(int  pos  =  0;  pos  <  arguments.size();  pos++)  {  tokens.add(opt);  }  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	else  if(stopAtNonOption)  {  tokens.add(token);  }  else  {  for(int  pos  =  0;  pos  <  arguments.size();  pos++)  {  tokens.add(opt);  }  }	  else    if(stopAtNonOption)    {    tokens.add(token);    }    else    {    for(int    pos    =    0;    pos    <    arguments.size();    pos++)    {    tokens.add(opt);    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
25	[BUG]  [BUGGY]  Iterator  iter  =  this.tokens.iterator();  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Iterator  iter  =  this.tokens.iterator();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Iterator  iter  =  this.tokens.iterator();	  Iterator    iter    =    tokens.iterator();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
26	[BUG]  [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[0]  {  },  options);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[0]  {  },  options);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	return(tokens  ==  null)?  null  :  tokens.toArray(new  String[0]  {  },  options);	  return(tokens    ==    null)?    null    :    tokens.toArray(new    String[]    {    },    options);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
27	[BUG]  [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {   "null "  },  options);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {   "null "  },  options);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {   "null "  },  options);	  return(tokens    ==    null)?    null    :    tokens.toArray(new    String[]    {    },    options);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
28	[BUG]  [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {  },  arguments);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {  },  arguments);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {  },  arguments);	  return(tokens    ==    null)?    null    :    tokens.toArray(new    String[]    {    },    options);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
29	[BUG]  [BUGGY]  Iterator  iter  =  arguments.iterator();  tokens.add(arguments[pos]);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Iterator  iter  =  arguments.iterator();  tokens.add(arguments[pos]);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Iterator  iter  =  arguments.iterator();  tokens.add(arguments[pos]);	  Iterator    iter    =    options.iterator();    tokens.add(arguments[pos]);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
30	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  options.iterator();  tokens.add(arguments[pos]);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Iterator  <  String>  iter  =  options.iterator();  tokens.add(arguments[pos]);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Iterator  <  String>  iter  =  options.iterator();  tokens.add(arguments[pos]);	  Iterator    iter    =    options.iterator();    tokens.add(arguments[pos]);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
31	[BUG]  [BUGGY]  return(opt  ==  null)?  null  :  tokens.toArray(new  String[]  {  opt  }  );  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  return(opt  ==  null)?  null  :  tokens.toArray(new  String[]  {  opt  }  );  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	return(opt  ==  null)?  null  :  tokens.toArray(new  String[]  {  opt  }  );	  return(tokens    ==    null)?    null    :    tokens.toArray(new    String[]    {    opt    }    );    	non-compiled	[CE]  <identifier>  expected	58	None	replace
32	[BUG]  [BUGGY]  if(opt  ==  null)  {  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {  opt  }  );  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  if(opt  ==  null)  {  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {  opt  }  );  }  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	if(opt  ==  null)  {  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {  opt  }  );  }	  return(tokens    ==    null)?    null    :    tokens.toArray(new    String[]    {    opt    }    );    	non-compiled	[CE]  <identifier>  expected	58	None	replace
33	[BUG]  [BUGGY]  if(opt!=  null)  {  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {  opt  }  );  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  if(opt!=  null)  {  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {  opt  }  );  }  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	if(opt!=  null)  {  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {  opt  }  );  }	  return(tokens    ==    null)?    null    :    tokens.toArray(new    String[]    {    opt    }    );    	non-compiled	[CE]  <identifier>  expected	58	None	replace
34	[BUG]  [BUGGY]  tokens.add(getPosition()  +  1);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  tokens.add(getPosition()  +  1);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	tokens.add(getPosition()  +  1);	  tokens.add(getPosition());    	non-compiled	[CE]  <identifier>  expected	43	None	replace
35	[BUG]  [BUGGY]  tokens.add(getPosition()  -  1);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  tokens.add(getPosition()  -  1);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	tokens.add(getPosition()  -  1);	  tokens.add(getPosition());    	non-compiled	[CE]  <identifier>  expected	43	None	replace
36	[BUG]  [BUGGY]  tokens.add(getOption());  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  tokens.add(getOption());  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	tokens.add(getOption());	  tokens.add(getPosition());    	non-compiled	[CE]  <identifier>  expected	43	None	replace
37	[BUG]  [BUGGY]  Option  option  =  options.getOption(option);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Option  option  =  options.getOption(option);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Option  option  =  options.getOption(option);	  Option    option    =    options.getOption(opt);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
38	[BUG]  [BUGGY]  option  =  options.getOption(pos);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  option  =  options.getOption(pos);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	option  =  options.getOption(pos);	  Option    option    =    options.getOption(opt);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
39	[BUG]  [BUGGY]  Option  options  =  options.getOption(token);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Option  options  =  options.getOption(token);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Option  options  =  options.getOption(token);	  Option    options    =    options.getOption(opt);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
40	[BUG]  [BUGGY]  Option  options  =  iter.getOption(opt);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Option  options  =  iter.getOption(opt);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Option  options  =  iter.getOption(opt);	  Option    options    =    options.getOption(opt);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
41	[BUG]  [BUGGY]  options  =  options.getOption(pos);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  options  =  options.getOption(pos);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	options  =  options.getOption(pos);	  Option    options    =    options.getOption(opt);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
42	[BUG]  [BUGGY]  iter  =  options.values().iterator();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  iter  =  options.values().iterator();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	iter  =  options.values().iterator();	  iter    =    options.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
43	[BUG]  [BUGGY]  Opcodes.Iterator  <  Option>  iter  =  arguments.iterator();  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Opcodes.Iterator  <  Option>  iter  =  arguments.iterator();  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Opcodes.Iterator  <  Option>  iter  =  arguments.iterator();	  Opcodes.Iterator    <    Option>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	56	None	replace
44	[BUG]  [BUGGY]  Opcodes.Iterator  <  Option>  iter  =  options.values().iterator();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Opcodes.Iterator  <  Option>  iter  =  options.values().iterator();  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Opcodes.Iterator  <  Option>  iter  =  options.values().iterator();	  Opcodes.Iterator    <    Option>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	56	None	replace
45	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Iterator  <  Option>  iter  =  options.iterator();  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Iterator  <  Option>  iter  =  options.iterator();	  Opcodes.Iterator    <    Option>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	56	None	replace
46	[BUG]  [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[tokens.size()  1]);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[tokens.size()  1]);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	return(tokens  ==  null)?  null  :  tokens.toArray(new  String[tokens.size()  1]);	  return(tokens    ==    null)?    null    :    tokens.toArray(new    String[tokens.size()    +    1]);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
47	[BUG]  [BUGGY]  tokens.add( "- "  +  opt);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  tokens.add( "- "  +  opt);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	tokens.add( "- "  +  opt);	  tokens.add(   "-   ");    	non-compiled	[CE]  <identifier>  expected	23	None	replace
48	[BUG]  [BUGGY]  tokens.add( "- "  +  pos);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  tokens.add( "- "  +  pos);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	tokens.add( "- "  +  pos);	  tokens.add(   "-   ");    	non-compiled	[CE]  <identifier>  expected	23	None	replace
49	[BUG]  [BUGGY]  tokens.add( "- "  +  getPosition());  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  tokens.add( "- "  +  getPosition());  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	tokens.add( "- "  +  getPosition());	  tokens.add(   "-   ");    	non-compiled	[CE]  <identifier>  expected	23	None	replace
50	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Iterator  iter  =  arguments.iterator();  tokens.add(opt);  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  if(stopAtNonOption)  {  Iterator  iter  =  arguments.iterator();  tokens.add(opt);  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	if(stopAtNonOption)  {  Iterator  iter  =  arguments.iterator();  tokens.add(opt);  }	  Iterator    iter    =    arguments.iterator();    tokens.add(opt);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
51	[BUG]  [BUGGY]  options.addAll(arguments);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  options.addAll(arguments);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	options.addAll(arguments);	  options.add(arguments);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
52	[BUG]  [BUGGY]  return(tokens!=  null)?  null  :  tokens.toArray(new  String[tokens.size()  +  1]);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  return(tokens!=  null)?  null  :  tokens.toArray(new  String[tokens.size()  +  1]);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	return(tokens!=  null)?  null  :  tokens.toArray(new  String[tokens.size()  +  1]);	  return(tokens!=    null)?    null    :    tokens.toArray(new    String[tokens.size()    ]);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
53	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  iter.remove();  tokens.add(token);  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  else  if(stopAtNonOption)  {  iter.remove();  tokens.add(token);  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	else  if(stopAtNonOption)  {  iter.remove();  tokens.add(token);  }	  iter.remove();    tokens.add(token);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
54	[BUG]  [BUGGY]  iter.set(pos,  options.size());  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  iter.set(pos,  options.size());  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	iter.set(pos,  options.size());	  iter.set(pos,    options.size()    -    1);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
55	[BUG]  [BUGGY]  iter.set(0,  options.size());  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  iter.set(0,  options.size());  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	iter.set(0,  options.size());	  iter.set(pos,    options.size()    -    1);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
56	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  options.keySet().iterator();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Iterator  <  String>  iter  =  options.keySet().iterator();  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Iterator  <  String>  iter  =  options.keySet().iterator();	  Iterator    <    String>    iter    =    options.entrySet().iterator();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
57	[BUG]  [BUGGY]  iter.set(0,  options.indexOf(opt));  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  iter.set(0,  options.indexOf(opt));  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	iter.set(0,  options.indexOf(opt));	  iter.set(pos,    options.indexOf(opt));    	non-compiled	[CE]  <identifier>  expected	46	None	replace
58	[BUG]  [BUGGY]  iter.set(pos,  options.indexOf(token));  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  iter.set(pos,  options.indexOf(token));  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	iter.set(pos,  options.indexOf(token));	  iter.set(pos,    options.indexOf(opt));    	non-compiled	[CE]  <identifier>  expected	46	None	replace
59	[BUG]  [BUGGY]  iter.set(pos,  options.indexOf(arguments[pos]));  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  iter.set(pos,  options.indexOf(arguments[pos]));  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	iter.set(pos,  options.indexOf(arguments[pos]));	  iter.set(pos,    options.indexOf(opt));    	non-compiled	[CE]  <identifier>  expected	46	None	replace
60	[BUG]  [BUGGY]  iter.set(pos,  options.indexOf(arguments[0]));  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  iter.set(pos,  options.indexOf(arguments[0]));  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	iter.set(pos,  options.indexOf(arguments[0]));	  iter.set(pos,    options.indexOf(opt));    	non-compiled	[CE]  <identifier>  expected	46	None	replace
61	[BUG]  [BUGGY]  Iterator  iter  =  arguments.iterator();  tokens.add(option);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Iterator  iter  =  arguments.iterator();  tokens.add(option);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Iterator  iter  =  arguments.iterator();  tokens.add(option);	  Iterator    iter    =    options.iterator();    tokens.add(option);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
62	[BUG]  [BUGGY]  Iterator  iter  =  options.iterator();  tokens.add(token);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Iterator  iter  =  options.iterator();  tokens.add(token);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Iterator  iter  =  options.iterator();  tokens.add(token);	  if(stopAtNonOption)    {    Iterator    iter    =    options.iterator();    tokens.add(opt);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
63	[BUG]  [BUGGY]  Iterator  iter  =  options.iterator();  tokens.add(op);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Iterator  iter  =  options.iterator();  tokens.add(op);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Iterator  iter  =  options.iterator();  tokens.add(op);	  if(stopAtNonOption)    {    Iterator    iter    =    options.iterator();    tokens.add(opt);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
64	[BUG]  [BUGGY]  return(tokens!=  null)?  null  :  tokens.toArray(new  String[]);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  return(tokens!=  null)?  null  :  tokens.toArray(new  String[]);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	return(tokens!=  null)?  null  :  tokens.toArray(new  String[]);	  return(tokens    ==    null)?    null    :    tokens.toArray(new    String[]);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
65	[BUG]  [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {   "null ");  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {   "null ");  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {   "null ");	  return(tokens    ==    null)?    null    :    tokens.toArray(new    String[]    {       "   ");    	non-compiled	[CE]  <identifier>  expected	5	None	replace
66	[BUG]  [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {   "0 ");  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {   "0 ");  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {   "0 ");	  return(tokens    ==    null)?    null    :    tokens.toArray(new    String[]    {       "   ");    	non-compiled	[CE]  <identifier>  expected	5	None	replace
67	[BUG]  [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {   "n ");  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {   "n ");  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {   "n ");	  return(tokens    ==    null)?    null    :    tokens.toArray(new    String[]    {       "   ");    	non-compiled	[CE]  <identifier>  expected	5	None	replace
68	[BUG]  [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[pos  +  1]);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[pos  +  1]);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	return(tokens  ==  null)?  null  :  tokens.toArray(new  String[pos  +  1]);	  return(tokens    ==    null)?    null    :    tokens.toArray(new    String[pos]);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
69	[BUG]  [BUGGY]  tokens.add(pos  +  1);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  tokens.add(pos  +  1);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	tokens.add(pos  +  1);	  tokens.add(pos);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
70	[BUG]  [BUGGY]  options.add(arguments[pos  +  1]);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  options.add(arguments[pos  +  1]);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	options.add(arguments[pos  +  1]);	  options.add(arguments[pos]);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
71	[BUG]  [BUGGY]  options.add(arguments[0]);  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  options.add(arguments[0]);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	options.add(arguments[0]);	  options.add(arguments[pos]);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
72	[BUG]  [BUGGY]  moresuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  moresuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	moresuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti	  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti(iter);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
73	[BUG]  [BUGGY]  ffesuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  ffesuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	ffesuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti	  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti(iter);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
74	[BUG]  [BUGGY]  Option  option  =  options.getOption(options);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Option  option  =  options.getOption(options);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Option  option  =  options.getOption(options);	  Option    option    =    options.getOption(pos);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
75	[BUG]  [BUGGY]  if(options!=  null)  {  Iterator  iter  =  options.iterator();  tokens.add(option);  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  if(options!=  null)  {  Iterator  iter  =  options.iterator();  tokens.add(option);  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	if(options!=  null)  {  Iterator  iter  =  options.iterator();  tokens.add(option);  }	  Iterator    iter    =    options.iterator();    tokens.add(option);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
76	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  options.iterator();  tokens.add(option);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Iterator  <  String>  iter  =  options.iterator();  tokens.add(option);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Iterator  <  String>  iter  =  options.iterator();  tokens.add(option);	  Iterator    iter    =    options.iterator();    tokens.add(option);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
77	[BUG]  [BUGGY]  iter.close();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  iter.close();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	iter.close();	  iter.clear();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
78	[BUG]  [BUGGY]  iter.remove(arguments);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  iter.remove(arguments);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	iter.remove(arguments);	  iter.remove(option);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
79	[BUG]  [BUGGY]  return(opt  ==  null)?  null  :  tokens.toArray(new  String[]  {  method  }  );  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  return(opt  ==  null)?  null  :  tokens.toArray(new  String[]  {  method  }  );  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	return(opt  ==  null)?  null  :  tokens.toArray(new  String[]  {  method  }  );	  return(tokens    ==    null)?    null    :    tokens.toArray(new    String[]    {    opt    }    );    	non-compiled	[CE]  <identifier>  expected	58	None	replace
80	[BUG]  [BUGGY]  return(tokens!=  null)?  null  :  tokens.toArray(new  String[]  {   " ");  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  return(tokens!=  null)?  null  :  tokens.toArray(new  String[]  {   " ");  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	return(tokens!=  null)?  null  :  tokens.toArray(new  String[]  {   " ");	  return(tokens!=    null)?    null    :    tokens.toArray(new    String[]    {    }    );    	non-compiled	[CE]  <identifier>  expected	36	None	replace
81	[BUG]  [BUGGY]  Opcodes.Iterator  <  Option>  iter  =  options.keySet().iterator();  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Opcodes.Iterator  <  Option>  iter  =  options.keySet().iterator();  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Opcodes.Iterator  <  Option>  iter  =  options.keySet().iterator();	  Opcodes.Iterator    <    Option>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	56	None	replace
82	[BUG]  [BUGGY]  Opcodes.Iterator  <  Option>  iter  =  options.iterator(0);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Opcodes.Iterator  <  Option>  iter  =  options.iterator(0);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Opcodes.Iterator  <  Option>  iter  =  options.iterator(0);	  Opcodes.Iterator    <    Option>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	56	None	replace
83	[BUG]  [BUGGY]  Option  options  =  options.getOption(opt,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Option  options  =  options.getOption(opt,  stopAtNonOption);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Option  options  =  options.getOption(opt,  stopAtNonOption);	  Option    options    =    options.getOption(opt);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
84	[BUG]  [BUGGY]  Option  options  =  options.getOption(options);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Option  options  =  options.getOption(options);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Option  options  =  options.getOption(options);	  Option    options    =    options.getOption(opt);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
85	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Iterator  options  =  options.iterator();  tokens.add(option);  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  if(stopAtNonOption)  {  Iterator  options  =  options.iterator();  tokens.add(option);  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	if(stopAtNonOption)  {  Iterator  options  =  options.iterator();  tokens.add(option);  }	  if(stopAtNonOption)    {    Iterator    iter    =    options.iterator();    tokens.add(opt);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
86	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  tokens.add(token);  }  else  {  for(int  pos  =  0;  pos  <  argument.size();  pos++)  {  tokens.add(opt);  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  else  if(stopAtNonOption)  {  tokens.add(token);  }  else  {  for(int  pos  =  0;  pos  <  argument.size();  pos++)  {  tokens.add(opt);  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	else  if(stopAtNonOption)  {  tokens.add(token);  }  else  {  for(int  pos  =  0;  pos  <  argument.size();  pos++)  {  tokens.add(opt);  }	  else    if(stopAtNonOption)    {    tokens.add(token);    }    else    {    for(int    pos    =    0;    pos    <    arguments.size();    pos++)    {    tokens.add(opt);    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
87	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  else  if(stopAtNonOption  =  iter  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  else  if(stopAtNonOption  =  iter  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  else  if(stopAtNonOption  =  iter	  else    if(stopAtNonOption)    {    tokens.add(token);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
88	[BUG]  [BUGGY]  options.add(arguments[pos],  stopAtNonOption,  token);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  options.add(arguments[pos],  stopAtNonOption,  token);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	options.add(arguments[pos],  stopAtNonOption,  token);	  options.add(arguments[pos],    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
89	[BUG]  [BUGGY]  options.add(arguments[pos],  stopAtNonOption,  eatTheRest);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  options.add(arguments[pos],  stopAtNonOption,  eatTheRest);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	options.add(arguments[pos],  stopAtNonOption,  eatTheRest);	  options.add(arguments[pos],    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
90	[BUG]  [BUGGY]  return(opt  ==  null)?  null  :  tokens.toArray(new  String[]  {  },  options);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  return(opt  ==  null)?  null  :  tokens.toArray(new  String[]  {  },  options);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	return(opt  ==  null)?  null  :  tokens.toArray(new  String[]  {  },  options);	  return(tokens    ==    null)?    null    :    tokens.toArray(new    String[]    {    },    options);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
91	[BUG]  [BUGGY]  return(tokens  ==  null)?  null  :  options.toArray(new  String[]  {  }  );  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  return(tokens  ==  null)?  null  :  options.toArray(new  String[]  {  }  );  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	return(tokens  ==  null)?  null  :  options.toArray(new  String[]  {  }  );	  return(tokens    ==    null)?    null    :    tokens.toArray(new    String[]    {    },    options);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
92	[BUG]  [BUGGY]  return(opt  ==  null)?  null  :  tokens.toArray(new  String[]  {  }  );  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  return(opt  ==  null)?  null  :  tokens.toArray(new  String[]  {  }  );  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	return(opt  ==  null)?  null  :  tokens.toArray(new  String[]  {  }  );	  return(tokens    ==    null)?    null    :    tokens.toArray(new    String[]    {    },    opt);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
93	[BUG]  [BUGGY]  tokens.add( "-- ");  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  tokens.add( "-- ");  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	tokens.add( "-- ");	  tokens.add(   "-   ");    	non-compiled	[CE]  <identifier>  expected	23	None	replace
94	[BUG]  [BUGGY]  Ilerator  <  String>  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Ilerator  <  String>  iter  =  options.iterator();  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Ilerator  <  String>  iter  =  options.iterator();	  Iterator    <    String>    iter    =    arguments.iterator();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
95	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Option  option  =  options.getOption(opt,  stopAtNonOption);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Option  option  =  options.getOption(opt,  stopAtNonOption);	  Option    option    =    options.getOption(opt);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
96	[BUG]  [BUGGY]  Ilerator  iter  =  options.iterator();  tokens.add(arguments[pos]);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Ilerator  iter  =  options.iterator();  tokens.add(arguments[pos]);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Ilerator  iter  =  options.iterator();  tokens.add(arguments[pos]);	  Iterator    iter    =    options.iterator();    tokens.add(arguments[pos]);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
97	[BUG]  [BUGGY]  return(opt  ==  null)?  null  :  tokens.toArray(new  String[pos]);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  return(opt  ==  null)?  null  :  tokens.toArray(new  String[pos]);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	return(opt  ==  null)?  null  :  tokens.toArray(new  String[pos]);	  return(tokens    ==    null)?    null    :    tokens.toArray(new    String[pos]);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
98	[BUG]  [BUGGY]  Option  options  =  options.getOptions(opt);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Option  options  =  options.getOptions(opt);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Option  options  =  options.getOptions(opt);	  Option    options    =    options.getOptions();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
99	[BUG]  [BUGGY]  Option  options  =  options.getOptions(options);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Option  options  =  options.getOptions(options);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Option  options  =  options.getOptions(options);	  Option    options    =    options.getOptions();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
100	[BUG]  [BUGGY]  (tokens  ==  null)?  null  :  tokens.toArray(new  String[tokens.size()  ]);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  (tokens  ==  null)?  null  :  tokens.toArray(new  String[tokens.size()  ]);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	(tokens  ==  null)?  null  :  tokens.toArray(new  String[tokens.size()  ]);	  return(tokens!=    null)?    null    :    tokens.toArray(new    String[tokens.size()    ]);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
101	[BUG]  [BUGGY]  return(tokens!=  null)?  null  :  tokens.toArray(new  String[pos]);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  return(tokens!=  null)?  null  :  tokens.toArray(new  String[pos]);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	return(tokens!=  null)?  null  :  tokens.toArray(new  String[pos]);	  return(tokens    ==    null)?    null    :    tokens.toArray(new    String[pos]);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
102	[BUG]  [BUGGY]  Iterator  iter  =(this.options!=  null)?  this.options.iterator()  :  null;  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Iterator  iter  =(this.options!=  null)?  this.options.iterator()  :  null;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Iterator  iter  =(this.options!=  null)?  this.options.iterator()  :  null;	  Iterator    iter    =    this.options.iterator();    	non-compiled	[CE]  <identifier>  expected	55	None	replace
103	[BUG]  [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {  opt  },  options);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {  opt  },  options);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {  opt  },  options);	  return(tokens    ==    null)?    null    :    tokens.toArray(new    String[]    {    opt    }    );    	non-compiled	[CE]  <identifier>  expected	58	None	replace
104	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  else  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  else  {  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  else  {	  else    if(stopAtNonOption)    {    tokens.add(token);    }    else    {    for(int    pos    =    0;    pos    <    arguments.length;    pos++)    {    tokens.add(opt);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
105	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  iter);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Option  option  =  options.getOption(opt,  iter);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Option  option  =  options.getOption(opt,  iter);	  Option    option    =    options.getOption(pos);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
106	[BUG]  [BUGGY]  return(tokens!=  null)?  null  :  tokens.toArray(new  String[]  {  },  options);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  return(tokens!=  null)?  null  :  tokens.toArray(new  String[]  {  },  options);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	return(tokens!=  null)?  null  :  tokens.toArray(new  String[]  {  },  options);	  return(tokens    ==    null)?    null    :    tokens.toArray(new    String[]    {    },    options);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
107	[BUG]  [BUGGY]  tokens.add(getOpt());  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  tokens.add(getOpt());  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	tokens.add(getOpt());	  tokens.add(getPosition());    	non-compiled	[CE]  <identifier>  expected	43	None	replace
108	[BUG]  [BUGGY]  iter.add( "n ");  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  iter.add( "n ");  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	iter.add( "n ");	  iter.clear();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
109	[BUG]  [BUGGY]  tokens.add(getPos());  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  tokens.add(getPos());  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	tokens.add(getPos());	  tokens.add(getOptionName());    	non-compiled	[CE]  <identifier>  expected	28	None	replace
110	[BUG]  [BUGGY]  tokens.add(getOptName());  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  tokens.add(getOptName());  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	tokens.add(getOptName());	  tokens.add(getOptionName());    	non-compiled	[CE]  <identifier>  expected	28	None	replace
111	[BUG]  [BUGGY]  if(tokens  ==  null)  {  return(tokens!=  null)?  null  :  tokens.toArray(new  String[tokens.size()  ]);  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  if(tokens  ==  null)  {  return(tokens!=  null)?  null  :  tokens.toArray(new  String[tokens.size()  ]);  }  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	if(tokens  ==  null)  {  return(tokens!=  null)?  null  :  tokens.toArray(new  String[tokens.size()  ]);  }	  return(tokens!=    null)?    null    :    tokens.toArray(new    String[tokens.size()    ]);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
112	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  this.arguments.iterator();  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Iterator  <  String>  iter  =  this.arguments.iterator();  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Iterator  <  String>  iter  =  this.arguments.iterator();	  Iterator    <    String>    iter    =    arguments.iterator();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
113	[BUG]  [BUGGY]  Opcodes.Iterator  <  Option>  iter  =  this.options.iterator();  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Opcodes.Iterator  <  Option>  iter  =  this.options.iterator();  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Opcodes.Iterator  <  Option>  iter  =  this.options.iterator();	  Opcodes.Iterator    <    Option>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	56	None	replace
114	[BUG]  [BUGGY]  Opcodes.Iterator  <  Option>  iter  =  tokens.iterator();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Opcodes.Iterator  <  Option>  iter  =  tokens.iterator();  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Opcodes.Iterator  <  Option>  iter  =  tokens.iterator();	  Opcodes.Iterator    <    Option>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	56	None	replace
115	[BUG]  [BUGGY]  Opcodes.Iterator  <  Option>  iter  =(options  ==  null)?  options.iterator()  :  null;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Opcodes.Iterator  <  Option>  iter  =(options  ==  null)?  options.iterator()  :  null;  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Opcodes.Iterator  <  Option>  iter  =(options  ==  null)?  options.iterator()  :  null;	  Opcodes.Iterator    <    Option>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	56	None	replace
116	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  options.iterator();  tokens.add(opt);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Iterator  <  String>  iter  =  options.iterator();  tokens.add(opt);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Iterator  <  String>  iter  =  options.iterator();  tokens.add(opt);	  Iterator    iter    =    arguments.iterator();    tokens.add(opt);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
117	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  processNonOptionToken(token);  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  else  if(stopAtNonOption)  {  processNonOptionToken(token);  }  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	else  if(stopAtNonOption)  {  processNonOptionToken(token);  }	  else    if(stopAtNonOption)    {    tokens.add(token);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
118	[BUG]  [BUGGY]  Option  options  =  options.getOption(option);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Option  options  =  options.getOption(option);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Option  options  =  options.getOption(option);	  Option    options    =    options.getOption(opt);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
119	[BUG]  [BUGGY]  Option  options  =  options.getOption(opt,  iter);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Option  options  =  options.getOption(opt,  iter);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Option  options  =  options.getOption(opt,  iter);	  Option    options    =    options.getOption(opt);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
120	[BUG]  [BUGGY]  if(tokens!=  null)  {  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {  }  );  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  if(tokens!=  null)  {  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {  }  );  }  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	if(tokens!=  null)  {  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {  }  );  }	  return(tokens!=    null)?    null    :    tokens.toArray(new    String[]    {    }    );    	non-compiled	[CE]  <identifier>  expected	36	None	replace
121	[BUG]  [BUGGY]  return(tokens  ==  null  ||  tokens.size()  ==  0)?  null  :  tokens.toArray(new  String[]);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  return(tokens  ==  null  ||  tokens.size()  ==  0)?  null  :  tokens.toArray(new  String[]);  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	return(tokens  ==  null  ||  tokens.size()  ==  0)?  null  :  tokens.toArray(new  String[]);	  return(tokens    ==    null)?    null    :    tokens.toArray(new    String[]);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
122	[BUG]  [BUGGY]  iter.remove(arguments[pos]);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  iter.remove(arguments[pos]);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	iter.remove(arguments[pos]);	  iter.remove(option);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
123	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  this.options.iterator();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);      [BUGGY]  Iterator  <  String>  iter  =  this.options.iterator();  [BUGGY]        [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Iterator  <  String>  iter  =  this.options.iterator();	  Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
