bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(stopAtNonOption  &&  stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  if(stopAtNonOption  &&  stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	if(stopAtNonOption  &&  stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }	  if(stopAtNonOption    ||    stopAtNonOption)    {    tokens.add(   "--   ");    tokens.add(value);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
2	[BUG]  [BUGGY]  if(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  if(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	if(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  tokens.add(   "--   ");    tokens.add(value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
3	[BUG]  [BUGGY]  tokens.add( "-- "  +  this.stopAtNonOption,  value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( "-- "  +  this.stopAtNonOption,  value);  [BUGGY]        tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( "-- "  +  this.stopAtNonOption,  value);	  tokens.add(   "--   "    +    this.stopAtNonOption);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
4	[BUG]  [BUGGY]  tokens.add( "-- "  +  this.stopAtNonOption,  eatTheRest);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( "-- "  +  this.stopAtNonOption,  eatTheRest);  [BUGGY]        tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( "-- "  +  this.stopAtNonOption,  eatTheRest);	  tokens.add(   "--   "    +    this.stopAtNonOption);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
5	[BUG]  [BUGGY]  tokens.add( "[--] "  +  value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( "[--] "  +  value);  [BUGGY]        tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( "[--] "  +  value);	  tokens.add(   "[--]   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
6	[BUG]  [BUGGY]  tokens.add( "[--] "  +  stopAtNonOption);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( "[--] "  +  stopAtNonOption);  [BUGGY]        tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( "[--] "  +  stopAtNonOption);	  tokens.add(   "[--]   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
7	[BUG]  [BUGGY]  tokens.add( "[--] ",  value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( "[--] ",  value);  [BUGGY]        tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( "[--] ",  value);	  tokens.add(   "[--]   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
8	[BUG]  [BUGGY]  tokens.add( ",-- ",  value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( ",-- ",  value);  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( ",-- ",  value);	  tokens.add(   ",--   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
9	[BUG]  [BUGGY]  while(!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  while(!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	while(!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  While(eatTheRest)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
10	[BUG]  [BUGGY]  tokens.add( ":-- "  +  value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( ":-- "  +  value);  [BUGGY]        tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( ":-- "  +  value);	  tokens.add(   ":--   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
11	[BUG]  [BUGGY]  tokens.add( ":-- ",  value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( ":-- ",  value);  [BUGGY]        tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( ":-- ",  value);	  tokens.add(   ":--   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
12	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	||  stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }	  if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
13	[BUG]  [BUGGY]  if(stopAtNonOption  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  if(stopAtNonOption  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	if(stopAtNonOption  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }	  if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
14	[BUG]  [BUGGY]  While(stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  While(stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	While(stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }	  if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
15	[BUG]  [BUGGY]  tokens.add(getNonOptionToken());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add(getNonOptionToken());  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add(getNonOptionToken());	  tokens.add(getNonOptionValue());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
16	[BUG]  [BUGGY]  tokens.add(getNonOptionValue(),  value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add(getNonOptionValue(),  value);  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add(getNonOptionValue(),  value);	  tokens.add(getNonOptionValue());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
17	[BUG]  [BUGGY]  tokens.add(getNonOptionValue()  + "-- ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add(getNonOptionValue()  + "-- ");  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add(getNonOptionValue()  + "-- ");	  tokens.add(getNonOptionValue());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
18	[BUG]  [BUGGY]  tokens.add(value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add(value);  [BUGGY]        tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add(value);	  tokens.remove(0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
19	[BUG]  [BUGGY]  tokens.add( "-- ").equals(value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( "-- ").equals(value);  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( "-- ").equals(value);	  tokens.add(   "--   ".equals(value));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
20	[BUG]  [BUGGY]  tokens.add( "[-- "  +  value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( "[-- "  +  value);  [BUGGY]        tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( "[-- "  +  value);	  tokens.add(   "[--   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	36	None	replace
21	[BUG]  [BUGGY]  tokens.add( "[--n ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( "[--n ");  [BUGGY]        tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( "[--n ");	  tokens.add(   "[--   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	36	None	replace
22	[BUG]  [BUGGY]  tokens.add( "--non-option.n ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( "--non-option.n ");  [BUGGY]        tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( "--non-option.n ");	  tokens.add(   "--non-option.   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
23	[BUG]  [BUGGY]  safeToken(this.stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  safeToken(this.stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	safeToken(this.stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  safeToken(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
24	[BUG]  [BUGGY]  safeToken(stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  safeToken(stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	safeToken(stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }	  safeToken(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
25	[BUG]  [BUGGY]  tokens.add( "-- ").add(this.stopAtNonOption);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( "-- ").add(this.stopAtNonOption);  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( "-- ").add(this.stopAtNonOption);	  tokens.add(   "--   ").add(value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
26	[BUG]  [BUGGY]  tokens.add( "-- ").add(value,  stopAtNonOption);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( "-- ").add(value,  stopAtNonOption);  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( "-- ").add(value,  stopAtNonOption);	  tokens.add(   "--   ").add(value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
27	[BUG]  [BUGGY]  tokens.add( "-- ").add(token);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( "-- ").add(token);  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( "-- ").add(token);	  tokens.add(   "--   ").add(value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
28	[BUG]  [BUGGY]  tokens.add( ";--n ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( ";--n ");  [BUGGY]        tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( ";--n ");	  tokens.add(   ";--   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
29	[BUG]  [BUGGY]  tokens.add( ";-- "  +  value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( ";-- "  +  value);  [BUGGY]        tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( ";-- "  +  value);	  tokens.add(   ";--   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
30	[BUG]  [BUGGY]  tokens.add( ";-- ",  value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( ";-- ",  value);  [BUGGY]        tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( ";-- ",  value);	  tokens.add(   ";--   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
31	[BUG]  [BUGGY]  tokens.addAll(stopAtNonOption,  value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.addAll(stopAtNonOption,  value);  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.addAll(stopAtNonOption,  value);	  tokens.addAll(stopAtNonOption);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
32	[BUG]  [BUGGY]  tokens.addAll(stopAtNonOptionToken);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.addAll(stopAtNonOptionToken);  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.addAll(stopAtNonOptionToken);	  tokens.addAll(stopAtNonOption);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
33	[BUG]  [BUGGY]  tokens.add(stopAtNonOption);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add(stopAtNonOption);  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add(stopAtNonOption);	  tokens.addAll(stopAtNonOption);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
34	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Tokens.add( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  if(stopAtNonOption)  {  Tokens.add( "-- ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	if(stopAtNonOption)  {  Tokens.add( "-- ");  }	  Tokens.add(   "--   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
35	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Tokens.add( "-- ");  }  else  {  tokens.add( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  if(stopAtNonOption)  {  Tokens.add( "-- ");  }  else  {  tokens.add( "-- ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	if(stopAtNonOption)  {  Tokens.add( "-- ");  }  else  {  tokens.add( "-- ");  }	  Tokens.add(   "--   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
36	[BUG]  [BUGGY]  tokens.addAll(stopAtNonOption.tokens,  value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.addAll(stopAtNonOption.tokens,  value);  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.addAll(stopAtNonOption.tokens,  value);	  tokens.addAll(stopAtNonOption.tokens);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
37	[BUG]  [BUGGY]  tokens.addAll(stopAtNonOption.getTokens());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.addAll(stopAtNonOption.getTokens());  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.addAll(stopAtNonOption.getTokens());	  tokens.addAll(stopAtNonOption.tokens);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
38	[BUG]  [BUGGY]  tokens.add(stopAtNonOption.tokens);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add(stopAtNonOption.tokens);  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add(stopAtNonOption.tokens);	  tokens.addAll(stopAtNonOption.tokens);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
39	[BUG]  [BUGGY]  tokens.put( "-- ",  null);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.put( "-- ",  null);  [BUGGY]        tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.put( "-- ",  null);	  tokens.put(   "--   ",   "--   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
40	[BUG]  [BUGGY]  if(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add( "-- ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  if(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add( "-- ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	if(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add( "-- ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  tokens.add(   "--   ");    tokens.add(   "--   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
41	[BUG]  [BUGGY]  tokens.add( "-- "  +  value,  stopAtNonOption,  eatTheRest);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( "-- "  +  value,  stopAtNonOption,  eatTheRest);  [BUGGY]        tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( "-- "  +  value,  stopAtNonOption,  eatTheRest);	  tokens.add(   "--   "    +    value,    stopAtNonOption);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
42	[BUG]  [BUGGY]  tokens.add( "-- "  +  value,  eatTheRest);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( "-- "  +  value,  eatTheRest);  [BUGGY]        tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( "-- "  +  value,  eatTheRest);	  tokens.add(   "--   "    +    value,    stopAtNonOption);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
43	[BUG]  [BUGGY]  tokens.add( "--null ",  null);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( "--null ",  null);  [BUGGY]        tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( "--null ",  null);	  tokens.add(   "--null   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	22	None	replace
44	[BUG]  [BUGGY]  tokens.add( "--null ",  value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( "--null ",  value);  [BUGGY]        tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( "--null ",  value);	  tokens.add(   "--null   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	22	None	replace
45	[BUG]  [BUGGY]  tokens.add( "--option ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( "--option ");  [BUGGY]        tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( "--option ");	  tokens.add(   "--non-option   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
46	[BUG]  [BUGGY]  tokens.add( "--non-option: ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( "--non-option: ");  [BUGGY]        tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( "--non-option: ");	  tokens.add(   "--non-option   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
47	[BUG]  [BUGGY]  tokens.add( "-- ");  }  else  if(stopAtNonOption)  {  tokens.add( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( "-- ");  }  else  if(stopAtNonOption)  {  tokens.add( "-- ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( "-- ");  }  else  if(stopAtNonOption)  {  tokens.add( "-- ");  }	  tokens.add(   "--   ");    }    else    {    tokens.add(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
48	[BUG]  [BUGGY]  tokens.add( "-- ");  }  else  if(!stopAtNonOption)  {  tokens.add( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( "-- ");  }  else  if(!stopAtNonOption)  {  tokens.add( "-- ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( "-- ");  }  else  if(!stopAtNonOption)  {  tokens.add( "-- ");  }	  tokens.add(   "--   ");    }    else    {    tokens.add(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
49	[BUG]  [BUGGY]  if(stopAtNonOption  &&  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  if(stopAtNonOption  &&  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	if(stopAtNonOption  &&  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  if(stopAtNonOption    ||    stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
50	[BUG]  [BUGGY]  tokens.remove('-');  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.remove('-');  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.remove('-');	  tokens.add('-');    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
51	[BUG]  [BUGGY]  ||  stopAtNonOption  ||  eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  ||  stopAtNonOption  ||  eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	||  stopAtNonOption  ||  eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }	  ||    stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
52	[BUG]  [BUGGY]  ||  eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  ||  eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	||  eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }	  ||    stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
53	[BUG]  [BUGGY]  tokens.remove( "-- "  +  value,  stopAtNonOption);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.remove( "-- "  +  value,  stopAtNonOption);  [BUGGY]        tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.remove( "-- "  +  value,  stopAtNonOption);	  tokens.remove(   "--   "    +    value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
54	[BUG]  [BUGGY]  tokens.add( "--nonOptionToken ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( "--nonOptionToken ");  [BUGGY]        tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( "--nonOptionToken ");	  tokens.add(   "--nonOption       ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
55	[BUG]  [BUGGY]  tokens.add( "--nonOption  token ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( "--nonOption  token ");  [BUGGY]        tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( "--nonOption  token ");	  tokens.add(   "--nonOption       ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
56	[BUG]  [BUGGY]  tokens.add( "--stopAtNonOption   ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( "--stopAtNonOption   ");  [BUGGY]        tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( "--stopAtNonOption   ");	  tokens.add(   "--nonOption       ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
57	[BUG]  [BUGGY]  tokens.add( "-- "  +  stopAtNonOption,  eatTheRest);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( "-- "  +  stopAtNonOption,  eatTheRest);  [BUGGY]        tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( "-- "  +  stopAtNonOption,  eatTheRest);	  tokens.add(   "--   "    +    eatTheRest);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
58	[BUG]  [BUGGY]  while(stopAtNonOption  &&  value!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  while(stopAtNonOption  &&  value!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	while(stopAtNonOption  &&  value!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  while(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
59	[BUG]  [BUGGY]  while(stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  while(stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	while(stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }	  while(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
60	[BUG]  [BUGGY]  tokens.add( ",-- "  +  value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( ",-- "  +  value);  [BUGGY]        tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( ",-- "  +  value);	  tokens.add(   "--   "    +    eatTheRest);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
61	[BUG]  [BUGGY]  tokens.add( "-- ").add(key);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( "-- ").add(key);  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( "-- ").add(key);	  tokens.add(   "--   ").add(value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
62	[BUG]  [BUGGY]  tokens.add( "--null "  +  value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( "--null "  +  value);  [BUGGY]        tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( "--null "  +  value);	  tokens.add(   "--null   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	22	None	replace
63	[BUG]  [BUGGY]  tokens.add(getNonOptionValue()  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add(getNonOptionValue()  +  1);  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add(getNonOptionValue()  +  1);	  tokens.add(getNonOptionValue());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
64	[BUG]  [BUGGY]  &&  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  &&  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	&&  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  ||    stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
65	[BUG]  [BUGGY]  if(eatTheRest  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  if(eatTheRest  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	if(eatTheRest  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  if(stopAtNonOption    ||    stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
66	[BUG]  [BUGGY]  tokens.add( "--nonOption  - ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( "--nonOption  - ");  [BUGGY]        tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( "--nonOption  - ");	  tokens.add(   "--nonOption       ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
67	[BUG]  [BUGGY]  tokens.remove(key);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.remove(key);  [BUGGY]        tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.remove(key);	  tokens.remove(0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
68	[BUG]  [BUGGY]  while(eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  while(eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	while(eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }	  while(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
69	[BUG]  [BUGGY]  tokens.add( "--non-option ",  value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( "--non-option ",  value);  [BUGGY]        tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( "--non-option ",  value);	  tokens.add(   "--non-option   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
70	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Tokens.add( "-- ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  if(stopAtNonOption)  {  Tokens.add( "-- ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	if(stopAtNonOption)  {  Tokens.add( "-- ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Tokens.add(   "--   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
71	[BUG]  [BUGGY]  tokens.add( "-- ").equals(value));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( "-- ").equals(value));  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( "-- ").equals(value));	  tokens.add(   "--   ".equals(value));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
72	[BUG]  [BUGGY]  tryWhile(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tryWhile(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tryWhile(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  While(eatTheRest)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
73	[BUG]  [BUGGY]  tokens.put( "-- "  +  value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.put( "-- "  +  value);  [BUGGY]        tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.put( "-- "  +  value);	  tokens.remove(   "--   "    +    value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
74	[BUG]  [BUGGY]  tokens.addAll(eatTheRest);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.addAll(eatTheRest);  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.addAll(eatTheRest);	  tokens.addAll(stopAtNonOption);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
75	[BUG]  [BUGGY]  tokens.add( ":-- ",  stopAtNonOption);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( ":-- ",  stopAtNonOption);  [BUGGY]        tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( ":-- ",  stopAtNonOption);	  tokens.add(   ":--   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
76	[BUG]  [BUGGY]  tokens.add(getNonOptionValue(),  stopAtNonOption);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add(getNonOptionValue(),  stopAtNonOption);  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add(getNonOptionValue(),  stopAtNonOption);	  tokens.add(getNonOptionValue());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
77	[BUG]  [BUGGY]  tokens.add( "-- ",  eatTheRest);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( "-- ",  eatTheRest);  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( "-- ",  eatTheRest);	  tokens.add(   "--   ",    value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
78	[BUG]  [BUGGY]  tokens.remove( "-- "  +  eatTheRest);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.remove( "-- "  +  eatTheRest);  [BUGGY]        tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.remove( "-- "  +  eatTheRest);	  tokens.remove(   "--   "    +    value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
79	[BUG]  [BUGGY]  if(eatTheRest)  {  tokens.add( "-- ");  tokens.add( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  if(eatTheRest)  {  tokens.add( "-- ");  tokens.add( "-- ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	if(eatTheRest)  {  tokens.add( "-- ");  tokens.add( "-- ");  }	  tokens.add(   "--   ");    tokens.add(   "--   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
80	[BUG]  [BUGGY]  if(eatTheRest)  {  throw  new  IllegalArgumentException( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  if(eatTheRest)  {  throw  new  IllegalArgumentException( "-- ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	if(eatTheRest)  {  throw  new  IllegalArgumentException( "-- ");  }	  if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
81	[BUG]  [BUGGY]  tokens.add( "- ".equals(value));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( "- ".equals(value));  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( "- ".equals(value));	  tokens.add('-');    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
82	[BUG]  [BUGGY]  tokens.add( "- ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( "- ");  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( "- ");	  tokens.add('-');    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
83	[BUG]  [BUGGY]  tokens.add( "--null ",  stopAtNonOption);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( "--null ",  stopAtNonOption);  [BUGGY]        tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( "--null ",  stopAtNonOption);	  tokens.add(   "--null   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	22	None	replace
84	[BUG]  [BUGGY]  while(!eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  while(!eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	while(!eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }	  while(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
85	[BUG]  [BUGGY]  tokens.add( "-- "  +  value,  stopAtNonOption));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( "-- "  +  value,  stopAtNonOption));  [BUGGY]        tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( "-- "  +  value,  stopAtNonOption));	  tokens.add(   "--   "    +    value,    stopAtNonOption);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
86	[BUG]  [BUGGY]  tokens.add( "--non-Option ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  tokens.add( "--non-Option ");  [BUGGY]        tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	tokens.add( "--non-Option ");	  tokens.add(   "--non-option   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
87	[BUG]  [BUGGY]  Tokens.add( "-- "  +  stopAtNonOption);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  Tokens.add( "-- "  +  stopAtNonOption);  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	Tokens.add( "-- "  +  stopAtNonOption);	  Tokens.add(   "--   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
88	[BUG]  [BUGGY]  Tokens.mark( "-- ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  Tokens.mark( "-- ");  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	Tokens.mark( "-- ");	  Tokens.add(   "--   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
89	[BUG]  [BUGGY]  Tokens.add(tokens, "-- ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  Tokens.add(tokens, "-- ");  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	Tokens.add(tokens, "-- ");	  Tokens.add(   "--   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
90	[BUG]  [BUGGY]  if(eatTheRest)  {  tokens.add( "-- ");  tokens.add(value);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;      [BUGGY]  if(eatTheRest)  {  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	187	187	2	replace	if(eatTheRest)  {  tokens.add( "-- ");  tokens.add(value);  }	  tokens.add(   "--   ");    tokens.add(value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
