bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(stopAtNonOption)  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(stopAtNonOption)  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(stopAtNonOption)  {	  if(!options.hasOption(token))    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
2	[BUG]  [BUGGY]  if(stopAtNonOption  ||!options.hasOption(token))  {  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(stopAtNonOption  ||!options.hasOption(token))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(stopAtNonOption  ||!options.hasOption(token))  {	  if(!options.hasOption(token))    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
3	[BUG]  [BUGGY]  if(!options.hasOption(opt))  {  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(!options.hasOption(opt))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(!options.hasOption(opt))  {	  if(!options.hasOption(token))    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
4	[BUG]  [BUGGY]  tokens.add( "- "  +  opt);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "- "  +  opt);  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	tokens.add( "- "  +  opt);	  tokens.add(   "-   "    +    pos);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
5	[BUG]  [BUGGY]  tokens.add( "- "  +  pos  +  1);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "- "  +  pos  +  1);  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	tokens.add( "- "  +  pos  +  1);	  tokens.add(   "-   "    +    pos);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
6	[BUG]  [BUGGY]  tokens.add( "- "  +  getPosition(1));  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "- "  +  getPosition(1));  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	tokens.add( "- "  +  getPosition(1));	  tokens.add(   "-   "    +    pos);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
7	[BUG]  [BUGGY]  tokens.add( "- "+token.equals(token));  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "- "+token.equals(token));  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	tokens.add( "- "+token.equals(token));	  tokens.add(   "-   ".equals(token));    	non-compiled	[CE]  <identifier>  expected	34	None	replace
8	[BUG]  [BUGGY]  tokens.add( "- ").equals(token));  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "- ").equals(token));  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	tokens.add( "- ").equals(token));	  tokens.add(   "-   ".equals(token));    	non-compiled	[CE]  <identifier>  expected	34	None	replace
9	[BUG]  [BUGGY]  if(options.hasOption(token)&&  options.hasOption(token))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(options.hasOption(token)&&  options.hasOption(token))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(options.hasOption(token)&&  options.hasOption(token))  {	  if(options.hasOption(token)||    options.hasOption(token))    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
10	[BUG]  [BUGGY]  if(options.hasOption(opt)||  options.hasOption(token))  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(options.hasOption(opt)||  options.hasOption(token))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(options.hasOption(opt)||  options.hasOption(token))  {	  if(options.hasOption(token)||    options.hasOption(token))    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
11	[BUG]  [BUGGY]  if(options.hasArg(token)||  options.hasOption(token))  {  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(options.hasArg(token)||  options.hasOption(token))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(options.hasArg(token)||  options.hasOption(token))  {	  if(options.hasOption(token)||    options.hasOption(token))    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
12	[BUG]  [BUGGY]  token  =(token.startsWith( "- ")||  token.startsWith( "-- "))?  token  :  null;  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  token  =(token.startsWith( "- ")||  token.startsWith( "-- "))?  token  :  null;  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	token  =(token.startsWith( "- ")||  token.startsWith( "-- "))?  token  :  null;	  token    =(token.startsWith(   "-+   ")||    token.startsWith(   "--   "))?    token    :    null;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
13	[BUG]  [BUGGY]  token  =(token.startsWith( "-+ ")||  token.startsWith( "-- "))?  null  :  token;  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  token  =(token.startsWith( "-+ ")||  token.startsWith( "-- "))?  null  :  token;  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	token  =(token.startsWith( "-+ ")||  token.startsWith( "-- "))?  null  :  token;	  token    =(token.startsWith(   "-+   ")||    token.startsWith(   "--   "))?    token    :    null;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
14	[BUG]  [BUGGY]  tokens.add( "- "  +  token.toLowerCase());  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "- "  +  token.toLowerCase());  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	tokens.add( "- "  +  token.toLowerCase());	  tokens.add(   "-   "    +    token);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
15	[BUG]  [BUGGY]  tokens.add( "- "  +  token.substring(1));  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "- "  +  token.substring(1));  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	tokens.add( "- "  +  token.substring(1));	  tokens.add(   "-   "    +    token);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
16	[BUG]  [BUGGY]  if(opt.length()  ==  0  ||  options.hasOption(token))  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(opt.length()  ==  0  ||  options.hasOption(token))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(opt.length()  ==  0  ||  options.hasOption(token))  {	  if(token.length()    ==    0    ||    options.hasOption(opt))    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
17	[BUG]  [BUGGY]  tokens.add(token,  stopAtNonOption)+  1;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  tokens.add(token,  stopAtNonOption)+  1;  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	tokens.add(token,  stopAtNonOption)+  1;	  tokens.add(token,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
18	[BUG]  [BUGGY]  tokens.add(token,  stopAtNonOption)&&  options.hasOption(token);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  tokens.add(token,  stopAtNonOption)&&  options.hasOption(token);  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	tokens.add(token,  stopAtNonOption)&&  options.hasOption(token);	  tokens.add(token,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
19	[BUG]  [BUGGY]  if(options.hasOption(token)&&  options.hasOption(opt))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(options.hasOption(token)&&  options.hasOption(opt))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(options.hasOption(token)&&  options.hasOption(opt))  {	  if(options.hasOption(token)||    options.hasOption(opt))    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
20	[BUG]  [BUGGY]  if(options.hasOption(token)||  options.hasOption(pos))  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(options.hasOption(token)||  options.hasOption(pos))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(options.hasOption(token)||  options.hasOption(pos))  {	  if(options.hasOption(token)||    options.hasOption(opt))    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
21	[BUG]  [BUGGY]  if(options.hasOption(token)||  options.hasOption( "- "))  {  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(options.hasOption(token)||  options.hasOption( "- "))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(options.hasOption(token)||  options.hasOption( "- "))  {	  if(options.hasOption(token)||    options.hasOption(opt))    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
22	[BUG]  [BUGGY]  tokens.add( "-- "  +  token);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "-- "  +  token);  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	tokens.add( "-- "  +  token);	  tokens.add(   "--   ");    	non-compiled	[CE]  <identifier>  expected	23	None	replace
23	[BUG]  [BUGGY]  tokens.add( "-- "  +  pos);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "-- "  +  pos);  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	tokens.add( "-- "  +  pos);	  tokens.add(   "--   ");    	non-compiled	[CE]  <identifier>  expected	23	None	replace
24	[BUG]  [BUGGY]  List  <  String>  iter  =  options.values().iterator();  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  List  <  String>  iter  =  options.values().iterator();  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	List  <  String>  iter  =  options.values().iterator();	  Iterator    <    String>    iter    =    options.values().iterator();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
25	[BUG]  [BUGGY]  if  (token.length()  ==  0)  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if  (token.length()  ==  0)  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if  (token.length()  ==  0)  {	  if    (token.length()    ==    1)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
26	[BUG]  [BUGGY]  if  (token.length()  ==  0  ||  token.charAt(token.length()  -  1)!=  '-')  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if  (token.length()  ==  0  ||  token.charAt(token.length()  -  1)!=  '-')  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if  (token.length()  ==  0  ||  token.charAt(token.length()  -  1)!=  '-')  {	  if    (token.length()    ==    1)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
27	[BUG]  [BUGGY]  if  (token.length()!=  0)  {  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if  (token.length()!=  0)  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if  (token.length()!=  0)  {	  if    (token.length()    ==    1)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
28	[BUG]  [BUGGY]  if(token.length()  >=  1  &&  options.hasOption(token))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(token.length()  >=  1  &&  options.hasOption(token))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(token.length()  >=  1  &&  options.hasOption(token))  {	  if(token.length()!=    1    &&    options.hasOption(token))    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
29	[BUG]  [BUGGY]  if(pos  >  0  ||  options.hasOption(token))  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(pos  >  0  ||  options.hasOption(token))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(pos  >  0  ||  options.hasOption(token))  {	  if(token.length()    >    0    ||    options.hasOption(token))    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
30	[BUG]  [BUGGY]  token  =(token.startsWith( "/   ")||  token.startsWith( "-   "))?  null  :  token;  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  token  =(token.startsWith( "/   ")||  token.startsWith( "-   "))?  null  :  token;  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	token  =(token.startsWith( "/   ")||  token.startsWith( "-   "))?  null  :  token;	  token    =(token.startsWith(   "-   ")||    token.startsWith(   "-   "))?    null    :    token;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
31	[BUG]  [BUGGY]  if  (token.length()  >  2  &&  options.hasOption(token))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if  (token.length()  >  2  &&  options.hasOption(token))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if  (token.length()  >  2  &&  options.hasOption(token))  {	  if    (token.length()    >=    2    &&    options.hasOption(token))    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
32	[BUG]  [BUGGY]  List  <  String>  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  List  <  String>  iter  =  options.iterator();  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	List  <  String>  iter  =  options.iterator();	  List    <    String>    iter    =    options.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
33	[BUG]  [BUGGY]  Ilerator  <  String>  iter  =  options.values().iterator();  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  Ilerator  <  String>  iter  =  options.values().iterator();  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	Ilerator  <  String>  iter  =  options.values().iterator();	  Ilerator    <    String>    iter    =    options.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
34	[BUG]  [BUGGY]  if(stopAtNonOption  ||  options.hasOption(token))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(stopAtNonOption  ||  options.hasOption(token))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(stopAtNonOption  ||  options.hasOption(token))  {	  if(!stopAtNonOption    &&    options.hasOption(token))    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
35	[BUG]  [BUGGY]  if(stopAtNonOption  &&  options.hasOption(token))  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(stopAtNonOption  &&  options.hasOption(token))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(stopAtNonOption  &&  options.hasOption(token))  {	  if(!stopAtNonOption    &&    options.hasOption(token))    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
36	[BUG]  [BUGGY]  if(options.hasOption(token)||  options.hasOption(option))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(options.hasOption(token)||  options.hasOption(option))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(options.hasOption(token)||  options.hasOption(option))  {	  if(token.length()    ==    0    ||    options.hasOption(option))    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
37	[BUG]  [BUGGY]  if(options.contains( "- ")||  options.hasOption(option))  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(options.contains( "- ")||  options.hasOption(option))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(options.contains( "- ")||  options.hasOption(option))  {	  if(token.length()    ==    0    ||    options.hasOption(option))    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
38	[BUG]  [BUGGY]  tokens.add('-');  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  tokens.add('-');  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	tokens.add('-');	  tokens.add(chope);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
39	[BUG]  [BUGGY]  tokens.add( ": ");  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  tokens.add( ": ");  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	tokens.add( ": ");	  tokens.add(opt);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
40	[BUG]  [BUGGY]  tokens.add(pos);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  tokens.add(pos);  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	tokens.add(pos);	  tokens.add(opt);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
41	[BUG]  [BUGGY]  if(options.contains(token)||  token.length()  ==  0  ||  tokens.contains(token))  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(options.contains(token)||  token.length()  ==  0  ||  tokens.contains(token))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(options.contains(token)||  token.length()  ==  0  ||  tokens.contains(token))  {	  if(token.length()    ==    0    ||    options.contains(token))    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
42	[BUG]  [BUGGY]  if(options.contains(token))  {  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(options.contains(token))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(options.contains(token))  {	  if(token.length()    ==    0    ||    options.contains(token))    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
43	[BUG]  [BUGGY]  if(token.length()  ==  0  &&  options.contains(token))  {  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(token.length()  ==  0  &&  options.contains(token))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(token.length()  ==  0  &&  options.contains(token))  {	  if(token.length()    ==    0    ||    options.contains(token))    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
44	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  options.getIterables().iterator();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  Iterator  <  String>  iter  =  options.getIterables().iterator();  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	Iterator  <  String>  iter  =  options.getIterables().iterator();	  Iterator    <    String>    iter    =    options.getOptions().iterator();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
45	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  options.getOptOptions().iterator();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  Iterator  <  String>  iter  =  options.getOptOptions().iterator();  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	Iterator  <  String>  iter  =  options.getOptOptions().iterator();	  Iterator    <    String>    iter    =    options.getOptions().iterator();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
46	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  options.getAllOptions().iterator();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  Iterator  <  String>  iter  =  options.getAllOptions().iterator();  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	Iterator  <  String>  iter  =  options.getAllOptions().iterator();	  Iterator    <    String>    iter    =    options.getOptions().iterator();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
47	[BUG]  [BUGGY]  if(options.hasOption(pos))  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(options.hasOption(pos))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(options.hasOption(pos))  {	  if(options.hasOption(opt))    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
48	[BUG]  [BUGGY]  if(token.length()!=  1  &&  options.hasOption(opt))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(token.length()!=  1  &&  options.hasOption(opt))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(token.length()!=  1  &&  options.hasOption(opt))  {	  if(token.length()!=    1    &&    options.hasOption(token))    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
49	[BUG]  [BUGGY]  if(opt.length()  ==  0  ||  options.hasOption(option))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(opt.length()  ==  0  ||  options.hasOption(option))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(opt.length()  ==  0  ||  options.hasOption(option))  {	  if(token.length()    ==    0    ||    options.hasOption(option))    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
50	[BUG]  [BUGGY]  if(token.length()  ==  0  ||  options.contains(opt))  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(token.length()  ==  0  ||  options.contains(opt))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(token.length()  ==  0  ||  options.contains(opt))  {	  if(token.length()    ==    0    ||    options.contains(token))    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
51	[BUG]  [BUGGY]  if(pos  >  0  ||  options.contains(token))  {  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(pos  >  0  ||  options.contains(token))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(pos  >  0  ||  options.contains(token))  {	  if(token.length()    ==    0    ||    options.contains(token))    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
52	[BUG]  [BUGGY]  tokens.add( "- "  +  option);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "- "  +  option);  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	tokens.add( "- "  +  option);	  tokens.add(   "-   "    +    pos);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
53	[BUG]  [BUGGY]  tokens.add( "--? ");  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "--? ");  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	tokens.add( "--? ");	  tokens.add(   "--   ");    	non-compiled	[CE]  <identifier>  expected	23	None	replace
54	[BUG]  [BUGGY]  tokens.add( "-- "  +  opt);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "-- "  +  opt);  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	tokens.add( "-- "  +  opt);	  tokens.add(   "--   ");    	non-compiled	[CE]  <identifier>  expected	23	None	replace
55	[BUG]  [BUGGY]  tokens.add( "-- ".equals(token));  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "-- ".equals(token));  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	tokens.add( "-- ".equals(token));	  tokens.add(   "-   ".equals(token));    	non-compiled	[CE]  <identifier>  expected	34	None	replace
56	[BUG]  [BUGGY]  tokens.add( "- "  +  token));  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "- "  +  token));  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	tokens.add( "- "  +  token));	  tokens.add(   "-   ".equals(token));    	non-compiled	[CE]  <identifier>  expected	34	None	replace
57	[BUG]  [BUGGY]  if(token.length()  ==  0  ||  options.hasOption( "- "))  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(token.length()  ==  0  ||  options.hasOption( "- "))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(token.length()  ==  0  ||  options.hasOption( "- "))  {	  if(token.length()    ==    0    ||    options.hasOption(opt))    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
58	[BUG]  [BUGGY]  token  =(token.startsWith( "-+ ")&&  token.startsWith( "-- "))?  token  :  null;  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  token  =(token.startsWith( "-+ ")&&  token.startsWith( "-- "))?  token  :  null;  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	token  =(token.startsWith( "-+ ")&&  token.startsWith( "-- "))?  token  :  null;	  token    =(token.startsWith(   "-+   ")||    token.startsWith(   "--   "))?    token    :    null;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
59	[BUG]  [BUGGY]  if(!options.hasOption(token)||  options.hasOption(token))  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(!options.hasOption(token)||  options.hasOption(token))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(!options.hasOption(token)||  options.hasOption(token))  {	  if(!options.hasOption(token))    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
60	[BUG]  [BUGGY]  if  (token.startsWith( "- "))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if  (token.startsWith( "- "))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if  (token.startsWith( "- "))  {	  if    (token.length()    ==    1)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
61	[BUG]  [BUGGY]  tokens.add( "-null ");  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "-null ");  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	tokens.add( "-null ");	  tokens.add(   "-n   ");    	non-compiled	[CE]  <identifier>  expected	15	None	replace
62	[BUG]  [BUGGY]  tokens.add( "-? ");  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "-? ");  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	tokens.add( "-? ");	  tokens.add(   "-n   ");    	non-compiled	[CE]  <identifier>  expected	15	None	replace
63	[BUG]  [BUGGY]  tokens.add( "-n "  +  token);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "-n "  +  token);  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	tokens.add( "-n "  +  token);	  tokens.add(   "-   "    +    token);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
64	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  options.getOption( "- ").iterator();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  Iterator  <  String>  iter  =  options.getOption( "- ").iterator();  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	Iterator  <  String>  iter  =  options.getOption( "- ").iterator();	  Iterator    <    String>    iter    =    options.getOptions().iterator();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
65	[BUG]  [BUGGY]  List  <  String>  iter  =  options.list().iterator();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  List  <  String>  iter  =  options.list().iterator();  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	List  <  String>  iter  =  options.list().iterator();	  List    <    String>    iter    =    options.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
66	[BUG]  [BUGGY]  tokens.add(opt,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  tokens.add(opt,  stopAtNonOption);  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	tokens.add(opt,  stopAtNonOption);	  tokens.add(token,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
67	[BUG]  [BUGGY]  if(token.length()  <  =  0  ||  options.contains(token))  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(token.length()  <  =  0  ||  options.contains(token))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(token.length()  <  =  0  ||  options.contains(token))  {	  if(token.length()    ==    0    ||    options.contains(token))    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
68	[BUG]  [BUGGY]  if(token.length()!=  0  ||  options.contains(token))  {  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(token.length()!=  0  ||  options.contains(token))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(token.length()!=  0  ||  options.contains(token))  {	  if(token.length()    ==    0    ||    options.contains(token))    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
69	[BUG]  [BUGGY]  if(token.length()  ==  0  ||  options.contains(option))  {  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(token.length()  ==  0  ||  options.contains(option))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(token.length()  ==  0  ||  options.contains(option))  {	  if(token.length()    ==    0    ||    options.contains(token))    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
70	[BUG]  [BUGGY]  if(token.length()!=  0  &&  options.hasOption(opt))  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(token.length()!=  0  &&  options.hasOption(opt))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(token.length()!=  0  &&  options.hasOption(opt))  {	  if    (token.length()!=    0    &&    options.hasOption(token))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
71	[BUG]  [BUGGY]  if(options.hasOption(opt)||  options.hasOption(opt))  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(options.hasOption(opt)||  options.hasOption(opt))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(options.hasOption(opt)||  options.hasOption(opt))  {	  if(options.hasOption(opt))    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
72	[BUG]  [BUGGY]  if(options.hasOption(arguments))  {  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(options.hasOption(arguments))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(options.hasOption(arguments))  {	  if(options.hasOption(opt))    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
73	[BUG]  [BUGGY]  if(!stopAtNonOption  &&  options.hasOption(opt))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(!stopAtNonOption  &&  options.hasOption(opt))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(!stopAtNonOption  &&  options.hasOption(opt))  {	  if(!stopAtNonOption    &&    options.hasOption(token))    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
74	[BUG]  [BUGGY]  if(token.length()!=  1)  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(token.length()!=  1)  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(token.length()!=  1)  {	  if    (token.length()    ==    1)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
75	[BUG]  [BUGGY]  if(token.length()  <  1)  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(token.length()  <  1)  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(token.length()  <  1)  {	  if    (token.length()    ==    1)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
76	[BUG]  [BUGGY]  tokens.add( "- "  +  getName());  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "- "  +  getName());  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	tokens.add( "- "  +  getName());	  tokens.add(   "-   "    +    token);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
77	[BUG]  [BUGGY]  if(options.hasOption(opt)&&  options.hasOption(token))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(options.hasOption(opt)&&  options.hasOption(token))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(options.hasOption(opt)&&  options.hasOption(token))  {	  if(options.hasOption(token)||    options.hasOption(token))    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
78	[BUG]  [BUGGY]  token  =(token.startsWith( "-+ ")||  token.startsWith( "--))?  token  :  null;  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  token  =(token.startsWith( "-+ ")||  token.startsWith( "--))?  token  :  null;  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	token  =(token.startsWith( "-+ ")||  token.startsWith( "--))?  token  :  null;	  token    =(token.startsWith(   "-+   ")||    token.startsWith(   "--   "))?    token    :    null;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
79	[BUG]  [BUGGY]  if  (token.length()  >=  0  &&  options.hasOption(token))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if  (token.length()  >=  0  &&  options.hasOption(token))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if  (token.length()  >=  0  &&  options.hasOption(token))  {	  if    (token.length()    >=    2    &&    options.hasOption(token))    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
80	[BUG]  [BUGGY]  tokens.add( "- "  +  getPosition());  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  tokens.add( "- "  +  getPosition());  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	tokens.add( "- "  +  getPosition());	  tokens.add(   "-   "    +    pos);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
81	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  options.getOptionIterator();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  Iterator  <  String>  iter  =  options.getOptionIterator();  [BUGGY]      if  (token.length()  ==  2  ||  options.hasOption(token))    {  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	Iterator  <  String>  iter  =  options.getOptionIterator();	  Iterator    <    String>    iter    =    options.getOptions().iterator();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
82	[BUG]  [BUGGY]  if(token.length()  >  0  ||  options.hasOption(opt))  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(token.length()  >  0  ||  options.hasOption(opt))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(token.length()  >  0  ||  options.hasOption(opt))  {	  if(token.length()    >    0    ||    options.hasOption(token))    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
83	[BUG]  [BUGGY]  if(token.length()  <  =  0  ||  options.hasOption(token))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(token.length()  <  =  0  ||  options.hasOption(token))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(token.length()  <  =  0  ||  options.hasOption(token))  {	  if(token.length()    >    0    ||    options.hasOption(token))    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
84	[BUG]  [BUGGY]  if(stopAtNonOption  ||!options.hasOption(opt))  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      }  }  else  if  (     "-     ".equals(token))  {  tokens.add(token);  }  else  if  (token.startsWith(     "-     "))  {      [BUGGY]  if(stopAtNonOption  ||!options.hasOption(opt))  {  [BUGGY]      {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3244428422615251	136	137	2	replace	if(stopAtNonOption  ||!options.hasOption(opt))  {	  if(!options.hasOption(token))    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
