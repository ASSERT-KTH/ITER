bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Iterator  iter  =  arguments.iterator();  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }    [BUGGY]  Iterator  iter  =  arguments.iterator();  [BUGGY]    return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	Iterator  iter  =  arguments.iterator();	      Iterator    iter    =    tokens.iterator();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
2	[BUG]  [BUGGY]  Iterator  iter  =  this.tokens.iterator();  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }    [BUGGY]  Iterator  iter  =  this.tokens.iterator();  [BUGGY]    return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	Iterator  iter  =  this.tokens.iterator();	      Iterator    iter    =    tokens.iterator();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
3	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Iterator  iter  =  options.iterator();  tokens.add(opt);  }  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }    [BUGGY]  if(stopAtNonOption)  {  Iterator  iter  =  options.iterator();  tokens.add(opt);  }  [BUGGY]    return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	if(stopAtNonOption)  {  Iterator  iter  =  options.iterator();  tokens.add(opt);  }	      Iterator    iter    =    options.iterator();    tokens.add(opt);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
4	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Iterator  iter  =  options.iterator();  tokens.add(opt);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }    [BUGGY]  if(stopAtNonOption)  {  Iterator  iter  =  options.iterator();  tokens.add(opt);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	if(stopAtNonOption)  {  Iterator  iter  =  options.iterator();  tokens.add(opt);  }  else  {  throw  new  IllegalArgumentException( " ");  }	      Iterator    iter    =    options.iterator();    tokens.add(opt);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
5	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  options.values().iterator();  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }    [BUGGY]  Iterator  <  String>  iter  =  options.values().iterator();  [BUGGY]    return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	Iterator  <  String>  iter  =  options.values().iterator();	      Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
6	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  tokens.iterator();  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }    [BUGGY]  Iterator  <  String>  iter  =  tokens.iterator();  [BUGGY]    return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	Iterator  <  String>  iter  =  tokens.iterator();	      Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
7	[BUG]  [BUGGY]  return(String[])tokens.toArray(new  String[tokens.size()  +  1]);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }    [BUGGY]  return(String[])tokens.toArray(new  String[tokens.size()  +  1]);  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	return(String[])tokens.toArray(new  String[tokens.size()  +  1]);	  return(String[])tokens.toArray(new    String[tokens.size()    -    1]);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
8	[BUG]  [BUGGY]  (String[])tokens.toArray(new  String[tokens.size()]);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }    [BUGGY]  (String[])tokens.toArray(new  String[tokens.size()]);  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	(String[])tokens.toArray(new  String[tokens.size()]);	  return(String[])tokens.toArray(new    String[tokens.size()    -    1]);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
9	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  this.arguments.iterator();  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }    [BUGGY]  Iterator  <  String>  iter  =  this.arguments.iterator();  [BUGGY]    return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	Iterator  <  String>  iter  =  this.arguments.iterator();	      Iterator    <    String>    iter    =    arguments.iterator();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
10	[BUG]  [BUGGY]  tokens.add(option);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }    [BUGGY]  tokens.add(option);  [BUGGY]    return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	tokens.add(option);	      tokens.add(opt);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
11	[BUG]  [BUGGY]  tokens.add(pos);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }    [BUGGY]  tokens.add(pos);  [BUGGY]    return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	tokens.add(pos);	      tokens.add(opt);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
12	[BUG]  [BUGGY]  tokens.add( "- ");  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }    [BUGGY]  tokens.add( "- ");  [BUGGY]    return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	tokens.add( "- ");	      tokens.add(opt);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
13	[BUG]  [BUGGY]  tokens.add(choose);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }    [BUGGY]  tokens.add(choose);  [BUGGY]    return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	tokens.add(choose);	      tokens.add(token);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
14	[BUG]  [BUGGY]  Ilerator  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }    [BUGGY]  Ilerator  iter  =  options.iterator();  [BUGGY]    return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	Ilerator  iter  =  options.iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
15	[BUG]  [BUGGY]  Iterator  iter  =  options.values().iterator();  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }    [BUGGY]  Iterator  iter  =  options.values().iterator();  [BUGGY]    return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	Iterator  iter  =  options.values().iterator();	      Iterator    iter    =    options.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
16	[BUG]  [BUGGY]  iter  =  options.keySet().iterator();  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }    [BUGGY]  iter  =  options.keySet().iterator();  [BUGGY]    return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	iter  =  options.keySet().iterator();	      Iterator    iter    =    options.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
17	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  options.keySet().iterator();  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }    [BUGGY]  Iterator  <  String>  iter  =  options.keySet().iterator();  [BUGGY]    return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	Iterator  <  String>  iter  =  options.keySet().iterator();	      Iterator    <    String>    iter    =    arguments.iterator();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
18	[BUG]  [BUGGY]  return(String[])tokens.toArray(new  String[tokens.size()  1]);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }    [BUGGY]  return(String[])tokens.toArray(new  String[tokens.size()  1]);  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	return(String[])tokens.toArray(new  String[tokens.size()  1]);	  return(String[])tokens.toArray(new    String[tokens.size()    -    1]);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
19	[BUG]  [BUGGY]  tokens.add(chomp);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }    [BUGGY]  tokens.add(chomp);  [BUGGY]    return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	tokens.add(chomp);	      tokens.add(token);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
20	[BUG]  [BUGGY]  Ilerator  iter  =  options.keySet().iterator();  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }    [BUGGY]  Ilerator  iter  =  options.keySet().iterator();  [BUGGY]    return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	Ilerator  iter  =  options.keySet().iterator();	      Iterator    iter    =    options.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
21	[BUG]  [BUGGY]  Iterator  iter  =  options.iterator();  tokens.add(option);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }    [BUGGY]  Iterator  iter  =  options.iterator();  tokens.add(option);  [BUGGY]    return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	Iterator  iter  =  options.iterator();  tokens.add(option);	      Iterator    iter    =    options.iterator();    tokens.add(opt);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
22	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Iterator  iter  =  options.iterator();  tokens.add(opt);  }  else  {  tokens.add(arguments[pos]);  }  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }    [BUGGY]  if(stopAtNonOption)  {  Iterator  iter  =  options.iterator();  tokens.add(opt);  }  else  {  tokens.add(arguments[pos]);  }  [BUGGY]    return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	if(stopAtNonOption)  {  Iterator  iter  =  options.iterator();  tokens.add(opt);  }  else  {  tokens.add(arguments[pos]);  }	      Iterator    iter    =    options.iterator();    tokens.add(opt);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
23	[BUG]  [BUGGY]  Iterator  iter  =  this.options.iterator();  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }    [BUGGY]  Iterator  iter  =  this.options.iterator();  [BUGGY]    return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	Iterator  iter  =  this.options.iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
24	[BUG]  [BUGGY]  tokens.add( ", ");  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }    [BUGGY]  tokens.add( ", ");  [BUGGY]    return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	tokens.add( ", ");	      tokens.add(opt);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
25	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  this.options.iterator();  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }    [BUGGY]  Iterator  <  String>  iter  =  this.options.iterator();  [BUGGY]    return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	Iterator  <  String>  iter  =  this.options.iterator();	      Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
26	[BUG]  [BUGGY]  Iterator  iter  =  tokens.keySet().iterator();  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }    [BUGGY]  Iterator  iter  =  tokens.keySet().iterator();  [BUGGY]    return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	Iterator  iter  =  tokens.keySet().iterator();	      Iterator    iter    =    options.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
27	[BUG]  [BUGGY]  iter.clear();  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }    [BUGGY]  iter.clear();  [BUGGY]    return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	iter.clear();	      iter.remove();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
28	[BUG]  [BUGGY]  iter.set(pos,  options.size()  -  1);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }    [BUGGY]  iter.set(pos,  options.size()  -  1);  [BUGGY]    return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	iter.set(pos,  options.size()  -  1);	      iter.remove();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
