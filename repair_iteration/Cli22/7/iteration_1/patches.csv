bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  options.values().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  Iterator  <  String>  iter  =  options.values().iterator();  [BUGGY]    else  if  (stopAtNonOption)    {  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	Iterator  <  String>  iter  =  options.values().iterator();	      Iterator    <    String>    iter    =    options.keySet().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
2	[BUG]  [BUGGY]  List  <  String>  iter  =  options.keySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  List  <  String>  iter  =  options.keySet().iterator();  [BUGGY]    else  if  (stopAtNonOption)    {  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	List  <  String>  iter  =  options.keySet().iterator();	      Iterator    <    String>    iter    =    options.keySet().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
3	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  tokens.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  Iterator  <  String>  iter  =  tokens.iterator();  [BUGGY]    else  if  (stopAtNonOption)    {  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	Iterator  <  String>  iter  =  tokens.iterator();	      Iterator    <    String>    iter    =    arguments.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
4	[BUG]  [BUGGY]  tokens.add(opt);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  tokens.add(opt);  [BUGGY]    {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	tokens.add(opt);	      	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
5	[BUG]  [BUGGY]  Option  iter  =  options.getOption(opt);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  Option  iter  =  options.getOption(opt);  [BUGGY]    {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	Option  iter  =  options.getOption(opt);	      	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
6	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  options.getIterables().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  Iterator  <  String>  iter  =  options.getIterables().iterator();  [BUGGY]    else  if  (stopAtNonOption)    {  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	Iterator  <  String>  iter  =  options.getIterables().iterator();	      Iterator    <    String>    iter    =    options.getOptions().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
7	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  options.getAllOptions().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  Iterator  <  String>  iter  =  options.getAllOptions().iterator();  [BUGGY]    else  if  (stopAtNonOption)    {  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	Iterator  <  String>  iter  =  options.getAllOptions().iterator();	      Iterator    <    String>    iter    =    options.getOptions().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
8	[BUG]  [BUGGY]  else  if(options.hasOption(token))  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  else  if(options.hasOption(token))  {  [BUGGY]    {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	else  if(options.hasOption(token))  {	  else    if(stopAtNonOption    ||    options.hasOption(token))    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
9	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  options.hasArg(token))  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  else  if(stopAtNonOption  ||  options.hasArg(token))  {  [BUGGY]    {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	else  if(stopAtNonOption  ||  options.hasArg(token))  {	  else    if(stopAtNonOption    ||    options.hasOption(token))    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
10	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(token)||  options.hasOption(token))  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(token)||  options.hasOption(token))  {  [BUGGY]    {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	else  if(stopAtNonOption  &&  options.hasOption(token)||  options.hasOption(token))  {	  else    if(stopAtNonOption    &&    options.hasOption(token))    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
11	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(token)||  arguments.contains(token))  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(token)||  arguments.contains(token))  {  [BUGGY]    {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	else  if(stopAtNonOption  &&  options.hasOption(token)||  arguments.contains(token))  {	  else    if(stopAtNonOption    &&    options.hasOption(token))    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
12	[BUG]  [BUGGY]  else  if(eatTheRest  ||  options.hasOption(token))  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  else  if(eatTheRest  ||  options.hasOption(token))  {  [BUGGY]    {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	else  if(eatTheRest  ||  options.hasOption(token))  {	  else    if(stopTheRest)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
13	[BUG]  [BUGGY]  else  if(haltAtNonOption)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  else  if(haltAtNonOption)  {  [BUGGY]    {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	else  if(haltAtNonOption)  {	  else    if(stopTheRest)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
14	[BUG]  [BUGGY]  Iterator  iter  =  options.keySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  Iterator  iter  =  options.keySet().iterator();  [BUGGY]    else  if  (stopAtNonOption)    {  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	Iterator  iter  =  options.keySet().iterator();	      iter.remove();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
15	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  tokens.contains(opt))  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  else  if(stopAtNonOption  &&  tokens.contains(opt))  {  [BUGGY]    {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	else  if(stopAtNonOption  &&  tokens.contains(opt))  {	  else    if(stopAtNonOption    ||    tokens.contains(opt))    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
16	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  options.contains(opt))  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  else  if(stopAtNonOption  ||  options.contains(opt))  {  [BUGGY]    {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	else  if(stopAtNonOption  ||  options.contains(opt))  {	  else    if(stopAtNonOption    ||    tokens.contains(opt))    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
17	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  tokens.contains(pos))  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  else  if(stopAtNonOption  ||  tokens.contains(pos))  {  [BUGGY]    {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	else  if(stopAtNonOption  ||  tokens.contains(pos))  {	  else    if(stopAtNonOption    ||    tokens.contains(opt))    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
18	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  arguments.contains(opt))  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  else  if(stopAtNonOption  ||  arguments.contains(opt))  {  [BUGGY]    {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	else  if(stopAtNonOption  ||  arguments.contains(opt))  {	  else    if(stopAtNonOption    ||    tokens.contains(opt))    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
19	[BUG]  [BUGGY]  tokens.add(option);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  tokens.add(option);  [BUGGY]    else  if  (stopAtNonOption)    {  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	tokens.add(option);	      tokens.add(token);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
20	[BUG]  [BUGGY]  tokens.add(token,  stopAtNonOption);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  tokens.add(token,  stopAtNonOption);  [BUGGY]    else  if  (stopAtNonOption)    {  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	tokens.add(token,  stopAtNonOption);	      tokens.add(token);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
21	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  tokens.contains(token))  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  else  if(stopAtNonOption  &&  tokens.contains(token))  {  [BUGGY]    {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	else  if(stopAtNonOption  &&  tokens.contains(token))  {	  else    if(stopAtNonOption    ||    tokens.contains(token))    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
22	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  options.contains(token))  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  else  if(stopAtNonOption  ||  options.contains(token))  {  [BUGGY]    {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	else  if(stopAtNonOption  ||  options.contains(token))  {	  else    if(stopAtNonOption    ||    tokens.contains(token))    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
23	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  tokens.contains(option))  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  else  if(stopAtNonOption  ||  tokens.contains(option))  {  [BUGGY]    {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	else  if(stopAtNonOption  ||  tokens.contains(option))  {	  else    if(stopAtNonOption    ||    tokens.contains(token))    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
24	[BUG]  [BUGGY]  Iterator  iter  =  options.values().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  Iterator  iter  =  options.values().iterator();  [BUGGY]    else  if  (stopAtNonOption)    {  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	Iterator  iter  =  options.values().iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
25	[BUG]  [BUGGY]  Iterator  iter  =  arguments.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  Iterator  iter  =  arguments.iterator();  [BUGGY]    else  if  (stopAtNonOption)    {  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	Iterator  iter  =  arguments.iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
26	[BUG]  [BUGGY]  Iterator  iter  =  tokens.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  Iterator  iter  =  tokens.iterator();  [BUGGY]    else  if  (stopAtNonOption)    {  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	Iterator  iter  =  tokens.iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
27	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  options.iterator();  tokens.add(option);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  Iterator  <  String>  iter  =  options.iterator();  tokens.add(option);  [BUGGY]    else  if  (stopAtNonOption)    {  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	Iterator  <  String>  iter  =  options.iterator();  tokens.add(option);	      Iterator    <    String>    iter    =    options.iterator();    tokens.add(opt);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
28	[BUG]  [BUGGY]  Ilerator  <  String>  iter  =  options.keySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  Ilerator  <  String>  iter  =  options.keySet().iterator();  [BUGGY]    else  if  (stopAtNonOption)    {  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	Ilerator  <  String>  iter  =  options.keySet().iterator();	      Iterator    <    String>    iter    =    options.keySet().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
29	[BUG]  [BUGGY]  Iterator  iter  =  options.getOptions().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  Iterator  iter  =  options.getOptions().iterator();  [BUGGY]    else  if  (stopAtNonOption)    {  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	Iterator  iter  =  options.getOptions().iterator();	      iter.remove();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
30	[BUG]  [BUGGY]  Ilerator  <  String>  iter  =  options.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  Ilerator  <  String>  iter  =  options.iterator();  [BUGGY]    else  if  (stopAtNonOption)    {  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	Ilerator  <  String>  iter  =  options.iterator();	      Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
31	[BUG]  [BUGGY]  if(options!=  null)  {  Iterator  <  String>  iter  =  options.iterator();  tokens.add(opt);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  if(options!=  null)  {  Iterator  <  String>  iter  =  options.iterator();  tokens.add(opt);  }  [BUGGY]    else  if  (stopAtNonOption)    {  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	if(options!=  null)  {  Iterator  <  String>  iter  =  options.iterator();  tokens.add(opt);  }	      Iterator    <    String>    iter    =    options.iterator();    tokens.add(opt);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
32	[BUG]  [BUGGY]  tokens.add(chomp);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  tokens.add(chomp);  [BUGGY]    else  if  (stopAtNonOption)    {  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	tokens.add(chomp);	      tokens.add(token);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
33	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  options.getOptOptions().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  Iterator  <  String>  iter  =  options.getOptOptions().iterator();  [BUGGY]    else  if  (stopAtNonOption)    {  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	Iterator  <  String>  iter  =  options.getOptOptions().iterator();	      Iterator    <    String>    iter    =    options.getOptions().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
34	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  options.getOptions().values().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  Iterator  <  String>  iter  =  options.getOptions().values().iterator();  [BUGGY]    else  if  (stopAtNonOption)    {  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	Iterator  <  String>  iter  =  options.getOptions().values().iterator();	      Iterator    <    String>    iter    =    options.getOptions().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
35	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  options.getOptions().iterator(0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  Iterator  <  String>  iter  =  options.getOptions().iterator(0);  [BUGGY]    else  if  (stopAtNonOption)    {  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	Iterator  <  String>  iter  =  options.getOptions().iterator(0);	      Iterator    <    String>    iter    =    options.getOptions().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
36	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  options.get(arguments.iterator());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  Iterator  <  String>  iter  =  options.get(arguments.iterator());  [BUGGY]    else  if  (stopAtNonOption)    {  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	Iterator  <  String>  iter  =  options.get(arguments.iterator());	      Iterator    <    String>    iter    =    arguments.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
37	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  options.hasOption(token)&&  stopAtNonOption!=  null)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  else  if(stopAtNonOption  ||  options.hasOption(token)&&  stopAtNonOption!=  null)  {  [BUGGY]    {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	else  if(stopAtNonOption  ||  options.hasOption(token)&&  stopAtNonOption!=  null)  {	  else    if(stopAtNonOption    ||    options.hasOption(token))    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
38	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  options.hasOption(token)&&  stopAtNonOption  ==  false)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  else  if(stopAtNonOption  ||  options.hasOption(token)&&  stopAtNonOption  ==  false)  {  [BUGGY]    {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	else  if(stopAtNonOption  ||  options.hasOption(token)&&  stopAtNonOption  ==  false)  {	  else    if(stopAtNonOption    ||    options.hasOption(token))    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
39	[BUG]  [BUGGY]  Ilerator  iter  =  options.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  Ilerator  iter  =  options.iterator();  [BUGGY]    else  if  (stopAtNonOption)    {  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	Ilerator  iter  =  options.iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
40	[BUG]  [BUGGY]  else  if(eatTheRest)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  else  if(eatTheRest)  {  [BUGGY]    {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	else  if(eatTheRest)  {	  else    if(stopTheRest)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
41	[BUG]  [BUGGY]  else  if(eatTheRest  ||  stopAtNonOption)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  else  if(eatTheRest  ||  stopAtNonOption)  {  [BUGGY]    {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	else  if(eatTheRest  ||  stopAtNonOption)  {	  else    if(stopTheRest)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
42	[BUG]  [BUGGY]  else  if(opt  ||  tokens.contains(stopAtNonOption))  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  else  if(opt  ||  tokens.contains(stopAtNonOption))  {  [BUGGY]    {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	else  if(opt  ||  tokens.contains(stopAtNonOption))  {	  else    if(stopAtNonOption    ||    tokens.contains(opt))    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
43	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  tokens.contains(arguments))  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  else  if(stopAtNonOption  ||  tokens.contains(arguments))  {  [BUGGY]    {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	else  if(stopAtNonOption  ||  tokens.contains(arguments))  {	  else    if(stopAtNonOption    ||    tokens.contains(opt))    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
44	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  options.getOption(options).iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  Iterator  <  String>  iter  =  options.getOption(options).iterator();  [BUGGY]    else  if  (stopAtNonOption)    {  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	Iterator  <  String>  iter  =  options.getOption(options).iterator();	      Iterator    <    String>    iter    =    options.getOptions().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
45	[BUG]  [BUGGY]  else  if(stopTheRest  &&  options.hasOption(token))  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  else  if(stopTheRest  &&  options.hasOption(token))  {  [BUGGY]    {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	else  if(stopTheRest  &&  options.hasOption(token))  {	  else    if(stopTheRest)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
46	[BUG]  [BUGGY]  Iterator  iter  =  options.getIterator(pos);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  Iterator  iter  =  options.getIterator(pos);  [BUGGY]    else  if  (stopAtNonOption)    {  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	Iterator  iter  =  options.getIterator(pos);	      iter.remove();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
47	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  options.hasOption(token)&&  tokens.contains(opt))  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  else  if(stopAtNonOption  ||  options.hasOption(token)&&  tokens.contains(opt))  {  [BUGGY]    {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	else  if(stopAtNonOption  ||  options.hasOption(token)&&  tokens.contains(opt))  {	  else    if(stopAtNonOption    ||    options.hasOption(token))    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
48	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  options.hasOption(token)&&  tokens.contains(token))  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  else  if(stopAtNonOption  ||  options.hasOption(token)&&  tokens.contains(token))  {  [BUGGY]    {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	else  if(stopAtNonOption  ||  options.hasOption(token)&&  tokens.contains(token))  {	  else    if(stopAtNonOption    ||    options.hasOption(token))    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
49	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(token)||  tokens.contains(token))  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(token)||  tokens.contains(token))  {  [BUGGY]    {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	else  if(stopAtNonOption  &&  options.hasOption(token)||  tokens.contains(token))  {	  else    if(stopAtNonOption    &&    options.hasOption(token))    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
50	[BUG]  [BUGGY]  tokens.add(op);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure    [CONTEXT]    if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }    [BUGGY]  tokens.add(op);  [BUGGY]    else  if  (stopAtNonOption)    {  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	tokens.add(op);	      tokens.add(token);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
