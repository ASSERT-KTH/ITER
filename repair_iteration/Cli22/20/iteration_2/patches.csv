bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option[]  arguments  =  options.getOptions(arguments,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option[]  arguments  =  options.getOptions(arguments,  stopAtNonOption);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	Option[]  arguments  =  options.getOptions(arguments,  stopAtNonOption);	  Option[]    arguments    =    options.getOptions(arguments);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
2	[BUG]  [BUGGY]  Option[]  arguments  =  options.getOptions(this.options);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option[]  arguments  =  options.getOptions(this.options);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	Option[]  arguments  =  options.getOptions(this.options);	  Option[]    arguments    =    options.getOptions(arguments);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
3	[BUG]  [BUGGY]  Set  <  String>  arguments  =  new  HashSet  <  String>(arguments.size());  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Set  <  String>  arguments  =  new  HashSet  <  String>(arguments.size());  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	Set  <  String>  arguments  =  new  HashSet  <  String>(arguments.size());	  List    <    String>    arguments    =    new    ArrayList    <    String>(arguments.size()    -    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
4	[BUG]  [BUGGY]  Option[]  arguments  =  options.getRawArguments();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option[]  arguments  =  options.getRawArguments();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	Option[]  arguments  =  options.getRawArguments();	  Option[]    arguments    =    options.getAllArguments();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
5	[BUG]  [BUGGY]  Option[]  arguments  =  options.getAllArguments(arguments);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option[]  arguments  =  options.getAllArguments(arguments);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	Option[]  arguments  =  options.getAllArguments(arguments);	  Option[]    arguments    =    options.getAllArguments();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
6	[BUG]  [BUGGY]  List  <  String>  arguments  =  this.options.values();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  List  <  String>  arguments  =  this.options.values();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	List  <  String>  arguments  =  this.options.values();	  List    <    String>    arguments    =    this.options.list();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
7	[BUG]  [BUGGY]  List  <  String>  arguments  =  this.options.get(arguments);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  List  <  String>  arguments  =  this.options.get(arguments);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	List  <  String>  arguments  =  this.options.get(arguments);	  List    <    String>    arguments    =    this.options.list();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
8	[BUG]  [BUGGY]  List  <  String>  arguments  =  this.options.get(0);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  List  <  String>  arguments  =  this.options.get(0);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	List  <  String>  arguments  =  this.options.get(0);	  List    <    String>    arguments    =    this.options.list();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
9	[BUG]  [BUGGY]  List  <  String>  arguments  =  options.iterator().next();  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  List  <  String>  arguments  =  options.iterator().next();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	List  <  String>  arguments  =  options.iterator().next();	  List    <    String>    arguments    =    options.listAll();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
10	[BUG]  [BUGGY]  List  <  String>  arguments  =  Arrays.asList(arguments);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  List  <  String>  arguments  =  Arrays.asList(arguments);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	List  <  String>  arguments  =  Arrays.asList(arguments);	  List    <    String>    arguments    =    options.list(arguments);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
11	[BUG]  [BUGGY]  List  <  String>  arguments  =  options.list(arguments,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  List  <  String>  arguments  =  options.list(arguments,  stopAtNonOption);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	List  <  String>  arguments  =  options.list(arguments,  stopAtNonOption);	  List    <    String>    arguments    =    options.list(arguments);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
12	[BUG]  [BUGGY]  Arrays.asList(arguments);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Arrays.asList(arguments);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	Arrays.asList(arguments);	  List    <    String>    arguments    =    options.list(arguments);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
13	[BUG]  [BUGGY]  Iterator  iter  =  this.arguments.iterator();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Iterator  iter  =  this.arguments.iterator();  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	Iterator  iter  =  this.arguments.iterator();	  Iterator    iter    =    arguments.iterator();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
14	[BUG]  [BUGGY]  ArrayList  <  String>  arguments  =  new  ArrayList  <  String>(options.size()  -  1);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  ArrayList  <  String>  arguments  =  new  ArrayList  <  String>(options.size()  -  1);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	ArrayList  <  String>  arguments  =  new  ArrayList  <  String>(options.size()  -  1);	  ArrayList    <    String>    arguments    =    new    ArrayList    <    String>(options.size());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
15	[BUG]  [BUGGY]  List  <  String>  arguments  =  options.listAll(arguments,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  List  <  String>  arguments  =  options.listAll(arguments,  stopAtNonOption);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	List  <  String>  arguments  =  options.listAll(arguments,  stopAtNonOption);	  List    <    String>    arguments    =    options.listAll(arguments);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
16	[BUG]  [BUGGY]  Arrays.asList(arguments).iterator();  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Arrays.asList(arguments).iterator();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	Arrays.asList(arguments).iterator();	  List    <    String>    arguments    =    options.listAll(arguments);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
17	[BUG]  [BUGGY]  String[]  arguments  =  options.toArray(arguments).toArray(this.options);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  String[]  arguments  =  options.toArray(arguments).toArray(this.options);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	String[]  arguments  =  options.toArray(arguments).toArray(this.options);	  String[]    arguments    =    options.toArray(arguments).toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
18	[BUG]  [BUGGY]  String[]  arguments  =  options.toArray(arguments).toArray(arguments,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  String[]  arguments  =  options.toArray(arguments).toArray(arguments,  stopAtNonOption);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	String[]  arguments  =  options.toArray(arguments).toArray(arguments,  stopAtNonOption);	  String[]    arguments    =    options.toArray(arguments).toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
19	[BUG]  [BUGGY]  String[]  arguments  =  arguments.toArray(options).toArray(arguments);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  String[]  arguments  =  arguments.toArray(options).toArray(arguments);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	String[]  arguments  =  arguments.toArray(options).toArray(arguments);	  String[]    arguments    =    options.toArray(arguments).toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
20	[BUG]  [BUGGY]  ArrayList  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size()  -  1);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  ArrayList  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size()  -  1);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	ArrayList  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size()  -  1);	  ArrayList    <    String>    arguments    =    new    ArrayList    <    String>(arguments.size());    	non-compiled	[CE]  <identifier>  expected	18	None	replace
21	[BUG]  [BUGGY]  ArrayList  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size()  +  1);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  ArrayList  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size()  +  1);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	ArrayList  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size()  +  1);	  ArrayList    <    String>    arguments    =    new    ArrayList    <    String>(arguments.size());    	non-compiled	[CE]  <identifier>  expected	18	None	replace
22	[BUG]  [BUGGY]  Ilerator  iter  =  Arrays.asList(options).iterator();  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Ilerator  iter  =  Arrays.asList(options).iterator();  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	Ilerator  iter  =  Arrays.asList(options).iterator();	  Ilerator    iter    =    Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
23	[BUG]  [BUGGY]  ArrayList  <  String>  arguments  =  new  ArrayList  <  String>(arguments.length);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  ArrayList  <  String>  arguments  =  new  ArrayList  <  String>(arguments.length);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	ArrayList  <  String>  arguments  =  new  ArrayList  <  String>(arguments.length);	  ArrayList    <    String>    arguments    =    new    ArrayList    <    String>();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
24	[BUG]  [BUGGY]  String[]  arguments  =  this.options.getArguments();  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  String[]  arguments  =  this.options.getArguments();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	String[]  arguments  =  this.options.getArguments();	  String[]    arguments    =    this.options.getOptions();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
25	[BUG]  [BUGGY]  String[]  arguments  =  this.options.getRawArguments();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  String[]  arguments  =  this.options.getRawArguments();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	String[]  arguments  =  this.options.getRawArguments();	  String[]    arguments    =    this.options.getOptions();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
26	[BUG]  [BUGGY]  String[]  arguments  =  this.options.getAllArguments();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  String[]  arguments  =  this.options.getAllArguments();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	String[]  arguments  =  this.options.getAllArguments();	  String[]    arguments    =    this.options.getOptions();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
27	[BUG]  [BUGGY]  List  <  String>  iter  =  Arrays.asList(arguments).iterator();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  List  <  String>  iter  =  Arrays.asList(arguments).iterator();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	List  <  String>  iter  =  Arrays.asList(arguments).iterator();	  Iterator    <    String>    iter    =    Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
28	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  Arrays.asList(this.options).iterator();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Iterator  <  String>  iter  =  Arrays.asList(this.options).iterator();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	Iterator  <  String>  iter  =  Arrays.asList(this.options).iterator();	  Iterator    <    String>    iter    =    Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
29	[BUG]  [BUGGY]  Option[]  arguments  =  options.toArray(arguments,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option[]  arguments  =  options.toArray(arguments,  stopAtNonOption);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	Option[]  arguments  =  options.toArray(arguments,  stopAtNonOption);	  Option[]    arguments    =    options.toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
30	[BUG]  [BUGGY]  Option[]  arguments  =  options.toArray(this.options);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option[]  arguments  =  options.toArray(this.options);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	Option[]  arguments  =  options.toArray(this.options);	  Option[]    arguments    =    options.toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
31	[BUG]  [BUGGY]  Options[]  arguments  =  options.toArray(arguments);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Options[]  arguments  =  options.toArray(arguments);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	Options[]  arguments  =  options.toArray(arguments);	  Option[]    arguments    =    options.toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
32	[BUG]  [BUGGY]  String[]  arguments  =  options.getRawArguments();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  String[]  arguments  =  options.getRawArguments();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	String[]  arguments  =  options.getRawArguments();	  String[]    arguments    =    options.getAllArguments();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
33	[BUG]  [BUGGY]  String[]  arguments  =  options.getAllArguments(arguments);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  String[]  arguments  =  options.getAllArguments(arguments);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	String[]  arguments  =  options.getAllArguments(arguments);	  String[]    arguments    =    options.getAllArguments();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
34	[BUG]  [BUGGY]  Set  <  String>  arguments  =  options.keySet();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Set  <  String>  arguments  =  options.keySet();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	Set  <  String>  arguments  =  options.keySet();	  List    <    String>    arguments    =    options.keySet();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
35	[BUG]  [BUGGY]  iter  =  Arrays.asList(options).iterator();  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  iter  =  Arrays.asList(options).iterator();  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	iter  =  Arrays.asList(options).iterator();	  iter    =    Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
36	[BUG]  [BUGGY]  iter  =  Arrays.asList(this.options).iterator();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  iter  =  Arrays.asList(this.options).iterator();  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	iter  =  Arrays.asList(this.options).iterator();	  iter    =    Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
37	[BUG]  [BUGGY]  Iterator  iter  =(this.options  ==  null)?  Arrays.asList(this.options).iterator()  :  null;  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Iterator  iter  =(this.options  ==  null)?  Arrays.asList(this.options).iterator()  :  null;  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	Iterator  iter  =(this.options  ==  null)?  Arrays.asList(this.options).iterator()  :  null;	  Iterator    iter    =(this.options!=    null)?    Arrays.asList(this.options).iterator()    :    null;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
38	[BUG]  [BUGGY]  Iterator  iter  =(this.options!=  null)?  Arrays.asList(arguments).iterator()  :  null;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Iterator  iter  =(this.options!=  null)?  Arrays.asList(arguments).iterator()  :  null;  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	Iterator  iter  =(this.options!=  null)?  Arrays.asList(arguments).iterator()  :  null;	  Iterator    iter    =(this.options!=    null)?    Arrays.asList(this.options).iterator()    :    null;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
39	[BUG]  [BUGGY]  Iterator  iter  =(this.options!=  null)?  Arrays.asList(this.options).iterator()  :  this.options;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Iterator  iter  =(this.options!=  null)?  Arrays.asList(this.options).iterator()  :  this.options;  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	Iterator  iter  =(this.options!=  null)?  Arrays.asList(this.options).iterator()  :  this.options;	  Iterator    iter    =(this.options!=    null)?    Arrays.asList(this.options).iterator()    :    null;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
40	[BUG]  [BUGGY]  String[]  arguments  =  options.toString();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  String[]  arguments  =  options.toString();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	String[]  arguments  =  options.toString();	  String[]    arguments    =    options.toString(arguments);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
41	[BUG]  [BUGGY]  String[]  arguments  =  options.toString(arguments,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  String[]  arguments  =  options.toString(arguments,  stopAtNonOption);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	String[]  arguments  =  options.toString(arguments,  stopAtNonOption);	  String[]    arguments    =    options.toString(arguments);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
42	[BUG]  [BUGGY]  String[]  arguments  =  options.toString(options);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  String[]  arguments  =  options.toString(options);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	String[]  arguments  =  options.toString(options);	  String[]    arguments    =    options.toString(arguments);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
43	[BUG]  [BUGGY]  String[]  arguments  =  options.getArguments(arguments);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  String[]  arguments  =  options.getArguments(arguments);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	String[]  arguments  =  options.getArguments(arguments);	  String[]    arguments    =    options.getArguments();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
44	[BUG]  [BUGGY]  ArrayList  <  String>  arguments  =  new  ArrayList  <  String>(arguments);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  ArrayList  <  String>  arguments  =  new  ArrayList  <  String>(arguments);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	ArrayList  <  String>  arguments  =  new  ArrayList  <  String>(arguments);	  List    <    String>    arguments    =    new    ArrayList    <    String>(arguments);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
45	[BUG]  [BUGGY]  List  <  String>  arguments  =  new  ArrayList  <  String>(arguments,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  List  <  String>  arguments  =  new  ArrayList  <  String>(arguments,  stopAtNonOption);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	List  <  String>  arguments  =  new  ArrayList  <  String>(arguments,  stopAtNonOption);	  List    <    String>    arguments    =    new    ArrayList    <    String>(arguments);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
46	[BUG]  [BUGGY]  Set  <  String>  arguments  =  new  HashSet  <  String>(options.size());  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Set  <  String>  arguments  =  new  HashSet  <  String>(options.size());  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	Set  <  String>  arguments  =  new  HashSet  <  String>(options.size());	  List    <    String>    arguments    =    new    ArrayList    <    String>(options.size()    +    1);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
47	[BUG]  [BUGGY]  String[]  arguments  =  options.getAsArray();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  String[]  arguments  =  options.getAsArray();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	String[]  arguments  =  options.getAsArray();	  String[]    arguments    =    options.getAsStringArray();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
48	[BUG]  [BUGGY]  String[]  arguments  =  options.getAsStringArray(arguments);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  String[]  arguments  =  options.getAsStringArray(arguments);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	String[]  arguments  =  options.getAsStringArray(arguments);	  String[]    arguments    =    options.getAsStringArray();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
49	[BUG]  [BUGGY]  String[]  arguments  =  this.options.toArray(options);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  String[]  arguments  =  this.options.toArray(options);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	String[]  arguments  =  this.options.toArray(options);	  String[]    arguments    =    options.toArray(this.options);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
50	[BUG]  [BUGGY]  String[]  arguments  =  this.options.toArray(arguments,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  String[]  arguments  =  this.options.toArray(arguments,  stopAtNonOption);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	String[]  arguments  =  this.options.toArray(arguments,  stopAtNonOption);	  String[]    arguments    =    this.options.toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
51	[BUG]  [BUGGY]  String[]  arguments  =  new  String[this.options.size()  ];  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  String[]  arguments  =  new  String[this.options.size()  ];  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	String[]  arguments  =  new  String[this.options.size()  ];	  String[]    arguments    =    this.options.toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
52	[BUG]  [BUGGY]  Option[]  arguments  =  options.getAsArray();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option[]  arguments  =  options.getAsArray();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	Option[]  arguments  =  options.getAsArray();	  Option[]    arguments    =    options.getAsOptions();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
53	[BUG]  [BUGGY]  String[]  arguments  =  options.toArray(arguments,  stopAtNonOption,  token);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  String[]  arguments  =  options.toArray(arguments,  stopAtNonOption,  token);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	String[]  arguments  =  options.toArray(arguments,  stopAtNonOption,  token);	  String[]    arguments    =    options.toArray(arguments,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
54	[BUG]  [BUGGY]  String[]  arguments  =  options.toArray(arguments,  stopAtNonOption,  pos);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  String[]  arguments  =  options.toArray(arguments,  stopAtNonOption,  pos);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	String[]  arguments  =  options.toArray(arguments,  stopAtNonOption,  pos);	  String[]    arguments    =    options.toArray(arguments,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
55	[BUG]  [BUGGY]  String[]  arguments  =  options.toArray(arguments,  stopAtNonOption,  tokens);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  String[]  arguments  =  options.toArray(arguments,  stopAtNonOption,  tokens);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	String[]  arguments  =  options.toArray(arguments,  stopAtNonOption,  tokens);	  String[]    arguments    =    options.toArray(arguments,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
56	[BUG]  [BUGGY]  String[]  arguments  =  options.getOptions(arguments,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  String[]  arguments  =  options.getOptions(arguments,  stopAtNonOption);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	String[]  arguments  =  options.getOptions(arguments,  stopAtNonOption);	  String[]    arguments    =    options.getOptions(arguments);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
57	[BUG]  [BUGGY]  String[]  arguments  =  options.getOptions(options);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  String[]  arguments  =  options.getOptions(options);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	String[]  arguments  =  options.getOptions(options);	  String[]    arguments    =    options.getOptions(arguments);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
58	[BUG]  [BUGGY]  String[]  arguments  =  options.getOptions(this.options);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  String[]  arguments  =  options.getOptions(this.options);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	String[]  arguments  =  options.getOptions(this.options);	  String[]    arguments    =    options.getOptions(arguments);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
59	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Iterator  <  String>  iter  =  Arrays.asList(arguments).iterator();  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  if(stopAtNonOption)  {  Iterator  <  String>  iter  =  Arrays.asList(arguments).iterator();  }  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	if(stopAtNonOption)  {  Iterator  <  String>  iter  =  Arrays.asList(arguments).iterator();  }	  Iterator    <    String>    iter    =    Arrays.asList(options).iterator();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
60	[BUG]  [BUGGY]  Ilerator  <  String>  iter  =  Arrays.asList(arguments).iterator();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Ilerator  <  String>  iter  =  Arrays.asList(arguments).iterator();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	Ilerator  <  String>  iter  =  Arrays.asList(arguments).iterator();	  Iterator    <    String>    iter    =    Arrays.asList(options).iterator();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
61	[BUG]  [BUGGY]  List  <  String>  arguments  =  new  ArrayList  <  String>(arguments.length  +  1);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  List  <  String>  arguments  =  new  ArrayList  <  String>(arguments.length  +  1);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	List  <  String>  arguments  =  new  ArrayList  <  String>(arguments.length  +  1);	  List    <    String>    arguments    =    new    ArrayList    <    String>(arguments.length);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
62	[BUG]  [BUGGY]  List  <  String>  arguments  =  new  ArrayList  <  String>(arguments.length  +  2);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  List  <  String>  arguments  =  new  ArrayList  <  String>(arguments.length  +  2);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	List  <  String>  arguments  =  new  ArrayList  <  String>(arguments.length  +  2);	  List    <    String>    arguments    =    new    ArrayList    <    String>(arguments.length);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
63	[BUG]  [BUGGY]  String[]  arguments  =  this.options.getAsStrings();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  String[]  arguments  =  this.options.getAsStrings();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	String[]  arguments  =  this.options.getAsStrings();	  String[]    arguments    =    options.getAsStrings();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
64	[BUG]  [BUGGY]  Option[]  arguments  =  options.getArguments(arguments);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option[]  arguments  =  options.getArguments(arguments);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	Option[]  arguments  =  options.getArguments(arguments);	  Option[]    arguments    =    options.getOptions(options);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
65	[BUG]  [BUGGY]  List  <  String>  arguments  =  options.listAll(options);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  List  <  String>  arguments  =  options.listAll(options);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	List  <  String>  arguments  =  options.listAll(options);	  List    <    String>    arguments    =    options.listAll(arguments);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
66	[BUG]  [BUGGY]  Set  <  String>  arguments  =  options.listAll(arguments);  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Set  <  String>  arguments  =  options.listAll(arguments);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	Set  <  String>  arguments  =  options.listAll(arguments);	  List    <    String>    arguments    =    options.listAll(arguments);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
67	[BUG]  [BUGGY]  List  <  String>  arguments  =  this.options.keySet();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  List  <  String>  arguments  =  this.options.keySet();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	List  <  String>  arguments  =  this.options.keySet();	  List    <    String>    arguments    =    this.options.list();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
68	[BUG]  [BUGGY]  String[]  arguments  =  options.toString(opt);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  String[]  arguments  =  options.toString(opt);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	String[]  arguments  =  options.toString(opt);	  String[]    arguments    =    options.toString(arguments);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
69	[BUG]  [BUGGY]  Iterator  iter  =(this.options!=  null)?  Arrays.asList(this.options).iterator()  :  options;  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Iterator  iter  =(this.options!=  null)?  Arrays.asList(this.options).iterator()  :  options;  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	Iterator  iter  =(this.options!=  null)?  Arrays.asList(this.options).iterator()  :  options;	  Iterator    iter    =(this.options!=    null)?    Arrays.asList(this.options).iterator()    :    null;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
70	[BUG]  [BUGGY]  Iterator  iter  =(this.options!=  null)?  Arrays.asList(this.options).iterator()  :  this;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Iterator  iter  =(this.options!=  null)?  Arrays.asList(this.options).iterator()  :  this;  [BUGGY]        while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	Iterator  iter  =(this.options!=  null)?  Arrays.asList(this.options).iterator()  :  this;	  Iterator    iter    =(this.options!=    null)?    Arrays.asList(this.options).iterator()    :    null;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
71	[BUG]  [BUGGY]  List  <  String>  arguments  =  options.list(options);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  List  <  String>  arguments  =  options.list(options);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	List  <  String>  arguments  =  options.list(options);	  List    <    String>    arguments    =    options.list(arguments);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
72	[BUG]  [BUGGY]  List  <  String>  arguments  =  options.list(arguments).iterator();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  List  <  String>  arguments  =  options.list(arguments).iterator();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	List  <  String>  arguments  =  options.list(arguments).iterator();	  List    <    String>    arguments    =    options.list(arguments);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
73	[BUG]  [BUGGY]  String[]  arguments  =  options.getOptions(opt);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  String[]  arguments  =  options.getOptions(opt);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	String[]  arguments  =  options.getOptions(opt);	  String[]    arguments    =    options.getOptions(arguments);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
74	[BUG]  [BUGGY]  List  <  String>  arguments  =  options.get(arguments);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  List  <  String>  arguments  =  options.get(arguments);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	List  <  String>  arguments  =  options.get(arguments);	  List    <    String>    arguments    =    options.keySet();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
75	[BUG]  [BUGGY]  String[]  arguments  =  options.toArray(arguments,  eatTheRest);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  String[]  arguments  =  options.toArray(arguments,  eatTheRest);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	String[]  arguments  =  options.toArray(arguments,  eatTheRest);	  String[]    arguments    =    options.toArray(arguments,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
76	[BUG]  [BUGGY]  String[]  arguments  =  options.toArray(arguments,  stopAtNonOption).toString();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  String[]  arguments  =  options.toArray(arguments,  stopAtNonOption).toString();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	String[]  arguments  =  options.toArray(arguments,  stopAtNonOption).toString();	  String[]    arguments    =    options.toArray(arguments,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
77	[BUG]  [BUGGY]  String[]  arguments  =  options.toArray(arguments).toArray(opt);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  String[]  arguments  =  options.toArray(arguments).toArray(opt);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	String[]  arguments  =  options.toArray(arguments).toArray(opt);	  String[]    arguments    =    options.toArray(arguments).toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
78	[BUG]  [BUGGY]  String[]  arguments  =  options.toArray(arguments).toArray(options);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  String[]  arguments  =  options.toArray(arguments).toArray(options);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	String[]  arguments  =  options.toArray(arguments).toArray(options);	  String[]    arguments    =    options.toArray(arguments).toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
79	[BUG]  [BUGGY]  Set  <  String>  arguments  =  new  HashSet  <  String>(arguments.length);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Set  <  String>  arguments  =  new  HashSet  <  String>(arguments.length);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	Set  <  String>  arguments  =  new  HashSet  <  String>(arguments.length);	  List    <    String>    arguments    =    new    ArrayList    <    String>(arguments.length);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
80	[BUG]  [BUGGY]  Set  <  String>  arguments  =  new  ArrayList  <  String>(options.size());  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Set  <  String>  arguments  =  new  ArrayList  <  String>(options.size());  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	Set  <  String>  arguments  =  new  ArrayList  <  String>(options.size());	  List    <    String>    arguments    =    new    ArrayList    <    String>(options.size()    +    1);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
81	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Iterator  <  String>  iter  =  Arrays.asList(options).iterator();  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  if(stopAtNonOption)  {  Iterator  <  String>  iter  =  Arrays.asList(options).iterator();  }  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	if(stopAtNonOption)  {  Iterator  <  String>  iter  =  Arrays.asList(options).iterator();  }	  Iterator    <    String>    iter    =    Arrays.asList(options).iterator();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
82	[BUG]  [BUGGY]  String[]  arguments  =  this.options.toArray(arguments).toArray(arguments);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  String[]  arguments  =  this.options.toArray(arguments).toArray(arguments);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	String[]  arguments  =  this.options.toArray(arguments).toArray(arguments);	  String[]    arguments    =    this.options.toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
83	[BUG]  [BUGGY]  Option[]  arguments  =  options.getOptions(opt);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option[]  arguments  =  options.getOptions(opt);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	Option[]  arguments  =  options.getOptions(opt);	  Option[]    arguments    =    options.getOptions(arguments);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
84	[BUG]  [BUGGY]  Set  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size());  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Set  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size());  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	Set  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size());	  List    <    String>    arguments    =    new    ArrayList    <    String>(arguments.size()    +    1);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
85	[BUG]  [BUGGY]  Option[]  arguments  =  options.toArray(this.arguments);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option[]  arguments  =  options.toArray(this.arguments);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	Option[]  arguments  =  options.toArray(this.arguments);	  Option[]    arguments    =    options.toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
86	[BUG]  [BUGGY]  List  <  String>  arguments  =  options.getAllArguments();  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  List  <  String>  arguments  =  options.getAllArguments();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	List  <  String>  arguments  =  options.getAllArguments();	  List    <    String>    arguments    =    options.listAll();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
87	[BUG]  [BUGGY]  Option[]  arguments  =  options.getAsOptions(arguments);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option[]  arguments  =  options.getAsOptions(arguments);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	Option[]  arguments  =  options.getAsOptions(arguments);	  Option[]    arguments    =    options.getAsOptions();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
88	[BUG]  [BUGGY]  List  <  String>  arguments  =  options.getArguments();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  List  <  String>  arguments  =  options.getArguments();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	List  <  String>  arguments  =  options.getArguments();	  List    <    String>    arguments    =    options.values();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
89	[BUG]  [BUGGY]  ArrayList  <  String>  arguments  =  new  ArrayList  <  String>(options.size()  +  1);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  ArrayList  <  String>  arguments  =  new  ArrayList  <  String>(options.size()  +  1);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	ArrayList  <  String>  arguments  =  new  ArrayList  <  String>(options.size()  +  1);	  ArrayList    <    String>    arguments    =    new    ArrayList    <    String>(options.size());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
90	[BUG]  [BUGGY]  Arrays.asList(arguments).addAll(this.options);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Arrays.asList(arguments).addAll(this.options);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	Arrays.asList(arguments).addAll(this.options);	  String[]    arguments    =    options.toArray(this.options);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
91	[BUG]  [BUGGY]  List  <  String>  arguments  =  this.options.iterator();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  List  <  String>  arguments  =  this.options.iterator();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	List  <  String>  arguments  =  this.options.iterator();	  List    <    String>    arguments    =    this.options.list();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
92	[BUG]  [BUGGY]  String[]  arguments  =  options.toArray(arguments,  stopAtNonOption)+  1;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  String[]  arguments  =  options.toArray(arguments,  stopAtNonOption)+  1;  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	String[]  arguments  =  options.toArray(arguments,  stopAtNonOption)+  1;	  String[]    arguments    =    options.toArray(arguments,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
93	[BUG]  [BUGGY]  String[]  arguments  =  options.toArray(arguments).toArray(this);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  String[]  arguments  =  options.toArray(arguments).toArray(this);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	String[]  arguments  =  options.toArray(arguments).toArray(this);	  String[]    arguments    =    options.toArray(arguments).toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
94	[BUG]  [BUGGY]  Option[]  arguments  =  options.getAllAsOptions();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option[]  arguments  =  options.getAllAsOptions();  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	Option[]  arguments  =  options.getAllAsOptions();	  Option[]    arguments    =    options.getAsOptions();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
95	[BUG]  [BUGGY]  Option[]  arguments  =  options.toArray(arguments).toArray(arguments);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option[]  arguments  =  options.toArray(arguments).toArray(arguments);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	Option[]  arguments  =  options.toArray(arguments).toArray(arguments);	  Option[]    arguments    =    options.toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
96	[BUG]  [BUGGY]  Option[]  arguments  =  options.asList(arguments);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  Option[]  arguments  =  options.asList(arguments);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	Option[]  arguments  =  options.asList(arguments);	  Option[]    arguments    =    options.toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
97	[BUG]  [BUGGY]  List  <  String>  arguments  =  options.getAll(arguments);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      {  init();  this.options  =  options;        [BUGGY]  List  <  String>  arguments  =  options.getAll(arguments);  [BUGGY]      Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(     "--     "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	100	100	2	replace	List  <  String>  arguments  =  options.getAll(arguments);	  List    <    String>    arguments    =    options.listAll(arguments);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
