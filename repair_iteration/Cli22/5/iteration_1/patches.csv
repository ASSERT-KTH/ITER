bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);    [BUGGY]  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	190	190	2	replace	||  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	      if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
2	[BUG]  [BUGGY]  While(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);    [BUGGY]  While(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	190	190	2	replace	While(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	      if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
3	[BUG]  [BUGGY]  if(stopAtNonOption  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);    [BUGGY]  if(stopAtNonOption  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	190	190	2	replace	if(stopAtNonOption  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	      if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
4	[BUG]  [BUGGY]  tokens.add( "-- ");  tokens.add(value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);    [BUGGY]  tokens.add( "-- ");  tokens.add(value);  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	190	190	2	replace	tokens.add( "-- ");  tokens.add(value);	      if(stopAtNonOption)    {    tokens.add(   "--   ");    tokens.add(value);    }    else    {    options.add(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
5	[BUG]  [BUGGY]  options.add( "-- ");  tokens.add(value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);    [BUGGY]  options.add( "-- ");  tokens.add(value);  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	190	190	2	replace	options.add( "-- ");  tokens.add(value);	      if(stopAtNonOption)    {    tokens.add(   "--   ");    tokens.add(value);    }    else    {    options.add(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
6	[BUG]  [BUGGY]  tokens.add( ",-- ");  tokens.add(value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);    [BUGGY]  tokens.add( ",-- ");  tokens.add(value);  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	190	190	2	replace	tokens.add( ",-- ");  tokens.add(value);	      if(stopAtNonOption)    {    tokens.add(   "--   ");    tokens.add(value);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
7	[BUG]  [BUGGY]  tokens.add( "--n ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);    [BUGGY]  tokens.add( "--n ");  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	190	190	2	replace	tokens.add( "--n ");	      tokens.add(   "--   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
8	[BUG]  [BUGGY]  tokens.remove( "-- ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);    [BUGGY]  tokens.remove( "-- ");  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	190	190	2	replace	tokens.remove( "-- ");	      tokens.add(   "--   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
9	[BUG]  [BUGGY]  if(stopAtNonOption)  {  stopAtNonOption  =  null;  tokens.add( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);    [BUGGY]  if(stopAtNonOption)  {  stopAtNonOption  =  null;  tokens.add( "-- ");  }  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	190	190	2	replace	if(stopAtNonOption)  {  stopAtNonOption  =  null;  tokens.add( "-- ");  }	      if(stopAtNonOption)    {    stopAtNonOption    =    stopAtNonOption;    tokens.add(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
10	[BUG]  [BUGGY]  if(stopAtNonOption)  {  stopAtNonOption  =  null;  tokens.add( "-- ");  tokens.add(value);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);    [BUGGY]  if(stopAtNonOption)  {  stopAtNonOption  =  null;  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]      [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	190	190	2	replace	if(stopAtNonOption)  {  stopAtNonOption  =  null;  tokens.add( "-- ");  tokens.add(value);  }	  if(stopAtNonOption)    {    stopAtNonOption    =    stopAtNonOption;    tokens.add(   "--   ");    tokens.add(value);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
11	[BUG]  [BUGGY]  if(stopAtNonOption)  {  stopAtNonOption  =  StopAtNonOption;  tokens.add( "-- ");  tokens.add(value);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);    [BUGGY]  if(stopAtNonOption)  {  stopAtNonOption  =  StopAtNonOption;  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]      [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	190	190	2	replace	if(stopAtNonOption)  {  stopAtNonOption  =  StopAtNonOption;  tokens.add( "-- ");  tokens.add(value);  }	  if(stopAtNonOption)    {    stopAtNonOption    =    stopAtNonOption;    tokens.add(   "--   ");    tokens.add(value);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
12	[BUG]  [BUGGY]  if(stopAtNonOption)  {  stopAtNonOption  =  StopAtNonOption.stopAtNonOption;  tokens.add( "--. ");  tokens.add(value);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);    [BUGGY]  if(stopAtNonOption)  {  stopAtNonOption  =  StopAtNonOption.stopAtNonOption;  tokens.add( "--. ");  tokens.add(value);  }  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	190	190	2	replace	if(stopAtNonOption)  {  stopAtNonOption  =  StopAtNonOption.stopAtNonOption;  tokens.add( "--. ");  tokens.add(value);  }	      if(stopAtNonOption)    {    stopAtNonOption    =    StopAtNonOption.stopAtNonOption;    tokens.add(   "--   ");    tokens.add(value);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
13	[BUG]  [BUGGY]  tokens.add( "-- ");  tokens.add(token);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);    [BUGGY]  tokens.add( "-- ");  tokens.add(token);  [BUGGY]      [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	190	190	2	replace	tokens.add( "-- ");  tokens.add(token);	  if(stopAtNonOption)    {    tokens.add(   "--   ");    tokens.add(token);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
14	[BUG]  [BUGGY]  tokens.add( "-- "  +  value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);    [BUGGY]  tokens.add( "-- "  +  value);  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	190	190	2	replace	tokens.add( "-- "  +  value);	      tokens.add(   "--   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
15	[BUG]  [BUGGY]  tokens.add( "-- ",  value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);    [BUGGY]  tokens.add( "-- ",  value);  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	190	190	2	replace	tokens.add( "-- ",  value);	      tokens.add(   "--   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
16	[BUG]  [BUGGY]  safeToken(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);    [BUGGY]  safeToken(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	190	190	2	replace	safeToken(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	      if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
17	[BUG]  [BUGGY]  options.add( "-- ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);    [BUGGY]  options.add( "-- ");  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	190	190	2	replace	options.add( "-- ");	      if(stopAtNonOption)    {    tokens.add(   "--   ");    tokens.add(value);    }    else    {    options.add(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
18	[BUG]  [BUGGY]  if(eatTheRest)  {  stopAtNonOption  =  StopAtNonOption.stopAtNonOption;  tokens.add( "-- ");  tokens.add(value);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);    [BUGGY]  if(eatTheRest)  {  stopAtNonOption  =  StopAtNonOption.stopAtNonOption;  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	190	190	2	replace	if(eatTheRest)  {  stopAtNonOption  =  StopAtNonOption.stopAtNonOption;  tokens.add( "-- ");  tokens.add(value);  }	      if(stopAtNonOption)    {    stopAtNonOption    =    StopAtNonOption.stopAtNonOption;    tokens.add(   "--   ");    tokens.add(value);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
19	[BUG]  [BUGGY]  if(eatTheRest)  {  stopAtNonOption  =  StopAtNonOption.stopAtNonOption;  tokens.add( ".-- ");  tokens.add(value);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);    [BUGGY]  if(eatTheRest)  {  stopAtNonOption  =  StopAtNonOption.stopAtNonOption;  tokens.add( ".-- ");  tokens.add(value);  }  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	190	190	2	replace	if(eatTheRest)  {  stopAtNonOption  =  StopAtNonOption.stopAtNonOption;  tokens.add( ".-- ");  tokens.add(value);  }	      if(stopAtNonOption)    {    stopAtNonOption    =    StopAtNonOption.stopAtNonOption;    tokens.add(   "--   ");    tokens.add(value);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
20	[BUG]  [BUGGY]  if(stopAtNonOption  ||  stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-- ");  tokens.add(value);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);    [BUGGY]  if(stopAtNonOption  ||  stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	190	190	2	replace	if(stopAtNonOption  ||  stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-- ");  tokens.add(value);  }	      if(stopAtNonOption)    {    stopAtNonOption    =    false;    tokens.add(   "--   ");    tokens.add(value);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
21	[BUG]  [BUGGY]  tokens.add( "-- ".equals(value));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);    [BUGGY]  tokens.add( "-- ".equals(value));  [BUGGY]      [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	190	190	2	replace	tokens.add( "-- ".equals(value));	  if(stopAtNonOption)    {    stopAtNonOption    =    stopAtNonOption;    tokens.add(   "--   ");    tokens.add(value);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
22	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);    [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size());  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	190	190	2	replace	TokenBuffer  tokens  =  new  TokenBuffer(tokens.size());	      if(stopAtNonOption)    {    stopAtNonOption    =    stopAtNonOption;    tokens.add(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
23	[BUG]  [BUGGY]  tokens.add( "-- ".equals(this.stopAtNonOption));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);    [BUGGY]  tokens.add( "-- ".equals(this.stopAtNonOption));  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	190	190	2	replace	tokens.add( "-- ".equals(this.stopAtNonOption));	      tokens.add(   "--   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
24	[BUG]  [BUGGY]  while(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);    [BUGGY]  while(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	190	190	2	replace	while(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	      if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
25	[BUG]  [BUGGY]  While(eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);    [BUGGY]  While(eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	190	190	2	replace	While(eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }	      if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
26	[BUG]  [BUGGY]  safeToken(stopAtNonOption))  throw  new  IllegalArgumentException( " ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);    [BUGGY]  safeToken(stopAtNonOption))  throw  new  IllegalArgumentException( " ");  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	190	190	2	replace	safeToken(stopAtNonOption))  throw  new  IllegalArgumentException( " ");	      if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
