projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java190
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java190tokens.add("--");
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java190if(stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java190if(stopAtNonOption){tokens.add("--");tokens.add(value);}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java190if(stopAtNonOption){stopAtNonOption=true;tokens.add("--");tokens.add(value);}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java190if(stopAtNonOption){tokens.add("--");tokens.add(value);}else{options.add("--");}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java190}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java190if(stopAtNonOption){tokens.add("--");tokens.add(token);}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java190if(stopAtNonOption){stopAtNonOption=stopAtNonOption;tokens.add("--");tokens.add(value);}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java190if(stopAtNonOption){stopAtNonOption=false;tokens.add("--");tokens.add(value);}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java190if(stopAtNonOption){stopAtNonOption=StopAtNonOption.stopAtNonOption;tokens.add("--");tokens.add(value);}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java190if(stopAtNonOption){stopAtNonOption=stopAtNonOption;tokens.add("--");}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java190||stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java190While(stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java190if(stopAtNonOption||stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java190tokens.add("--");tokens.add(value);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java190options.add("--");tokens.add(value);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java190tokens.add(",--");tokens.add(value);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java190tokens.add("--n");
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java190tokens.remove("--");
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java190if(stopAtNonOption){stopAtNonOption=null;tokens.add("--");}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java190if(stopAtNonOption){stopAtNonOption=null;tokens.add("--");tokens.add(value);}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java190if(stopAtNonOption){stopAtNonOption=StopAtNonOption;tokens.add("--");tokens.add(value);}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java190if(stopAtNonOption){stopAtNonOption=StopAtNonOption.stopAtNonOption;tokens.add("--.");tokens.add(value);}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java190tokens.add("--");tokens.add(token);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java190tokens.add("--"+value);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java190tokens.add("--",value);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java190safeToken(stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java190options.add("--");
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java190if(eatTheRest){stopAtNonOption=StopAtNonOption.stopAtNonOption;tokens.add("--");tokens.add(value);}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java190if(eatTheRest){stopAtNonOption=StopAtNonOption.stopAtNonOption;tokens.add(".--");tokens.add(value);}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java190if(stopAtNonOption||stopAtNonOption){stopAtNonOption=false;tokens.add("--");tokens.add(value);}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java190tokens.add("--".equals(value));
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java190TokenBuffertokens=newTokenBuffer(tokens.size());
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java190tokens.add("--".equals(this.stopAtNonOption));
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java190while(stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java190While(eatTheRest){thrownewIllegalArgumentException("");}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java190safeToken(stopAtNonOption))thrownewIllegalArgumentException("");
