bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    tokens.clear();  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]    tokens.clear();  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	54	54	2	replace	    tokens.clear();		non-compiled	[CE]  <identifier>  expected	34	None	add
2	[BUG]  [BUGGY]    tokens.add( "n ");  [CE]  <identifier>  expected  [FE]      ComparisonFailure  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]    tokens.add( "n ");  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	54	54	2	replace	    tokens.add( "n ");		non-compiled	[CE]  <identifier>  expected	34	None	add
3	[BUG]  [BUGGY]    options.clear();  [CE]  <identifier>  expected  [FE]        ComparisonFailure  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]    options.clear();  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	54	54	2	replace	    options.clear();		non-compiled	[CE]  <identifier>  expected	34	None	add
4	[BUG]  [BUGGY]    tokens.add( "-- ");  [CE]  <identifier>  expected  [FE]          ComparisonFailure  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]    tokens.add( "-- ");  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	54	54	2	replace	    tokens.add( "-- ");		non-compiled	[CE]  <identifier>  expected	34	None	add
5	[BUG]  [BUGGY]  if(tokens!=  null)  {  tokens  =  new  ArrayList  <  Option>();  }  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]  if(tokens!=  null)  {  tokens  =  new  ArrayList  <  Option>();  }  [BUGGY]    [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	54	54	2	replace	if(tokens!=  null)  {  tokens  =  new  ArrayList  <  Option>();  }	}  	non-compiled	[CE]  <identifier>  expected	33	None	replace
6	[BUG]  [BUGGY]  if(tokens!=  null)  {  tokens  =  new  ArrayList  <  Option>();  }  else  {  options.add(tokens);  }  [CE]  <identifier>  expected  [FE]      ComparisonFailure  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]  if(tokens!=  null)  {  tokens  =  new  ArrayList  <  Option>();  }  else  {  options.add(tokens);  }  [BUGGY]    [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	54	54	2	replace	if(tokens!=  null)  {  tokens  =  new  ArrayList  <  Option>();  }  else  {  options.add(tokens);  }	}  	non-compiled	[CE]  <identifier>  expected	33	None	replace
7	[BUG]  [BUGGY]  if(tokens!=  null)  {  tokens  =  new  ArrayList  <  Option>();  tokens.add(tokens.size());  }  [CE]  <identifier>  expected  [FE]        ComparisonFailure  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]  if(tokens!=  null)  {  tokens  =  new  ArrayList  <  Option>();  tokens.add(tokens.size());  }  [BUGGY]    [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	54	54	2	replace	if(tokens!=  null)  {  tokens  =  new  ArrayList  <  Option>();  tokens.add(tokens.size());  }	}  	non-compiled	[CE]  <identifier>  expected	33	None	replace
8	[BUG]  [BUGGY]    if(tokens!=  null)  {  tokens  =  Lists.newArrayList();  for(int  i  =  0;  i  <  tokens.size();  ++i)  {  options.add(options.get(i),  options.get(i));  }  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]    if(tokens!=  null)  {  tokens  =  Lists.newArrayList();  for(int  i  =  0;  i  <  tokens.size();  ++i)  {  options.add(options.get(i),  options.get(i));  }  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	54	54	2	replace	    if(tokens!=  null)  {  tokens  =  Lists.newArrayList();  for(int  i  =  0;  i  <  tokens.size();  ++i)  {  options.add(options.get(i),  options.get(i));  }		non-compiled	[CE]  <identifier>  expected	34	None	add
9	[BUG]  [BUGGY]    if(tokens!=  null)  {  tokens  =  Lists.newArrayList();  for(int  i  =  0;  i  <  tokens.size();  ++i)  {  options.add(options[i]);  }  [CE]  <identifier>  expected  [FE]      ComparisonFailure  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]    if(tokens!=  null)  {  tokens  =  Lists.newArrayList();  for(int  i  =  0;  i  <  tokens.size();  ++i)  {  options.add(options[i]);  }  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	54	54	2	replace	    if(tokens!=  null)  {  tokens  =  Lists.newArrayList();  for(int  i  =  0;  i  <  tokens.size();  ++i)  {  options.add(options[i]);  }		non-compiled	[CE]  <identifier>  expected	34	None	add
10	[BUG]  [BUGGY]    if(tokens!=  null)  {  tokens  =  Lists.newArrayList();  for(int  i  =  0;  i  <  tokens.size();  i++)  {  options.add(options.get(i),  options.get(i));  }  [CE]  <identifier>  expected  [FE]        ComparisonFailure  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]    if(tokens!=  null)  {  tokens  =  Lists.newArrayList();  for(int  i  =  0;  i  <  tokens.size();  i++)  {  options.add(options.get(i),  options.get(i));  }  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	54	54	2	replace	    if(tokens!=  null)  {  tokens  =  Lists.newArrayList();  for(int  i  =  0;  i  <  tokens.size();  i++)  {  options.add(options.get(i),  options.get(i));  }		non-compiled	[CE]  <identifier>  expected	34	None	add
11	[BUG]  [BUGGY]    if(tokens!=  null)  {  tokens  =  Lists.newArrayList();  for(int  i  =  0;  i  <  tokens.size();  ++i)  {  options.add(options);  }  [CE]  <identifier>  expected  [FE]          ComparisonFailure  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]    if(tokens!=  null)  {  tokens  =  Lists.newArrayList();  for(int  i  =  0;  i  <  tokens.size();  ++i)  {  options.add(options);  }  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	54	54	2	replace	    if(tokens!=  null)  {  tokens  =  Lists.newArrayList();  for(int  i  =  0;  i  <  tokens.size();  ++i)  {  options.add(options);  }		non-compiled	[CE]  <identifier>  expected	34	None	add
12	[BUG]  [BUGGY]  if(tokens!=  null)  {  tokens  =  Lists.newArrayList();  for(int  i  =  0;  i  <  tokens.size();  ++i)  {  options.add(options.get(i));  }  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]  if(tokens!=  null)  {  tokens  =  Lists.newArrayList();  for(int  i  =  0;  i  <  tokens.size();  ++i)  {  options.add(options.get(i));  }  [BUGGY]    [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	54	54	2	replace	if(tokens!=  null)  {  tokens  =  Lists.newArrayList();  for(int  i  =  0;  i  <  tokens.size();  ++i)  {  options.add(options.get(i));  }	}  	non-compiled	[CE]  <identifier>  expected	33	None	replace
13	[BUG]  [BUGGY]    this.tokens.clear();  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]    this.tokens.clear();  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	54	54	2	replace	    this.tokens.clear();		non-compiled	[CE]  <identifier>  expected	34	None	add
14	[BUG]  [BUGGY]    eatTheRest  =  true;  [CE]  <identifier>  expected  [FE]      ComparisonFailure  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  tokens.clear();  [BUGGY]    eatTheRest  =  true;  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	54	54	2	replace	    eatTheRest  =  true;		non-compiled	[CE]  <identifier>  expected	34	None	add
