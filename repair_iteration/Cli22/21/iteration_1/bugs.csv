bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  iter.hasNext())  {  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  {  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();    [BUGGY]  while  (iter.hasNext()  &&  iter.hasNext())  {  [BUGGY]  {  String  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	103	104	2	replace	while  (iter.hasNext()  &&  iter.hasNext())  {	while  (iter.hasNext())  {  	non-compiled	[CE]  <identifier>  expected	41	None	replace
2	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  iter.next().startsWith( "- "))  {  [CE]  <identifier>  expected  [FE]      ComparisonFailure  [CONTEXT]  {  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();    [BUGGY]  while  (iter.hasNext()  &&  iter.next().startsWith( "- "))  {  [BUGGY]  {  String  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	103	104	2	replace	while  (iter.hasNext()  &&  iter.next().startsWith( "- "))  {	while  (iter.hasNext())  {  	non-compiled	[CE]  <identifier>  expected	41	None	replace
3	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]        ComparisonFailure  [CONTEXT]  {  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();    [BUGGY]    [BUGGY]  {  String  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	103	104	2	replace	  	while  (iter.hasNext())  {  	non-compiled	[CE]  <identifier>  expected	41	None	replace
4	[BUG]  [BUGGY]    Iterator  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  {  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();    [BUGGY]    Iterator  iter  =  options.iterator();  [BUGGY]  while  (iter.hasNext())  {  {  String  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	103	104	2	replace	    Iterator  iter  =  options.iterator();		non-compiled	[CE]  <identifier>  expected	42	None	add
5	[BUG]  [BUGGY]    Iterator  iter  =  arguments.iterator();  [CE]  <identifier>  expected  [FE]      ComparisonFailure  [CONTEXT]  {  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();    [BUGGY]    Iterator  iter  =  arguments.iterator();  [BUGGY]  while  (iter.hasNext())  {  {  String  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	103	104	2	replace	    Iterator  iter  =  arguments.iterator();		non-compiled	[CE]  <identifier>  expected	42	None	add
6	[BUG]  [BUGGY]    Iterator  iter  =  tokens.iterator();  [CE]  <identifier>  expected  [FE]        ComparisonFailure  [CONTEXT]  {  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();    [BUGGY]    Iterator  iter  =  tokens.iterator();  [BUGGY]  while  (iter.hasNext())  {  {  String  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	103	104	2	replace	    Iterator  iter  =  tokens.iterator();		non-compiled	[CE]  <identifier>  expected	42	None	add
7	[BUG]  [BUGGY]    List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.size());  [CE]  <identifier>  expected  [FE]          ComparisonFailure  [CONTEXT]  {  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();    [BUGGY]    List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.size());  [BUGGY]  while  (iter.hasNext())  {  {  String  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	103	104	2	replace	    List  <  String>  tokens  =  new  ArrayList  <  String>(arguments.size());		non-compiled	[CE]  <identifier>  expected	42	None	add
8	[BUG]  [BUGGY]    List  <  String>  tokens  =  Lists.newArrayList(arguments);  [CE]  <identifier>  expected  [FE]            ComparisonFailure  [CONTEXT]  {  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();    [BUGGY]    List  <  String>  tokens  =  Lists.newArrayList(arguments);  [BUGGY]  while  (iter.hasNext())  {  {  String  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	103	104	2	replace	    List  <  String>  tokens  =  Lists.newArrayList(arguments);		non-compiled	[CE]  <identifier>  expected	42	None	add
9	[BUG]  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  {  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();    [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  [BUGGY]  while  (iter.hasNext())  {  {  String  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	103	104	2	replace	    Iterator  iter  =  Arrays.asList(arguments).iterator();		non-compiled	[CE]  <identifier>  expected	42	None	add
10	[BUG]  [BUGGY]    List  <  String>  tokens  =  Lists.newArrayList(arguments).iterator();  [CE]  <identifier>  expected  [FE]      ComparisonFailure  [CONTEXT]  {  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();    [BUGGY]    List  <  String>  tokens  =  Lists.newArrayList(arguments).iterator();  [BUGGY]  while  (iter.hasNext())  {  {  String  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	103	104	2	replace	    List  <  String>  tokens  =  Lists.newArrayList(arguments).iterator();		non-compiled	[CE]  <identifier>  expected	42	None	add
11	[BUG]  [BUGGY]    iter.hasNext();  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  {  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();    [BUGGY]    iter.hasNext();  [BUGGY]  while  (iter.hasNext())  {  {  String  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	103	104	2	replace	    iter.hasNext();		non-compiled	[CE]  <identifier>  expected	42	None	add
12	[BUG]  [BUGGY]    iter.next();  [CE]  <identifier>  expected  [FE]      ComparisonFailure  [CONTEXT]  {  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();    [BUGGY]    iter.next();  [BUGGY]  while  (iter.hasNext())  {  {  String  token  =  (String)  iter.next();  if  (token.startsWith( "-- "))  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	103	104	2	replace	    iter.next();		non-compiled	[CE]  <identifier>  expected	42	None	add
