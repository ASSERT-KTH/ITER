projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103while(iter.hasNext()){
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103while(iter.hasNext()&&iter.hasNext()){
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103while(iter.hasNext()&&iter.next().startsWith("-")){
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103Iteratoriter=options.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103Iteratoriter=arguments.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103Iteratoriter=tokens.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103List<String>tokens=newArrayList<String>(arguments.size());
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103List<String>tokens=Lists.newArrayList(arguments);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103Iteratoriter=Arrays.asList(arguments).iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103List<String>tokens=Lists.newArrayList(arguments).iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103iter.hasNext();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103iter.next();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103Iteratoriter=this.arguments.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103while(iter.hasNext()&&iter.next().equals("-")){
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103while(iter.hasNext()&&iter.next().startsWith("/")){
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103iter.remove();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103List<String>tokens=newArrayList<String>(arguments.size()-1);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103List<String>tokens=newArrayList<String>(arguments.size()+1);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103ArrayList<String>tokens=newArrayList<String>(arguments.size());
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103List<String>tokens=Lists.newArrayList();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103List<String>tokens=Lists.newArrayList(arguments,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103ArrayList<String>tokens=Lists.newArrayList(arguments);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103Iteratoriter=this.options.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103ArrayList<String>tokens=Lists.newArrayList(arguments).iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103List<String>tokens=Lists.newArrayList(options).iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103while(iter.hasNext()||iter.hasNext()){
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103Iteratoriter=Arrays.asList(this.options).iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103Iteratoriter=Arrays.asList(options).iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103Iteratoriter=this.tokens.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103String[]arguments=(String[])iter.next();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103List<String>tokens=(List<String>)iter.next();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103while(iter.hasNext()&&iter.next().startsWith("--")){
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103while(iter.hasNext()&&iter.next()){
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103List<String>tokens=Lists.newArrayList(arguments).toArray(newString[]{});
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103List<String>tokens=Lists.newArrayList(arguments).toArray(newString[args.size()]);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103ArrayList<String>tokens=(ArrayList<String>)iter.next();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103Set<String>tokens=(Set<String>)iter.next();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103List<String>tokens=Lists.newLinkedList();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103ArrayList<String>tokens=Lists.newArrayList();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103Collection<String>tokens=newArrayList<String>(arguments.size());
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103Iteratoriter=(this.options!=null)?Arrays.asList(arguments).iterator():null;
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103Iteratoriter=(this.options!=null)?this.options.iterator():null;
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103List<String>tokens=Lists.newArrayList(arguments).toArray(newString[args.size()-1]);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103List<String>tokens=Lists.newArrayList(args).toArray(newString[args.size()]);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103while(iter.hasNext()&&iter.next().equals("/")){
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103while(iter.hasNext()&&iter.next().equals("")){
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103ArrayList<String>tokens=Lists.newArrayList(options).iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103List<String>tokens=Lists.newArrayList(arguments,eatTheRest);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103List<String>tokens=Lists.newArrayList(arguments,stopAtNonOption,options);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103List<String>tokens=Lists.newArrayList(arguments,stopAtNonOption,eatTheRest);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103List<String>tokens=Lists.newArrayList(arguments,iter);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103Set<String>tokens=newHashSet<String>(arguments.size());
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103List<String>tokens=Lists.newArrayList(arguments).toArray(newString[]{},options);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103ArrayList<String>tokens=Lists.newArrayList(arguments).toArray(newString[]{});
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103List<String>tokens=Lists.newArrayList(arguments).toArray(newString[]{0});
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103ArrayList<String>tokens=Lists.newArrayList().iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103while(iter.hasNext()||iter.next().startsWith("--")){
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103ArrayList<String>tokens=Lists.newArrayList(arguments,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103Ileratoriter=Arrays.asList(arguments).iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103ArrayList<String>tokens=newArrayList<String>(arguments.size()-1);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103ArrayList<String>tokens=newArrayList<String>(arguments.size()+1);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103String[]arguments=(String[])iter.remove();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103String[]arguments=(String[])iter.getValue();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103if(stopAtNonOption){Iteratoriter=Arrays.asList(this.options).iterator();}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103List<String>tokens=(List<String>)iter.get();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103while(iter.hasNext()&&iter.next().equals("--")){
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103while(iter.hasNext()||iter.next()){
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103while(iter.hasNext()&&iter.next().startsWith("/")||iter.hasNext().startsWith("/")){
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103List<String>tokens=Lists.newArrayList().toArray(newString[]{});
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103ArrayList<String>tokens=Lists.newArrayList(arguments).values().iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103Set<String>tokens=newArrayList<String>(arguments.size());
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103if(stopAtNonOption){Iteratoriter=Arrays.asList(arguments).iterator();}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103if(stopAtNonOption){Iteratoriter=Arrays.asList(options).iterator();}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103List<String>tokens=Lists.newLinkedList(options).iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103List<String>tokens=(List<String>)iter.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103iter.clear();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103Iterator<String>iter=Arrays.asList(arguments).iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103while(iter.hasNext()||iter.next().equals("-")){
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103String[]arguments=(String[])iter.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103ArrayList<String>tokens=Lists.newArrayList(arguments).toArray(newArrayList<String>());
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103ArrayList<String>tokens=Lists.newArrayList(arguments).toArray(newArrayList());
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103while(iter.hasNext()||iter.next().startsWith("/")){
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java103List<String>tokens=Lists.newArrayListWithCapacity(arguments);
