bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    tokens.clear();  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  private  void  init()  {  [BUGGY]    tokens.clear();  [BUGGY]  eatTheRest  =  false;  tokens.clear();  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	52	52	2	replace	    tokens.clear();		non-compiled	[CE]  <identifier>  expected	30	None	add
2	[BUG]  [BUGGY]    if(tokens!=  null)  {  tokens  =  Lists.newArrayList();  }  [CE]  <identifier>  expected  [FE]      ComparisonFailure  [CONTEXT]  private  void  init()  {  [BUGGY]    if(tokens!=  null)  {  tokens  =  Lists.newArrayList();  }  [BUGGY]  eatTheRest  =  false;  tokens.clear();  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	52	52	2	replace	    if(tokens!=  null)  {  tokens  =  Lists.newArrayList();  }		non-compiled	[CE]  <identifier>  expected	30	None	add
3	[BUG]  [BUGGY]    if(tokens!=  null)  {  tokens  =  new  ArrayList  <  Option>();  }  [CE]  <identifier>  expected  [FE]        ComparisonFailure  [CONTEXT]  private  void  init()  {  [BUGGY]    if(tokens!=  null)  {  tokens  =  new  ArrayList  <  Option>();  }  [BUGGY]  eatTheRest  =  false;  tokens.clear();  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	52	52	2	replace	    if(tokens!=  null)  {  tokens  =  new  ArrayList  <  Option>();  }		non-compiled	[CE]  <identifier>  expected	30	None	add
4	[BUG]  [BUGGY]    eatTheRest  =  true;  tokens.clear();  [CE]  <identifier>  expected  [FE]          ComparisonFailure  [CONTEXT]  private  void  init()  {  [BUGGY]    eatTheRest  =  true;  tokens.clear();  [BUGGY]  eatTheRest  =  false;  tokens.clear();  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	52	52	2	replace	    eatTheRest  =  true;  tokens.clear();		non-compiled	[CE]  <identifier>  expected	30	None	add
5	[BUG]  [BUGGY]    if(tokens!=  null)  {  tokens  =  new  ArrayList();  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure  [CONTEXT]  private  void  init()  {  [BUGGY]    if(tokens!=  null)  {  tokens  =  new  ArrayList();  }  [BUGGY]  eatTheRest  =  false;  tokens.clear();  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	52	52	2	replace	    if(tokens!=  null)  {  tokens  =  new  ArrayList();  }		non-compiled	[CE]  <identifier>  expected	30	None	add
6	[BUG]  [BUGGY]  eatTheRest  =  true;  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  private  void  init()  {  [BUGGY]  eatTheRest  =  true;  [BUGGY]  tokens.clear();  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	52	52	2	replace	eatTheRest  =  true;	eatTheRest  =  false;  	non-compiled	[CE]  <identifier>  expected	29	None	replace
7	[BUG]  [BUGGY]  this.eatTheRest  =  false;  [CE]  <identifier>  expected  [FE]      ComparisonFailure  [CONTEXT]  private  void  init()  {  [BUGGY]  this.eatTheRest  =  false;  [BUGGY]  tokens.clear();  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	52	52	2	replace	this.eatTheRest  =  false;	eatTheRest  =  false;  	non-compiled	[CE]  <identifier>  expected	29	None	replace
8	[BUG]  [BUGGY]  eatTheRest  =  null;  [CE]  <identifier>  expected  [FE]        ComparisonFailure  [CONTEXT]  private  void  init()  {  [BUGGY]  eatTheRest  =  null;  [BUGGY]  tokens.clear();  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	52	52	2	replace	eatTheRest  =  null;	eatTheRest  =  false;  	non-compiled	[CE]  <identifier>  expected	29	None	replace
9	[BUG]  [BUGGY]  eattheRest  =  true;  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  private  void  init()  {  [BUGGY]  eattheRest  =  true;  [BUGGY]  tokens.clear();  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	52	52	2	replace	eattheRest  =  true;	eatTheRest  =  false;  	non-compiled	[CE]  <identifier>  expected	29	None	replace
10	[BUG]  [BUGGY]    if(tokens!=  null)  {  tokens  =  Collections.emptyList();  }  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  private  void  init()  {  [BUGGY]    if(tokens!=  null)  {  tokens  =  Collections.emptyList();  }  [BUGGY]  eatTheRest  =  false;  tokens.clear();  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	52	52	2	replace	    if(tokens!=  null)  {  tokens  =  Collections.emptyList();  }		non-compiled	[CE]  <identifier>  expected	30	None	add
11	[BUG]  [BUGGY]    if(tokens!=  null)  {  tokens  =  Collections.EMPTY_LIST;  }  [CE]  <identifier>  expected  [FE]      ComparisonFailure  [CONTEXT]  private  void  init()  {  [BUGGY]    if(tokens!=  null)  {  tokens  =  Collections.EMPTY_LIST;  }  [BUGGY]  eatTheRest  =  false;  tokens.clear();  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	52	52	2	replace	    if(tokens!=  null)  {  tokens  =  Collections.EMPTY_LIST;  }		non-compiled	[CE]  <identifier>  expected	30	None	add
12	[BUG]  [BUGGY]  EATTheRest  =  true;  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  private  void  init()  {  [BUGGY]  EATTheRest  =  true;  [BUGGY]  tokens.clear();  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	52	52	2	replace	EATTheRest  =  true;	eatTheRest  =  false;  	non-compiled	[CE]  <identifier>  expected	29	None	replace
13	[BUG]  [BUGGY]    tokens  =  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  private  void  init()  {  [BUGGY]    tokens  =  Lists.newArrayList();  [BUGGY]  eatTheRest  =  false;  tokens.clear();  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	52	52	2	replace	    tokens  =  Lists.newArrayList();		non-compiled	[CE]  <identifier>  expected	30	None	add
14	[BUG]  [BUGGY]    tokens  =  new  ArrayList  <  Option>();  [CE]  <identifier>  expected  [FE]      ComparisonFailure  [CONTEXT]  private  void  init()  {  [BUGGY]    tokens  =  new  ArrayList  <  Option>();  [BUGGY]  eatTheRest  =  false;  tokens.clear();  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	52	52	2	replace	    tokens  =  new  ArrayList  <  Option>();		non-compiled	[CE]  <identifier>  expected	30	None	add
