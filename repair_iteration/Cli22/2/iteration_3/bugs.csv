bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(stopAtNonOption!=  null)  {  eatTheRest  =  stopAtNonOption.toString();  }  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  if(stopAtNonOption!=  null)  {  eatTheRest  =  stopAtNonOption.toString();  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(stopAtNonOption!=  null)  {  eatTheRest  =  stopAtNonOption.toString();  }	  eatTheRest    =    stopAtNonOption.toString();    	non-compiled	[CE]  not  a  statement	7	None	replace
2	[BUG]  [BUGGY]  if(stopAtNonOption  ==  null)  {  eatTheRest  =  stopAtNonOption.toString();  }  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  if(stopAtNonOption  ==  null)  {  eatTheRest  =  stopAtNonOption.toString();  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(stopAtNonOption  ==  null)  {  eatTheRest  =  stopAtNonOption.toString();  }	  eatTheRest    =    stopAtNonOption.toString();    	non-compiled	[CE]  not  a  statement	7	None	replace
3	[BUG]  [BUGGY]  if(stopAtNonOption!=  null)  {  eatTheRest  =  stopAtNonOption.toString();  }  else  {  tokens.add( "-- ");  }  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  if(stopAtNonOption!=  null)  {  eatTheRest  =  stopAtNonOption.toString();  }  else  {  tokens.add( "-- ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(stopAtNonOption!=  null)  {  eatTheRest  =  stopAtNonOption.toString();  }  else  {  tokens.add( "-- ");  }	  eatTheRest    =    stopAtNonOption.toString();    	non-compiled	[CE]  ')'  expected	7	None	replace
4	[BUG]  [BUGGY]  eatTheRest  =  stopAtNonOption  ||  value;  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  eatTheRest  =  stopAtNonOption  ||  value;  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	eatTheRest  =  stopAtNonOption  ||  value;	  eatTheRest    =    stopAtNonOption    ||    stopAtNonOption;    	non-compiled	[CE]  ')'  expected	61	None	replace
5	[BUG]  [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  stopAtNonOption  ||  stopAtNonOption;  }  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  stopAtNonOption  ||  stopAtNonOption;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(stopAtNonOption)  {  eatTheRest  =  stopAtNonOption  ||  stopAtNonOption;  }	  eatTheRest    =    stopAtNonOption    ||    stopAtNonOption;    	non-compiled	[CE]  ')'  expected	61	None	replace
6	[BUG]  [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  stopAtNonOption  ||  stopAtNonOption;  }  else  {  tokens.add( "-- ");  }  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  stopAtNonOption  ||  stopAtNonOption;  }  else  {  tokens.add( "-- ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(stopAtNonOption)  {  eatTheRest  =  stopAtNonOption  ||  stopAtNonOption;  }  else  {  tokens.add( "-- ");  }	  eatTheRest    =    stopAtNonOption    ||    stopAtNonOption;    	non-compiled	[CE]  ')'  expected	61	None	replace
7	[BUG]  [BUGGY]  eatTheRest  =  stopAtNonOption  &&  stopAtNonOption;  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  eatTheRest  =  stopAtNonOption  &&  stopAtNonOption;  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	eatTheRest  =  stopAtNonOption  &&  stopAtNonOption;	  eatTheRest    =    stopAtNonOption    ||    stopAtNonOption;    	non-compiled	[CE]  ')'  expected	61	None	replace
8	[BUG]  [BUGGY]  tokens.put( "-- ");  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  tokens.put( "-- ");  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	tokens.put( "-- ");	  tokens.remove(   "--   ");    	non-compiled	[CE]  ')'  expected	22	None	replace
9	[BUG]  [BUGGY]  if(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  if(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  tokens.add(   "--   ");    tokens.add(value);    	non-compiled	[CE]  ')'  expected	9	None	replace
10	[BUG]  [BUGGY]  ||!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  ||!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	||!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  if(!stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	57	None	replace
11	[BUG]  [BUGGY]  While(!stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  While(!stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	While(!stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }	  if(!stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	57	None	replace
12	[BUG]  [BUGGY]  while(stopAtNonOption  &&  value!=  null)  {  eatTheRest  =  true;  }  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  while(stopAtNonOption  &&  value!=  null)  {  eatTheRest  =  true;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	while(stopAtNonOption  &&  value!=  null)  {  eatTheRest  =  true;  }	  while(stopAtNonOption)    {    eatTheRest    =    true;    }    	non-compiled	[CE]  ')'  expected	51	None	replace
13	[BUG]  [BUGGY]  while(stopAtNonOption  &&  value.length()  >  0)  {  eatTheRest  =  true;  }  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  while(stopAtNonOption  &&  value.length()  >  0)  {  eatTheRest  =  true;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	while(stopAtNonOption  &&  value.length()  >  0)  {  eatTheRest  =  true;  }	  while(stopAtNonOption)    {    eatTheRest    =    true;    }    	non-compiled	[CE]  ')'  expected	51	None	replace
14	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  if(stopAtNonOption  ||  stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  stopAtNonOption  =  false;  }  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  if(!stopAtNonOption)  {  if(stopAtNonOption  ||  stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  stopAtNonOption  =  false;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(!stopAtNonOption)  {  if(stopAtNonOption  ||  stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  stopAtNonOption  =  false;  }	  if(stopAtNonOption    ||    stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    stopAtNonOption    =    false;    }    	non-compiled	[CE]  ')'  expected	41	None	replace
15	[BUG]  [BUGGY]  parent.processNonOptionToken(value,  null);  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  parent.processNonOptionToken(value,  null);  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	parent.processNonOptionToken(value,  null);	  parent.processNonOptionToken(value,    stopAtNonOption);    	non-compiled	[CE]  ')'  expected	56	None	replace
16	[BUG]  [BUGGY]  parent.processNonOptionToken(value,  value);  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  parent.processNonOptionToken(value,  value);  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	parent.processNonOptionToken(value,  value);	  parent.processNonOptionToken(value,    stopAtNonOption);    	non-compiled	[CE]  ')'  expected	56	None	replace
17	[BUG]  [BUGGY]  parent.processNonOptionToken(value,  eatTheRest);  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  parent.processNonOptionToken(value,  eatTheRest);  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	parent.processNonOptionToken(value,  eatTheRest);	  parent.processNonOptionToken(value,    stopAtNonOption);    	non-compiled	[CE]  ')'  expected	56	None	replace
18	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.findToken(value,  value);  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.findToken(value,  value);  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.findToken(value,  value);	  Token    stopAtNonOption    =    StopAtNonOption.findToken(value);    	non-compiled	[CE]  ')'  expected	19	None	replace
19	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.findToken(value,  true);  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.findToken(value,  true);  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.findToken(value,  true);	  Token    stopAtNonOption    =    StopAtNonOption.findToken(value);    	non-compiled	[CE]  ')'  expected	19	None	replace
20	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.findToken(value,  null);  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.findToken(value,  null);  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.findToken(value,  null);	  Token    stopAtNonOption    =    StopAtNonOption.findToken(value);    	non-compiled	[CE]  ')'  expected	19	None	replace
21	[BUG]  [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  stopAtNonOption  =  true;  }  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  stopAtNonOption  =  true;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  stopAtNonOption  =  true;  }	  if(stopAtNonOption)    {    eatTheRest    =    false;    }    else    {    stopAtNonOption    =    true;    }    	non-compiled	[CE]  ')'  expected	11	None	replace
22	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  eatTheRest  =  false;  }  else  {  stopAtNonOption  =  true;  }  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  ||  stopAtNonOption)  {  eatTheRest  =  false;  }  else  {  stopAtNonOption  =  true;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	||  stopAtNonOption)  {  eatTheRest  =  false;  }  else  {  stopAtNonOption  =  true;  }	  if(stopAtNonOption)    {    eatTheRest    =    false;    }    else    {    stopAtNonOption    =    true;    }    	non-compiled	[CE]  ')'  expected	11	None	replace
23	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  eatTheRest  =  false;  }  else  {  stopAtNonOption  =  true;  }  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  if(!stopAtNonOption)  {  eatTheRest  =  false;  }  else  {  stopAtNonOption  =  true;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(!stopAtNonOption)  {  eatTheRest  =  false;  }  else  {  stopAtNonOption  =  true;  }	  if(stopAtNonOption)    {    eatTheRest    =    false;    }    else    {    stopAtNonOption    =    true;    }    	non-compiled	[CE]  ')'  expected	11	None	replace
24	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopAndClearBuffer();  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopAndClearBuffer();  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.stopAndClearBuffer();	  Token    stopAtNonOption    =    StopAtNonOption.stop();    	non-compiled	[CE]  ')'  expected	24	None	replace
25	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stop(this);  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stop(this);  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.stop(this);	  Token    stopAtNonOption    =    StopAtNonOption.stop();    	non-compiled	[CE]  ')'  expected	24	None	replace
26	[BUG]  [BUGGY]  while(stopAtNonOption)  {  eatTheRest  =  false;  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  while(stopAtNonOption)  {  eatTheRest  =  false;  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	while(stopAtNonOption)  {  eatTheRest  =  false;	  while(stopAtNonOption)    {    eatTheRest    =    true;    	non-compiled	[CE]  ')'  expected	15	None	replace
27	[BUG]  [BUGGY]  while(stopAtNonOption  &&  value!=  null)  {  eatTheRest  =  true;  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  while(stopAtNonOption  &&  value!=  null)  {  eatTheRest  =  true;  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	while(stopAtNonOption  &&  value!=  null)  {  eatTheRest  =  true;	  while(stopAtNonOption)    {    eatTheRest    =    true;    	non-compiled	[CE]  ')'  expected	15	None	replace
28	[BUG]  [BUGGY]  While(stopAtNonOption)  {  eatTheRest  =  false;  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  While(stopAtNonOption)  {  eatTheRest  =  false;  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	While(stopAtNonOption)  {  eatTheRest  =  false;	  while(stopAtNonOption)    {    eatTheRest    =    true;    	non-compiled	[CE]  ')'  expected	15	None	replace
29	[BUG]  [BUGGY]  while(stopAtNonOption  &&  value.length()  >  0)  {  eatTheRest  =  true;  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  while(stopAtNonOption  &&  value.length()  >  0)  {  eatTheRest  =  true;  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	while(stopAtNonOption  &&  value.length()  >  0)  {  eatTheRest  =  true;	  while(stopAtNonOption)    {    eatTheRest    =    true;    	non-compiled	[CE]  ')'  expected	15	None	replace
30	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  eatTheRest  =  false;  }  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  ||  stopAtNonOption)  {  eatTheRest  =  false;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	||  stopAtNonOption)  {  eatTheRest  =  false;  }	  ||    stopAtNonOption)    {    eatTheRest    =    true;    }    	non-compiled	[CE]  ')'  expected	25	None	replace
31	[BUG]  [BUGGY]  ||  stopAtNonOption  ||  value  ==  null)  {  eatTheRest  =  true;  }  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  ||  stopAtNonOption  ||  value  ==  null)  {  eatTheRest  =  true;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	||  stopAtNonOption  ||  value  ==  null)  {  eatTheRest  =  true;  }	  ||    stopAtNonOption)    {    eatTheRest    =    true;    }    	non-compiled	[CE]  ')'  expected	25	None	replace
32	[BUG]  [BUGGY]  tokens.add( "-- "  +  value,  stopAtNonOption);  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  tokens.add( "-- "  +  value,  stopAtNonOption);  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	tokens.add( "-- "  +  value,  stopAtNonOption);	  tokens.add(   "--   "    +    value);    	non-compiled	[CE]  ')'  expected	39	None	replace
33	[BUG]  [BUGGY]  tokens.add( "-- "  +  value)&&!stopAtNonOption;  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  tokens.add( "-- "  +  value)&&!stopAtNonOption;  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	tokens.add( "-- "  +  value)&&!stopAtNonOption;	  tokens.add(   "--   "    +    value);    	non-compiled	[CE]  ')'  expected	39	None	replace
34	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopAtNon(value,  false);  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopAtNon(value,  false);  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.stopAtNon(value,  false);	  Token    stopAtNonOption    =    StopAtNonOption.stopAtNonOption(value,    true);    	non-compiled	[CE]  ')'  expected	26	None	replace
35	[BUG]  [BUGGY]  tokens.add( "-- ").equals(value);  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  tokens.add( "-- ").equals(value);  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	tokens.add( "-- ").equals(value);	  tokens.add(   "--   ".equals(value));    	non-compiled	[CE]  ')'  expected	54	None	replace
36	[BUG]  [BUGGY]  tokens.add( "-- ").equals(value));  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  tokens.add( "-- ").equals(value));  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	tokens.add( "-- ").equals(value));	  tokens.add(   "--   ".equals(value));    	non-compiled	[CE]  ')'  expected	54	None	replace
37	[BUG]  [BUGGY]  While(stopAtNonOption)  {  tokens.add( "-- ");  eatTheRest  =  false;  }  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  While(stopAtNonOption)  {  tokens.add( "-- ");  eatTheRest  =  false;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	While(stopAtNonOption)  {  tokens.add( "-- ");  eatTheRest  =  false;  }	  While(stopAtNonOption)    {    tokens.add(   "--   ");    eatTheRest    =    true;    }    	non-compiled	[CE]  ')'  expected	43	None	replace
38	[BUG]  [BUGGY]  while(stopAtNonOption)  {  tokens.add( "-- ");  eatTheRest  =  false;  }  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  while(stopAtNonOption)  {  tokens.add( "-- ");  eatTheRest  =  false;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	while(stopAtNonOption)  {  tokens.add( "-- ");  eatTheRest  =  false;  }	  While(stopAtNonOption)    {    tokens.add(   "--   ");    eatTheRest    =    true;    }    	non-compiled	[CE]  ')'  expected	43	None	replace
39	[BUG]  [BUGGY]  tokens.add( "-- ");  eatTheRest  =  true;  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  tokens.add( "-- ");  eatTheRest  =  true;  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	tokens.add( "-- ");  eatTheRest  =  true;	  While(stopAtNonOption)    {    tokens.add(   "--   ");    eatTheRest    =    true;    }    	non-compiled	[CE]  ')'  expected	43	None	replace
40	[BUG]  [BUGGY]  While(stopAtNonOption)  {  eatTheRest  =  true;  }  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  While(stopAtNonOption)  {  eatTheRest  =  true;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	While(stopAtNonOption)  {  eatTheRest  =  true;  }	  While(stopAtNonOption)    {    eatTheRest    =    false;    }    	non-compiled	[CE]  ')'  expected	13	None	replace
41	[BUG]  [BUGGY]  while(stopAtNonOption  &&  value!=  null)  {  eatTheRest  =  false;  }  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  while(stopAtNonOption  &&  value!=  null)  {  eatTheRest  =  false;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	while(stopAtNonOption  &&  value!=  null)  {  eatTheRest  =  false;  }	  While(stopAtNonOption)    {    eatTheRest    =    false;    }    	non-compiled	[CE]  ')'  expected	13	None	replace
42	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.getInstance();  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.getInstance();  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.getInstance();	  Token    stopAtNonOption    =    StopAtNonOption.stopAtNon();    	non-compiled	[CE]  ')'  expected	66	None	replace
43	[BUG]  [BUGGY]  while(stopAtNonOption  &&  value.length()  >  0)  {  tokens.add( "-- ");  }  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  while(stopAtNonOption  &&  value.length()  >  0)  {  tokens.add( "-- ");  }  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	while(stopAtNonOption  &&  value.length()  >  0)  {  tokens.add( "-- ");  }	  While(stopAtNonOption    &&    value.length()    >    0)    {    tokens.add(   "--   ");    }    	non-compiled	[CE]  ')'  expected	33	None	replace
44	[BUG]  [BUGGY]  while(stopAtNonOption  &&  value!=  null)  {  tokens.add( "-- ");  }  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  while(stopAtNonOption  &&  value!=  null)  {  tokens.add( "-- ");  }  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	while(stopAtNonOption  &&  value!=  null)  {  tokens.add( "-- ");  }	  While(stopAtNonOption    &&    value!=    null)    {    tokens.add(   "--   ");    }    	non-compiled	[CE]  ')'  expected	32	None	replace
45	[BUG]  [BUGGY]  While(stopAtNonOption  &&  value  ==  null)  {  tokens.add( "-- ");  }  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  While(stopAtNonOption  &&  value  ==  null)  {  tokens.add( "-- ");  }  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	While(stopAtNonOption  &&  value  ==  null)  {  tokens.add( "-- ");  }	  While(stopAtNonOption    &&    value!=    null)    {    tokens.add(   "--   ");    }    	non-compiled	[CE]  ')'  expected	32	None	replace
46	[BUG]  [BUGGY]  While(stopAtNonOption  &&  value!=  null)  {  throw  new  IllegalArgumentException( "-- ");  }  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  While(stopAtNonOption  &&  value!=  null)  {  throw  new  IllegalArgumentException( "-- ");  }  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	While(stopAtNonOption  &&  value!=  null)  {  throw  new  IllegalArgumentException( "-- ");  }	  While(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "--   ");    }    	non-compiled	[CE]  ')'  expected	62	None	replace
47	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  -  1);  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  -  1);  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  -  1);	  TokenBuffer    tokens    =    new    TokenBuffer(tokens.size());    	non-compiled	[CE]  ')'  expected	46	None	replace
48	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  +  1);  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  +  1);  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  +  1);	  TokenBuffer    tokens    =    new    TokenBuffer(tokens.size());    	non-compiled	[CE]  ')'  expected	46	None	replace
49	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  -  2);  [CE]  ')'  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  -  2);  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  -  2);	  TokenBuffer    tokens    =    new    TokenBuffer(tokens.size());    	non-compiled	[CE]  ')'  expected	46	None	replace
50	[BUG]  [BUGGY]  while(stopAtNonOption  &&  value  ==  null)  {  eatTheRest  =  false;  }  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  while(stopAtNonOption  &&  value  ==  null)  {  eatTheRest  =  false;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	while(stopAtNonOption  &&  value  ==  null)  {  eatTheRest  =  false;  }	  while(stopAtNonOption)    {    eatTheRest    =    false;    }    	non-compiled	[CE]  ')'  expected	52	None	replace
51	[BUG]  [BUGGY]  while(stopAtNonOption  &&  value.length()  >  0)  {  tokens.add( "-- ");  tokens.add(value);  }  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  while(stopAtNonOption  &&  value.length()  >  0)  {  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	while(stopAtNonOption  &&  value.length()  >  0)  {  tokens.add( "-- ");  tokens.add(value);  }	  While(stopAtNonOption)    {    tokens.add(   "--   ");    tokens.add(value);    }    	non-compiled	[CE]  ')'  expected	14	None	replace
52	[BUG]  [BUGGY]  While(stopAtNonOption  &&  value.length()  >  0)  {  tokens.add( "-- ");  tokens.add(value);  }  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  While(stopAtNonOption  &&  value.length()  >  0)  {  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	While(stopAtNonOption  &&  value.length()  >  0)  {  tokens.add( "-- ");  tokens.add(value);  }	  While(stopAtNonOption)    {    tokens.add(   "--   ");    tokens.add(value);    }    	non-compiled	[CE]  ')'  expected	14	None	replace
53	[BUG]  [BUGGY]  while(stopAtNonOption  &&  value!=  null)  {  tokens.add( "-- ");  tokens.add(value);  }  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  while(stopAtNonOption  &&  value!=  null)  {  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	while(stopAtNonOption  &&  value!=  null)  {  tokens.add( "-- ");  tokens.add(value);  }	  While(stopAtNonOption)    {    tokens.add(   "--   ");    tokens.add(value);    }    	non-compiled	[CE]  ')'  expected	14	None	replace
54	[BUG]  [BUGGY]  EATTheRest  =  false;  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  EATTheRest  =  false;  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	EATTheRest  =  false;	  EATTheRest    =    true;    	non-compiled	[CE]  ')'  expected	35	None	replace
55	[BUG]  [BUGGY]  EATtheRest  =  false;  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  EATtheRest  =  false;  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	EATtheRest  =  false;	  EATTheRest    =    true;    	non-compiled	[CE]  ')'  expected	35	None	replace
56	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stop(value,  true);  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stop(value,  true);  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.stop(value,  true);	  Token    stopAtNonOption    =    StopAtNonOption.stop(value);    	non-compiled	[CE]  ')'  expected	23	None	replace
57	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stop(tokens);  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stop(tokens);  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.stop(tokens);	  Token    stopAtNonOption    =    StopAtNonOption.stop(value);    	non-compiled	[CE]  ')'  expected	23	None	replace
58	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stop(value,  value);  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stop(value,  value);  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.stop(value,  value);	  Token    stopAtNonOption    =    StopAtNonOption.stop(value);    	non-compiled	[CE]  ')'  expected	23	None	replace
59	[BUG]  [BUGGY]  eatTheRest  =  true,  stopAtNonOption  =  true;  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  eatTheRest  =  true,  stopAtNonOption  =  true;  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	eatTheRest  =  true,  stopAtNonOption  =  true;	  eatTheRest    =    true,    stopAtNonOption    =    false;    	non-compiled	[CE]  ')'  expected	65	None	replace
60	[BUG]  [BUGGY]  eatTheRest  =  false,  stopAtNonOption  =  true;  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  eatTheRest  =  false,  stopAtNonOption  =  true;  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	eatTheRest  =  false,  stopAtNonOption  =  true;	  eatTheRest    =    true,    stopAtNonOption    =    false;    	non-compiled	[CE]  ')'  expected	65	None	replace
61	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  eatTheRest  =  false;  }  else  {  stopAtNonOption  =  false;  }  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  ||  stopAtNonOption)  {  eatTheRest  =  false;  }  else  {  stopAtNonOption  =  false;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	||  stopAtNonOption)  {  eatTheRest  =  false;  }  else  {  stopAtNonOption  =  false;  }	  ||    stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    stopAtNonOption    =    false;    }    	non-compiled	[CE]  ')'  expected	28	None	replace
62	[BUG]  [BUGGY]  ||  stopAtNonOption  ||  value.length()  ==  0)  {  eatTheRest  =  true;  }  else  {  stopAtNonOption  =  false;  }  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  ||  stopAtNonOption  ||  value.length()  ==  0)  {  eatTheRest  =  true;  }  else  {  stopAtNonOption  =  false;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	||  stopAtNonOption  ||  value.length()  ==  0)  {  eatTheRest  =  true;  }  else  {  stopAtNonOption  =  false;  }	  ||    stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    stopAtNonOption    =    false;    }    	non-compiled	[CE]  ')'  expected	28	None	replace
63	[BUG]  [BUGGY]  ||  stopAtNonOption  ||  value.equals( "- "))  {  eatTheRest  =  true;  }  else  {  stopAtNonOption  =  false;  }  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  ||  stopAtNonOption  ||  value.equals( "- "))  {  eatTheRest  =  true;  }  else  {  stopAtNonOption  =  false;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	||  stopAtNonOption  ||  value.equals( "- "))  {  eatTheRest  =  true;  }  else  {  stopAtNonOption  =  false;  }	  ||    stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    stopAtNonOption    =    false;    }    	non-compiled	[CE]  ')'  expected	28	None	replace
64	[BUG]  [BUGGY]  While(stopAtNonOption  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  While(stopAtNonOption  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	While(stopAtNonOption  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  While(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	1	None	replace
65	[BUG]  [BUGGY]  While(stopAtNonOption  &&  value!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  While(stopAtNonOption  &&  value!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	While(stopAtNonOption  &&  value!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  While(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
66	[BUG]  [BUGGY]  eattheRest  =  false;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  eattheRest  =  false;  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	eattheRest  =  false;	  eattheRest    =    true;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
67	[BUG]  [BUGGY]  if(stopAtNonOption)  {  eattheRest  =  true;  }  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  if(stopAtNonOption)  {  eattheRest  =  true;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(stopAtNonOption)  {  eattheRest  =  true;  }	  eattheRest    =    true;    	non-compiled	[CE]  ')'  expected	34	None	replace
68	[BUG]  [BUGGY]  if(stopAtNonOption)  {  eattheRest  =  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  if(stopAtNonOption)  {  eattheRest  =  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(stopAtNonOption)  {  eattheRest  =  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  eattheRest    =    true;    	non-compiled	[CE]  ')'  expected	34	None	replace
69	[BUG]  [BUGGY]  if(stopAtNonOption  ||  stopAtNonOption)  {  eatTheRest  =  false;  }  else  {  stopAtNonOption  =  false;  }  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  if(stopAtNonOption  ||  stopAtNonOption)  {  eatTheRest  =  false;  }  else  {  stopAtNonOption  =  false;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(stopAtNonOption  ||  stopAtNonOption)  {  eatTheRest  =  false;  }  else  {  stopAtNonOption  =  false;  }	  if(stopAtNonOption)    {    eatTheRest    =    false;    }    else    {    stopAtNonOption    =    false;    }    	non-compiled	[CE]  ')'  expected	29	None	replace
70	[BUG]  [BUGGY]  eatTheRest  =  stopAtNonOption  ||  value!=  null;  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  eatTheRest  =  stopAtNonOption  ||  value!=  null;  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	eatTheRest  =  stopAtNonOption  ||  value!=  null;	  eatTheRest    =    stopAtNonOption    ||    value    ==    null;    	non-compiled	[CE]  ')'  expected	45	None	replace
71	[BUG]  [BUGGY]  eatTheRest  =  stopAtNonOption  &&  value  ==  null;  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  eatTheRest  =  stopAtNonOption  &&  value  ==  null;  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	eatTheRest  =  stopAtNonOption  &&  value  ==  null;	  eatTheRest    =    stopAtNonOption    ||    value    ==    null;    	non-compiled	[CE]  ')'  expected	45	None	replace
72	[BUG]  [BUGGY]  eatTheRest  =  value  ||  stopAtNonOption  ==  null;  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  eatTheRest  =  value  ||  stopAtNonOption  ==  null;  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	eatTheRest  =  value  ||  stopAtNonOption  ==  null;	  eatTheRest    =    stopAtNonOption    ||    value    ==    null;    	non-compiled	[CE]  ')'  expected	45	None	replace
73	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.NO_OPTION  &&  value.length()  >  0;  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.NO_OPTION  &&  value.length()  >  0;  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.NO_OPTION  &&  value.length()  >  0;	  Token    stopAtNonOption    =    StopAtNonOption.NO_OPTION;    	non-compiled	[CE]  ')'  expected	18	None	replace
74	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.NO_OPTION  :  null;  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.NO_OPTION  :  null;  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.NO_OPTION  :  null;	  Token    stopAtNonOption    =    StopAtNonOption.NO_OPTION;    	non-compiled	[CE]  ')'  expected	18	None	replace
75	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.NO_OPTION  ||  value.length()  ==  0;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.NO_OPTION  ||  value.length()  ==  0;  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.NO_OPTION  ||  value.length()  ==  0;	  Token    stopAtNonOption    =    StopAtNonOption.NO_OPTION;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
76	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopToken(value,  value);  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopToken(value,  value);  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.stopToken(value,  value);	  Token    stopAtNonOption    =    StopAtNonOption.stopToken(value);    	non-compiled	[CE]  ')'  expected	17	None	replace
77	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopToken(value,  true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopToken(value,  true);  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.stopToken(value,  true);	  Token    stopAtNonOption    =    StopAtNonOption.stopToken(value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
78	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopToken(value,  null);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopToken(value,  null);  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.stopToken(value,  null);	  Token    stopAtNonOption    =    StopAtNonOption.stopToken(value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
79	[BUG]  [BUGGY]  ||  eatTheRest)  {  stopAtNonOption  =  true;  }  else  {  stopAtNonOption  =  false;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  ||  eatTheRest)  {  stopAtNonOption  =  true;  }  else  {  stopAtNonOption  =  false;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	||  eatTheRest)  {  stopAtNonOption  =  true;  }  else  {  stopAtNonOption  =  false;  }	  if(eatTheRest)    {    stopAtNonOption    =    true;    }    else    {    stopAtNonOption    =    false;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
80	[BUG]  [BUGGY]  if(!eatTheRest)  {  stopAtNonOption  =  true;  }  else  {  stopAtNonOption  =  false;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  if(!eatTheRest)  {  stopAtNonOption  =  true;  }  else  {  stopAtNonOption  =  false;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(!eatTheRest)  {  stopAtNonOption  =  true;  }  else  {  stopAtNonOption  =  false;  }	  if(eatTheRest)    {    stopAtNonOption    =    true;    }    else    {    stopAtNonOption    =    false;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
81	[BUG]  [BUGGY]  if(!eatTheRest)  {  StopAtNonOption  =  true;  }  else  {  stopAtNonOption  =  false;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  if(!eatTheRest)  {  StopAtNonOption  =  true;  }  else  {  stopAtNonOption  =  false;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(!eatTheRest)  {  StopAtNonOption  =  true;  }  else  {  stopAtNonOption  =  false;  }	  if(eatTheRest)    {    stopAtNonOption    =    true;    }    else    {    stopAtNonOption    =    false;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
82	[BUG]  [BUGGY]  ||  eatTheRest)  {  stopAtNonOption  =  true;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  ||  eatTheRest)  {  stopAtNonOption  =  true;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	||  eatTheRest)  {  stopAtNonOption  =  true;  }	  if(eatTheRest)    {    stopAtNonOption    =    true;    }    else    {    stopAtNonOption    =    false;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
83	[BUG]  [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  stopAtNonOption  +  1;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  stopAtNonOption  +  1;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(stopAtNonOption)  {  eatTheRest  =  stopAtNonOption  +  1;  }	  eatTheRest    =    stopAtNonOption    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	44	None	replace
84	[BUG]  [BUGGY]  eatTheRest  =  stopAtNonOption  +  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  eatTheRest  =  stopAtNonOption  +  2;  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	eatTheRest  =  stopAtNonOption  +  2;	  eatTheRest    =    stopAtNonOption    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	44	None	replace
85	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopToken(this);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopToken(this);  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.stopToken(this);	  Token    stopAtNonOption    =    StopAtNonOption.stopToken();    	non-compiled	[CE]  	16	None	replace
86	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopToken( "- ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopToken( "- ");  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.stopToken( "- ");	  Token    stopAtNonOption    =    StopAtNonOption.stopToken();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
87	[BUG]  [BUGGY]  tokens.remove( "- ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  tokens.remove( "- ");  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	tokens.remove( "- ");	  tokens.clear();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
88	[BUG]  [BUGGY]  tokens.add( "-- "  +  value.trim());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  tokens.add( "-- "  +  value.trim());  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	tokens.add( "-- "  +  value.trim());	  tokens.add(   "--   ".trim());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	55	None	replace
89	[BUG]  [BUGGY]  tokens.add( "-- ").trim();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  tokens.add( "-- ").trim();  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	tokens.add( "-- ").trim();	  tokens.add(   "--   ".trim());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	55	None	replace
90	[BUG]  [BUGGY]  Integer  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value,  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  Integer  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value,  0);  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Integer  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value,  0);	  Integer    stopAtNonOption    =    StopAtNonOption.stopAtNonOption(value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
91	[BUG]  [BUGGY]  Integer  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value,  true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  Integer  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value,  true);  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Integer  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value,  true);	  Integer    stopAtNonOption    =    StopAtNonOption.stopAtNonOption(value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
92	[BUG]  [BUGGY]  Integer  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value,  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  Integer  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value,  1);  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Integer  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value,  1);	  Integer    stopAtNonOption    =    StopAtNonOption.stopAtNonOption(value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
93	[BUG]  [BUGGY]  safeToken(this.stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  safeToken(this.stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	safeToken(this.stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  safeToken(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
94	[BUG]  [BUGGY]  safeToken(tokens)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  safeToken(tokens)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	safeToken(tokens)  {  throw  new  IllegalArgumentException( " ");  }	  safeToken(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
95	[BUG]  [BUGGY]  if(stopAtNonOption  ||  stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-- ");  tokens.add(value);  }  [CE]  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  if(stopAtNonOption  ||  stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(stopAtNonOption  ||  stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-- ");  tokens.add(value);  }	  if(stopAtNonOption    ||    stopAtNonOption)    {    stopAtNonOption    =    false;    tokens.add(   "--   ");    tokens.add(value);    }    	non-compiled	[CE]  	48	None	replace
96	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-- ");  tokens.add(value);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  ||  stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	||  stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-- ");  tokens.add(value);  }	  if(stopAtNonOption    ||    stopAtNonOption)    {    stopAtNonOption    =    false;    tokens.add(   "--   ");    tokens.add(value);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
97	[BUG]  [BUGGY]  while(!stopAtNonOption  &&  value.length()  >  0)  {  tokens.add( "-- ");  tokens.add(value);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  while(!stopAtNonOption  &&  value.length()  >  0)  {  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	while(!stopAtNonOption  &&  value.length()  >  0)  {  tokens.add( "-- ");  tokens.add(value);  }	  if(!stopAtNonOption)    {    tokens.add(   "--   ");    tokens.add(value);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	60	None	replace
98	[BUG]  [BUGGY]  while(!stopAtNonOption  &&  value.length()  >  0)  {  tokens.add( "-- ");  tokens.add(value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  while(!stopAtNonOption  &&  value.length()  >  0)  {  tokens.add( "-- ");  tokens.add(value);  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	while(!stopAtNonOption  &&  value.length()  >  0)  {  tokens.add( "-- ");  tokens.add(value);	  if(!stopAtNonOption)    {    tokens.add(   "--   ");    tokens.add(value);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	60	None	replace
99	[BUG]  [BUGGY]  ||  stopAtNonOption  ||  value  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  ||  stopAtNonOption  ||  value  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	||  stopAtNonOption  ||  value  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  ||    stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
100	[BUG]  [BUGGY]  ||  stopAtNonOption  ||  value!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  ||  stopAtNonOption  ||  value!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	||  stopAtNonOption  ||  value!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  ||    stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
101	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ".equals(value);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ".equals(value);  }  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	||  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ".equals(value);  }	  ||    stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
102	[BUG]  [BUGGY]  While(!stopAtNonOption  &&  value!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  While(!stopAtNonOption  &&  value!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	While(!stopAtNonOption  &&  value!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  While(!stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
103	[BUG]  [BUGGY]  tokens.add( "- ");  tokens.add(value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  tokens.add( "- ");  tokens.add(value);  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	tokens.add( "- ");  tokens.add(value);	  if(stopAtNonOption)    {    stopAtNonOption    =    false;    tokens.add(   "-   ");    tokens.add(value);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
104	[BUG]  [BUGGY]  safeToken(stopAtNonOption)  {  tokens.add( "-- ");  eatTheRest  =  true;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  safeToken(stopAtNonOption)  {  tokens.add( "-- ");  eatTheRest  =  true;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	safeToken(stopAtNonOption)  {  tokens.add( "-- ");  eatTheRest  =  true;  }	  safeToken(stopAtNonOption)    {    eatTheRest    =    true;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	36	None	replace
105	[BUG]  [BUGGY]  while(stopAtNonOption  &&  value!=  null)  {  tokens.add( "-- ",  value);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  while(stopAtNonOption  &&  value!=  null)  {  tokens.add( "-- ",  value);  }  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	while(stopAtNonOption  &&  value!=  null)  {  tokens.add( "-- ",  value);  }	  While(stopAtNonOption)    {    tokens.add(   "--   ",    value);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
106	[BUG]  [BUGGY]  while(stopAtNonOption)  {  tokens.add( "-- ",  value);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  while(stopAtNonOption)  {  tokens.add( "-- ",  value);  }  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	while(stopAtNonOption)  {  tokens.add( "-- ",  value);  }	  While(stopAtNonOption)    {    tokens.add(   "--   ",    value);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	replace
107	[BUG]  [BUGGY]  While(!stopAtNonOption)  {  eatTheRest  =  false;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  While(!stopAtNonOption)  {  eatTheRest  =  false;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	While(!stopAtNonOption)  {  eatTheRest  =  false;  }	  While(!stopAtNonOption)    {    eatTheRest    =    true;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
108	[BUG]  [BUGGY]  while(!stopAtNonOption)  {  eatTheRest  =  false;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  while(!stopAtNonOption)  {  eatTheRest  =  false;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	while(!stopAtNonOption)  {  eatTheRest  =  false;  }	  While(!stopAtNonOption)    {    eatTheRest    =    true;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
109	[BUG]  [BUGGY]  if(stopAtNonOption  ||  stopAtNonOption)  {  eatTheRest  =  false;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  if(stopAtNonOption  ||  stopAtNonOption)  {  eatTheRest  =  false;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(stopAtNonOption  ||  stopAtNonOption)  {  eatTheRest  =  false;  }	  if(stopAtNonOption)    {    eatTheRest    =    false;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
110	[BUG]  [BUGGY]  While(stopAtNonOption)  {  eatTheRest  =  stopAtNonOption;  }  else  {  tokens.add( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  While(stopAtNonOption)  {  eatTheRest  =  stopAtNonOption;  }  else  {  tokens.add( "-- ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	While(stopAtNonOption)  {  eatTheRest  =  stopAtNonOption;  }  else  {  tokens.add( "-- ");  }	  if(stopAtNonOption)    {    eatTheRest    =    stopAtNonOption;    }    else    {    tokens.add(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
111	[BUG]  [BUGGY]  safeToken(stopAtNonOption)  {  tokens.add( "-- ");  eatTheRest  =  false;  }  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  safeToken(stopAtNonOption)  {  tokens.add( "-- ");  eatTheRest  =  false;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	safeToken(stopAtNonOption)  {  tokens.add( "-- ");  eatTheRest  =  false;  }	  safeToken(stopAtNonOption)    {    eatTheRest    =    false;    }    	non-compiled	[CE]  'else'  without  'if'	37	None	replace
112	[BUG]  [BUGGY]  While(stopAtNonOption)  {  value  =  false;  tokens.add( "-- ");  tokens.add(value);  }  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  While(stopAtNonOption)  {  value  =  false;  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	While(stopAtNonOption)  {  value  =  false;  tokens.add( "-- ");  tokens.add(value);  }	  While(stopAtNonOption)    {    value    =    true;    tokens.add(   "--   ");    tokens.add(value);    }    	non-compiled	[CE]  'else'  without  'if'	38	None	replace
113	[BUG]  [BUGGY]  while(stopAtNonOption)  {  value  =  false;  tokens.add( "-- ");  tokens.add(value);  }  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  while(stopAtNonOption)  {  value  =  false;  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	while(stopAtNonOption)  {  value  =  false;  tokens.add( "-- ");  tokens.add(value);  }	  While(stopAtNonOption)    {    value    =    true;    tokens.add(   "--   ");    tokens.add(value);    }    	non-compiled	[CE]  'else'  without  'if'	38	None	replace
114	[BUG]  [BUGGY]  While(eatTheRest)  {  value  =  true;  tokens.add( "-- ");  tokens.add(value);  }  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  While(eatTheRest)  {  value  =  true;  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	While(eatTheRest)  {  value  =  true;  tokens.add( "-- ");  tokens.add(value);  }	  While(stopAtNonOption)    {    value    =    true;    tokens.add(   "--   ");    tokens.add(value);    }    	non-compiled	[CE]  'else'  without  'if'	38	None	replace
115	[BUG]  [BUGGY]  this.stopAtNonOption  =  true;  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  this.stopAtNonOption  =  true;  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	this.stopAtNonOption  =  true;	  this.stopAtNonOption    =    false;    	non-compiled	[CE]  'else'  without  'if'	64	None	replace
116	[BUG]  [BUGGY]  this.stopAtNonOption  =  null;  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  this.stopAtNonOption  =  null;  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	this.stopAtNonOption  =  null;	  this.stopAtNonOption    =    false;    	non-compiled	[CE]  'else'  without  'if'	64	None	replace
117	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  eatTheRest  =  stopAtNonOption;  }  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  ||  stopAtNonOption)  {  eatTheRest  =  stopAtNonOption;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	||  stopAtNonOption)  {  eatTheRest  =  stopAtNonOption;  }	  if(stopAtNonOption)    {    eatTheRest    =    stopAtNonOption;    }    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
118	[BUG]  [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  null;  }  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  null;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(stopAtNonOption)  {  eatTheRest  =  null;  }	  if(stopAtNonOption)    {    eatTheRest    =    stopAtNonOption;    }    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
119	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value,  value);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value,  value);  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value,  value);	  Token    stopAtNonOption    =    StopAtNonOption.stopAtNonOption(value,    null);    	non-compiled	[CE]  ';'  expected	49	None	replace
120	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value,  this);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value,  this);  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value,  this);	  Token    stopAtNonOption    =    StopAtNonOption.stopAtNonOption(value,    null);    	non-compiled	[CE]  ';'  expected	49	None	replace
121	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value,  tokens);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value,  tokens);  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value,  tokens);	  Token    stopAtNonOption    =    StopAtNonOption.stopAtNonOption(value,    null);    	non-compiled	[CE]  ';'  expected	49	None	replace
122	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  eatTheRest  =  false;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  ||  stopAtNonOption)  {  eatTheRest  =  false;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	||  stopAtNonOption)  {  eatTheRest  =  false;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stopAtNonOption)    {    eatTheRest    =    false;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	12	None	replace
123	[BUG]  [BUGGY]  while(!stopAtNonOption)  {  tokens.add( "- ");  tokens.add(value);  }  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  while(!stopAtNonOption)  {  tokens.add( "- ");  tokens.add(value);  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	while(!stopAtNonOption)  {  tokens.add( "- ");  tokens.add(value);  }	  if(!stopAtNonOption)    {    tokens.add(   "-   ");    tokens.add(value);    }    	non-compiled	[CE]  ';'  expected	59	None	replace
124	[BUG]  [BUGGY]  if(eatTheRest)  {  stopAtNonOption  =  false;  }  else  {  stopAtNonOption  =  false;  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  if(eatTheRest)  {  stopAtNonOption  =  false;  }  else  {  stopAtNonOption  =  false;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(eatTheRest)  {  stopAtNonOption  =  false;  }  else  {  stopAtNonOption  =  false;  }	  if(eatTheRest)    {    stopAtNonOption    =    true;    }    else    {    stopAtNonOption    =    false;    }    	non-compiled	[CE]  ';'  expected	42	None	replace
125	[BUG]  [BUGGY]  tokens.add('-');  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  tokens.add('-');  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	tokens.add('-');	  if(stopAtNonOption)    {    eatTheRest    =    stopAtNonOption;    }    else    {    tokens.add(   "--   ");    }    	non-compiled	[CE]  ';'  expected	6	None	replace
126	[BUG]  [BUGGY]  kens.add( "-- ");  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  kens.add( "-- ");  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	kens.add( "-- ");	  if(stopAtNonOption)    {    eatTheRest    =    stopAtNonOption;    }    else    {    tokens.add(   "--   ");    }    	non-compiled	[CE]  ';'  expected	6	None	replace
127	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.NO_OPTION  &&  value.length()  ==  0;  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.NO_OPTION  &&  value.length()  ==  0;  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.NO_OPTION  &&  value.length()  ==  0;	  Token    stopAtNonOption    =    StopAtNonOption.NO_OPTION;    	non-compiled	[CE]  ';'  expected	18	None	replace
128	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.NO_OPTION  -  1;  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.NO_OPTION  -  1;  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.NO_OPTION  -  1;	  Token    stopAtNonOption    =    StopAtNonOption.NO_OPTION;    	non-compiled	[CE]  ';'  expected	18	None	replace
129	[BUG]  [BUGGY]  Integer  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value)+  1;  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  Integer  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value)+  1;  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Integer  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value)+  1;	  Integer    stopAtNonOption    =    StopAtNonOption.stopAtNonOption(value);    	non-compiled	[CE]  ';'  expected	27	None	replace
130	[BUG]  [BUGGY]  if(eatTheRest  ||  stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  stopAtNonOption  =  false;  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  if(eatTheRest  ||  stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  stopAtNonOption  =  false;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(eatTheRest  ||  stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  stopAtNonOption  =  false;  }	  if(stopAtNonOption    ||    stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    stopAtNonOption    =    false;    }    	non-compiled	[CE]  ';'  expected	41	None	replace
131	[BUG]  [BUGGY]  While(eatTheRest)  {  tokens.add( "-- ");  tokens.add(value);  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  While(eatTheRest)  {  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	While(eatTheRest)  {  tokens.add( "-- ");  tokens.add(value);  }	  if(stopAtNonOption)    {    tokens.add(   "--   ");    tokens.add(value);    }    	non-compiled	[CE]  ';'  expected	8	None	replace
132	[BUG]  [BUGGY]  EATTheRest  =  null;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  EATTheRest  =  null;  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	EATTheRest  =  null;	  EATTheRest    =    true;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
133	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.start();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.start();  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.start();	  Token    stopAtNonOption    =    StopAtNonOption.stop();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
134	[BUG]  [BUGGY]  tokens.remove(value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  tokens.remove(value);  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	tokens.remove(value);	  tokens.clear();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
135	[BUG]  [BUGGY]  while(stopAtNonOption)  {  tokens.add( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  while(stopAtNonOption)  {  tokens.add( "-- ");  }  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	while(stopAtNonOption)  {  tokens.add( "-- ");  }	  While(stopAtNonOption)    {    tokens.add(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
136	[BUG]  [BUGGY]  tokens.add( "--non-option ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  tokens.add( "--non-option ");  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	tokens.add( "--non-option ");	  tokens.add(   "--n   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
137	[BUG]  [BUGGY]  if(stopAtNonOption  &&  stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-- ");  tokens.add(value);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  if(stopAtNonOption  &&  stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(stopAtNonOption  &&  stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-- ");  tokens.add(value);  }	  if(stopAtNonOption    ||    stopAtNonOption)    {    stopAtNonOption    =    false;    tokens.add(   "--   ");    tokens.add(value);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
138	[BUG]  [BUGGY]  eatTheRest  =  stopAtNonOption  *  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  eatTheRest  =  stopAtNonOption  *  1;  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	eatTheRest  =  stopAtNonOption  *  1;	  eatTheRest    =    stopAtNonOption    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	44	None	replace
139	[BUG]  [BUGGY]  while(stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  while(stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	while(stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }	  While(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	62	None	replace
140	[BUG]  [BUGGY]  While(stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- "  +  value);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  While(stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- "  +  value);  }  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	While(stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- "  +  value);  }	  While(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	62	None	replace
141	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stop(token);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stop(token);  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.stop(token);	  Token    stopAtNonOption    =    StopAtNonOption.stop(value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
142	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stop(value,  false);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stop(value,  false);  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.stop(value,  false);	  Token    stopAtNonOption    =    StopAtNonOption.stop(value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
143	[BUG]  [BUGGY]  while(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  while(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	while(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }	  While(stopAtNonOption)    {    tokens.add(   "--   ");    tokens.add(value);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
144	[BUG]  [BUGGY]  &&  stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  stopAtNonOption  =  false;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  &&  stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  stopAtNonOption  =  false;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	&&  stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  stopAtNonOption  =  false;  }	  ||    stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    stopAtNonOption    =    false;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
145	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  eatTheRest  =  true;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  ||  stopAtNonOption)  {  eatTheRest  =  true;  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	||  stopAtNonOption)  {  eatTheRest  =  true;	  ||    stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    stopAtNonOption    =    false;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
146	[BUG]  [BUGGY]  ||  stopAtNonOption  &&  value.equals( " "))  {  eatTheRest  =  true;  }  else  {  stopAtNonOption  =  false;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  ||  stopAtNonOption  &&  value.equals( " "))  {  eatTheRest  =  true;  }  else  {  stopAtNonOption  =  false;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	||  stopAtNonOption  &&  value.equals( " "))  {  eatTheRest  =  true;  }  else  {  stopAtNonOption  =  false;  }	  ||    stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    stopAtNonOption    =    false;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
147	[BUG]  [BUGGY]  if(stopAtNonOption  ||  stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "- ");  tokens.add(value);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  if(stopAtNonOption  ||  stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "- ");  tokens.add(value);  }  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(stopAtNonOption  ||  stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "- ");  tokens.add(value);  }	  if(stopAtNonOption)    {    stopAtNonOption    =    false;    tokens.add(   "-   ");    tokens.add(value);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
148	[BUG]  [BUGGY]  while(stopAtNonOption)  {  tokens.add( "-- ");  eatTheRest  =  true;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  while(stopAtNonOption)  {  tokens.add( "-- ");  eatTheRest  =  true;  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	while(stopAtNonOption)  {  tokens.add( "-- ");  eatTheRest  =  true;	  while(stopAtNonOption)    {    eatTheRest    =    true;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
149	[BUG]  [BUGGY]  safeToken(stopAtNonOption)  {  eatTheRest  =  false;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  safeToken(stopAtNonOption)  {  eatTheRest  =  false;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	safeToken(stopAtNonOption)  {  eatTheRest  =  false;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stopAtNonOption)    {    eatTheRest    =    false;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
150	[BUG]  [BUGGY]  safeToken(stopAtNonOption)  {  tokens  =  false;  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  safeToken(stopAtNonOption)  {  tokens  =  false;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	safeToken(stopAtNonOption)  {  tokens  =  false;  }	  safeToken(stopAtNonOption)    {    eatTheRest    =    false;    }    	non-compiled	[CE]  	37	None	replace
151	[BUG]  [BUGGY]  safeToken(stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  safeToken(stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	safeToken(stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }	  safeToken(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
152	[BUG]  [BUGGY]  While(eatTheRest)  {  stopAtNonOption  =  null;  }  [CE]  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  While(eatTheRest)  {  stopAtNonOption  =  null;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	While(eatTheRest)  {  stopAtNonOption  =  null;  }	  if(stopAtNonOption)    {    eatTheRest    =    stopAtNonOption;    }    	non-compiled	[CE]  	5	None	replace
153	[BUG]  [BUGGY]  if(stopAtNonOption  ||  stopAtNonOption)  {  eatTheRest  =  false;  }  else  {  stopAtNonOption  =  true;  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  if(stopAtNonOption  ||  stopAtNonOption)  {  eatTheRest  =  false;  }  else  {  stopAtNonOption  =  true;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(stopAtNonOption  ||  stopAtNonOption)  {  eatTheRest  =  false;  }  else  {  stopAtNonOption  =  true;  }	  if(stopAtNonOption)    {    eatTheRest    =    false;    }    else    {    stopAtNonOption    =    true;    }    	non-compiled	[CE]  	11	None	replace
154	[BUG]  [BUGGY]  if(eatTheRest)  {  stopAtNonOption  =  false;  }  else  {  stopAtNonOption  =  true;  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  if(eatTheRest)  {  stopAtNonOption  =  false;  }  else  {  stopAtNonOption  =  true;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(eatTheRest)  {  stopAtNonOption  =  false;  }  else  {  stopAtNonOption  =  true;  }	  if(stopAtNonOption)    {    eatTheRest    =    false;    }    else    {    stopAtNonOption    =    true;    }    	non-compiled	[CE]  	11	None	replace
155	[BUG]  [BUGGY]  while(!stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  while(!stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	while(!stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }	  if(!stopAtNonOption)    {    tokens.add(   "--   ");    tokens.add(value);    }    	non-compiled	[CE]  	60	None	replace
156	[BUG]  [BUGGY]  &&  stopAtNonOption)  {  eatTheRest  =  true;  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  &&  stopAtNonOption)  {  eatTheRest  =  true;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	&&  stopAtNonOption)  {  eatTheRest  =  true;  }	  ||    stopAtNonOption)    {    eatTheRest    =    true;    }    	non-compiled	[CE]  	25	None	replace
157	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopAtNon(value,  true);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopAtNon(value,  true);  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.stopAtNon(value,  true);	  Token    stopAtNonOption    =    StopAtNonOption.stopAtNon(value);    	non-compiled	[CE]  	53	None	replace
158	[BUG]  [BUGGY]  Integer  stopAtNonOption  =  StopAtNonOption.stopAtNon(value);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  Integer  stopAtNonOption  =  StopAtNonOption.stopAtNon(value);  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Integer  stopAtNonOption  =  StopAtNonOption.stopAtNon(value);	  Token    stopAtNonOption    =    StopAtNonOption.stopAtNon(value);    	non-compiled	[CE]  	53	None	replace
159	[BUG]  [BUGGY]  eatTheRest  =  stopAtNonOption.toString(value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  eatTheRest  =  stopAtNonOption.toString(value);  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	eatTheRest  =  stopAtNonOption.toString(value);	  eatTheRest    =    stopAtNonOption.toString();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
160	[BUG]  [BUGGY]  eatTheRest  =  stopAtNonOption.token();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  eatTheRest  =  stopAtNonOption.token();  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	eatTheRest  =  stopAtNonOption.token();	  eatTheRest    =    stopAtNonOption.toString();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
161	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	||  stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }	  ||    stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	3	None	replace
162	[BUG]  [BUGGY]  &&  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  &&  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	&&  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  ||    stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	3	None	replace
163	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	||  stopAtNonOption)  {  throw  new  IllegalArgumentException( ". ");  }	  ||    stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	3	None	replace
164	[BUG]  [BUGGY]  eatTheRest  =  false,  stopAtNonOption  =  false;  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  eatTheRest  =  false,  stopAtNonOption  =  false;  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	eatTheRest  =  false,  stopAtNonOption  =  false;	  eatTheRest    =    true,    stopAtNonOption    =    false;    	non-compiled	[CE]  	65	None	replace
165	[BUG]  [BUGGY]  Integer  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value,  false);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  Integer  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value,  false);  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Integer  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value,  false);	  Token    stopAtNonOption    =    StopAtNonOption.stopAtNonOption(value,    true);    	non-compiled	[CE]  	26	None	replace
166	[BUG]  [BUGGY]  While(!eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  While(!eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	While(!eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }	  if(!stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	57	None	replace
167	[BUG]  [BUGGY]  While(!eatTheRest)  {  throw  new  IllegalArgumentException( " ".equals(value));  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  While(!eatTheRest)  {  throw  new  IllegalArgumentException( " ".equals(value));  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	While(!eatTheRest)  {  throw  new  IllegalArgumentException( " ".equals(value));  }	  if(!stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	57	None	replace
168	[BUG]  [BUGGY]  While(!eatTheRest)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  While(!eatTheRest)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	While(!eatTheRest)  {  throw  new  IllegalArgumentException( ". ");  }	  if(!stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	57	None	replace
169	[BUG]  [BUGGY]  tokens.add( "-- ").append(')');  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  tokens.add( "-- ").append(')');  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	tokens.add( "-- ").append(')');	  tokens.add(   "--   ".trim());    	non-compiled	[CE]  	55	None	replace
170	[BUG]  [BUGGY]  ||  eatTheRest)  {  eatTheRest  =  true;  }  else  {  stopAtNonOption  =  false;  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  ||  eatTheRest)  {  eatTheRest  =  true;  }  else  {  stopAtNonOption  =  false;  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	||  eatTheRest)  {  eatTheRest  =  true;  }  else  {  stopAtNonOption  =  false;  }	  ||    stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    stopAtNonOption    =    false;    }    	non-compiled	[CE]  	28	None	replace
171	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.ERROR;  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.ERROR;  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.ERROR;	  Token    stopAtNonOption    =    StopAtNonOption.NO_OPTION;    	non-compiled	[CE]  	18	None	replace
172	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.NO_TOKEN;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.NO_TOKEN;  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.NO_TOKEN;	  Token    stopAtNonOption    =    StopAtNonOption.NO_OPTION;    	non-compiled	[CE]  	18	None	replace
173	[BUG]  [BUGGY]  while(!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  while(!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	while(!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  if(!stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	57	None	replace
174	[BUG]  [BUGGY]  while(!stopAtNonOption  &&  value.length()  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  while(!stopAtNonOption  &&  value.length()  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	while(!stopAtNonOption  &&  value.length()  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(!stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	57	None	replace
175	[BUG]  [BUGGY]  while(!stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  while(!stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	while(!stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }	  if(!stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	57	None	replace
176	[BUG]  [BUGGY]  while(!stopAtNonOption  &&  value!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  while(!stopAtNonOption  &&  value!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	while(!stopAtNonOption  &&  value!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(!stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	57	None	replace
177	[BUG]  [BUGGY]  tokens.add( "-- "  +  this.stopAtNonOption);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  tokens.add( "-- "  +  this.stopAtNonOption);  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	tokens.add( "-- "  +  this.stopAtNonOption);	  tokens.add(   "--   "    +    value);    	non-compiled	[CE]  	39	None	replace
178	[BUG]  [BUGGY]  parent.processOptionToken(value,  stopAtNonOption);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  parent.processOptionToken(value,  stopAtNonOption);  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	parent.processOptionToken(value,  stopAtNonOption);	  parent.processNonOptionToken(value,    stopAtNonOption);    	non-compiled	[CE]  	56	None	replace
179	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stop(value,  null);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stop(value,  null);  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.stop(value,  null);	  Token    stopAtNonOption    =    StopAtNonOption.stop(value);    	non-compiled	[CE]  	23	None	replace
180	[BUG]  [BUGGY]  eatTheRest  =  stopAtNonOption.getToken();  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  eatTheRest  =  stopAtNonOption.getToken();  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	eatTheRest  =  stopAtNonOption.getToken();	  eatTheRest    =    stopAtNonOption.toString();    	non-compiled	[CE]  	7	None	replace
181	[BUG]  [BUGGY]  This.stopAtNonOption  =  true;  [CE]  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  This.stopAtNonOption  =  true;  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	This.stopAtNonOption  =  true;	  this.stopAtNonOption    =    false;    	non-compiled	[CE]  	64	None	replace
182	[BUG]  [BUGGY]  stopAtNonOption  =  true;  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  stopAtNonOption  =  true;  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	stopAtNonOption  =  true;	  if(eatTheRest)    {    stopAtNonOption    =    true;    }    else    {    stopAtNonOption    =    false;    }    	non-compiled	[CE]  	42	None	replace
183	[BUG]  [BUGGY]  tokens.add( "-- ").append(value);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  tokens.add( "-- ").append(value);  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	tokens.add( "-- ").append(value);	  tokens.add(   "--   ".equals(value));    	non-compiled	[CE]  	54	None	replace
184	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopAtNon(),  value);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopAtNon(),  value);  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.stopAtNon(),  value);	  Token    stopAtNonOption    =    StopAtNonOption.stopAtNon();    	non-compiled	[CE]  	66	None	replace
185	[BUG]  [BUGGY]  While(!stopAtNonOption  &&  value.length()  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  While(!stopAtNonOption  &&  value.length()  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	While(!stopAtNonOption  &&  value.length()  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  While(!stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	2	None	replace
186	[BUG]  [BUGGY]  While(stopAtNonOption  &&  value.length()  ==  0)  {  tokens.add( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  While(stopAtNonOption  &&  value.length()  ==  0)  {  tokens.add( "-- ");  }  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	While(stopAtNonOption  &&  value.length()  ==  0)  {  tokens.add( "-- ");  }	  While(stopAtNonOption    &&    value.length()    >    0)    {    tokens.add(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
187	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopAtNon(value,  null);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopAtNon(value,  null);  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.stopAtNon(value,  null);	  Token    stopAtNonOption    =    StopAtNonOption.stopAtNon(value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	53	None	replace
188	[BUG]  [BUGGY]  tokens.add( "-- ", " ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  tokens.add( "-- ", " ");  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	tokens.add( "-- ", " ");	  tokens.add(   "--   ",    value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	63	None	replace
189	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.values());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.values());  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	TokenBuffer  tokens  =  new  TokenBuffer(tokens.values());	  TokenBuffer    tokens    =    new    TokenBuffer(tokens.size());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
190	[BUG]  [BUGGY]  while(!eatTheRest)  {  tokens.add( "-- ");  tokens.add(value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  while(!eatTheRest)  {  tokens.add( "-- ");  tokens.add(value);  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	while(!eatTheRest)  {  tokens.add( "-- ");  tokens.add(value);	  if(stopAtNonOption)    {    tokens.add(   "--   ");    tokens.add(value);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
191	[BUG]  [BUGGY]  while(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  while(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	while(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);	  if(stopAtNonOption)    {    tokens.add(   "--   ");    tokens.add(value);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
192	[BUG]  [BUGGY]  tokens.add(value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  tokens.add(value);  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	tokens.add(value);	  if(stopAtNonOption)    {    eatTheRest    =    stopAtNonOption;    }    else    {    tokens.add(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
193	[BUG]  [BUGGY]  ||  eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  ||  eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      eatTheRest  =  true;  tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	||  eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }	  ||    stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
194	[BUG]  [BUGGY]  tokens.add( "- "  +  value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  tokens.add( "- "  +  value);  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	tokens.add( "- "  +  value);	  tokens.add(   "-   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	58	None	replace
195	[BUG]  [BUGGY]  tryWhile(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  tryWhile(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	tryWhile(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }	  While(stopAtNonOption)    {    tokens.add(   "--   ");    tokens.add(value);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
196	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {      [BUGGY]  if(!stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(     "--     ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(!stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  tokens.add(   "--   ");    tokens.add(value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
