bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  While(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]        ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  While(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	While(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	      if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	6	None	replace
2	[BUG]  [BUGGY]  While(!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]          ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  While(!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	While(!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	      if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	6	None	replace
3	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]            ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	||  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	      if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	6	None	replace
4	[BUG]  [BUGGY]  safeToken(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  safeToken(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	safeToken(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	      if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	6	None	replace
5	[BUG]  [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  stopAtNonOption;  }  [CE]  [FE]        ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  stopAtNonOption;  }  [BUGGY]    tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(stopAtNonOption)  {  eatTheRest  =  stopAtNonOption;  }	  eatTheRest    =    stopAtNonOption;    	non-compiled	[CE]  	15	None	replace
6	[BUG]  [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  stopAtNonOption;  }  else  {  tokens.add( "-- ");  }  [CE]  [FE]          ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  stopAtNonOption;  }  else  {  tokens.add( "-- ");  }  [BUGGY]    tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(stopAtNonOption)  {  eatTheRest  =  stopAtNonOption;  }  else  {  tokens.add( "-- ");  }	  eatTheRest    =    stopAtNonOption;    	non-compiled	[CE]  	15	None	replace
7	[BUG]  [BUGGY]  eatTheRest  =  stopAtNonOption.toString();  [CE]  [FE]            ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  eatTheRest  =  stopAtNonOption.toString();  [BUGGY]    tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	eatTheRest  =  stopAtNonOption.toString();	  eatTheRest    =    stopAtNonOption;    	non-compiled	[CE]  	15	None	replace
8	[BUG]  [BUGGY]  if(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  [CE]  [FE]                ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  if(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]    tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }	      	non-compiled	[CE]  	5	None	replace
9	[BUG]  [BUGGY]  tokens.add( "-- ");  tokens.add(value);  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  tokens.add( "-- ");  tokens.add(value);  [BUGGY]    tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	tokens.add( "-- ");  tokens.add(value);	      	non-compiled	[CE]  	5	None	replace
10	[BUG]  [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  false;  }  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  false;  }  [BUGGY]    tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(stopAtNonOption)  {  eatTheRest  =  false;  }	  eatTheRest    =    false;    	non-compiled	[CE]  ')'  expected	1	None	replace
11	[BUG]  [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  false;  }  else  {  stopAtNonOption  =  true;  }  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  false;  }  else  {  stopAtNonOption  =  true;  }  [BUGGY]    tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(stopAtNonOption)  {  eatTheRest  =  false;  }  else  {  stopAtNonOption  =  true;  }	  eatTheRest    =    false;    	non-compiled	[CE]  ')'  expected	1	None	replace
12	[BUG]  [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  false;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  false;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(stopAtNonOption)  {  eatTheRest  =  false;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  eatTheRest    =    false;    	non-compiled	[CE]  ')'  expected	1	None	replace
13	[BUG]  [BUGGY]  While(stopAtNonOption)  {  eatTheRest  =  false;  }  [CE]  [FE]        ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  While(stopAtNonOption)  {  eatTheRest  =  false;  }  [BUGGY]    tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	While(stopAtNonOption)  {  eatTheRest  =  false;  }	  if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    tokens.add(   "--   ");    tokens.add(value);    }    	non-compiled	[CE]  	14	None	replace
14	[BUG]  [BUGGY]  While(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  [CE]  [FE]          ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  While(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]    tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	While(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }	  if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    tokens.add(   "--   ");    tokens.add(value);    }    	non-compiled	[CE]  	14	None	replace
15	[BUG]  [BUGGY]  while(stopAtNonOption)  {  eatTheRest  =  true;  [CE]  [FE]            ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  while(stopAtNonOption)  {  eatTheRest  =  true;  [BUGGY]    tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	while(stopAtNonOption)  {  eatTheRest  =  true;	  if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    tokens.add(   "--   ");    tokens.add(value);    }    	non-compiled	[CE]  	14	None	replace
16	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopToken();  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopToken();  [BUGGY]    eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.stopToken();	      Token    stopAtNonOption    =    StopAtNonOption.stopAtNonOption;    	non-compiled	[CE]  ')'  expected	11	None	replace
17	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopToken(value);  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopToken(value);  [BUGGY]    eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.stopToken(value);	      Token    stopAtNonOption    =    StopAtNonOption.stopAtNonOption;    	non-compiled	[CE]  ')'  expected	11	None	replace
18	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.NO_OPTION;  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.NO_OPTION;  [BUGGY]    eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.NO_OPTION;	      Token    stopAtNonOption    =    StopAtNonOption.stopAtNonOption;    	non-compiled	[CE]  ')'  expected	11	None	replace
19	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.findToken(value);  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.findToken(value);  [BUGGY]    eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.findToken(value);	      Token    stopAtNonOption    =    StopAtNonOption.stopAtNonOption;    	non-compiled	[CE]  ';'  expected	11	None	replace
20	[BUG]  [BUGGY]  if(stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "- ");  tokens.add(value);  }  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  if(stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "- ");  tokens.add(value);  }  [BUGGY]    eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "- ");  tokens.add(value);  }	      if(stopAtNonOption)    {    stopAtNonOption    =    true;    tokens.add(   "-   ");    tokens.add(value);    }    	non-compiled	[CE]  ';'  expected	10	None	replace
21	[BUG]  [BUGGY]  tokens.add( "--n ");  [CE]  ')'  expected  [FE]              ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  tokens.add( "--n ");  [BUGGY]    eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	tokens.add( "--n ");	      tokens.add(   "--   ");    	non-compiled	[CE]  ')'  expected	9	None	replace
22	[BUG]  [BUGGY]  tokens.remove( "-- ");  [CE]  ')'  expected  [FE]                ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  tokens.remove( "-- ");  [BUGGY]    eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	tokens.remove( "-- ");	      tokens.add(   "--   ");    	non-compiled	[CE]  ')'  expected	9	None	replace
23	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stop(value);  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stop(value);  [BUGGY]    eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.stop(value);	      Token    stopAtNonOption    =    StopAtNonOption.stopAtNonOption();    	non-compiled	[CE]  ')'  expected	13	None	replace
24	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stop();  [CE]  ')'  expected  [FE]              ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stop();  [BUGGY]    eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.stop();	      Token    stopAtNonOption    =    StopAtNonOption.stopAtNonOption();    	non-compiled	[CE]  ')'  expected	13	None	replace
25	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  eatTheRest  =  true;  }  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  ||  stopAtNonOption)  {  eatTheRest  =  true;  }  [BUGGY]    tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	||  stopAtNonOption)  {  eatTheRest  =  true;  }	  if(stopAtNonOption)    {    eatTheRest    =    true;    }    	non-compiled	[CE]  ')'  expected	2	None	replace
26	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value,  true);  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value,  true);  [BUGGY]    eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value,  true);	      Token    stopAtNonOption    =    StopAtNonOption.stopAtNonOption(value);    	non-compiled	[CE]  ')'  expected	12	None	replace
27	[BUG]  [BUGGY]  Integer  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value);  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  Integer  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value);  [BUGGY]    eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Integer  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value);	      Token    stopAtNonOption    =    StopAtNonOption.stopAtNonOption(value);    	non-compiled	[CE]  ')'  expected	12	None	replace
28	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  stopAtNonOption  =  false;  }  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  ||  stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  stopAtNonOption  =  false;  }  [BUGGY]    tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	||  stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  stopAtNonOption  =  false;  }	  if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    stopAtNonOption    =    false;    }    	non-compiled	[CE]  ')'  expected	3	None	replace
29	[BUG]  [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  false;  }  else  {  stopAtNonOption  =  false;  }  [CE]  ')'  expected  [FE]              ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  false;  }  else  {  stopAtNonOption  =  false;  }  [BUGGY]    tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(stopAtNonOption)  {  eatTheRest  =  false;  }  else  {  stopAtNonOption  =  false;  }	  if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    stopAtNonOption    =    false;    }    	non-compiled	[CE]  ')'  expected	3	None	replace
30	[BUG]  [BUGGY]  While(!stopAtNonOption)  {  eatTheRest  =  true;  }  [CE]  ')'  expected  [FE]              ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  While(!stopAtNonOption)  {  eatTheRest  =  true;  }  [BUGGY]    tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	While(!stopAtNonOption)  {  eatTheRest  =  true;  }	  if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	4	None	replace
31	[BUG]  [BUGGY]  While(stopAtNonOption)  {  tokens.add( "-- ");  }  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  While(stopAtNonOption)  {  tokens.add( "-- ");  }  [BUGGY]    eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	While(stopAtNonOption)  {  tokens.add( "-- ");  }	      if(stopAtNonOption)    {    tokens.add(   "--   ");    }    	non-compiled	[CE]  ')'  expected	8	None	replace
32	[BUG]  [BUGGY]  While(stopAtNonOption  &&  value!=  null)  {  tokens.add( "-- ");  }  [CE]  ')'  expected  [FE]              ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  While(stopAtNonOption  &&  value!=  null)  {  tokens.add( "-- ");  }  [BUGGY]    eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	While(stopAtNonOption  &&  value!=  null)  {  tokens.add( "-- ");  }	      if(stopAtNonOption)    {    tokens.add(   "--   ");    }    	non-compiled	[CE]  ')'  expected	8	None	replace
33	[BUG]  [BUGGY]  While(stopAtNonOption  &&  value.length()  >  0)  {  tokens.add( "-- ");  }  [CE]  ')'  expected  [FE]                ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  While(stopAtNonOption  &&  value.length()  >  0)  {  tokens.add( "-- ");  }  [BUGGY]    eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	While(stopAtNonOption  &&  value.length()  >  0)  {  tokens.add( "-- ");  }	      if(stopAtNonOption)    {    tokens.add(   "--   ");    }    	non-compiled	[CE]  ')'  expected	8	None	replace
34	[BUG]  [BUGGY]  eattheRest  =  true;  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  eattheRest  =  true;  [BUGGY]    tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	eattheRest  =  true;	  eatTheRest    =    false;    	non-compiled	[CE]  ')'  expected	1	None	replace
35	[BUG]  [BUGGY]  EATTheRest  =  true;  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  EATTheRest  =  true;  [BUGGY]    tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	EATTheRest  =  true;	  eatTheRest    =    false;    	non-compiled	[CE]  ')'  expected	1	None	replace
36	[BUG]  [BUGGY]  safeToken(stopAtNonOption)  {  eatTheRest  =  true;  }  [CE]  ')'  expected  [FE]              ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  safeToken(stopAtNonOption)  {  eatTheRest  =  true;  }  [BUGGY]    tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	safeToken(stopAtNonOption)  {  eatTheRest  =  true;  }	  if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	4	None	replace
37	[BUG]  [BUGGY]  safeToken(stopAtNonOption)  {  eatTheRest  =  false;  }  [CE]  ')'  expected  [FE]                ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  safeToken(stopAtNonOption)  {  eatTheRest  =  false;  }  [BUGGY]    tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	safeToken(stopAtNonOption)  {  eatTheRest  =  false;  }	  if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	4	None	replace
38	[BUG]  [BUGGY]  While(stopAtNonOption)  {  value  =  true;  tokens.add( "-- ");  tokens.add(value);  }  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  While(stopAtNonOption)  {  value  =  true;  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]    tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	While(stopAtNonOption)  {  value  =  true;  tokens.add( "-- ");  tokens.add(value);  }	  if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    tokens.add(   "--   ");    tokens.add(value);    }    	non-compiled	[CE]  ')'  expected	14	None	replace
39	[BUG]  [BUGGY]  tokens.add( "-- "  +  value);  [CE]  ')'  expected  [FE]              ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  tokens.add( "-- "  +  value);  [BUGGY]    eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	tokens.add( "-- "  +  value);	      tokens.add(   "--   ");    	non-compiled	[CE]  ')'  expected	9	None	replace
40	[BUG]  [BUGGY]  While(stopAtNonOption)  {  tokens.add( "-- ",  value);  }  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  While(stopAtNonOption)  {  tokens.add( "-- ",  value);  }  [BUGGY]    eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	While(stopAtNonOption)  {  tokens.add( "-- ",  value);  }	      if(stopAtNonOption)    {    tokens.add(   "--   ");    }    	non-compiled	[CE]  ';'  expected	8	None	replace
41	[BUG]  [BUGGY]  if(stopAtNonOption  ||  stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  stopAtNonOption  =  false;  }  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  if(stopAtNonOption  ||  stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  stopAtNonOption  =  false;  }  [BUGGY]    tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(stopAtNonOption  ||  stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  stopAtNonOption  =  false;  }	  if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    stopAtNonOption    =    false;    }    	non-compiled	[CE]  ';'  expected	3	None	replace
42	[BUG]  [BUGGY]  if(eatTheRest)  {  stopAtNonOption  =  true;  }  else  {  stopAtNonOption  =  false;  }  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  if(eatTheRest)  {  stopAtNonOption  =  true;  }  else  {  stopAtNonOption  =  false;  }  [BUGGY]    tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(eatTheRest)  {  stopAtNonOption  =  true;  }  else  {  stopAtNonOption  =  false;  }	  if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    stopAtNonOption    =    false;    }    	non-compiled	[CE]  ';'  expected	3	None	replace
43	[BUG]  [BUGGY]  While(stopAtNonOption)  {  tokens.add( "-- ");  eatTheRest  =  true;  }  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  While(stopAtNonOption)  {  tokens.add( "-- ");  eatTheRest  =  true;  }  [BUGGY]    tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	While(stopAtNonOption)  {  tokens.add( "-- ");  eatTheRest  =  true;  }	  if(stopAtNonOption)    {    eatTheRest    =    true;    }    	non-compiled	[CE]  ')'  expected	2	None	replace
44	[BUG]  [BUGGY]  eatTheRest  =  stopAtNonOption  +  1;  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  eatTheRest  =  stopAtNonOption  +  1;  [BUGGY]    tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	eatTheRest  =  stopAtNonOption  +  1;	  eatTheRest    =    stopAtNonOption;    	non-compiled	[CE]  ')'  expected	15	None	replace
45	[BUG]  [BUGGY]  eatTheRest  =  stopAtNonOption  ||  value  ==  null;  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  eatTheRest  =  stopAtNonOption  ||  value  ==  null;  [BUGGY]    tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	eatTheRest  =  stopAtNonOption  ||  value  ==  null;	  eatTheRest    =    stopAtNonOption;    	non-compiled	[CE]  ')'  expected	15	None	replace
46	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size());  [CE]  ')'  expected  [FE]                ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size());  [BUGGY]    tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	TokenBuffer  tokens  =  new  TokenBuffer(tokens.size());	      	non-compiled	[CE]  ')'  expected	5	None	replace
47	[BUG]  [BUGGY]  tokens.clear();  [CE]  ')'  expected  [FE]                  ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  tokens.clear();  [BUGGY]    tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	tokens.clear();	      	non-compiled	[CE]  ')'  expected	5	None	replace
48	[BUG]  [BUGGY]  if(stopAtNonOption  ||  stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-- ");  tokens.add(value);  }  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  if(stopAtNonOption  ||  stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]    eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(stopAtNonOption  ||  stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-- ");  tokens.add(value);  }	      if(stopAtNonOption)    {    stopAtNonOption    =    false;    tokens.add(   "--   ");    tokens.add(value);    }    	non-compiled	[CE]  ')'  expected	16	None	replace
49	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value,  null);  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value,  null);  [BUGGY]    eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value,  null);	      Token    stopAtNonOption    =    StopAtNonOption.stopAtNonOption(value);    	non-compiled	[CE]  ')'  expected	12	None	replace
50	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value,  false);  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value,  false);  [BUGGY]    eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value,  false);	      Token    stopAtNonOption    =    StopAtNonOption.stopAtNonOption(value);    	non-compiled	[CE]  ')'  expected	12	None	replace
51	[BUG]  [BUGGY]  while(stopAtNonOption)  {  eatTheRest  =  true;  }  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  while(stopAtNonOption)  {  eatTheRest  =  true;  }  [BUGGY]    tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	while(stopAtNonOption)  {  eatTheRest  =  true;  }	  if(stopAtNonOption)    {    eatTheRest    =    true;    }    	non-compiled	[CE]  ')'  expected	2	None	replace
52	[BUG]  [BUGGY]  while(stopAtNonOption)  {  eatTheRest  =  false;  }  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  while(stopAtNonOption)  {  eatTheRest  =  false;  }  [BUGGY]    tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	while(stopAtNonOption)  {  eatTheRest  =  false;  }	  if(stopAtNonOption)    {    eatTheRest    =    true;    }    	non-compiled	[CE]  ')'  expected	2	None	replace
53	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopAtNon(value);  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopAtNon(value);  [BUGGY]    eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.stopAtNon(value);	      Token    stopAtNonOption    =    StopAtNonOption.stopAtNonOption();    	non-compiled	[CE]  ')'  expected	13	None	replace
54	[BUG]  [BUGGY]  tokens.add( "-- ".equals(value));  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  tokens.add( "-- ".equals(value));  [BUGGY]    eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	tokens.add( "-- ".equals(value));	      if(stopAtNonOption)    {    tokens.add(   "--   ");    }    	non-compiled	[CE]  ')'  expected	8	None	replace
55	[BUG]  [BUGGY]  tokens.add( "-- ".trim());  [CE]  ')'  expected  [FE]              ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  tokens.add( "-- ".trim());  [BUGGY]    eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	tokens.add( "-- ".trim());	      if(stopAtNonOption)    {    tokens.add(   "--   ");    }    	non-compiled	[CE]  ')'  expected	8	None	replace
56	[BUG]  [BUGGY]  parent.processNonOptionToken(value,  stopAtNonOption);  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  parent.processNonOptionToken(value,  stopAtNonOption);  [BUGGY]    tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	parent.processNonOptionToken(value,  stopAtNonOption);	  if(stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    tokens.add(   "--   ");    tokens.add(value);    }    	non-compiled	[CE]  ')'  expected	14	None	replace
57	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  if(!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  ')'  expected	5	None	replace
58	[BUG]  [BUGGY]  tokens.add( "- ");  [CE]  ')'  expected  [FE]                  ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  tokens.add( "- ");  [BUGGY]    tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	tokens.add( "- ");	      	non-compiled	[CE]  ')'  expected	5	None	replace
59	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  tokens.add( "- ");  tokens.add(value);  }  [CE]  ')'  expected  [FE]                    ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  if(!stopAtNonOption)  {  tokens.add( "- ");  tokens.add(value);  }  [BUGGY]    tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(!stopAtNonOption)  {  tokens.add( "- ");  tokens.add(value);  }	      	non-compiled	[CE]  ')'  expected	5	None	replace
60	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  [CE]  ')'  expected  [FE]                      ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  if(!stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]    tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(!stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }	      	non-compiled	[CE]  ')'  expected	5	None	replace
61	[BUG]  [BUGGY]  eatTheRest  =  stopAtNonOption  ||  stopAtNonOption;  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  eatTheRest  =  stopAtNonOption  ||  stopAtNonOption;  [BUGGY]    tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	eatTheRest  =  stopAtNonOption  ||  stopAtNonOption;	  eatTheRest    =    stopAtNonOption;    	non-compiled	[CE]  ')'  expected	15	None	replace
62	[BUG]  [BUGGY]  While(stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  While(stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }  [BUGGY]    eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	While(stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }	      if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	6	None	replace
63	[BUG]  [BUGGY]  tokens.add( "-- ",  value);  [CE]  ')'  expected  [FE]              ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  tokens.add( "-- ",  value);  [BUGGY]    eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	tokens.add( "-- ",  value);	      tokens.add(   "--   ");    	non-compiled	[CE]  ')'  expected	9	None	replace
64	[BUG]  [BUGGY]  this.stopAtNonOption  =  false;  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  this.stopAtNonOption  =  false;  [BUGGY]    tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	this.stopAtNonOption  =  false;	  eatTheRest    =    false;    	non-compiled	[CE]  ')'  expected	1	None	replace
65	[BUG]  [BUGGY]  eatTheRest  =  true,  stopAtNonOption  =  false;  [CE]  not  a  statement  [FE]          ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  eatTheRest  =  true,  stopAtNonOption  =  false;  [BUGGY]    tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	eatTheRest  =  true,  stopAtNonOption  =  false;	  eatTheRest    =    false;    	non-compiled	[CE]  not  a  statement	1	None	replace
66	[BUG]  [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopAtNon();  [CE]  not  a  statement  [FE]        ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {    [BUGGY]  Token  stopAtNonOption  =  StopAtNonOption.stopAtNon();  [BUGGY]    eatTheRest  =  true;  tokens.add(   "--   ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	Token  stopAtNonOption  =  StopAtNonOption.stopAtNon();	      Token    stopAtNonOption    =    StopAtNonOption.stopAtNonOption;    	non-compiled	[CE]  not  a  statement	11	None	replace
