bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  eatTheRest  =  false;  [CE]  [FE]    ComparisonFailure  [CONTEXT]  private  void  processNonOptionToken(String  value)  {  [BUGGY]  eatTheRest  =  false;  [BUGGY]  tokens.add( "-- ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	eatTheRest  =  false;	eatTheRest  =  true;  	non-compiled	[CE]  	3	None	replace
2	[BUG]  [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  true;  }  [CE]  [FE]      ComparisonFailure  [CONTEXT]  private  void  processNonOptionToken(String  value)  {  [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  true;  }  [BUGGY]  tokens.add( "-- ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(stopAtNonOption)  {  eatTheRest  =  true;  }	eatTheRest  =  true;  	non-compiled	[CE]  	3	None	replace
3	[BUG]  [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  stopAtNonOption  =  false;  }  [CE]  [FE]        ComparisonFailure  [CONTEXT]  private  void  processNonOptionToken(String  value)  {  [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  stopAtNonOption  =  false;  }  [BUGGY]  tokens.add( "-- ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  stopAtNonOption  =  false;  }	eatTheRest  =  true;  	non-compiled	[CE]  	3	None	replace
4	[BUG]  [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]          ComparisonFailure  [CONTEXT]  private  void  processNonOptionToken(String  value)  {  [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  tokens.add( "-- ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }	eatTheRest  =  true;  	non-compiled	[CE]  	3	None	replace
5	[BUG]  [BUGGY]    [CE]  [FE]            ComparisonFailure  [CONTEXT]  private  void  processNonOptionToken(String  value)  {  [BUGGY]    [BUGGY]  tokens.add( "-- ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	  	eatTheRest  =  true;  	non-compiled	[CE]  	3	None	replace
6	[BUG]  [BUGGY]    if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]    ComparisonFailure  [CONTEXT]  private  void  processNonOptionToken(String  value)  {  [BUGGY]    if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  eatTheRest  =  true;  tokens.add( "-- ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	    if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  	4	None	add
7	[BUG]  [BUGGY]    if(stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-- ");  tokens.add(value);  }  [CE]  [FE]      ComparisonFailure  [CONTEXT]  private  void  processNonOptionToken(String  value)  {  [BUGGY]    if(stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]  eatTheRest  =  true;  tokens.add( "-- ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	    if(stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-- ");  tokens.add(value);  }		non-compiled	[CE]  	4	None	add
8	[BUG]  [BUGGY]    if(stopAtNonOption)  {  tokens.add( "-- ");  }  [CE]  [FE]        ComparisonFailure  [CONTEXT]  private  void  processNonOptionToken(String  value)  {  [BUGGY]    if(stopAtNonOption)  {  tokens.add( "-- ");  }  [BUGGY]  eatTheRest  =  true;  tokens.add( "-- ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	    if(stopAtNonOption)  {  tokens.add( "-- ");  }		non-compiled	[CE]  	4	None	add
9	[BUG]  [BUGGY]    tokens.add( "-- ");  [CE]  [FE]          ComparisonFailure  [CONTEXT]  private  void  processNonOptionToken(String  value)  {  [BUGGY]    tokens.add( "-- ");  [BUGGY]  eatTheRest  =  true;  tokens.add( "-- ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	    tokens.add( "-- ");		non-compiled	[CE]  	4	None	add
10	[BUG]  [BUGGY]    if(stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "- ");  tokens.add(value);  }  [CE]  [FE]            ComparisonFailure  [CONTEXT]  private  void  processNonOptionToken(String  value)  {  [BUGGY]    if(stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "- ");  tokens.add(value);  }  [BUGGY]  eatTheRest  =  true;  tokens.add( "-- ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	    if(stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "- ");  tokens.add(value);  }		non-compiled	[CE]  	4	None	add
11	[BUG]  [BUGGY]    Token  stopAtNonOption  =  StopAtNonOption.stopAtNonOption;  [CE]  [FE]    ComparisonFailure  [CONTEXT]  private  void  processNonOptionToken(String  value)  {  [BUGGY]    Token  stopAtNonOption  =  StopAtNonOption.stopAtNonOption;  [BUGGY]  eatTheRest  =  true;  tokens.add( "-- ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	    Token  stopAtNonOption  =  StopAtNonOption.stopAtNonOption;		non-compiled	[CE]  	4	None	add
12	[BUG]  [BUGGY]    Token  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value);  [CE]  [FE]      ComparisonFailure  [CONTEXT]  private  void  processNonOptionToken(String  value)  {  [BUGGY]    Token  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value);  [BUGGY]  eatTheRest  =  true;  tokens.add( "-- ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	    Token  stopAtNonOption  =  StopAtNonOption.stopAtNonOption(value);		non-compiled	[CE]  	4	None	add
13	[BUG]  [BUGGY]    Token  stopAtNonOption  =  StopAtNonOption.stopAtNonOption();  [CE]  [FE]        ComparisonFailure  [CONTEXT]  private  void  processNonOptionToken(String  value)  {  [BUGGY]    Token  stopAtNonOption  =  StopAtNonOption.stopAtNonOption();  [BUGGY]  eatTheRest  =  true;  tokens.add( "-- ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	    Token  stopAtNonOption  =  StopAtNonOption.stopAtNonOption();		non-compiled	[CE]  	4	None	add
14	[BUG]  [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  tokens.add( "-- ");  tokens.add(value);  }  [CE]  [FE]    ComparisonFailure  [CONTEXT]  private  void  processNonOptionToken(String  value)  {  [BUGGY]  if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]  tokens.add( "-- ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	if(stopAtNonOption)  {  eatTheRest  =  true;  }  else  {  tokens.add( "-- ");  tokens.add(value);  }	eatTheRest  =  true;  	non-compiled	[CE]  	3	None	replace
15	[BUG]  [BUGGY]  eatTheRest  =  stopAtNonOption;  [CE]  [FE]    ComparisonFailure  [CONTEXT]  private  void  processNonOptionToken(String  value)  {  [BUGGY]  eatTheRest  =  stopAtNonOption;  [BUGGY]  tokens.add( "-- ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	eatTheRest  =  stopAtNonOption;	eatTheRest  =  true;  	non-compiled	[CE]  	3	None	replace
16	[BUG]  [BUGGY]    if(stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-- ");  tokens.add(value);  }  [CE]  [FE]    ComparisonFailure  [CONTEXT]  private  void  processNonOptionToken(String  value)  {  [BUGGY]    if(stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]  eatTheRest  =  true;  tokens.add( "-- ");  tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	186	186	2	replace	    if(stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-- ");  tokens.add(value);  }		non-compiled	[CE]  	4	None	add
