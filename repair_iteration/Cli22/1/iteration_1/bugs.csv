bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  processOptionToken(token);  [CE]  method  processOptionToken  in  class  PosixParser  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure  [CONTEXT]  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  {  [BUGGY]  processOptionToken(token);  [BUGGY]  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.5773502691896258	148	148	2	replace	processOptionToken(token);	processNonOptionToken(token);  	non-compiled	[CE]  method  processOptionToken  in  class  PosixParser  cannot  be  applied  to  given  types;	1	None	replace
2	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ComparisonFailure  [CONTEXT]  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  {  [BUGGY]  tokens.add(token);  [BUGGY]  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.5773502691896258	148	148	2	add	tokens.add(token);	processNonOptionToken(token);  	compilable	  [FE]  AssertionFailedError  	1	1	replace
3	[BUG]  [BUGGY]  tokens.add(token);  [FE]  AssertionFailedError  [FE]        ComparisonFailure  [CONTEXT]  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  {  [BUGGY]  tokens.add(token);  [BUGGY]  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.5773502691896258	148	148	2	replace	tokens.add(token);	processNonOptionToken(token);  	compilable	  [FE]  AssertionFailedError  	1	1	replace
4	[BUG]  [BUGGY]  processToken(token);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure  [CONTEXT]  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  {  [BUGGY]  processToken(token);  [BUGGY]  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.5773502691896258	148	148	2	replace	processToken(token);	processNonOptionToken(token);  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
5	[BUG]  [BUGGY]  [FE]  MissingArgumentException  [FE]            ComparisonFailure  [CONTEXT]  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  {  [BUGGY]    [BUGGY]  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.5773502691896258	148	148	2	add	  	processNonOptionToken(token);  	compilable	  [FE]  MissingArgumentException  	1	6	replace
6	[BUG]  [BUGGY]    [FE]  MissingArgumentException  [FE]            ComparisonFailure  [CONTEXT]  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  {  [BUGGY]    [BUGGY]  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.5773502691896258	148	148	2	replace	  	processNonOptionToken(token);  	compilable	  [FE]  MissingArgumentException  	1	6	replace
7	[BUG]  [BUGGY]    Iterator  iter  =  options.iterator();  [CE]  variable  iter  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]    ComparisonFailure  [CONTEXT]  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  {  [BUGGY]    Iterator  iter  =  options.iterator();  [BUGGY]  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.5773502691896258	148	148	2	replace	    Iterator  iter  =  options.iterator();		non-compiled	[CE]  variable  iter  is  already  defined  in  method  flatten(Options,String[],boolean)	2	None	add
8	[BUG]  [BUGGY]    Iterator  <  String>  iter  =  options.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      ComparisonFailure  [CONTEXT]  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  {  [BUGGY]    Iterator  <  String>  iter  =  options.iterator();  [BUGGY]  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.5773502691896258	148	148	2	replace	    Iterator  <  String>  iter  =  options.iterator();		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	add
9	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        ComparisonFailure  [CONTEXT]  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  {  [BUGGY]    iter.remove();  [BUGGY]  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.5773502691896258	148	148	2	add	    iter.remove();		compilable	  [FE]  UnsupportedOperationException  	2	6	add
10	[BUG]  [BUGGY]    iter.remove();  [FE]  UnsupportedOperationException  [FE]        ComparisonFailure  [CONTEXT]  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  {  [BUGGY]    iter.remove();  [BUGGY]  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.5773502691896258	148	148	2	replace	    iter.remove();		compilable	  [FE]  UnsupportedOperationException  	2	6	add
11	[BUG]  [BUGGY]    Iterator  iter  =  options.iterator();  tokens.add(opt);  [CE]  variable  iter  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]          ComparisonFailure  [CONTEXT]  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  {  [BUGGY]    Iterator  iter  =  options.iterator();  tokens.add(opt);  [BUGGY]  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.5773502691896258	148	148	2	replace	    Iterator  iter  =  options.iterator();  tokens.add(opt);		non-compiled	[CE]  variable  iter  is  already  defined  in  method  flatten(Options,String[],boolean)	2	None	add
12	[BUG]  [BUGGY]    tokens.add(opt);  [CE]  cannot  find  symbol  opt  [FE]    ComparisonFailure  [CONTEXT]  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  {  [BUGGY]    tokens.add(opt);  [BUGGY]  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.5773502691896258	148	148	2	replace	    tokens.add(opt);		non-compiled	[CE]  cannot  find  symbol  opt	2	None	add
13	[BUG]  [BUGGY]    Iterator  iter  =  options.keySet().iterator();  [CE]  variable  iter  is  already  defined  in  method  flatten(Options,String[],boolean)  [FE]      ComparisonFailure  [CONTEXT]  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  {  [BUGGY]    Iterator  iter  =  options.keySet().iterator();  [BUGGY]  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.5773502691896258	148	148	2	replace	    Iterator  iter  =  options.keySet().iterator();		non-compiled	[CE]  variable  iter  is  already  defined  in  method  flatten(Options,String[],boolean)	2	None	add
14	[BUG]  [BUGGY]  eatTheRest  =  processOptionToken(token);  [CE]  method  processOptionToken  in  class  PosixParser  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure  [CONTEXT]  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  {  [BUGGY]  eatTheRest  =  processOptionToken(token);  [BUGGY]  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.5773502691896258	148	148	2	replace	eatTheRest  =  processOptionToken(token);	processNonOptionToken(token);  	non-compiled	[CE]  method  processOptionToken  in  class  PosixParser  cannot  be  applied  to  given  types;	1	None	replace
15	[BUG]  [BUGGY]  iter.processOptionToken(token);  [CE]  [FE]      ComparisonFailure  [CONTEXT]  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  {  [BUGGY]  iter.processOptionToken(token);  [BUGGY]  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.5773502691896258	148	148	2	replace	iter.processOptionToken(token);	processNonOptionToken(token);  	non-compiled	[CE]  	1	None	replace
16	[BUG]  [BUGGY]    iter  =  options.iterator();  [CE]  ')'  expected  [FE]    ComparisonFailure  [CONTEXT]  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  {  [BUGGY]    iter  =  options.iterator();  [BUGGY]  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.5773502691896258	148	148	2	replace	    iter  =  options.iterator();		non-compiled	[CE]  ')'  expected	2	None	add
17	[BUG]  [BUGGY]  if(stopAtNonOption)  {  processNonOptionToken(token);  }  [CE]  [FE]    ComparisonFailure  [CONTEXT]  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  {  [BUGGY]  if(stopAtNonOption)  {  processNonOptionToken(token);  }  [BUGGY]  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.5773502691896258	148	148	2	replace	if(stopAtNonOption)  {  processNonOptionToken(token);  }	processNonOptionToken(token);  	non-compiled	[CE]  	1	None	replace
18	[BUG]  [BUGGY]  if(stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(opt);  }  [CE]  [FE]      ComparisonFailure  [CONTEXT]  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  {  [BUGGY]  if(stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(opt);  }  [BUGGY]  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.5773502691896258	148	148	2	replace	if(stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(opt);  }	processNonOptionToken(token);  	non-compiled	[CE]  	1	None	replace
19	[BUG]  [BUGGY]  if(stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  [CE]  [FE]        ComparisonFailure  [CONTEXT]  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  else  if  (stopAtNonOption)  {  [BUGGY]  if(stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  [BUGGY]  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.5773502691896258	148	148	2	replace	if(stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }	processNonOptionToken(token);  	non-compiled	[CE]  	1	None	replace
