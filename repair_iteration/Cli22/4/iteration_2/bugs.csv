bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  tokens.add( "- "  +  value,  stopAtNonOption);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");    [BUGGY]  tokens.add( "- "  +  value,  stopAtNonOption);  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "- "  +  value,  stopAtNonOption);	  tokens.add(   "-   "    +    value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
2	[BUG]  [BUGGY]  tokens.add( "- "  +  value,  eatTheRest);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");    [BUGGY]  tokens.add( "- "  +  value,  eatTheRest);  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "- "  +  value,  eatTheRest);	  tokens.add(   "-   "    +    value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
3	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");    [BUGGY]  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	||  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	      if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
4	[BUG]  [BUGGY]  if(stopAtNonOption  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");    [BUGGY]  if(stopAtNonOption  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	if(stopAtNonOption  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	      if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
5	[BUG]  [BUGGY]  While(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");    [BUGGY]  While(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	While(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	      if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
6	[BUG]  [BUGGY]  if(stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");    [BUGGY]  if(stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-- ");  }  [BUGGY]    tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	if(stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-- ");  }	      if(stopAtNonOption)    {    stopAtNonOption    =    true;    tokens.add(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
7	[BUG]  [BUGGY]  if(stopAtNonOption)  {  stopAtNonOption  =  null;  tokens.add( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");    [BUGGY]  if(stopAtNonOption)  {  stopAtNonOption  =  null;  tokens.add( "-- ");  }  [BUGGY]    tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	if(stopAtNonOption)  {  stopAtNonOption  =  null;  tokens.add( "-- ");  }	      if(stopAtNonOption)    {    stopAtNonOption    =    stopAtNonOption;    tokens.add(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
8	[BUG]  [BUGGY]  tokens.add( "-- ");  }  else  {  tokens.add( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");    [BUGGY]  tokens.add( "-- ");  }  else  {  tokens.add( "-- ");  }  [BUGGY]    tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "-- ");  }  else  {  tokens.add( "-- ");  }	      if(stopAtNonOption)    {    tokens.add(   "--   ");    }    else    {    tokens.add(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
9	[BUG]  [BUGGY]  tokens.add( "-- ");  eatTheRest  =  stopAtNonOption;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");    [BUGGY]  tokens.add( "-- ");  eatTheRest  =  stopAtNonOption;  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "-- ");  eatTheRest  =  stopAtNonOption;	      	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
10	[BUG]  [BUGGY]  tokens.add( "-- ");  stopAtNonOption  =  true;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");    [BUGGY]  tokens.add( "-- ");  stopAtNonOption  =  true;  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "-- ");  stopAtNonOption  =  true;	      	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
11	[BUG]  [BUGGY]  tokens.add( "-- ");  }  else  {  options.add( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");    [BUGGY]  tokens.add( "-- ");  }  else  {  options.add( "-- ");  }  [BUGGY]    tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "-- ");  }  else  {  options.add( "-- ");  }	      if(stopAtNonOption)    {    tokens.add(   "--   ");    }    else    {    options.add(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
12	[BUG]  [BUGGY]  tokens.add(getValue()  + "- ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");    [BUGGY]  tokens.add(getValue()  + "- ");  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add(getValue()  + "- ");	  tokens.add(getValue());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
13	[BUG]  [BUGGY]  tokens.add(getValue(),  value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");    [BUGGY]  tokens.add(getValue(),  value);  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add(getValue(),  value);	  tokens.add(getValue());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
14	[BUG]  [BUGGY]  tokens.add(getKey());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");    [BUGGY]  tokens.add(getKey());  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add(getKey());	  tokens.add(getValue());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
15	[BUG]  [BUGGY]  tokens.add('-'  +  value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");    [BUGGY]  tokens.add('-'  +  value);  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add('-'  +  value);	  tokens.add('-');    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
16	[BUG]  [BUGGY]  tokens.add('-',  value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");    [BUGGY]  tokens.add('-',  value);  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add('-',  value);	  tokens.add('-');    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
17	[BUG]  [BUGGY]  tokens.add( "- ",  value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");    [BUGGY]  tokens.add( "- ",  value);  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "- ",  value);	  tokens.add(   "-   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
18	[BUG]  [BUGGY]  tokens.add( "-- ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");    [BUGGY]  tokens.add( "-- ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "-- ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	      if(stopAtNonOption)    {    tokens.add(   "--   ");    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
19	[BUG]  [BUGGY]  tokens.add( "-- "  +  value,  stopAtNonOption);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");    [BUGGY]  tokens.add( "-- "  +  value,  stopAtNonOption);  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "-- "  +  value,  stopAtNonOption);	  tokens.add(   "--   "    +    value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
20	[BUG]  [BUGGY]  tokens.add( "-- ".equals(value));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");    [BUGGY]  tokens.add( "-- ".equals(value));  [BUGGY]    tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "-- ".equals(value));	      if(stopAtNonOption)    {    tokens.add(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
21	[BUG]  [BUGGY]  tokens.add( ",-- ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");    [BUGGY]  tokens.add( ",-- ");  [BUGGY]    tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( ",-- ");	      if(stopAtNonOption)    {    tokens.add(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
22	[BUG]  [BUGGY]  tokens.add( "-- ",  value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");    [BUGGY]  tokens.add( "-- ",  value);  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "-- ",  value);	  tokens.add(   "--   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
23	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");    [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size());  [BUGGY]    tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	TokenBuffer  tokens  =  new  TokenBuffer(tokens.size());	      if(stopAtNonOption)    {    stopAtNonOption    =    stopAtNonOption;    tokens.add(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
24	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(stopAtNonOption);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");    [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(stopAtNonOption);  [BUGGY]    tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	TokenBuffer  tokens  =  new  TokenBuffer(stopAtNonOption);	      if(stopAtNonOption)    {    tokens.add(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
25	[BUG]  [BUGGY]  fortunately(stopAtNonOption)  {  tokens.add( "-- ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");    [BUGGY]  fortunately(stopAtNonOption)  {  tokens.add( "-- ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	fortunately(stopAtNonOption)  {  tokens.add( "-- ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	      if(stopAtNonOption)    {    tokens.add(   "--   ");    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
26	[BUG]  [BUGGY]  options.add( "-- ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");    [BUGGY]  options.add( "-- ");  [BUGGY]    tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	options.add( "-- ");	      if(stopAtNonOption)    {    tokens.add(   "--   ");    }    else    {    options.add(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
27	[BUG]  [BUGGY]  tokens.add( "-- "  +  value;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");    [BUGGY]  tokens.add( "-- "  +  value;  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "-- "  +  value;	  tokens.add(   "--   "    +    value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
28	[BUG]  [BUGGY]  safeToken(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");    [BUGGY]  safeToken(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	safeToken(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	      if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
29	[BUG]  [BUGGY]  if(stopAtNonOption  ||  stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");    [BUGGY]  if(stopAtNonOption  ||  stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-- ");  }  [BUGGY]    tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	if(stopAtNonOption  ||  stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-- ");  }	      if(stopAtNonOption)    {    stopAtNonOption    =    true;    tokens.add(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
30	[BUG]  [BUGGY]  tokens.add( "- "  +  eatTheRest);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");    [BUGGY]  tokens.add( "- "  +  eatTheRest);  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "- "  +  eatTheRest);	  tokens.add(   "-   "    +    value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
31	[BUG]  [BUGGY]  tokens.add(value);  stopAtNonOption  =  true;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");    [BUGGY]  tokens.add(value);  stopAtNonOption  =  true;  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add(value);  stopAtNonOption  =  true;	      	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
32	[BUG]  [BUGGY]  tokens.add( "- ".equals(value));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");    [BUGGY]  tokens.add( "- ".equals(value));  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "- ".equals(value));	  tokens.add(   "-   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
33	[BUG]  [BUGGY]  tokens.add( "-- "  +  eatTheRest);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");    [BUGGY]  tokens.add( "-- "  +  eatTheRest);  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "-- "  +  eatTheRest);	  tokens.add(   "--   "    +    value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
34	[BUG]  [BUGGY]  stopAtNonOption  =  true;  tokens.add( "-- ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");    [BUGGY]  stopAtNonOption  =  true;  tokens.add( "-- ");  [BUGGY]    tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	stopAtNonOption  =  true;  tokens.add( "-- ");	      if(stopAtNonOption)    {    stopAtNonOption    =    true;    tokens.add(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
35	[BUG]  [BUGGY]  while(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");    [BUGGY]  while(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	while(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	      if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
36	[BUG]  [BUGGY]  While(eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");    [BUGGY]  While(eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	While(eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }	      if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
37	[BUG]  [BUGGY]  fortunately(stopAtNonOption)  {  tokens.add( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(   "--   ");    [BUGGY]  fortunately(stopAtNonOption)  {  tokens.add( "-- ");  }  [BUGGY]    tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	fortunately(stopAtNonOption)  {  tokens.add( "-- ");  }	      if(stopAtNonOption)    {    tokens.add(   "--   ");    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
