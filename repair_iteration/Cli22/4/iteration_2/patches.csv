bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  safeToken(this.stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  safeToken(this.stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	safeToken(this.stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  safeToken(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
2	[BUG]  [BUGGY]  tokens.add(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  safeToken(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
3	[BUG]  [BUGGY]  tokens.add(getValue()  /   "- ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add(getValue()  /   "- ");  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add(getValue()  /   "- ");	  tokens.add(getValue()    +   "-   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
4	[BUG]  [BUGGY]  tokens.add(getValue(),  value  + "- ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add(getValue(),  value  + "- ");  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add(getValue(),  value  + "- ");	  tokens.add(getValue()    +   "-   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
5	[BUG]  [BUGGY]  tokens.add('-',  value  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add('-',  value  +  1);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add('-',  value  +  1);	  tokens.add('-',    value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
6	[BUG]  [BUGGY]  tokens.add('-',  value.toLowerCase());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add('-',  value.toLowerCase());  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add('-',  value.toLowerCase());	  tokens.add('-',    value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
7	[BUG]  [BUGGY]  tokens.add('-',  value  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add('-',  value  -  1);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add('-',  value  -  1);	  tokens.add('-',    value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
8	[BUG]  [BUGGY]  tokens.add(getNonOptionValue());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add(getNonOptionValue());  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add(getNonOptionValue());	  tokens.add(getKey());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
9	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(stopAtNonOption,  stopAtNonOption);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(stopAtNonOption,  stopAtNonOption);  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	TokenBuffer  tokens  =  new  TokenBuffer(stopAtNonOption,  stopAtNonOption);	  TokenBuffer    tokens    =    new    TokenBuffer(stopAtNonOption);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
10	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(stopAtNonOption,  eatTheRest);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(stopAtNonOption,  eatTheRest);  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	TokenBuffer  tokens  =  new  TokenBuffer(stopAtNonOption,  eatTheRest);	  TokenBuffer    tokens    =    new    TokenBuffer(stopAtNonOption);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
11	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens);  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	TokenBuffer  tokens  =  new  TokenBuffer(tokens);	  TokenBuffer    tokens    =    new    TokenBuffer(stopAtNonOption);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
12	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(stopAtNonOption,  value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(stopAtNonOption,  value);  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	TokenBuffer  tokens  =  new  TokenBuffer(stopAtNonOption,  value);	  TokenBuffer    tokens    =    new    TokenBuffer(stopAtNonOption);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
13	[BUG]  [BUGGY]  if(stopAtNonOption  ||  stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  if(stopAtNonOption  ||  stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-- ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	if(stopAtNonOption  ||  stopAtNonOption)  {  stopAtNonOption  =  false;  tokens.add( "-- ");  }	  if(stopAtNonOption    ||    stopAtNonOption)    {    stopAtNonOption    =    true;    tokens.add(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
14	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  -  1);  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  -  1);	  TokenBuffer    tokens    =    new    TokenBuffer(tokens.size());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
15	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  +  1);  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  +  1);	  TokenBuffer    tokens    =    new    TokenBuffer(tokens.size());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
16	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  *  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  *  2);  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  *  2);	  TokenBuffer    tokens    =    new    TokenBuffer(tokens.size());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
17	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  -  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  -  2);  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  -  2);	  TokenBuffer    tokens    =    new    TokenBuffer(tokens.size());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
18	[BUG]  [BUGGY]  tokens.add(value);  stopAtNonOption  =  false;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add(value);  stopAtNonOption  =  false;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add(value);  stopAtNonOption  =  false;	  tokens.add(value);    stopAtNonOption    =    true;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
19	[BUG]  [BUGGY]  tokens.add( "- ");  stopAtNonOption  =  true;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add( "- ");  stopAtNonOption  =  true;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "- ");  stopAtNonOption  =  true;	  tokens.add(value);    stopAtNonOption    =    true;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
20	[BUG]  [BUGGY]  tokens.add( "-- "  +  value,  stopAtNonOption,  eatTheRest);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add( "-- "  +  value,  stopAtNonOption,  eatTheRest);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "-- "  +  value,  stopAtNonOption,  eatTheRest);	  tokens.add(   "--   "    +    value,    stopAtNonOption);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
21	[BUG]  [BUGGY]  tokens.add( "-- "  +  value,  eatTheRest);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add( "-- "  +  value,  eatTheRest);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "-- "  +  value,  eatTheRest);	  tokens.add(   "--   "    +    value,    stopAtNonOption);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
22	[BUG]  [BUGGY]  tokens.add( ",-- ",  value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add( ",-- ",  value);  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( ",-- ",  value);	  tokens.add(   ",--   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
23	[BUG]  [BUGGY]  tokens.add( ";-- ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add( ";-- ");  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( ";-- ");	  tokens.add(   ",--   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
24	[BUG]  [BUGGY]  tokens.add( "-- ");  }  else  if(!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add( "-- ");  }  else  if(!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "-- ");  }  else  if(!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  tokens.add(   "--   ");    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
25	[BUG]  [BUGGY]  tokens.add( "-- ");  }  else  if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add( "-- ");  }  else  if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "-- ");  }  else  if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  tokens.add(   "--   ");    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
26	[BUG]  [BUGGY]  fortunately(stopAtNonOption)  {  tokens.add( "-- ",  value);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  fortunately(stopAtNonOption)  {  tokens.add( "-- ",  value);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	fortunately(stopAtNonOption)  {  tokens.add( "-- ",  value);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  fortunately(stopAtNonOption)    {    tokens.add(   "--   ");    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
27	[BUG]  [BUGGY]  tokens.add( "-- ");  }  else  if(stopAtNonOption)  {  options.add( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add( "-- ");  }  else  if(stopAtNonOption)  {  options.add( "-- ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "-- ");  }  else  if(stopAtNonOption)  {  options.add( "-- ");  }	  tokens.add(   "--   ");    }    else    {    options.add(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
28	[BUG]  [BUGGY]  tokens.add( "-- "  +  value.toLowerCase();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add( "-- "  +  value.toLowerCase();  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "-- "  +  value.toLowerCase();	  tokens.add(   "--   "    +    value;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
29	[BUG]  [BUGGY]  tokens.add( "-- ");  }  else  if(stopAtNonOption)  {  tokens.add( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add( "-- ");  }  else  if(stopAtNonOption)  {  tokens.add( "-- ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "-- ");  }  else  if(stopAtNonOption)  {  tokens.add( "-- ");  }	  tokens.add(   "--   ");    }    else    {    tokens.add(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
30	[BUG]  [BUGGY]  tokens.add( "-- ");  }  else  if(!stopAtNonOption)  {  tokens.add( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add( "-- ");  }  else  if(!stopAtNonOption)  {  tokens.add( "-- ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "-- ");  }  else  if(!stopAtNonOption)  {  tokens.add( "-- ");  }	  tokens.add(   "--   ");    }    else    {    tokens.add(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
31	[BUG]  [BUGGY]  tokens.add( "- "  +  value.equals(value));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add( "- "  +  value.equals(value));  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "- "  +  value.equals(value));	  tokens.add(   "-   ".equals(value));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
32	[BUG]  [BUGGY]  tokens.add( "- ").equals(value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add( "- ").equals(value);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "- ").equals(value);	  tokens.add(   "-   ".equals(value));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
33	[BUG]  [BUGGY]  ||  stopAtNonOption  ||  eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  ||  stopAtNonOption  ||  eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	||  stopAtNonOption  ||  eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }	  ||    stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
34	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	||  stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }	  ||    stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
35	[BUG]  [BUGGY]  ||  eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  ||  eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	||  eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }	  ||    stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
36	[BUG]  [BUGGY]  tokens.add( "-- ").equals(value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add( "-- ").equals(value);  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "-- ").equals(value);	  tokens.add(   "--   ".equals(value));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
37	[BUG]  [BUGGY]  if(stopAtNonOption)  {  stopAtNonOption  =  new  ArrayList();  tokens.add( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  if(stopAtNonOption)  {  stopAtNonOption  =  new  ArrayList();  tokens.add( "-- ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	if(stopAtNonOption)  {  stopAtNonOption  =  new  ArrayList();  tokens.add( "-- ");  }	  if(stopAtNonOption)    {    stopAtNonOption    =    null;    tokens.add(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
38	[BUG]  [BUGGY]  tokens.add(getValue(),  value,  stopAtNonOption);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add(getValue(),  value,  stopAtNonOption);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add(getValue(),  value,  stopAtNonOption);	  tokens.add(getValue(),    value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
39	[BUG]  [BUGGY]  tokens.add(getKey(),  value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add(getKey(),  value);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add(getKey(),  value);	  tokens.add(getValue(),    value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
40	[BUG]  [BUGGY]  if(stopAtNonOption)  {  options.add( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  if(stopAtNonOption)  {  options.add( "-- ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	if(stopAtNonOption)  {  options.add( "-- ");  }	  options.add(   "--   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
41	[BUG]  [BUGGY]  if(stopAtNonOption)  {  options.add( "-- ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  if(stopAtNonOption)  {  options.add( "-- ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	if(stopAtNonOption)  {  options.add( "-- ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  options.add(   "--   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
42	[BUG]  [BUGGY]  if(stopAtNonOption)  {  options.add( "-- ");  }  else  {  tokens.add( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  if(stopAtNonOption)  {  options.add( "-- ");  }  else  {  tokens.add( "-- ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	if(stopAtNonOption)  {  options.add( "-- ");  }  else  {  tokens.add( "-- ");  }	  options.add(   "--   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
43	[BUG]  [BUGGY]  while(!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  while(!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	while(!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  while(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
44	[BUG]  [BUGGY]  while(stopAtNonOption  &&  value!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  while(stopAtNonOption  &&  value!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	while(stopAtNonOption  &&  value!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  while(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
45	[BUG]  [BUGGY]  while(stopAtNonOption  &&  value.length()  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  while(stopAtNonOption  &&  value.length()  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	while(stopAtNonOption  &&  value.length()  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  while(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
46	[BUG]  [BUGGY]  tokens.add( "- "  +  value,  stopAtNonOption?  null  :  stopAtNonOption);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add( "- "  +  value,  stopAtNonOption?  null  :  stopAtNonOption);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "- "  +  value,  stopAtNonOption?  null  :  stopAtNonOption);	  tokens.add(   "-   "    +    value,    eatTheRest);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
47	[BUG]  [BUGGY]  tokens.add( "-   "  +  value,  stopAtNonOption?  stopAtNonOption  :  eatTheRest);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add( "-   "  +  value,  stopAtNonOption?  stopAtNonOption  :  eatTheRest);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "-   "  +  value,  stopAtNonOption?  stopAtNonOption  :  eatTheRest);	  tokens.add(   "-   "    +    value,    eatTheRest);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
48	[BUG]  [BUGGY]  tokens.add('-'  +  value,  stopAtNonOption);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add('-'  +  value,  stopAtNonOption);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add('-'  +  value,  stopAtNonOption);	  tokens.add('-'    +    value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
49	[BUG]  [BUGGY]  tokens.add('-'  +  value  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add('-'  +  value  +  1);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add('-'  +  value  +  1);	  tokens.add('-'    +    value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
50	[BUG]  [BUGGY]  Token  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  Token  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	Token  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  While(eatTheRest)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	36	None	replace
51	[BUG]  [BUGGY]  While(stopAtNonOption  &&  value!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  While(stopAtNonOption  &&  value!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	While(stopAtNonOption  &&  value!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  While(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
52	[BUG]  [BUGGY]  if(stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-- ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  if(stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-- ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	if(stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-- ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  stopAtNonOption    =    true;    tokens.add(   "--   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
53	[BUG]  [BUGGY]  if(stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-- ");  }  else  {  options.add( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  if(stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-- ");  }  else  {  options.add( "-- ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	if(stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-- ");  }  else  {  options.add( "-- ");  }	  stopAtNonOption    =    true;    tokens.add(   "--   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
54	[BUG]  [BUGGY]  if(stopAtNonOption  &&  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  if(stopAtNonOption  &&  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	if(stopAtNonOption  &&  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  if(stopAtNonOption    ||    stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
55	[BUG]  [BUGGY]  if(stopAtNonOption  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  if(stopAtNonOption  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	if(stopAtNonOption  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }	  if(stopAtNonOption    ||    stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
56	[BUG]  [BUGGY]  tokens.add( "-- ");  eatTheRest  =  value;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add( "-- ");  eatTheRest  =  value;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "-- ");  eatTheRest  =  value;	  tokens.add(   "--   ");    eatTheRest    =    stopAtNonOption;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
57	[BUG]  [BUGGY]  tokens.add( "-- ");  this.stopAtNonOption  =  stopAtNonOption;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add( "-- ");  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "-- ");  this.stopAtNonOption  =  stopAtNonOption;	  tokens.add(   "--   ");    eatTheRest    =    stopAtNonOption;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
58	[BUG]  [BUGGY]  tokens.add( "-- "  +  value);  eatTheRest  =  stopAtNonOption;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add( "-- "  +  value);  eatTheRest  =  stopAtNonOption;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "-- "  +  value);  eatTheRest  =  stopAtNonOption;	  tokens.add(   "--   ");    eatTheRest    =    stopAtNonOption;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
59	[BUG]  [BUGGY]  tokens.add( "-- ",  stopAtNonOption);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add( "-- ",  stopAtNonOption);  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "-- ",  stopAtNonOption);	  fortunately(stopAtNonOption)    {    tokens.add(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
60	[BUG]  [BUGGY]  tokens.add( "-- ");  stopAtNonOption  =  false;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add( "-- ");  stopAtNonOption  =  false;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "-- ");  stopAtNonOption  =  false;	  tokens.add(   "--   ");    stopAtNonOption    =    true;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
61	[BUG]  [BUGGY]  tokens.add( "-- ",  value);  stopAtNonOption  =  true;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add( "-- ",  value);  stopAtNonOption  =  true;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "-- ",  value);  stopAtNonOption  =  true;	  tokens.add(   "--   ");    stopAtNonOption    =    true;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
62	[BUG]  [BUGGY]  tokens.add( "- "  +  value,  stopAtNonOption,  eatTheRest);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add( "- "  +  value,  stopAtNonOption,  eatTheRest);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "- "  +  value,  stopAtNonOption,  eatTheRest);	  tokens.add(   "-   "    +    value,    stopAtNonOption);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
63	[BUG]  [BUGGY]  if(stopAtNonOption  &&  stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "--   ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  if(stopAtNonOption  &&  stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "--   ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	if(stopAtNonOption  &&  stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "--   ");  }	  if(stopAtNonOption    ||    stopAtNonOption)    {    stopAtNonOption    =    true;    tokens.add(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
64	[BUG]  [BUGGY]  safeToken(stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  safeToken(stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	safeToken(stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }	  safeToken(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
65	[BUG]  [BUGGY]  stopAtNonOption  =  null;  tokens.add( "-- ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  stopAtNonOption  =  null;  tokens.add( "-- ");  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	stopAtNonOption  =  null;  tokens.add( "-- ");	  if(stopAtNonOption)    {    stopAtNonOption    =    null;    tokens.add(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
66	[BUG]  [BUGGY]  while(eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  while(eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	while(eatTheRest)  {  throw  new  IllegalArgumentException( " ");  }	  while(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
67	[BUG]  [BUGGY]  while(stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  while(stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	while(stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }	  while(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
68	[BUG]  [BUGGY]  tryWhile(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tryWhile(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tryWhile(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  While(eatTheRest)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	36	None	replace
69	[BUG]  [BUGGY]  fortunately(eatTheRest)  {  tokens.add( "-- ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  fortunately(eatTheRest)  {  tokens.add( "-- ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	fortunately(eatTheRest)  {  tokens.add( "-- ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  fortunately(stopAtNonOption)    {    tokens.add(   "--   ");    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
70	[BUG]  [BUGGY]  if(eatTheRest  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  if(eatTheRest  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	if(eatTheRest  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  if(stopAtNonOption    ||    stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
71	[BUG]  [BUGGY]  tokens.add('-',  '-');  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add('-',  '-');  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add('-',  '-');	  tokens.add('-',    value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
72	[BUG]  [BUGGY]  While(stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  While(stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	While(stopAtNonOption)  {  throw  new  IllegalArgumentException( "-- ");  }	  While(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
73	[BUG]  [BUGGY]  safeToken(stopAtNonOption)  {  tokens.add( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  safeToken(stopAtNonOption)  {  tokens.add( "-- ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	safeToken(stopAtNonOption)  {  tokens.add( "-- ");  }	  fortunately(stopAtNonOption)    {    tokens.add(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
74	[BUG]  [BUGGY]  fortunately(eatTheRest)  {  tokens.add( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  fortunately(eatTheRest)  {  tokens.add( "-- ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	fortunately(eatTheRest)  {  tokens.add( "-- ");  }	  fortunately(stopAtNonOption)    {    tokens.add(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
75	[BUG]  [BUGGY]  tokens.add(value  + "- ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add(value  + "- ");  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add(value  + "- ");	  tokens.add(getValue()    +   "-   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
76	[BUG]  [BUGGY]  &&  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  &&  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	&&  stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  ||    stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
77	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  ||  stopAtNonOption)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	||  stopAtNonOption)  {  throw  new  IllegalArgumentException( ". ");  }	  ||    stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
78	[BUG]  [BUGGY]  tokens.add(getNonOptionValue(),  value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add(getNonOptionValue(),  value);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add(getNonOptionValue(),  value);	  tokens.add(getValue(),    value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
79	[BUG]  [BUGGY]  tokens.add( "-- "  +  value,  stopAtNonOption;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add( "-- "  +  value,  stopAtNonOption;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "-- "  +  value,  stopAtNonOption;	  tokens.add(   "--   "    +    value;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
80	[BUG]  [BUGGY]  options.add( "-- "  +  value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  options.add( "-- "  +  value);  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	options.add( "-- "  +  value);	  options.add(   "--   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
81	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.values());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(tokens.values());  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	TokenBuffer  tokens  =  new  TokenBuffer(tokens.values());	  TokenBuffer    tokens    =    new    TokenBuffer(tokens.size());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
82	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(stopAtNonOption,  endAtNonOption);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(stopAtNonOption,  endAtNonOption);  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	TokenBuffer  tokens  =  new  TokenBuffer(stopAtNonOption,  endAtNonOption);	  TokenBuffer    tokens    =    new    TokenBuffer(stopAtNonOption);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
83	[BUG]  [BUGGY]  tokens.add( "- ",  value,  stopAtNonOption);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add( "- ",  value,  stopAtNonOption);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "- ",  value,  stopAtNonOption);	  tokens.add(   "-   "    +    value,    eatTheRest);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
84	[BUG]  [BUGGY]  tokens.add( "-- ");  stopAtNonOption  =  value;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add( "-- ");  stopAtNonOption  =  value;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "-- ");  stopAtNonOption  =  value;	  tokens.add(   "--   ");    eatTheRest    =    stopAtNonOption;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
85	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(stopAtNonOption);  tokens.add( "-- ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(stopAtNonOption);  tokens.add( "-- ");  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	TokenBuffer  tokens  =  new  TokenBuffer(stopAtNonOption);  tokens.add( "-- ");	  if(stopAtNonOption)    {    stopAtNonOption    =    null;    tokens.add(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
86	[BUG]  [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(stopAtNonOption,  value);  tokens.add( "-- ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  TokenBuffer  tokens  =  new  TokenBuffer(stopAtNonOption,  value);  tokens.add( "-- ");  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	TokenBuffer  tokens  =  new  TokenBuffer(stopAtNonOption,  value);  tokens.add( "-- ");	  if(stopAtNonOption)    {    stopAtNonOption    =    null;    tokens.add(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
87	[BUG]  [BUGGY]  tokens.add('-').append(value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add('-').append(value);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add('-').append(value);	  tokens.add('-'    +    value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
88	[BUG]  [BUGGY]  tokens.add( "-- "  +  value,  stopAtNonOption));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add( "-- "  +  value,  stopAtNonOption));  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "-- "  +  value,  stopAtNonOption));	  tokens.add(   "--   "    +    value,    stopAtNonOption);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
89	[BUG]  [BUGGY]  tokens.add( "-- ");  }  else  if(!stopAtNonOption)  {  options.add( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add( "-- ");  }  else  if(!stopAtNonOption)  {  options.add( "-- ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "-- ");  }  else  if(!stopAtNonOption)  {  options.add( "-- ");  }	  tokens.add(   "--   ");    }    else    {    options.add(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
90	[BUG]  [BUGGY]  tokens.add( "  stopAtNonOption,-- ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add( "  stopAtNonOption,-- ");  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "  stopAtNonOption,-- ");	  tokens.add(   ",--   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
91	[BUG]  [BUGGY]  tokens.add( "-- ");  }  else  if(eatTheRest  ==  null)  {  tokens.add( "-- ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add( "-- ");  }  else  if(eatTheRest  ==  null)  {  tokens.add( "-- ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "-- ");  }  else  if(eatTheRest  ==  null)  {  tokens.add( "-- ");  }	  tokens.add(   "--   ");    }    else    {    tokens.add(   "--   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
92	[BUG]  [BUGGY]  tokens.add( "- ", " ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add( "- ", " ");  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "- ", " ");	  tokens.add(   "-   ",    value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
93	[BUG]  [BUGGY]  tokens.add('-');  stopAtNonOption  =  true;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add('-');  stopAtNonOption  =  true;  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add('-');  stopAtNonOption  =  true;	  tokens.add(value);    stopAtNonOption    =    true;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
94	[BUG]  [BUGGY]  tokens.add(getValue(),  null);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add(getValue(),  null);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add(getValue(),  null);	  tokens.add(getValue(),    value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
95	[BUG]  [BUGGY]  tokens.add(getText(),  value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add(getText(),  value);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add(getText(),  value);	  tokens.add(getValue(),    value);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
96	[BUG]  [BUGGY]  tokens.add( "-- ");  }  else  if(eatTheRest  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add( "-- ");  }  else  if(eatTheRest  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( "-- ");  }  else  if(eatTheRest  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  tokens.add(   "--   ");    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
97	[BUG]  [BUGGY]  if(stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-- ");  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  if(stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-- ");  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      tokens.add(value);  }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	if(stopAtNonOption)  {  stopAtNonOption  =  true;  tokens.add( "-- ");  }  else  {  throw  new  IllegalStateException( " ");  }	  stopAtNonOption    =    true;    tokens.add(   "--   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
98	[BUG]  [BUGGY]  tokens.add( ",-- "  +  value);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add( ",-- "  +  value);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add( ",-- "  +  value);	  tokens.add(   "--   "    +    eatTheRest);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
99	[BUG]  [BUGGY]  tokens.add(getValue()  + ",  stopAtNonOption ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add(getValue()  + ",  stopAtNonOption ");  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add(getValue()  + ",  stopAtNonOption ");	  tokens.add(getValue()    +   "-   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
100	[BUG]  [BUGGY]  tokens.add(getValue()  + ".- ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      private  void  processNonOptionToken(String  value)  {  eatTheRest  =  true;  tokens.add(     "--     ");      [BUGGY]  tokens.add(getValue()  + ".- ");  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  processNonOptionToken  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.47140452079103173	189	189	2	replace	tokens.add(getValue()  + ".- ");	  tokens.add(getValue()    +   "-   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
