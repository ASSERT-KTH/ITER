bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(stopAtNonOption  &&  options.hasOption(token))  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    ComparisonFailure  [CONTEXT]  private  void  processOptionToken(String  token,  boolean  stopAtNonOption)  {  [BUGGY]  if(stopAtNonOption  &&  options.hasOption(token))  {  [BUGGY]  {  eatTheRest  =  true;  }  tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  processOptionToken  [RETURN_TYPE]  void  String  token  boolean  stopAtNonOption  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  token  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3779644730092272	206	207	2	replace	if(stopAtNonOption  &&  options.hasOption(token))  {	if  (stopAtNonOption  &&  !options.hasOption(token))  {  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
2	[BUG]  [BUGGY]  if(stopAtNonOption  ||  options.hasOption(token))  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      ComparisonFailure  [CONTEXT]  private  void  processOptionToken(String  token,  boolean  stopAtNonOption)  {  [BUGGY]  if(stopAtNonOption  ||  options.hasOption(token))  {  [BUGGY]  {  eatTheRest  =  true;  }  tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  processOptionToken  [RETURN_TYPE]  void  String  token  boolean  stopAtNonOption  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  token  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3779644730092272	206	207	2	replace	if(stopAtNonOption  ||  options.hasOption(token))  {	if  (stopAtNonOption  &&  !options.hasOption(token))  {  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
3	[BUG]  [BUGGY]  if(stopAtNonOption  &&  options.contains(token))  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure  [CONTEXT]  private  void  processOptionToken(String  token,  boolean  stopAtNonOption)  {  [BUGGY]  if(stopAtNonOption  &&  options.contains(token))  {  [BUGGY]  {  eatTheRest  =  true;  }  tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  processOptionToken  [RETURN_TYPE]  void  String  token  boolean  stopAtNonOption  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  token  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3779644730092272	206	207	2	replace	if(stopAtNonOption  &&  options.contains(token))  {	if  (stopAtNonOption  &&  !options.hasOption(token))  {  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
4	[BUG]  [BUGGY]    [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure  [CONTEXT]  private  void  processOptionToken(String  token,  boolean  stopAtNonOption)  {  [BUGGY]    [BUGGY]  {  eatTheRest  =  true;  }  tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  processOptionToken  [RETURN_TYPE]  void  String  token  boolean  stopAtNonOption  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  token  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3779644730092272	206	207	2	replace	  	if  (stopAtNonOption  &&  !options.hasOption(token))  {  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
5	[BUG]  [BUGGY]    tokens.add(token);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    ComparisonFailure  [CONTEXT]  private  void  processOptionToken(String  token,  boolean  stopAtNonOption)  {  [BUGGY]    tokens.add(token);  [BUGGY]  if  (stopAtNonOption  &&  !options.hasOption(token))  {  {  eatTheRest  =  true;  }  tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  processOptionToken  [RETURN_TYPE]  void  String  token  boolean  stopAtNonOption  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  token  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3779644730092272	206	207	2	replace	    tokens.add(token);		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	add
6	[BUG]  [BUGGY]    if(stopAtNonOption)  {  tokens.add(token);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      ComparisonFailure  [CONTEXT]  private  void  processOptionToken(String  token,  boolean  stopAtNonOption)  {  [BUGGY]    if(stopAtNonOption)  {  tokens.add(token);  }  [BUGGY]  if  (stopAtNonOption  &&  !options.hasOption(token))  {  {  eatTheRest  =  true;  }  tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  processOptionToken  [RETURN_TYPE]  void  String  token  boolean  stopAtNonOption  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  token  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3779644730092272	206	207	2	replace	    if(stopAtNonOption)  {  tokens.add(token);  }		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	add
7	[BUG]  [BUGGY]    if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure  [CONTEXT]  private  void  processOptionToken(String  token,  boolean  stopAtNonOption)  {  [BUGGY]    if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  if  (stopAtNonOption  &&  !options.hasOption(token))  {  {  eatTheRest  =  true;  }  tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  processOptionToken  [RETURN_TYPE]  void  String  token  boolean  stopAtNonOption  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  token  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3779644730092272	206	207	2	replace	    if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	add
8	[BUG]  [BUGGY]    if(stopAtNonOption)  {  options.put(token,  stopAtNonOption);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure  [CONTEXT]  private  void  processOptionToken(String  token,  boolean  stopAtNonOption)  {  [BUGGY]    if(stopAtNonOption)  {  options.put(token,  stopAtNonOption);  }  [BUGGY]  if  (stopAtNonOption  &&  !options.hasOption(token))  {  {  eatTheRest  =  true;  }  tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  processOptionToken  [RETURN_TYPE]  void  String  token  boolean  stopAtNonOption  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  token  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3779644730092272	206	207	2	replace	    if(stopAtNonOption)  {  options.put(token,  stopAtNonOption);  }		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	add
9	[BUG]  [BUGGY]    if(stopAtNonOption)  {  tokens.add(token);  }  else  {  options.add(token);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure  [CONTEXT]  private  void  processOptionToken(String  token,  boolean  stopAtNonOption)  {  [BUGGY]    if(stopAtNonOption)  {  tokens.add(token);  }  else  {  options.add(token);  }  [BUGGY]  if  (stopAtNonOption  &&  !options.hasOption(token))  {  {  eatTheRest  =  true;  }  tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  processOptionToken  [RETURN_TYPE]  void  String  token  boolean  stopAtNonOption  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  token  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3779644730092272	206	207	2	replace	    if(stopAtNonOption)  {  tokens.add(token);  }  else  {  options.add(token);  }		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	add
10	[BUG]  [BUGGY]    Option  options  =  options.getOption(token);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    ComparisonFailure  [CONTEXT]  private  void  processOptionToken(String  token,  boolean  stopAtNonOption)  {  [BUGGY]    Option  options  =  options.getOption(token);  [BUGGY]  if  (stopAtNonOption  &&  !options.hasOption(token))  {  {  eatTheRest  =  true;  }  tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  processOptionToken  [RETURN_TYPE]  void  String  token  boolean  stopAtNonOption  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  token  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3779644730092272	206	207	2	replace	    Option  options  =  options.getOption(token);		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	add
11	[BUG]  [BUGGY]  if(stopAtNonOption  ||  tokens.contains(token))  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    ComparisonFailure  [CONTEXT]  private  void  processOptionToken(String  token,  boolean  stopAtNonOption)  {  [BUGGY]  if(stopAtNonOption  ||  tokens.contains(token))  {  [BUGGY]  {  eatTheRest  =  true;  }  tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  processOptionToken  [RETURN_TYPE]  void  String  token  boolean  stopAtNonOption  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  token  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3779644730092272	206	207	2	replace	if(stopAtNonOption  ||  tokens.contains(token))  {	if  (stopAtNonOption  &&  !options.hasOption(token))  {  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
12	[BUG]  [BUGGY]  if(stopAtNonOption)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      ComparisonFailure  [CONTEXT]  private  void  processOptionToken(String  token,  boolean  stopAtNonOption)  {  [BUGGY]  if(stopAtNonOption)  {  [BUGGY]  {  eatTheRest  =  true;  }  tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  processOptionToken  [RETURN_TYPE]  void  String  token  boolean  stopAtNonOption  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  token  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3779644730092272	206	207	2	replace	if(stopAtNonOption)  {	if  (stopAtNonOption  &&  !options.hasOption(token))  {  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
13	[BUG]  [BUGGY]    boolean  stopAtNonOption  =  options.hasOption(token);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    ComparisonFailure  [CONTEXT]  private  void  processOptionToken(String  token,  boolean  stopAtNonOption)  {  [BUGGY]    boolean  stopAtNonOption  =  options.hasOption(token);  [BUGGY]  if  (stopAtNonOption  &&  !options.hasOption(token))  {  {  eatTheRest  =  true;  }  tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  processOptionToken  [RETURN_TYPE]  void  String  token  boolean  stopAtNonOption  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  token  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3779644730092272	206	207	2	replace	    boolean  stopAtNonOption  =  options.hasOption(token);		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	add
14	[BUG]  [BUGGY]    TokenBuffer  tokens  =  new  TokenBuffer(token.length());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      ComparisonFailure  [CONTEXT]  private  void  processOptionToken(String  token,  boolean  stopAtNonOption)  {  [BUGGY]    TokenBuffer  tokens  =  new  TokenBuffer(token.length());  [BUGGY]  if  (stopAtNonOption  &&  !options.hasOption(token))  {  {  eatTheRest  =  true;  }  tokens.add(token);  }  [CLASS]  PosixParser  [METHOD]  processOptionToken  [RETURN_TYPE]  void  String  token  boolean  stopAtNonOption  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  String  token  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3779644730092272	206	207	2	replace	    TokenBuffer  tokens  =  new  TokenBuffer(token.length());		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	add
