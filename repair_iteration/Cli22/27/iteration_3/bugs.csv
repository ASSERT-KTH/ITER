bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  PosixParser  iter  =(PositionParser)iter.getObject();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  PosixParser  iter  =(PositionParser)iter.getObject();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	PosixParser  iter  =(PositionParser)iter.getObject();	  PosixParser    iter    =(PositionParser)iter.getValue();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
2	[BUG]  [BUGGY]  if(eatTheRest  ||  iter.hasNext())  {  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(eatTheRest  ||  iter.hasNext())  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(eatTheRest  ||  iter.hasNext())  {	  if(stopAtNonOption    ||    iter.hasNext())    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
3	[BUG]  [BUGGY]  if(!eatTheRest  &&  stopAtNonOption  &&  iter.hasNext())  {  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(!eatTheRest  &&  stopAtNonOption  &&  iter.hasNext())  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(!eatTheRest  &&  stopAtNonOption  &&  iter.hasNext())  {	  if(stopAtNonOption    ||    iter.hasNext())    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
4	[BUG]  [BUGGY]  PosixParser  iter  =(PosixParser)iter.clone();  tokens.add(iter.getValue(),  iter);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  PosixParser  iter  =(PosixParser)iter.clone();  tokens.add(iter.getValue(),  iter);  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	PosixParser  iter  =(PosixParser)iter.clone();  tokens.add(iter.getValue(),  iter);	  PosixParser    iter    =(PosixParser)iter.clone();    tokens.add(iter.getValue());    	non-compiled	[CE]  <identifier>  expected	32	None	replace
5	[BUG]  [BUGGY]  Iterator  <  Option>  options  =  iter.iterator();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  options  =  iter.iterator();  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  <  Option>  options  =  iter.iterator();	  Iterator    <    Option>    options    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
6	[BUG]  [BUGGY]  Iterator  <  Option>  options  =  iter.next();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  options  =  iter.next();  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  <  Option>  options  =  iter.next();	  Iterator    <    Option>    options    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
7	[BUG]  [BUGGY]  Iterator  <  Option>  options  =  this.options.iterator();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  options  =  this.options.iterator();  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  <  Option>  options  =  this.options.iterator();	  Iterator    <    Option>    options    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
8	[BUG]  [BUGGY]  Iterator  <  Option>  options  =  iters.iterator();  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  options  =  iters.iterator();  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  <  Option>  options  =  iters.iterator();	  Iterator    <    Option>    options    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
9	[BUG]  [BUGGY]  Iterator  <  Object>  iter  =  options.values().iterator();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Object>  iter  =  options.values().iterator();  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  <  Object>  iter  =  options.values().iterator();	  Iterator    <    Object>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
10	[BUG]  [BUGGY]  Iterator  <  Object>  iter  =(options!=  null)?  options.iterator()  :  null;  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Object>  iter  =(options!=  null)?  options.iterator()  :  null;  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  <  Object>  iter  =(options!=  null)?  options.iterator()  :  null;	  Iterator    <    Object>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
11	[BUG]  [BUGGY]  Iterator  <  Object>  iter  =  this.options.iterator();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Object>  iter  =  this.options.iterator();  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  <  Object>  iter  =  this.options.iterator();	  Iterator    <    Object>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
12	[BUG]  [BUGGY]  if(!stopAtNonOption  ||  eatTheRest)  {  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(!stopAtNonOption  ||  eatTheRest)  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(!stopAtNonOption  ||  eatTheRest)  {	  if(eatTheRest    ||    stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
13	[BUG]  [BUGGY]  if(stopAtNonOption  ||  eattheRest)  {  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(stopAtNonOption  ||  eattheRest)  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(stopAtNonOption  ||  eattheRest)  {	  if(eatTheRest    ||    stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
14	[BUG]  [BUGGY]  PosixParser  iter  =(PosixParser)iter.clone();  tokens.add(iter.getName());  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  PosixParser  iter  =(PosixParser)iter.clone();  tokens.add(iter.getName());  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	PosixParser  iter  =(PosixParser)iter.clone();  tokens.add(iter.getName());	  PosixParser    iter    =(PosixParser)iter.clone();    tokens.add(iter.getKey());    	non-compiled	[CE]  <identifier>  expected	28	None	replace
15	[BUG]  [BUGGY]  PosixParser  iter  =(PositiveParser)iter.clone();  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  PosixParser  iter  =(PositiveParser)iter.clone();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	PosixParser  iter  =(PositiveParser)iter.clone();	  PosixParser    iter    =(PositionParser)iter.clone();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
16	[BUG]  [BUGGY]  PosixParseriter  iter  =(PosixParser)iter.next();  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  PosixParseriter  iter  =(PosixParser)iter.next();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	PosixParseriter  iter  =(PosixParser)iter.next();	  PosixParseriter    iter    =(PosixParser)iter.clone();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
17	[BUG]  [BUGGY]  PosixParserIterator  iter  =(PosixParser)iter.clone();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  PosixParserIterator  iter  =(PosixParser)iter.clone();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	PosixParserIterator  iter  =(PosixParser)iter.clone();	  PosixParseriter    iter    =(PosixParser)iter.clone();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
18	[BUG]  [BUGGY]  Iterator  iter  =(this.options!=  null)?  this.options.iterator()  :  null;  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  iter  =(this.options!=  null)?  this.options.iterator()  :  null;  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  iter  =(this.options!=  null)?  this.options.iterator()  :  null;	  Iterator    iter    =    this.options.iterator();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
19	[BUG]  [BUGGY]  Iterator  iter  =(this.options  ==  null)?  this.options.iterator()  :  null;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  iter  =(this.options  ==  null)?  this.options.iterator()  :  null;  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  iter  =(this.options  ==  null)?  this.options.iterator()  :  null;	  Iterator    iter    =    this.options.iterator();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
20	[BUG]  [BUGGY]  iter  =  options.iterator();  tokens.add(iter.next());  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  iter  =  options.iterator();  tokens.add(iter.next());  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	iter  =  options.iterator();  tokens.add(iter.next());	  if(stopAtNonOption)    {    Iterator    iter    =    options.iterator();    tokens.add(iter.next());    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
21	[BUG]  [BUGGY]  Iterator  options  =  options.iterator();  tokens.add(iter.next());  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  options  =  options.iterator();  tokens.add(iter.next());  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  options  =  options.iterator();  tokens.add(iter.next());	  if(stopAtNonOption)    {    Iterator    iter    =    options.iterator();    tokens.add(iter.next());    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
22	[BUG]  [BUGGY]  if(eatTheRest  &&  iter.hasNext())  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(eatTheRest  &&  iter.hasNext())  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(eatTheRest  &&  iter.hasNext())  {	  if(stopAtNonOption    &&    iter.hasNext())    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
23	[BUG]  [BUGGY]  if(stopAtNonOption  &&  iter.next())  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(stopAtNonOption  &&  iter.next())  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(stopAtNonOption  &&  iter.next())  {	  if(stopAtNonOption    ||    iter.next())    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
24	[BUG]  [BUGGY]  if(!stopAtNonOption  &&  iter.next())  {  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(!stopAtNonOption  &&  iter.next())  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(!stopAtNonOption  &&  iter.next())  {	  if(stopAtNonOption    ||    iter.next())    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
25	[BUG]  [BUGGY]  if(eatTheRest  ||  iter.next())  {  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(eatTheRest  ||  iter.next())  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(eatTheRest  ||  iter.next())  {	  if(stopAtNonOption    ||    iter.next())    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
26	[BUG]  [BUGGY]  if(!stopAtNonOption  &&  iter.hasNext())  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(!stopAtNonOption  &&  iter.hasNext())  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(!stopAtNonOption  &&  iter.hasNext())  {	  if(!stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
27	[BUG]  [BUGGY]  if(!stopTheRest)  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(!stopTheRest)  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(!stopTheRest)  {	  if(!stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
28	[BUG]  [BUGGY]  PosixParser  iter  =(PosixParser)iter.next();  tokens.add(iter.getLocalName());  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  PosixParser  iter  =(PosixParser)iter.next();  tokens.add(iter.getLocalName());  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	PosixParser  iter  =(PosixParser)iter.next();  tokens.add(iter.getLocalName());	  PosixParser    iter    =(PosixParser)iter.next();    tokens.add(iter.getName());    	non-compiled	[CE]  <identifier>  expected	21	None	replace
29	[BUG]  [BUGGY]  PosixParser  iter  =(PosixParser)iter.next();  tokens.add(iter.getSimpleName());  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  PosixParser  iter  =(PosixParser)iter.next();  tokens.add(iter.getSimpleName());  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	PosixParser  iter  =(PosixParser)iter.next();  tokens.add(iter.getSimpleName());	  PosixParser    iter    =(PosixParser)iter.next();    tokens.add(iter.getName());    	non-compiled	[CE]  <identifier>  expected	21	None	replace
30	[BUG]  [BUGGY]  Iterator  iter  =  this.tokens.iterator();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  iter  =  this.tokens.iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  iter  =  this.tokens.iterator();	  Iterator    iter    =    tokens.iterator();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
31	[BUG]  [BUGGY]  Iterator  iter  =  choices.iterator();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  iter  =  choices.iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  iter  =  choices.iterator();	  Iterator    iter    =    tokens.iterator();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
32	[BUG]  [BUGGY]  IllegalArgumentIterator  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  IllegalArgumentIterator  iter  =  options.iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	IllegalArgumentIterator  iter  =  options.iterator();	  IllegalArgumentIterator    iter    =    options.iterator();    tokens.add(iter.next());    	non-compiled	[CE]  <identifier>  expected	31	None	replace
33	[BUG]  [BUGGY]  IllegalStatementIterator  iter  =  options.iterator();  tokens.add(iter.next());  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  IllegalStatementIterator  iter  =  options.iterator();  tokens.add(iter.next());  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	IllegalStatementIterator  iter  =  options.iterator();  tokens.add(iter.next());	  IllegalArgumentIterator    iter    =    options.iterator();    tokens.add(iter.next());    	non-compiled	[CE]  <identifier>  expected	31	None	replace
34	[BUG]  [BUGGY]  if(!eatTheRest  &&  stopAtNonOption)  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(!eatTheRest  &&  stopAtNonOption)  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(!eatTheRest  &&  stopAtNonOption)  {	  if(stopAtNonOption    &&    stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
35	[BUG]  [BUGGY]  if(eatTheRest  &&  stopAtNonOption)  {  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(eatTheRest  &&  stopAtNonOption)  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(eatTheRest  &&  stopAtNonOption)  {	  if(stopAtNonOption    &&    stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
36	[BUG]  [BUGGY]  if(stopAtNonOption  &&  stopAtNonOption  ||  iter.hasNext())  {  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(stopAtNonOption  &&  stopAtNonOption  ||  iter.hasNext())  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(stopAtNonOption  &&  stopAtNonOption  ||  iter.hasNext())  {	  if(stopAtNonOption    ||    stopAtNonOption    ||    iter.hasNext())    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
37	[BUG]  [BUGGY]  if(eatTheRest  ||  stopAtNonOption  ||  iter.hasNext())  {  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(eatTheRest  ||  stopAtNonOption  ||  iter.hasNext())  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(eatTheRest  ||  stopAtNonOption  ||  iter.hasNext())  {	  if(stopAtNonOption    ||    stopAtNonOption    ||    iter.hasNext())    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
38	[BUG]  [BUGGY]  PosixParser  iter  =(PosixParser)iter.next();  tokens.add(iter.getKey(),  iter);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  PosixParser  iter  =(PosixParser)iter.next();  tokens.add(iter.getKey(),  iter);  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	PosixParser  iter  =(PosixParser)iter.next();  tokens.add(iter.getKey(),  iter);	  PosixParser    iter    =(PosixParser)iter.next();    tokens.add(iter.getValue(),    iter);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
39	[BUG]  [BUGGY]  List  <  PosixParser>  iter  =(PosixParser)iter.next();  tokens.add(iter.getValue(),  iter);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  List  <  PosixParser>  iter  =(PosixParser)iter.next();  tokens.add(iter.getValue(),  iter);  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	List  <  PosixParser>  iter  =(PosixParser)iter.next();  tokens.add(iter.getValue(),  iter);	  PosixParser    iter    =(PosixParser)iter.next();    tokens.add(iter.getValue(),    iter);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
40	[BUG]  [BUGGY]  PosixParser  iter  =(PositiveParser)iter.getValue();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  PosixParser  iter  =(PositiveParser)iter.getValue();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	PosixParser  iter  =(PositiveParser)iter.getValue();	  PosixParser    iter    =(PositiveParser)iter.next();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
41	[BUG]  [BUGGY]  posixParser  iter  =(PositiveParser)iter.next();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  posixParser  iter  =(PositiveParser)iter.next();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	posixParser  iter  =(PositiveParser)iter.next();	  PosixParser    iter    =(PositiveParser)iter.next();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
42	[BUG]  [BUGGY]  PosixParser  iter  =(PositiveParser)iter.getObject();  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  PosixParser  iter  =(PositiveParser)iter.getObject();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	PosixParser  iter  =(PositiveParser)iter.getObject();	  PosixParser    iter    =(PositiveParser)iter.next();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
43	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =(options!=  null)?  options.iterator()  :  null;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  iter  =(options!=  null)?  options.iterator()  :  null;  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  <  Option>  iter  =(options!=  null)?  options.iterator()  :  null;	  Iterator    <    Option>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
44	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  options.values().iterator();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  iter  =  options.values().iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  <  Option>  iter  =  options.values().iterator();	  Iterator    <    Option>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
45	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  this.options.iterator();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  iter  =  this.options.iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  <  Option>  iter  =  this.options.iterator();	  Iterator    <    Option>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
46	[BUG]  [BUGGY]  Iterator  <  Object>  iter  =  iter.next();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Object>  iter  =  iter.next();  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  <  Object>  iter  =  iter.next();	  Iterator    <    Object>    tokens    =    iter.next();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
47	[BUG]  [BUGGY]  Iterator  <  Object>  tokens  =  iter.iterator();  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Object>  tokens  =  iter.iterator();  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  <  Object>  tokens  =  iter.iterator();	  Iterator    <    Object>    tokens    =    iter.next();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
48	[BUG]  [BUGGY]  Iterator  <  Object>  tokens  =  iter.getValue();  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Object>  tokens  =  iter.getValue();  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  <  Object>  tokens  =  iter.getValue();	  Iterator    <    Object>    tokens    =    iter.next();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
49	[BUG]  [BUGGY]  if(options!=  null)  {  Iterator  <  Object>  iter  =  options.iterator();  tokens.add(iter.next());  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(options!=  null)  {  Iterator  <  Object>  iter  =  options.iterator();  tokens.add(iter.next());  }  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(options!=  null)  {  Iterator  <  Object>  iter  =  options.iterator();  tokens.add(iter.next());  }	  Iterator    <    Object>    iter    =    options.iterator();    tokens.add(iter.next());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
50	[BUG]  [BUGGY]  if(options!=  null)  {  Iterator  <  Object>  iter  =  options.iterator();  tokens.add(iter.next());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(options!=  null)  {  Iterator  <  Object>  iter  =  options.iterator();  tokens.add(iter.next());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(options!=  null)  {  Iterator  <  Object>  iter  =  options.iterator();  tokens.add(iter.next());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Iterator    <    Object>    iter    =    options.iterator();    tokens.add(iter.next());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
51	[BUG]  [BUGGY]  if(stopAtNonOption  ||!eatTheRest)  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(stopAtNonOption  ||!eatTheRest)  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(stopAtNonOption  ||!eatTheRest)  {	  if(!eatTheRest)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
52	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Iterator  <  Option>  iter  =  options.iterator();  tokens.add(iter.next());  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(stopAtNonOption)  {  Iterator  <  Option>  iter  =  options.iterator();  tokens.add(iter.next());  }  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(stopAtNonOption)  {  Iterator  <  Option>  iter  =  options.iterator();  tokens.add(iter.next());  }	  Iterator    <    Option>    iter    =    options.iterator();    tokens.add(iter.next());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
53	[BUG]  [BUGGY]  if(options!=  null)  {  Iterator  <  Option>  iter  =  options.iterator();  tokens.add(iter.next());  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(options!=  null)  {  Iterator  <  Option>  iter  =  options.iterator();  tokens.add(iter.next());  }  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(options!=  null)  {  Iterator  <  Option>  iter  =  options.iterator();  tokens.add(iter.next());  }	  Iterator    <    Option>    iter    =    options.iterator();    tokens.add(iter.next());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
54	[BUG]  [BUGGY]  Iterator  options  =  options.iterator();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  options  =  options.iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  options  =  options.iterator();	  if(stopAtNonOption)    {    Iterator    iter    =    options.iterator();    tokens.add(iter.next());    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
55	[BUG]  [BUGGY]  Iterator  <  Option>  options  =  iter.options();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  options  =  iter.options();  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  <  Option>  options  =  iter.options();	  Iterator    <    Option>    options    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
56	[BUG]  [BUGGY]  Iterator  <  Option>  options  =  iter.options.iterator();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  options  =  iter.options.iterator();  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  <  Option>  options  =  iter.options.iterator();	  Iterator    <    Option>    options    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
57	[BUG]  [BUGGY]  if(eatTheRest  ||  stopAtNonOption  &&  iter.next())  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(eatTheRest  ||  stopAtNonOption  &&  iter.next())  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(eatTheRest  ||  stopAtNonOption  &&  iter.next())  {	  if(stopAtNonOption    ||    iter.next())    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
58	[BUG]  [BUGGY]  Ilerator  iter  =  options.keySet().iterator();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Ilerator  iter  =  options.keySet().iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Ilerator  iter  =  options.keySet().iterator();	  Ilerator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
59	[BUG]  [BUGGY]  if(options!=  null)  {  Iterator  <  Object>  options  =  options.iterator();  tokens.add(options.next());  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(options!=  null)  {  Iterator  <  Object>  options  =  options.iterator();  tokens.add(options.next());  }  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(options!=  null)  {  Iterator  <  Object>  options  =  options.iterator();  tokens.add(options.next());  }	  Iterator    <    Object>    iter    =    options.iterator();    tokens.add(iter.next());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
60	[BUG]  [BUGGY]  if(stopAtNonOption  &&  iter!=  null)  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(stopAtNonOption  &&  iter!=  null)  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(stopAtNonOption  &&  iter!=  null)  {	  if(stopAtNonOption    &&    iter.hasNext())    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
61	[BUG]  [BUGGY]  if(!stopAtNonOption  &&  options.isEmpty())  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(!stopAtNonOption  &&  options.isEmpty())  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(!stopAtNonOption  &&  options.isEmpty())  {	  if(!stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
62	[BUG]  [BUGGY]  Iterator  <  Object>  tokens  =  iter.getIterator();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Object>  tokens  =  iter.getIterator();  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  <  Object>  tokens  =  iter.getIterator();	  Iterator    <    Object>    tokens    =    iter.next();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
63	[BUG]  [BUGGY]  Iterator  <  Object>  tokens  =  iter.getValues();  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Object>  tokens  =  iter.getValues();  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  <  Object>  tokens  =  iter.getValues();	  Iterator    <    Object>    tokens    =    iter.next();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
64	[BUG]  [BUGGY]  Iterator  <  Object>  iter  =  options.keySet().iterator();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Object>  iter  =  options.keySet().iterator();  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  <  Object>  iter  =  options.keySet().iterator();	  Iterator    <    Object>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
65	[BUG]  [BUGGY]  Ilerator  <  Object>  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Ilerator  <  Object>  iter  =  options.iterator();  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Ilerator  <  Object>  iter  =  options.iterator();	  Iterator    <    Object>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
66	[BUG]  [BUGGY]  PosixParser  iter  =(PosixParser)iter.next();  tokens.add(iter.getName(),  iter);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  PosixParser  iter  =(PosixParser)iter.next();  tokens.add(iter.getName(),  iter);  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	PosixParser  iter  =(PosixParser)iter.next();  tokens.add(iter.getName(),  iter);	  PosixParser    iter    =(PosixParser)iter.next();    tokens.add(iter.getName());    	non-compiled	[CE]  <identifier>  expected	21	None	replace
67	[BUG]  [BUGGY]  iter.clear();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  iter.clear();  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	iter.clear();	  iter.remove();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
68	[BUG]  [BUGGY]  Iterator  iter  =(this.options!=  null)?  options.iterator()  :  null;  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  iter  =(this.options!=  null)?  options.iterator()  :  null;  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  iter  =(this.options!=  null)?  options.iterator()  :  null;	  Iterator    iter    =    this.options.iterator();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
69	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Iterator  <  Option>  options  =  options.iterator();  tokens.add(options.next());  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(stopAtNonOption)  {  Iterator  <  Option>  options  =  options.iterator();  tokens.add(options.next());  }  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(stopAtNonOption)  {  Iterator  <  Option>  options  =  options.iterator();  tokens.add(options.next());  }	  Iterator    <    Option>    iter    =    options.iterator();    tokens.add(iter.next());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
70	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  options.keySet().iterator();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  iter  =  options.keySet().iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  <  Option>  iter  =  options.keySet().iterator();	  Iterator    <    Option>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
71	[BUG]  [BUGGY]  Ilerator  <  Option>  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Ilerator  <  Option>  iter  =  options.iterator();  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Ilerator  <  Option>  iter  =  options.iterator();	  Iterator    <    Option>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
72	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =(options  ==  null)?  options.iterator()  :  null;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  <  Option>  iter  =(options  ==  null)?  options.iterator()  :  null;  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  <  Option>  iter  =(options  ==  null)?  options.iterator()  :  null;	  Iterator    <    Option>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
73	[BUG]  [BUGGY]  PosixParser  iter  =(PosixParser)iter.clone();  tokens.add(iter.getKey(),  iter);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  PosixParser  iter  =(PosixParser)iter.clone();  tokens.add(iter.getKey(),  iter);  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	PosixParser  iter  =(PosixParser)iter.clone();  tokens.add(iter.getKey(),  iter);	  PosixParser    iter    =(PosixParser)iter.clone();    tokens.add(iter.getKey());    	non-compiled	[CE]  <identifier>  expected	28	None	replace
74	[BUG]  [BUGGY]  if(options!=  null)  {  IllegalArgumentIterator  iter  =  options.iterator();  tokens.add(iter.next());  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(options!=  null)  {  IllegalArgumentIterator  iter  =  options.iterator();  tokens.add(iter.next());  }  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(options!=  null)  {  IllegalArgumentIterator  iter  =  options.iterator();  tokens.add(iter.next());  }	  IllegalArgumentIterator    iter    =    options.iterator();    tokens.add(iter.next());    	non-compiled	[CE]  <identifier>  expected	31	None	replace
75	[BUG]  [BUGGY]  Iterator  iter  =(this.options!=  null)?  this.options.iterator()  :  iter;  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  iter  =(this.options!=  null)?  this.options.iterator()  :  iter;  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  iter  =(this.options!=  null)?  this.options.iterator()  :  iter;	  Iterator    iter    =    this.options.iterator();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
76	[BUG]  [BUGGY]  Iterator  iter  =(this.options  ==  null)?  this.options.iterator()  :  iter;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  Iterator  iter  =(this.options  ==  null)?  this.options.iterator()  :  iter;  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  iter  =(this.options  ==  null)?  this.options.iterator()  :  iter;	  Iterator    iter    =    this.options.iterator();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
77	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Iterator  <  Option>  iter  =  options.iterator();  tokens.add(iter.next());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(stopAtNonOption)  {  Iterator  <  Option>  iter  =  options.iterator();  tokens.add(iter.next());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(stopAtNonOption)  {  Iterator  <  Option>  iter  =  options.iterator();  tokens.add(iter.next());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Iterator    <    Option>    iter    =    options.iterator();    tokens.add(iter.next());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
78	[BUG]  [BUGGY]  if(!eatTheRest  &&  stopAtNonOption  &&  iter.next())  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(!eatTheRest  &&  stopAtNonOption  &&  iter.next())  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(!eatTheRest  &&  stopAtNonOption  &&  iter.next())  {	  if(stopAtNonOption    ||    iter.next())    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
79	[BUG]  [BUGGY]  if(stopAtNonOption  ||  getTheRest())  {  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  void  gobble(Iterator  iter)  {      [BUGGY]  if(stopAtNonOption  ||  getTheRest())  {  [BUGGY]      {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(stopAtNonOption  ||  getTheRest())  {	  if(eatTheRest    ||    stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
