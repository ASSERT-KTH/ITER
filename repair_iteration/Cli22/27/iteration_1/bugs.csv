bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(stopAtNonOption)  {  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  private  void  gobble(Iterator  iter)  {  [BUGGY]  if(stopAtNonOption)  {  [BUGGY]  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(stopAtNonOption)  {	if  (eatTheRest)  {  	non-compiled	[CE]  <identifier>  expected	53	None	replace
2	[BUG]  [BUGGY]  if(stopAtNonOption  ||  eatTheRest)  {  [CE]  <identifier>  expected  [FE]      ComparisonFailure  [CONTEXT]  private  void  gobble(Iterator  iter)  {  [BUGGY]  if(stopAtNonOption  ||  eatTheRest)  {  [BUGGY]  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(stopAtNonOption  ||  eatTheRest)  {	if  (eatTheRest)  {  	non-compiled	[CE]  <identifier>  expected	53	None	replace
3	[BUG]  [BUGGY]  if(stopAtNonOption  ||  stopAtNonOption)  {  [CE]  <identifier>  expected  [FE]        ComparisonFailure  [CONTEXT]  private  void  gobble(Iterator  iter)  {  [BUGGY]  if(stopAtNonOption  ||  stopAtNonOption)  {  [BUGGY]  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(stopAtNonOption  ||  stopAtNonOption)  {	if  (eatTheRest)  {  	non-compiled	[CE]  <identifier>  expected	53	None	replace
4	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]          ComparisonFailure  [CONTEXT]  private  void  gobble(Iterator  iter)  {  [BUGGY]    [BUGGY]  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	  	if  (eatTheRest)  {  	non-compiled	[CE]  <identifier>  expected	53	None	replace
5	[BUG]  [BUGGY]    Iterator  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  private  void  gobble(Iterator  iter)  {  [BUGGY]    Iterator  iter  =  options.iterator();  [BUGGY]  if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	    Iterator  iter  =  options.iterator();		non-compiled	[CE]  <identifier>  expected	54	None	add
6	[BUG]  [BUGGY]    PosixParser  iter  =(PosixParser)iter.next();  [CE]  <identifier>  expected  [FE]      ComparisonFailure  [CONTEXT]  private  void  gobble(Iterator  iter)  {  [BUGGY]    PosixParser  iter  =(PosixParser)iter.next();  [BUGGY]  if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	    PosixParser  iter  =(PosixParser)iter.next();		non-compiled	[CE]  <identifier>  expected	54	None	add
7	[BUG]  [BUGGY]    PosixParser  iter  =(PosixParser)iter.next();  tokens.add(iter.getValue());  [CE]  <identifier>  expected  [FE]        ComparisonFailure  [CONTEXT]  private  void  gobble(Iterator  iter)  {  [BUGGY]    PosixParser  iter  =(PosixParser)iter.next();  tokens.add(iter.getValue());  [BUGGY]  if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	    PosixParser  iter  =(PosixParser)iter.next();  tokens.add(iter.getValue());		non-compiled	[CE]  <identifier>  expected	54	None	add
8	[BUG]  [BUGGY]    PosixParser  iter  =(PosixParser)iter.next();  tokens.add(iter.getKey());  [CE]  <identifier>  expected  [FE]          ComparisonFailure  [CONTEXT]  private  void  gobble(Iterator  iter)  {  [BUGGY]    PosixParser  iter  =(PosixParser)iter.next();  tokens.add(iter.getKey());  [BUGGY]  if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	    PosixParser  iter  =(PosixParser)iter.next();  tokens.add(iter.getKey());		non-compiled	[CE]  <identifier>  expected	54	None	add
9	[BUG]  [BUGGY]    PosixParser  iter  =(PositionParser)iter.next();  [CE]  <identifier>  expected  [FE]            ComparisonFailure  [CONTEXT]  private  void  gobble(Iterator  iter)  {  [BUGGY]    PosixParser  iter  =(PositionParser)iter.next();  [BUGGY]  if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	    PosixParser  iter  =(PositionParser)iter.next();		non-compiled	[CE]  <identifier>  expected	54	None	add
10	[BUG]  [BUGGY]    PosixParser  iter  =(PosixParser)iter.clone();  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  private  void  gobble(Iterator  iter)  {  [BUGGY]    PosixParser  iter  =(PosixParser)iter.clone();  [BUGGY]  if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	    PosixParser  iter  =(PosixParser)iter.clone();		non-compiled	[CE]  <identifier>  expected	54	None	add
11	[BUG]  [BUGGY]    Iterator  iter  =  options.iterator();  tokens.add(iter.next());  [CE]  <identifier>  expected  [FE]      ComparisonFailure  [CONTEXT]  private  void  gobble(Iterator  iter)  {  [BUGGY]    Iterator  iter  =  options.iterator();  tokens.add(iter.next());  [BUGGY]  if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	    Iterator  iter  =  options.iterator();  tokens.add(iter.next());		non-compiled	[CE]  <identifier>  expected	54	None	add
12	[BUG]  [BUGGY]    PosixParser  iter  =(PosixParser)iter.getValue();  [CE]  <identifier>  expected  [FE]        ComparisonFailure  [CONTEXT]  private  void  gobble(Iterator  iter)  {  [BUGGY]    PosixParser  iter  =(PosixParser)iter.getValue();  [BUGGY]  if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	    PosixParser  iter  =(PosixParser)iter.getValue();		non-compiled	[CE]  <identifier>  expected	54	None	add
13	[BUG]  [BUGGY]    Iterator  iter  =  options.entrySet().iterator();  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  private  void  gobble(Iterator  iter)  {  [BUGGY]    Iterator  iter  =  options.entrySet().iterator();  [BUGGY]  if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	    Iterator  iter  =  options.entrySet().iterator();		non-compiled	[CE]  <identifier>  expected	54	None	add
