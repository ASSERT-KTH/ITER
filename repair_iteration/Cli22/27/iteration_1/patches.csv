bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Iterator  <  Object>  iter  =  options.iterator();  tokens.add(iter.next());  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  <  Object>  iter  =  options.iterator();  tokens.add(iter.next());  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  <  Object>  iter  =  options.iterator();  tokens.add(iter.next());	      Iterator    iter    =    options.iterator();    tokens.add(iter.next());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
2	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  options.iterator();  tokens.add(iter.next());  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  <  Option>  iter  =  options.iterator();  tokens.add(iter.next());  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  <  Option>  iter  =  options.iterator();  tokens.add(iter.next());	      Iterator    iter    =    options.iterator();    tokens.add(iter.next());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
3	[BUG]  [BUGGY]  if(stopAtNonOption  &&  stopAtNonOption)  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  if(stopAtNonOption  &&  stopAtNonOption)  {  [BUGGY]    {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(stopAtNonOption  &&  stopAtNonOption)  {	  if(stopAtNonOption    ||    stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
4	[BUG]  [BUGGY]  if(stopAtNonOption  ||  iter.hasNext())  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  if(stopAtNonOption  ||  iter.hasNext())  {  [BUGGY]    {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(stopAtNonOption  ||  iter.hasNext())  {	  if(stopAtNonOption    ||    stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
5	[BUG]  [BUGGY]  if(stopAtNonOption  ||  stopAtNonOption  ||  iter.hasNext())  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  if(stopAtNonOption  ||  stopAtNonOption  ||  iter.hasNext())  {  [BUGGY]    {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(stopAtNonOption  ||  stopAtNonOption  ||  iter.hasNext())  {	  if(stopAtNonOption    ||    stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
6	[BUG]  [BUGGY]  if(eatTheRest  ||  stopAtNonOption)  {  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  if(eatTheRest  ||  stopAtNonOption)  {  [BUGGY]    {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(eatTheRest  ||  stopAtNonOption)  {	  if(stopAtNonOption    ||    stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
7	[BUG]  [BUGGY]  posixParser  iter  =(PosixParser)iter.next();  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  posixParser  iter  =(PosixParser)iter.next();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	posixParser  iter  =(PosixParser)iter.next();	      PosixParser    iter    =(PosixParser)iter.next();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
8	[BUG]  [BUGGY]  PosixParser  iter  =(PosixParser)iter.getObject();  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  PosixParser  iter  =(PosixParser)iter.getObject();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	PosixParser  iter  =(PosixParser)iter.getObject();	      PosixParser    iter    =(PosixParser)iter.next();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
9	[BUG]  [BUGGY]  Iterator  <  Object>  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  <  Object>  iter  =  options.iterator();  [BUGGY]    {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  <  Object>  iter  =  options.iterator();	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
10	[BUG]  [BUGGY]  iter.next();  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  iter.next();  [BUGGY]    {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	iter.next();	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
11	[BUG]  [BUGGY]  Iterator  <  Object>  tokens  =  iter.next();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  <  Object>  tokens  =  iter.next();  [BUGGY]    {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  <  Object>  tokens  =  iter.next();	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
12	[BUG]  [BUGGY]  PosixParser  iter  =(PosixParser)iter.next();  tokens.add(iter.getValue(),  iter);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  PosixParser  iter  =(PosixParser)iter.next();  tokens.add(iter.getValue(),  iter);  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	PosixParser  iter  =(PosixParser)iter.next();  tokens.add(iter.getValue(),  iter);	      PosixParser    iter    =(PosixParser)iter.next();    tokens.add(iter.getValue());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
13	[BUG]  [BUGGY]  Iterator  iter  =  this.options.iterator();  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  iter  =  this.options.iterator();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  iter  =  this.options.iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
14	[BUG]  [BUGGY]  Iterator  iter  =  tokens.iterator();  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  iter  =  tokens.iterator();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  iter  =  tokens.iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
15	[BUG]  [BUGGY]  Ilerator  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Ilerator  iter  =  options.iterator();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Ilerator  iter  =  options.iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
16	[BUG]  [BUGGY]  PosixParser  iter  =(PosixParser)iter.getKey();  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  PosixParser  iter  =(PosixParser)iter.getKey();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	PosixParser  iter  =(PosixParser)iter.getKey();	      PosixParser    iter    =(PosixParser)iter.getValue();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
17	[BUG]  [BUGGY]  if(stopAtNonOption  &&  eatTheRest)  {  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  if(stopAtNonOption  &&  eatTheRest)  {  [BUGGY]    {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(stopAtNonOption  &&  eatTheRest)  {	  if(stopAtNonOption    ||    eatTheRest)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
18	[BUG]  [BUGGY]  if(stopAtNonOption  ||  iter.next())  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  if(stopAtNonOption  ||  iter.next())  {  [BUGGY]    {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(stopAtNonOption  ||  iter.next())  {	  if(stopAtNonOption    ||    eatTheRest)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
19	[BUG]  [BUGGY]  PosixParser  iter  =(PositiveParser)iter.next();  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  PosixParser  iter  =(PositiveParser)iter.next();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	PosixParser  iter  =(PositiveParser)iter.next();	      PosixParser    iter    =(PositionParser)iter.next();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
20	[BUG]  [BUGGY]  PosixParser  iter  =(PositionParser)iter.getValue();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  PosixParser  iter  =(PositionParser)iter.getValue();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	PosixParser  iter  =(PositionParser)iter.getValue();	      PosixParser    iter    =(PositionParser)iter.next();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
21	[BUG]  [BUGGY]  PosixParser  iter  =(PosixParser)iter.next();  tokens.add(iter.getName());  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  PosixParser  iter  =(PosixParser)iter.next();  tokens.add(iter.getName());  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	PosixParser  iter  =(PosixParser)iter.next();  tokens.add(iter.getName());	      PosixParser    iter    =(PosixParser)iter.next();    tokens.add(iter.getKey());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
22	[BUG]  [BUGGY]  Iterator  iter  =  options.keySet().iterator();  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  iter  =  options.keySet().iterator();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  iter  =  options.keySet().iterator();	      Iterator    iter    =    options.entrySet().iterator();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
23	[BUG]  [BUGGY]  Iterator  iter  =  options.values().iterator();  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  iter  =  options.values().iterator();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  iter  =  options.values().iterator();	      Iterator    iter    =    options.entrySet().iterator();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
24	[BUG]  [BUGGY]  PosixParser  iter  =(PositionParser)iter.clone();  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  PosixParser  iter  =(PositionParser)iter.clone();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	PosixParser  iter  =(PositionParser)iter.clone();	      PosixParser    iter    =(PosixParser)iter.clone();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
25	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  if(!stopAtNonOption)  {  [BUGGY]    {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(!stopAtNonOption)  {	  if(stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
26	[BUG]  [BUGGY]  if(stopAtNonOption  &&  iter.hasNext())  {  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  if(stopAtNonOption  &&  iter.hasNext())  {  [BUGGY]    {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(stopAtNonOption  &&  iter.hasNext())  {	  if(stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
27	[BUG]  [BUGGY]  if(!eatTheRest)  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  if(!eatTheRest)  {  [BUGGY]    {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(!eatTheRest)  {	  if(stopAtNonOption)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
28	[BUG]  [BUGGY]  PosixParser  iter  =(PosixParser)iter.clone();  tokens.add(iter.getKey());  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  PosixParser  iter  =(PosixParser)iter.clone();  tokens.add(iter.getKey());  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	PosixParser  iter  =(PosixParser)iter.clone();  tokens.add(iter.getKey());	      PosixParser    iter    =(PosixParser)iter.next();    tokens.add(iter.getKey());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
29	[BUG]  [BUGGY]  PosixParser  iter  =(PosixParser)iter.getParser();  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  PosixParser  iter  =(PosixParser)iter.getParser();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	PosixParser  iter  =(PosixParser)iter.getParser();	      PosixParser    iter    =(PosixParser)iter.clone();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
30	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Iterator  iter  =  options.iterator();  tokens.add(iter.next());  }  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  if(stopAtNonOption)  {  Iterator  iter  =  options.iterator();  tokens.add(iter.next());  }  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	if(stopAtNonOption)  {  Iterator  iter  =  options.iterator();  tokens.add(iter.next());  }	      Iterator    iter    =    options.iterator();    tokens.add(iter.next());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
31	[BUG]  [BUGGY]  IllegalArgumentIterator  iter  =  options.iterator();  tokens.add(iter.next());  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  IllegalArgumentIterator  iter  =  options.iterator();  tokens.add(iter.next());  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	IllegalArgumentIterator  iter  =  options.iterator();  tokens.add(iter.next());	      Iterator    iter    =    options.iterator();    tokens.add(iter.next());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
32	[BUG]  [BUGGY]  PosixParser  iter  =(PosixParser)iter.clone();  tokens.add(iter.getValue());  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  PosixParser  iter  =(PosixParser)iter.clone();  tokens.add(iter.getValue());  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	PosixParser  iter  =(PosixParser)iter.clone();  tokens.add(iter.getValue());	      PosixParser    iter    =(PosixParser)iter.next();    tokens.add(iter.getValue());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
33	[BUG]  [BUGGY]  Iterator  <  Option>  options  =  options.iterator();  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  <  Option>  options  =  options.iterator();  [BUGGY]    {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  <  Option>  options  =  options.iterator();	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
34	[BUG]  [BUGGY]  PosixParseriter  iter  =(PosixParser)iter.clone();  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  PosixParseriter  iter  =(PosixParser)iter.clone();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	PosixParseriter  iter  =(PosixParser)iter.clone();	      PosixParser    iter    =(PosixParser)iter.clone();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
35	[BUG]  [BUGGY]  iter.remove();  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  iter.remove();  [BUGGY]    {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	iter.remove();	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
36	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {    [BUGGY]  Iterator  <  Option>  iter  =  options.iterator();  [BUGGY]    if  (eatTheRest)  {  {  while  (iter.hasNext())  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	168	169	2	replace	Iterator  <  Option>  iter  =  options.iterator();	      Iterator    iter    =    options.iterator();    tokens.add(iter.next());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
