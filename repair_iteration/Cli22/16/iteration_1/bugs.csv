bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  tokens.add( "n ");  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]  tokens.add( "n ");  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	53	53	2	replace	tokens.add( "n ");	tokens.clear();  	non-compiled	[CE]  <identifier>  expected	31	None	replace
2	[BUG]  [BUGGY]  tokens.addAll(Arrays.asList(options));  [CE]  <identifier>  expected  [FE]      ComparisonFailure  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]  tokens.addAll(Arrays.asList(options));  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	53	53	2	replace	tokens.addAll(Arrays.asList(options));	tokens.clear();  	non-compiled	[CE]  <identifier>  expected	31	None	replace
3	[BUG]  [BUGGY]  tokens.addAll(Arrays.asList(this));  [CE]  <identifier>  expected  [FE]        ComparisonFailure  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]  tokens.addAll(Arrays.asList(this));  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	53	53	2	replace	tokens.addAll(Arrays.asList(this));	tokens.clear();  	non-compiled	[CE]  <identifier>  expected	31	None	replace
4	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]          ComparisonFailure  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]    [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	53	53	2	replace	  	tokens.clear();  	non-compiled	[CE]  <identifier>  expected	31	None	replace
5	[BUG]  [BUGGY]    if(tokens!=  null)  {  tokens  =  Lists.newArrayList();  }  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]    if(tokens!=  null)  {  tokens  =  Lists.newArrayList();  }  [BUGGY]  tokens.clear();  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	53	53	2	replace	    if(tokens!=  null)  {  tokens  =  Lists.newArrayList();  }		non-compiled	[CE]  <identifier>  expected	32	None	add
6	[BUG]  [BUGGY]    if(tokens!=  null)  {  tokens  =  new  ArrayList  <  Option>();  }  [CE]  <identifier>  expected  [FE]      ComparisonFailure  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]    if(tokens!=  null)  {  tokens  =  new  ArrayList  <  Option>();  }  [BUGGY]  tokens.clear();  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	53	53	2	replace	    if(tokens!=  null)  {  tokens  =  new  ArrayList  <  Option>();  }		non-compiled	[CE]  <identifier>  expected	32	None	add
7	[BUG]  [BUGGY]    TokenBuffer  tokens  =  new  TokenBuffer(tokens.size());  [CE]  <identifier>  expected  [FE]        ComparisonFailure  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]    TokenBuffer  tokens  =  new  TokenBuffer(tokens.size());  [BUGGY]  tokens.clear();  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	53	53	2	replace	    TokenBuffer  tokens  =  new  TokenBuffer(tokens.size());		non-compiled	[CE]  <identifier>  expected	32	None	add
8	[BUG]  [BUGGY]    TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  -  1);  [CE]  <identifier>  expected  [FE]          ComparisonFailure  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]    TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  -  1);  [BUGGY]  tokens.clear();  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	53	53	2	replace	    TokenBuffer  tokens  =  new  TokenBuffer(tokens.size()  -  1);		non-compiled	[CE]  <identifier>  expected	32	None	add
9	[BUG]  [BUGGY]    if(tokens!=  null)  {  tokens  =  new  ArrayList  <  OptionFailure>();  }  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]    if(tokens!=  null)  {  tokens  =  new  ArrayList  <  OptionFailure>();  }  [BUGGY]  tokens.clear();  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	53	53	2	replace	    if(tokens!=  null)  {  tokens  =  new  ArrayList  <  OptionFailure>();  }		non-compiled	[CE]  <identifier>  expected	32	None	add
10	[BUG]  [BUGGY]  tokens.addAll(Arrays.asList(eatTheRest));  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]  tokens.addAll(Arrays.asList(eatTheRest));  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	53	53	2	replace	tokens.addAll(Arrays.asList(eatTheRest));	tokens.clear();  	non-compiled	[CE]  <identifier>  expected	31	None	replace
11	[BUG]  [BUGGY]    eatTheRest  =  true;  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]    eatTheRest  =  true;  [BUGGY]  tokens.clear();  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	53	53	2	replace	    eatTheRest  =  true;		non-compiled	[CE]  <identifier>  expected	32	None	add
12	[BUG]  [BUGGY]    tokens.add( "-- ");  [CE]  <identifier>  expected  [FE]      ComparisonFailure  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]    tokens.add( "-- ");  [BUGGY]  tokens.clear();  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	53	53	2	replace	    tokens.add( "-- ");		non-compiled	[CE]  <identifier>  expected	32	None	add
13	[BUG]  [BUGGY]    tokens  =  new  ArrayList  <  Option>();  [CE]  <identifier>  expected  [FE]        ComparisonFailure  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]    tokens  =  new  ArrayList  <  Option>();  [BUGGY]  tokens.clear();  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	53	53	2	replace	    tokens  =  new  ArrayList  <  Option>();		non-compiled	[CE]  <identifier>  expected	32	None	add
14	[BUG]  [BUGGY]  tokens.add( "u000 ");  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  private  void  init()  {  eatTheRest  =  false;  [BUGGY]  tokens.add( "u000 ");  [BUGGY]  }  [CLASS]  PosixParser  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Options  options  List  tokens  boolean  eatTheRest  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	53	53	2	replace	tokens.add( "u000 ");	tokens.clear();  	non-compiled	[CE]  <identifier>  expected	31	None	replace
