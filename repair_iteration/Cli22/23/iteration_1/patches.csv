bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Iterator  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  Iterator  iter  =  options.iterator();  [BUGGY]    if  (token.startsWith(   "--   "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	Iterator  iter  =  options.iterator();	      Iterator    iter    =    tokens.iterator();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
2	[BUG]  [BUGGY]  Iterator  iter  =  this.tokens.iterator();  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  Iterator  iter  =  this.tokens.iterator();  [BUGGY]    if  (token.startsWith(   "--   "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	Iterator  iter  =  this.tokens.iterator();	      Iterator    iter    =    tokens.iterator();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
3	[BUG]  [BUGGY]  if(token.startsWith( "- ")||  token.endsWith( "-- "))  {  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  if(token.startsWith( "- ")||  token.endsWith( "-- "))  {  [BUGGY]    {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "- ")||  token.endsWith( "-- "))  {	  if(token.startsWith(   "--   ")&&    token.endsWith(   "--   "))    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
4	[BUG]  [BUGGY]  if(token.startsWith( "-- ")||  token.endsWith( "-- "))  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  if(token.startsWith( "-- ")||  token.endsWith( "-- "))  {  [BUGGY]    {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "-- ")||  token.endsWith( "-- "))  {	  if(token.startsWith(   "--   ")&&    token.endsWith(   "--   "))    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
5	[BUG]  [BUGGY]  if(token.startsWith( "-- ")||  token.endsWith( "--))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  if(token.startsWith( "-- ")||  token.endsWith( "--))  {  [BUGGY]    {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "-- ")||  token.endsWith( "--))  {	  if(token.startsWith(   "--   ")&&    token.endsWith(   "--   "))    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
6	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  options.values().iterator();  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  Iterator  <  String>  iter  =  options.values().iterator();  [BUGGY]    if  (token.startsWith(   "--   "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	Iterator  <  String>  iter  =  options.values().iterator();	      Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
7	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  this.tokens.iterator();  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  Iterator  <  String>  iter  =  this.tokens.iterator();  [BUGGY]    if  (token.startsWith(   "--   "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	Iterator  <  String>  iter  =  this.tokens.iterator();	      Iterator    <    String>    iter    =    tokens.iterator();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
8	[BUG]  [BUGGY]  if(token.startsWith( "- ")&&  token.startsWith( "-- "))  {  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  if(token.startsWith( "- ")&&  token.startsWith( "-- "))  {  [BUGGY]    {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "- ")&&  token.startsWith( "-- "))  {	  if(token.startsWith(   "-   ")||    token.startsWith(   "--   "))    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
9	[BUG]  [BUGGY]  if(token.startsWith( "/ ")||  token.startsWith( "/ "))  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  if(token.startsWith( "/ ")||  token.startsWith( "/ "))  {  [BUGGY]    {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "/ ")||  token.startsWith( "/ "))  {	  if(token.startsWith(   "-   ")||    token.startsWith(   "--   "))    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
10	[BUG]  [BUGGY]  if(token!=  null  &&  token.startsWith( "- "))  {  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  if(token!=  null  &&  token.startsWith( "- "))  {  [BUGGY]    {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token!=  null  &&  token.startsWith( "- "))  {	  if(token!=    null    &&    token.startsWith(   "--   "))    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
11	[BUG]  [BUGGY]  if(token  ==  null  ||  token.startsWith( "-- "))  {  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  if(token  ==  null  ||  token.startsWith( "-- "))  {  [BUGGY]    {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token  ==  null  ||  token.startsWith( "-- "))  {	  if(token!=    null    &&    token.startsWith(   "--   "))    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
12	[BUG]  [BUGGY]  Iterator  iter  =  this.arguments.iterator();  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  Iterator  iter  =  this.arguments.iterator();  [BUGGY]    if  (token.startsWith(   "--   "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	Iterator  iter  =  this.arguments.iterator();	      Iterator    iter    =    arguments.iterator();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
13	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  this.arguments.iterator();  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  Iterator  <  String>  iter  =  this.arguments.iterator();  [BUGGY]    if  (token.startsWith(   "--   "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	Iterator  <  String>  iter  =  this.arguments.iterator();	      Iterator    <    String>    iter    =    arguments.iterator();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
14	[BUG]  [BUGGY]  Iterator  <  String>  iter  =(arguments!=  null)?  arguments.iterator()  :  null;  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  Iterator  <  String>  iter  =(arguments!=  null)?  arguments.iterator()  :  null;  [BUGGY]    if  (token.startsWith(   "--   "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	Iterator  <  String>  iter  =(arguments!=  null)?  arguments.iterator()  :  null;	      Iterator    <    String>    iter    =    arguments.iterator();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
15	[BUG]  [BUGGY]  if(token.startsWith( "-- ")&&  token.startsWith( "--))  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  if(token.startsWith( "-- ")&&  token.startsWith( "--))  {  [BUGGY]    {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "-- ")&&  token.startsWith( "--))  {	  if(token.startsWith(   "--   ")||    token.startsWith(   "--))    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
16	[BUG]  [BUGGY]  if(token.startsWith( "- ")||  token.startsWith( "- "))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  if(token.startsWith( "- ")||  token.startsWith( "- "))  {  [BUGGY]    {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "- ")||  token.startsWith( "- "))  {	  if(token.startsWith(   "--   ")||    token.startsWith(   "--))    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
17	[BUG]  [BUGGY]  tokens  =(String[])iter.next();  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  tokens  =(String[])iter.next();  [BUGGY]    if  (token.startsWith(   "--   "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	tokens  =(String[])iter.next();	      token    =(String)iter.next();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
18	[BUG]  [BUGGY]  token  =(String)iter.next()  +  1;  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  token  =(String)iter.next()  +  1;  [BUGGY]    if  (token.startsWith(   "--   "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	token  =(String)iter.next()  +  1;	      token    =(String)iter.next();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
19	[BUG]  [BUGGY]  if(token.startsWith( "-- ")&&  token.startsWith( "-- "))  {  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  if(token.startsWith( "-- ")&&  token.startsWith( "-- "))  {  [BUGGY]    {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "-- ")&&  token.startsWith( "-- "))  {	  if(token.startsWith(   "--   ")||    token.startsWith(   "--   "))    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
20	[BUG]  [BUGGY]  if(token!=  null  ||  token.startsWith( "- "))  {  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  if(token!=  null  ||  token.startsWith( "- "))  {  [BUGGY]    {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token!=  null  ||  token.startsWith( "- "))  {	  if(token!=    null    ||    token.startsWith(   "--   "))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
21	[BUG]  [BUGGY]  tokens.add( "-- ");  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  tokens.add( "-- ");  [BUGGY]    if  (token.startsWith(   "--   "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	tokens.add( "-- ");	      tokens.add(token);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
22	[BUG]  [BUGGY]  tokens.add(token.substring(0,  pos));  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  tokens.add(token.substring(0,  pos));  [BUGGY]    if  (token.startsWith(   "--   "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	tokens.add(token.substring(0,  pos));	      tokens.add(token);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
23	[BUG]  [BUGGY]  tokens.add( "n ");  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  tokens.add( "n ");  [BUGGY]    if  (token.startsWith(   "--   "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	tokens.add( "n ");	      tokens.add(token);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
24	[BUG]  [BUGGY]  token  =(String)iter.next()  -  1;  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  token  =(String)iter.next()  -  1;  [BUGGY]    if  (token.startsWith(   "--   "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	token  =(String)iter.next()  -  1;	      token    =(String)iter.next();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
25	[BUG]  [BUGGY]  tokens.add(token,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  tokens.add(token,  stopAtNonOption);  [BUGGY]    if  (token.startsWith(   "--   "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	tokens.add(token,  stopAtNonOption);	      tokens.add(token);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
26	[BUG]  [BUGGY]  tokens.add( "-- "  +  token);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  tokens.add( "-- "  +  token);  [BUGGY]    if  (token.startsWith(   "--   "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	tokens.add( "-- "  +  token);	      tokens.add(token);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
27	[BUG]  [BUGGY]  if(token.startsWith( "- ")||  token.startsWith( "--))  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  if(token.startsWith( "- ")||  token.startsWith( "--))  {  [BUGGY]    {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "- ")||  token.startsWith( "--))  {	  if(token.startsWith(   "--   ")||    token.startsWith(   "--))    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
28	[BUG]  [BUGGY]  if(token.startsWith( "- ")&&  token.startsWith( "--))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  if(token.startsWith( "- ")&&  token.startsWith( "--))  {  [BUGGY]    {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "- ")&&  token.startsWith( "--))  {	  if(token.startsWith(   "--   ")||    token.startsWith(   "--))    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
29	[BUG]  [BUGGY]  iter.next();  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  iter.next();  [BUGGY]    if  (token.startsWith(   "--   "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	iter.next();	      iter.remove();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
30	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  options.keySet().iterator();  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  Iterator  <  String>  iter  =  options.keySet().iterator();  [BUGGY]    if  (token.startsWith(   "--   "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	Iterator  <  String>  iter  =  options.keySet().iterator();	      Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
31	[BUG]  [BUGGY]  if(token!=  null  ||  token.startsWith( "- ")||  token.startsWith( "-- "))  {  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  if(token!=  null  ||  token.startsWith( "- ")||  token.startsWith( "-- "))  {  [BUGGY]    {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token!=  null  ||  token.startsWith( "- ")||  token.startsWith( "-- "))  {	  if(token.startsWith(   "-   ")||    token.startsWith(   "--   "))    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
32	[BUG]  [BUGGY]  if(token  ==  null  &&  token.startsWith( "-- "))  {  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  if(token  ==  null  &&  token.startsWith( "-- "))  {  [BUGGY]    {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token  ==  null  &&  token.startsWith( "-- "))  {	  if(token!=    null    &&    token.startsWith(   "--   "))    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
33	[BUG]  [BUGGY]  if(token.startsWith( "- ")&&  token.endsWith( "- "))  {  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  if(token.startsWith( "- ")&&  token.endsWith( "- "))  {  [BUGGY]    {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "- ")&&  token.endsWith( "- "))  {	  if(token.startsWith(   "--   ")&&    token.endsWith(   "--   "))    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
34	[BUG]  [BUGGY]  if(token.startsWith( "= ")&&  token.endsWith( "- "))  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  if(token.startsWith( "= ")&&  token.endsWith( "- "))  {  [BUGGY]    {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "= ")&&  token.endsWith( "- "))  {	  if(token.startsWith(   "--   ")&&    token.endsWith(   "--   "))    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
35	[BUG]  [BUGGY]  if(token!=  null  &&  token.startsWith( ".- "))  {  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  if(token!=  null  &&  token.startsWith( ".- "))  {  [BUGGY]    {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token!=  null  &&  token.startsWith( ".- "))  {	  if(token!=    null    ||    token.startsWith(   "--   "))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
36	[BUG]  [BUGGY]  Iterator  <  String>  iter  =(arguments.iterator()).iterator();  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  Iterator  <  String>  iter  =(arguments.iterator()).iterator();  [BUGGY]    if  (token.startsWith(   "--   "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	Iterator  <  String>  iter  =(arguments.iterator()).iterator();	      Iterator    <    String>    iter    =    arguments.iterator();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
37	[BUG]  [BUGGY]  tokens.add( "- ");  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  tokens.add( "- ");  [BUGGY]    if  (token.startsWith(   "--   "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	tokens.add( "- ");	      tokens.add(token);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
38	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  this.options.iterator();  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  Iterator  <  String>  iter  =  this.options.iterator();  [BUGGY]    if  (token.startsWith(   "--   "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	Iterator  <  String>  iter  =  this.options.iterator();	      Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
39	[BUG]  [BUGGY]  tokens  =(List)iter.next();  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  tokens  =(List)iter.next();  [BUGGY]    if  (token.startsWith(   "--   "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	tokens  =(List)iter.next();	      token    =(String)iter.next();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
40	[BUG]  [BUGGY]  token  =(String)iter.getValue();  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  token  =(String)iter.getValue();  [BUGGY]    if  (token.startsWith(   "--   "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	token  =(String)iter.getValue();	      token    =(String)iter.next();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
41	[BUG]  [BUGGY]  if(token!=  null  &&  token.startsWith( "/ "))  {  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  if(token!=  null  &&  token.startsWith( "/ "))  {  [BUGGY]    {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token!=  null  &&  token.startsWith( "/ "))  {	  if(token!=    null    &&    token.startsWith(   "--   "))    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
42	[BUG]  [BUGGY]  if(token!=  null  &&  token.startsWith( "= "))  {  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  if(token!=  null  &&  token.startsWith( "= "))  {  [BUGGY]    {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token!=  null  &&  token.startsWith( "= "))  {	  if(token!=    null    &&    token.startsWith(   "--   "))    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
43	[BUG]  [BUGGY]  if(token.startsWith( "= ")||  token.startsWith( "-- "))  {  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    while  (iter.hasNext())  {  String  token  =  (String)  iter.next();      [BUGGY]  if(token.startsWith( "= ")||  token.startsWith( "-- "))  {  [BUGGY]    {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "= ")||  token.startsWith( "-- "))  {	  if(token.startsWith(   "-   ")||    token.startsWith(   "--   "))    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
