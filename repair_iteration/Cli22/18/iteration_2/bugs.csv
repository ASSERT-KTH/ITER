bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  While(stopAtNonOption)  {  init();  }  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    {    [BUGGY]  While(stopAtNonOption)  {  init();  }  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	While(stopAtNonOption)  {  init();  }	  if(stopAtNonOption)    {    init();    }    else    {    tokens.add(opt);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
2	[BUG]  [BUGGY]  While(stopAtNonOption)  {  init();  }  else  {  tokens.add(opt);  }  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  While(stopAtNonOption)  {  init();  }  else  {  tokens.add(opt);  }  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	While(stopAtNonOption)  {  init();  }  else  {  tokens.add(opt);  }	  if(stopAtNonOption)    {    init();    }    else    {    tokens.add(opt);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
3	[BUG]  [BUGGY]  While(stopAtNonOption  &&  arguments.length  >  0)  {  init();  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  While(stopAtNonOption  &&  arguments.length  >  0)  {  init();  }  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	While(stopAtNonOption  &&  arguments.length  >  0)  {  init();  }	  if(stopAtNonOption)    {    init();    }    else    {    tokens.add(opt);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
4	[BUG]  [BUGGY]  While(stopAtNonOption  &&  options.size()  >  0)  {  init();  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  While(stopAtNonOption  &&  options.size()  >  0)  {  init();  }  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	While(stopAtNonOption  &&  options.size()  >  0)  {  init();  }	  if(stopAtNonOption)    {    init();    }    else    {    tokens.add(opt);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
5	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  Arrays.asList(arguments).iterator();  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  Iterator  <  String>  iter  =  Arrays.asList(arguments).iterator();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Iterator  <  String>  iter  =  Arrays.asList(arguments).iterator();	      Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
6	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  this.options.iterator();  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  Iterator  <  String>  iter  =  this.options.iterator();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Iterator  <  String>  iter  =  this.options.iterator();	      Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
7	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  arguments.iterator();  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    {    [BUGGY]  Iterator  <  String>  iter  =  arguments.iterator();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Iterator  <  String>  iter  =  arguments.iterator();	      Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
8	[BUG]  [BUGGY]  Iterator  iter  =  arguments.iterator();  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    {    [BUGGY]  Iterator  iter  =  arguments.iterator();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Iterator  iter  =  arguments.iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
9	[BUG]  [BUGGY]  Iterator  iter  =  this.options.iterator();  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  Iterator  iter  =  this.options.iterator();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Iterator  iter  =  this.options.iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
10	[BUG]  [BUGGY]  PosixParser  <  String>  iter  =  options.get(pos);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  PosixParser  <  String>  iter  =  options.get(pos);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  String>  iter  =  options.get(pos);	      PosixParser    <    String>    iter    =    options.get(opt);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
11	[BUG]  [BUGGY]  PosixParser  <  String>  iter  =  options.get(0);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  PosixParser  <  String>  iter  =  options.get(0);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  String>  iter  =  options.get(0);	      PosixParser    <    String>    iter    =    options.get(opt);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
12	[BUG]  [BUGGY]  PosixParser  <  String>  iter  =  options.get(arguments);  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    {    [BUGGY]  PosixParser  <  String>  iter  =  options.get(arguments);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  String>  iter  =  options.get(arguments);	      PosixParser    <    String>    iter    =    options.get(opt);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
13	[BUG]  [BUGGY]  PosixParser  <  String>  iter  =  options.get(options.size()  -  1);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    {    [BUGGY]  PosixParser  <  String>  iter  =  options.get(options.size()  -  1);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  String>  iter  =  options.get(options.size()  -  1);	      PosixParser    <    String>    iter    =    options.get(opt);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
14	[BUG]  [BUGGY]  Iterator  iter  =  this.tokens.iterator();  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  Iterator  iter  =  this.tokens.iterator();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Iterator  iter  =  this.tokens.iterator();	      Iterator    iter    =    tokens.iterator();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
15	[BUG]  [BUGGY]  Iterator  iter  =  Arrays.asList(arguments).iterator();  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    {    [BUGGY]  Iterator  iter  =  Arrays.asList(arguments).iterator();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Iterator  iter  =  Arrays.asList(arguments).iterator();	      Iterator    iter    =    tokens.iterator();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
16	[BUG]  [BUGGY]  PosixParser  <  Object>  iter  =  this.options.iterator();  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    {    [BUGGY]  PosixParser  <  Object>  iter  =  this.options.iterator();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  Object>  iter  =  this.options.iterator();	      PosixParser    <    Object>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
17	[BUG]  [BUGGY]  PosixParser  <  Object>  iter  =  arguments.iterator();  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  PosixParser  <  Object>  iter  =  arguments.iterator();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  Object>  iter  =  arguments.iterator();	      PosixParser    <    Object>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
18	[BUG]  [BUGGY]  PosixParser  <  Object>  iter  =  tokens.iterator();  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  PosixParser  <  Object>  iter  =  tokens.iterator();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  Object>  iter  =  tokens.iterator();	      PosixParser    <    Object>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
19	[BUG]  [BUGGY]  PosixParser  <  String>  iter  =  this.options.iterator();  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  PosixParser  <  String>  iter  =  this.options.iterator();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  String>  iter  =  this.options.iterator();	      PosixParser    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
20	[BUG]  [BUGGY]  PosixParser  <  String>  iter  =  arguments.iterator();  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  PosixParser  <  String>  iter  =  arguments.iterator();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  String>  iter  =  arguments.iterator();	      PosixParser    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
21	[BUG]  [BUGGY]  PosixParser  <  String>  iter  =  Arrays.asList(options).iterator();  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    {    [BUGGY]  PosixParser  <  String>  iter  =  Arrays.asList(options).iterator();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  String>  iter  =  Arrays.asList(options).iterator();	      PosixParser    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
22	[BUG]  [BUGGY]  While(stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  While(stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	While(stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(stopAtNonOption)    {    init();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
23	[BUG]  [BUGGY]  While(!stopAtNonOption)  {  init();  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  While(!stopAtNonOption)  {  init();  }  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	While(!stopAtNonOption)  {  init();  }	  if(stopAtNonOption)    {    init();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
24	[BUG]  [BUGGY]  While(!stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    {    [BUGGY]  While(!stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	While(!stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(stopAtNonOption)    {    init();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
25	[BUG]  [BUGGY]  List  <  String>  tokens  =  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  <  String>  tokens  =  Lists.newArrayList();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	List  <  String>  tokens  =  Lists.newArrayList();	      List    <    String>    tokens    =    Lists.newArrayList(arguments);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
26	[BUG]  [BUGGY]  List  <  String>  tokens  =  Lists.newArrayList(arguments.length);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  <  String>  tokens  =  Lists.newArrayList(arguments.length);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	List  <  String>  tokens  =  Lists.newArrayList(arguments.length);	      List    <    String>    tokens    =    Lists.newArrayList(arguments);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
27	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  Lists.newArrayList(arguments);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  ArrayList  <  String>  tokens  =  Lists.newArrayList(arguments);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	ArrayList  <  String>  tokens  =  Lists.newArrayList(arguments);	      List    <    String>    tokens    =    Lists.newArrayList(arguments);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
28	[BUG]  [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(tokens,  stopAtNonOption,  arguments);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(tokens,  stopAtNonOption,  arguments);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =  new  PosixParser(tokens,  stopAtNonOption,  arguments);	      PosixParser    <?>    parser    =    new    PosixParser(tokens,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
29	[BUG]  [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(opt,  tokens,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(opt,  tokens,  stopAtNonOption);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =  new  PosixParser(opt,  tokens,  stopAtNonOption);	      PosixParser    <?>    parser    =    new    PosixParser(tokens,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
30	[BUG]  [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(options,  tokens,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(options,  tokens,  stopAtNonOption);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =  new  PosixParser(options,  tokens,  stopAtNonOption);	      PosixParser    <?>    parser    =    new    PosixParser(tokens,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
31	[BUG]  [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(tokens,  stopAtNonOption,  options);  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    {    [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(tokens,  stopAtNonOption,  options);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =  new  PosixParser(tokens,  stopAtNonOption,  options);	      PosixParser    <?>    parser    =    new    PosixParser(tokens,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
32	[BUG]  [BUGGY]  Option  options  =  this.options.getOptions();  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option  options  =  this.options.getOptions();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  options  =  this.options.getOptions();	      Option    options    =    options.getOptions();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
33	[BUG]  [BUGGY]  Option  options  =  options.getOption( "stopAtNonOption ");  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option  options  =  options.getOption( "stopAtNonOption ");  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  options  =  options.getOption( "stopAtNonOption ");	      Option    options    =    options.getOptions();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
34	[BUG]  [BUGGY]  Option  options  =(Option)this.options.clone();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option  options  =(Option)this.options.clone();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  options  =(Option)this.options.clone();	      Option    options    =    options.getOptions();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
35	[BUG]  [BUGGY]  options.add(arguments[pos]);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  options.add(arguments[pos]);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	options.add(arguments[pos]);	  if(stopAtNonOption)    {    init();    }    else    {    tokens.add(arguments[pos]);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
36	[BUG]  [BUGGY]  Option  options  =  option.getOptions();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option  options  =  option.getOptions();  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  options  =  option.getOptions();	  if(stopAtNonOption)    {    init();    }    else    {    tokens.add(arguments[pos]);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
37	[BUG]  [BUGGY]  Option  option  =  options.getOption(option);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option  option  =  options.getOption(option);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  option  =  options.getOption(option);	  if(stopAtNonOption)    {    init();    }    else    {    tokens.add(arguments[pos]);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
38	[BUG]  [BUGGY]  Option[]  options  =  this.options.getOptions();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option[]  options  =  this.options.getOptions();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option[]  options  =  this.options.getOptions();	      Option[]    options    =    options.getOptions();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
39	[BUG]  [BUGGY]  Option[]  options  =  arguments.getOptions();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option[]  options  =  arguments.getOptions();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option[]  options  =  arguments.getOptions();	      Option[]    options    =    options.getOptions();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
40	[BUG]  [BUGGY]  Option[]  options  =  options.toArray(arguments);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option[]  options  =  options.toArray(arguments);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option[]  options  =  options.toArray(arguments);	      Option[]    options    =    options.getOptions();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
41	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser)this.options.clone();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure    [CONTEXT]    {    [BUGGY]  PosixParser  <?>  parser  =(PosixParser)this.options.clone();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser)this.options.clone();	      PosixParser    <?>    parser    =(PosixParser)options.clone();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
42	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser)arguments.clone();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure    [CONTEXT]    {    [BUGGY]  PosixParser  <?>  parser  =(PosixParser)arguments.clone();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser)arguments.clone();	      PosixParser    <?>    parser    =(PosixParser)options.clone();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
43	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser)parameters.clone();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure    [CONTEXT]    {    [BUGGY]  PosixParser  <?>  parser  =(PosixParser)parameters.clone();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser)parameters.clone();	      PosixParser    <?>    parser    =(PosixParser)options.clone();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
44	[BUG]  [BUGGY]  Option  option  =  options.getOption(pos);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option  option  =  options.getOption(pos);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  option  =  options.getOption(pos);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
45	[BUG]  [BUGGY]  Option  option  =  options.getOption(token);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option  option  =  options.getOption(token);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  option  =  options.getOption(token);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
46	[BUG]  [BUGGY]  Option  option  =  options.getOption(this.options);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option  option  =  options.getOption(this.options);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  option  =  options.getOption(this.options);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
47	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)this.options.clone();  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    {    [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)this.options.clone();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser  <?>)this.options.clone();	      PosixParser    <?>    parser    =(PosixParser    <?>)options.clone();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
48	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)arguments.clone();  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)arguments.clone();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser  <?>)arguments.clone();	      PosixParser    <?>    parser    =(PosixParser    <?>)options.clone();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
49	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)parameters.clone();  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)parameters.clone();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser  <?>)parameters.clone();	      PosixParser    <?>    parser    =(PosixParser    <?>)options.clone();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
50	[BUG]  [BUGGY]  While(stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  While(stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	While(stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stopAtNonOption)    {    init();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
51	[BUG]  [BUGGY]  While(!stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  While(!stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	While(!stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(stopAtNonOption)    {    init();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
52	[BUG]  [BUGGY]  Injectables.checkNotNull(arguments,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    {    [BUGGY]  Injectables.checkNotNull(arguments,  stopAtNonOption);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Injectables.checkNotNull(arguments,  stopAtNonOption);	  if(stopAtNonOption)    {    init();    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
53	[BUG]  [BUGGY]  Injectables.checkNotNull(arguments);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  Injectables.checkNotNull(arguments);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Injectables.checkNotNull(arguments);	  if(stopAtNonOption)    {    init();    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
54	[BUG]  [BUGGY]  Injectables.checkState(stopAtNonOption);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  Injectables.checkState(stopAtNonOption);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Injectables.checkState(stopAtNonOption);	  if(stopAtNonOption)    {    init();    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
55	[BUG]  [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(tokens,  stopAtNonOption,  argument);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(tokens,  stopAtNonOption,  argument);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =  new  PosixParser(tokens,  stopAtNonOption,  argument);	      PosixParser    <?>    parser    =    new    PosixParser(tokens,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
56	[BUG]  [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(tokens,  stopAtNonOption,  option);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(tokens,  stopAtNonOption,  option);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =  new  PosixParser(tokens,  stopAtNonOption,  option);	      PosixParser    <?>    parser    =    new    PosixParser(tokens,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
57	[BUG]  [BUGGY]  Injectables.checkArgument(arguments.length  ==  0);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  Injectables.checkArgument(arguments.length  ==  0);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Injectables.checkArgument(arguments.length  ==  0);	  if(stopAtNonOption)    {    init();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
58	[BUG]  [BUGGY]  Integer  options  =  getOptions();  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  Integer  options  =  getOptions();  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  options  =  getOptions();	  if(stopAtNonOption)    {    init();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
59	[BUG]  [BUGGY]  Option[]  options  =  options.toArray(new  Option[options.size()  ]);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option[]  options  =  options.toArray(new  Option[options.size()  ]);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option[]  options  =  options.toArray(new  Option[options.size()  ]);	      Option[]    options    =    options.getOptions();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
60	[BUG]  [BUGGY]  Option[]  options  =  options.cloneOptions();  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option[]  options  =  options.cloneOptions();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option[]  options  =  options.cloneOptions();	      Option[]    options    =    options.getOptions();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
61	[BUG]  [BUGGY]  Option[]  options  =  options.toArray(new  Option[options.getOptions()  ]);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option[]  options  =  options.toArray(new  Option[options.getOptions()  ]);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option[]  options  =  options.toArray(new  Option[options.getOptions()  ]);	      Option[]    options    =    options.getOptions();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
62	[BUG]  [BUGGY]  Option  option  =  options.getOption( "opt ");  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option  option  =  options.getOption( "opt ");  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  option  =  options.getOption( "opt ");	  if(stopAtNonOption)    {    init();    }    else    {    tokens.add(opt);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
63	[BUG]  [BUGGY]  options  =  options.getOptions();  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  options  =  options.getOptions();  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	options  =  options.getOptions();	  if(stopAtNonOption)    {    init();    }    else    {    tokens.add(opt);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
64	[BUG]  [BUGGY]  Option  option  =  options.getOption( "option ");  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option  option  =  options.getOption( "option ");  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  option  =  options.getOption( "option ");	  if(stopAtNonOption)    {    init();    }    else    {    tokens.add(opt);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
65	[BUG]  [BUGGY]  Injectables.checkArgument(stopAtNonOption);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  Injectables.checkArgument(stopAtNonOption);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Injectables.checkArgument(stopAtNonOption);	  if(stopAtNonOption)    {    init();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
66	[BUG]  [BUGGY]  Injectables.checkNotNull(arguments,  StopAtNonOption);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  Injectables.checkNotNull(arguments,  StopAtNonOption);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Injectables.checkNotNull(arguments,  StopAtNonOption);	  if(stopAtNonOption)    {    init();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
67	[BUG]  [BUGGY]  PosixParser  <  Object>  iter  =  options.values().iterator();  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    {    [BUGGY]  PosixParser  <  Object>  iter  =  options.values().iterator();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  Object>  iter  =  options.values().iterator();	      PosixParser    <    Object>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
68	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser)options.get(pos);  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    {    [BUGGY]  PosixParser  <?>  parser  =(PosixParser)options.get(pos);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser)options.get(pos);	      PosixParser    <?>    parser    =(PosixParser)options.clone();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
69	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser)modules.clone();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    {    [BUGGY]  PosixParser  <?>  parser  =(PosixParser)modules.clone();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser)modules.clone();	      PosixParser    <?>    parser    =(PosixParser)options.clone();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
70	[BUG]  [BUGGY]  PosixParser  <  String>  iter  =  options.values().iterator();  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  PosixParser  <  String>  iter  =  options.values().iterator();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  String>  iter  =  options.values().iterator();	      PosixParser    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
71	[BUG]  [BUGGY]  Option  option  =  options.getOption(stopAtNonOption);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option  option  =  options.getOption(stopAtNonOption);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  option  =  options.getOption(stopAtNonOption);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
72	[BUG]  [BUGGY]  Option  options  =  options.getOptions(true);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option  options  =  options.getOptions(true);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  options  =  options.getOptions(true);	      Option    options    =    options.getOptions();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
73	[BUG]  [BUGGY]  Option  options  =  options.getOptions(options);  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option  options  =  options.getOptions(options);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  options  =  options.getOptions(options);	      Option    options    =    options.getOptions();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
74	[BUG]  [BUGGY]  Iterator  iter  =  Arrays.asList(options).iterator();  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    {    [BUGGY]  Iterator  iter  =  Arrays.asList(options).iterator();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Iterator  iter  =  Arrays.asList(options).iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
75	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  Arrays.asList(options).iterator();  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  Iterator  <  String>  iter  =  Arrays.asList(options).iterator();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Iterator  <  String>  iter  =  Arrays.asList(options).iterator();	      Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
76	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)modules.clone();  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    {    [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)modules.clone();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser  <?>)modules.clone();	      PosixParser    <?>    parser    =(PosixParser    <?>)options.clone();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
77	[BUG]  [BUGGY]  List  <  String>  tokens  =  Lists.newArrayList(options);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  <  String>  tokens  =  Lists.newArrayList(options);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	List  <  String>  tokens  =  Lists.newArrayList(options);	      List    <    String>    tokens    =    Lists.newArrayList(arguments);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
78	[BUG]  [BUGGY]  List  <  String>  tokens  =  Lists.newArrayList(arguments,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  <  String>  tokens  =  Lists.newArrayList(arguments,  stopAtNonOption);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	List  <  String>  tokens  =  Lists.newArrayList(arguments,  stopAtNonOption);	      List    <    String>    tokens    =    Lists.newArrayList(arguments);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
79	[BUG]  [BUGGY]  Integer[]  arguments  =  options.get( "stopAtNonOption ");  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  Integer[]  arguments  =  options.get( "stopAtNonOption ");  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer[]  arguments  =  options.get( "stopAtNonOption ");	  if(stopAtNonOption)    {    init();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
80	[BUG]  [BUGGY]  Integer  pos  =  init();  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  Integer  pos  =  init();  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  pos  =  init();	  if(stopAtNonOption)    {    init();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
81	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser)super.clone();  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    {    [BUGGY]  PosixParser  <?>  parser  =(PosixParser)super.clone();  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser)super.clone();	      PosixParser    <?>    parser    =(PosixParser)options.clone();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
82	[BUG]  [BUGGY]  PosixParser  <  String>  iter  =  options.get(token);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  PosixParser  <  String>  iter  =  options.get(token);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  String>  iter  =  options.get(token);	      PosixParser    <    String>    iter    =    options.get(opt);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
83	[BUG]  [BUGGY]  Option  options  =  options.getOption(opt);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option  options  =  options.getOption(opt);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  options  =  options.getOption(opt);	      Option    options    =    options.getOptions();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
84	[BUG]  [BUGGY]  Option  options  =  options.getOption(options);  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option  options  =  options.getOption(options);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  options  =  options.getOption(options);	      Option    options    =    options.getOptions();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
85	[BUG]  [BUGGY]  Integer  pos  =  init(options);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    {    [BUGGY]  Integer  pos  =  init(options);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  pos  =  init(options);	  if(stopAtNonOption)    {    init();    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
86	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option  option  =  options.getOption(opt,  stopAtNonOption);  [BUGGY]    init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  option  =  options.getOption(opt,  stopAtNonOption);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
87	[BUG]  [BUGGY]  Integer  pos  =  tokens.indexOf( "- ");  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    {    [BUGGY]  Integer  pos  =  tokens.indexOf( "- ");  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  pos  =  tokens.indexOf( "- ");	  if(stopAtNonOption)    {    init();    }    else    {    tokens.add(opt);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
88	[BUG]  [BUGGY]  Integer[]  arguments  =  getOptions();  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  Integer[]  arguments  =  getOptions();  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer[]  arguments  =  getOptions();	  if(stopAtNonOption)    {    init();    }    else    {    tokens.add(opt);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
89	[BUG]  [BUGGY]  Integer  pos  =  tokens.size();  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  Integer  pos  =  tokens.size();  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  pos  =  tokens.size();	  if(stopAtNonOption)    {    init();    }    else    {    tokens.add(opt);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
90	[BUG]  [BUGGY]  Integer  pos  =  tokens.indexOf( "u ");  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  Integer  pos  =  tokens.indexOf( "u ");  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  pos  =  tokens.indexOf( "u ");	  if(stopAtNonOption)    {    init();    }    else    {    tokens.add(opt);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
91	[BUG]  [BUGGY]  Integer  i  =  options.get(arguments[pos]);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  Integer  i  =  options.get(arguments[pos]);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  i  =  options.get(arguments[pos]);	  if(stopAtNonOption)    {    init();    }    else    {    tokens.add(arguments[pos]);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
92	[BUG]  [BUGGY]  Integer[]  arguments  =  getOptions().toArray(arguments);  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    {    [BUGGY]  Integer[]  arguments  =  getOptions().toArray(arguments);  [BUGGY]    this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer[]  arguments  =  getOptions().toArray(arguments);	  if(stopAtNonOption)    {    init();    }    else    {    tokens.add(arguments[pos]);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
