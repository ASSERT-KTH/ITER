projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser<?>)options.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(tokens,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=options.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Option[]options=options.getOptions();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser)options.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96init();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96if(stopAtNonOption){init();}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96if(stopAtNonOption){init();}else{thrownewIllegalArgumentException("");}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96if(stopAtNonOption){init();}else{thrownewIllegalStateException("");}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96if(stopAtNonOption){init();}else{tokens.add(arguments[pos]);}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<Object>iter=options.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=options.getOption(opt);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=options.get(opt);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=options.getOptions();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96if(stopAtNonOption){init();}else{tokens.add(opt);}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Iteratoriter=options.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96List<String>tokens=Lists.newArrayList(arguments);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Iterator<String>iter=options.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Iteratoriter=tokens.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96While(stopAtNonOption){init();}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96While(stopAtNonOption){init();}else{tokens.add(opt);}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96While(stopAtNonOption&&arguments.length>0){init();}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96While(stopAtNonOption&&options.size()>0){init();}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Iterator<String>iter=Arrays.asList(arguments).iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Iterator<String>iter=this.options.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Iterator<String>iter=arguments.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Iteratoriter=arguments.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Iteratoriter=this.options.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=options.get(pos);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=options.get(0);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=options.get(arguments);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=options.get(options.size()-1);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Iteratoriter=this.tokens.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Iteratoriter=Arrays.asList(arguments).iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<Object>iter=this.options.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<Object>iter=arguments.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<Object>iter=tokens.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=this.options.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=arguments.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=Arrays.asList(options).iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96While(stopAtNonOption){init();}else{thrownewIllegalStateException("");}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96While(!stopAtNonOption){init();}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96While(!stopAtNonOption){init();}else{thrownewIllegalStateException("");}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96List<String>tokens=Lists.newArrayList();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96List<String>tokens=Lists.newArrayList(arguments.length);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96ArrayList<String>tokens=Lists.newArrayList(arguments);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(tokens,stopAtNonOption,arguments);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(opt,tokens,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(options,tokens,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(tokens,stopAtNonOption,options);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=this.options.getOptions();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=options.getOption("stopAtNonOption");
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=(Option)this.options.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96options.add(arguments[pos]);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=option.getOptions();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=options.getOption(option);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Option[]options=this.options.getOptions();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Option[]options=arguments.getOptions();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Option[]options=options.toArray(arguments);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser)this.options.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser)arguments.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser)parameters.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=options.getOption(pos);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=options.getOption(token);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=options.getOption(this.options);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser<?>)this.options.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser<?>)arguments.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser<?>)parameters.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96While(stopAtNonOption){init();}else{thrownewIllegalArgumentException("");}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96While(!stopAtNonOption){init();}else{thrownewIllegalArgumentException("");}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Injectables.checkNotNull(arguments,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Injectables.checkNotNull(arguments);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Injectables.checkState(stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(tokens,stopAtNonOption,argument);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(tokens,stopAtNonOption,option);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Injectables.checkArgument(arguments.length==0);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integeroptions=getOptions();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Option[]options=options.toArray(newOption[options.size()]);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Option[]options=options.cloneOptions();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Option[]options=options.toArray(newOption[options.getOptions()]);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=options.getOption("opt");
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96options=options.getOptions();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=options.getOption("option");
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Injectables.checkArgument(stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Injectables.checkNotNull(arguments,StopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<Object>iter=options.values().iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser)options.get(pos);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser)modules.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=options.values().iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=options.getOption(stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=options.getOptions(true);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=options.getOptions(options);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Iteratoriter=Arrays.asList(options).iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Iterator<String>iter=Arrays.asList(options).iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser<?>)modules.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96List<String>tokens=Lists.newArrayList(options);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96List<String>tokens=Lists.newArrayList(arguments,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integer[]arguments=options.get("stopAtNonOption");
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integerpos=init();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser)super.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=options.get(token);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=options.getOption(opt);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=options.getOption(options);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integerpos=init(options);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=options.getOption(opt,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integerpos=tokens.indexOf("-");
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integer[]arguments=getOptions();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integerpos=tokens.size();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integerpos=tokens.indexOf("u");
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integeri=options.get(arguments[pos]);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integer[]arguments=getOptions().toArray(arguments);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=options.getOption(this.stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=options.getOption(stopAtNonOption,arguments);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=options.getOption(options,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96ArrayList<String>tokens=Lists.newArrayList(options);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96List<String>tokens=Lists.newLinkedList(arguments);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser)arguments.get(0);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser)arguments.get(pos);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96While(!stopAtNonOption&&arguments.length>0){init();}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96While(!stopAtNonOption&&options.size()>0){init();}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96While(!stopAtNonOption&&options.length>0){init();}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Option[]options=this.options.getAllOptions();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Option[]options=this.options.getOptions(arguments);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Option[]options=this.options.toArray(arguments);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96While(stopAtNonOption){init();}else{tokens.add(option);}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser)this.super.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser)this.pos.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(option,stopAtNonOption,tokens);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(tokens,option,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(opt,stopAtNonOption,tokens);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=options.getOption(pos,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=options.getOption(pos+1);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96options=(Option)this.options.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=(Option)this.options.get(0);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionsoptions=(Option)this.options.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96List<String>tokens=Lists.newLinkedList();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96List<String>tokens=Lists.newArrayList(0);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96List<String>iter=Arrays.asList(arguments).iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Ilerator<String>iter=Arrays.asList(arguments).iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integerpos=tokens.indexOf("opt");
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integerpos=options.indexOf("u");
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integerpos=arguments.indexOf("u");
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Injectables.checkNotNull(options);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Arguments.checkNotNull(arguments);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=options.get(option);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96options=options.getOption("stopAtNonOption");
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=options.getOption("stopAtNonOption").toLowerCase();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=this.options.getOption(options);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=options.getOption(this.options,this.pos);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=options.getOption(this.options,pos);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=options.getOption("stopAtNonOption");
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=options.getOption("options");
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96options.add(arguments[pos],stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96options.add(arguments[0]);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96options.add(arguments[pos+1]);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=option.getOption(pos);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96String[]arguments=options.get("stopAtNonOption");
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integer[]arguments=options.get("stopAtNonOption",pos);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Iteratoriter=this.arguments.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Iterator<String>iter=this.arguments.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Iterator<String>iter=tokens.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser<?>)this.options.get(pos);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<Object>iter=this.tokens.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96options=this.options.getOptions();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96options=options.getOptions(pos);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96while(stopAtNonOption&&arguments.length>0){init();}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96While(stopAtNonOption&&arguments.size()>0){init();}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96While(stopAtNonOption&&options.size()>1){init();}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=options.get(pos+1);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=options.get(pos-1);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(arguments,stopAtNonOption,tokens);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(tokens,argument,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(argument,stopAtNonOption,tokens);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Injectables.checkArgument(arguments.length>0);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Injectables.checkArgument(arguments.length);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Injectables.checkArgument(arguments.length==1);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integerpos=init(arguments);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integerpos=init(arguments,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integerpos=init(options,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integerpos=init(this.options);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integerpos=this.stopAtNonOption();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integerpos=this.init();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integerpos=this.stopAtNonOption;
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integer[]arguments=getArguments();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96String[]arguments=getOptions();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integeri=options.get(arguments[0]);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integeri=options.get(arguments[pos]-1);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integeri=options.get(arguments[pos]+1);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integeri=options.get(arguments[pos+1]);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<Object>iter=options.keySet().iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<Object>iter=this.options.values().iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Ileratoriter=Arrays.asList(arguments).iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96iter=Arrays.asList(arguments).iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(options,stopAtNonOption,arguments);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(options,stopAtNonOption,tokens);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(tokens,opt,stopAtNonOption,arguments);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(tokens,stopAtNonOption,arguments,options);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser)this.options.get(pos);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser)options.get(0);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser)options.get(pos+1);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser)this.parameters.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser)parameters.get(pos);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(tokens,opt,options);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96List<String>tokens=Lists.newArrayList(arguments.length+1);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96List<String>tokens=Lists.newArrayList(arguments.length-1);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96List<String>tokens=Lists.newArrayList(arguments.length,arguments.length);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser<?>)arguments.toArray(newPosixParser[arguments.size()]);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser<?>)arguments.get(pos);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser<?>)arguments.get(0);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=this.arguments.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=Arrays.asList(arguments).iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=options.keySet().iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<Object>iter=this.arguments.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=(this.options!=null)?null:this.options.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Anjectables.checkNotNull(arguments,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=options.getOptions(false);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=options.getOptions(false,false);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=options.getOptions(false,true);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=options.getOptions(true,false);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser<?>)this.parameters.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser<?>)parameters.get(pos);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96if(stopAtNonOption){Injectables.checkArgument(arguments,stopAtNonOption);}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Injectables.checkArgument(stopAtNonOption,arguments);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Injectables.checkArgument(this.stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=options.getOption(opt,stopAtNonOption,arguments);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=options.getOption(opt,arguments);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Option[]options=options.toArray(newOption[options.getOptions()+1]);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Option[]options=options.toArray(newOption[options.getRawOptions()]);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=options.get(1);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Option[]options=options.toArray(this.options);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Option[]options=options.toArray(arguments,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Option[]options=arguments.toArray(options);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=this.options.getOptions(arguments);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=this.options.getOption(arguments);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Injectables.checkState(this.stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96if(stopAtNonOption){Injectables.checkState(!stopAtNonOption);}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96String[]arguments=getOptions().toArray(arguments);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integer[]arguments=getOptions().toArray(this.options);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integer[]arguments=getOptions().toArray(arguments,pos);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integerpos=arguments.size();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integerpos=options.size();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integerpos=this.tokens.size();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integerpos=tokens.size()+1;
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Iteratoriter=Arrays.asList(this.options).iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Option[]options=options.toArray(newOption[options.size()+1]);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Option[]options=options.toArray(newOption[options.size()-1]);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Option[]options=options.toArray(newOption[modules.size()]);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Option[]options=options.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=options.get(options.size());
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=options.get(options.size()+1);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser)this.modules.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser)modules.get(pos);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=options.getOptions(arguments);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=this.options.getOptions(options);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=options.getOptions(this.options);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=options.getOptions(options,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96While(stopAtNonOption&&arguments.length>0){this.options=options;}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96List<String>tokens=Lists.newArrayList(arguments,eatTheRest);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96List<String>tokens=Lists.newArrayList(arguments,stopAtNonOption,options);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96List<String>tokens=Lists.newArrayList(arguments,stopAtNonOption,opt);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96List<String>tokens=Lists.newArrayList(arguments,stopAtNonOption,pos);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96this.stopAtNonOption=stopAtNonOption;
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(options,arguments,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(options,options,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(options,tokens,stopAtNonOption,arguments);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(options,tokens,stopAtNonOption,argument);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integerpos=arguments.indexOf("-");
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integerpos=options.indexOf("-");
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integerpos=tokens.indexOf("-").intValue();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=options.getOption(options,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=options.getOption(arguments);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=options.getOption(this.options);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=this.options.getOption(options);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser<?>)modules.get(pos);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser<?>)this.modules.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=options.get(arguments.length);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=options.get(arguments,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(tokens,opt,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(option,tokens,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(pos,tokens,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(opt,arguments,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=options.getOption(option,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Option[]options=this.arguments.getOptions();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Option[]options=arguments!=null?arguments.getOptions():null;
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96while(!stopAtNonOption&&arguments.length>0){init();}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96ArrayList<String>tokens=Lists.newArrayList();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integeroptions=getOptions(pos);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integeroptions=getOptions()-1;
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integeroptions=getOptions(options);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Injectables.checkNotNull(arguments,eatTheRest);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=options.getOption(pos);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=options.getOption(token);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96options=options.getOption(pos);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=Arrays.asList(objects).iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=Arrays.asList(pos).iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96while(!stopAtNonOption){init();}else{thrownewIllegalStateException("");}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Preconditions.checkState(!stopAtNonOption){init();}else{thrownewIllegalArgumentException("");}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Preconditions.checkState(!stopAtNonOption){init();}elseif(stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Preconditions.checkState(!stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Preconditions.checkState(!stopAtNonOption){this.init();}else{thrownewIllegalArgumentException("");}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96List<String>tokens=Lists.newArrayList(arguments,stopAtNonOption,eatTheRest);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96List<String>tokens=Lists.newArrayList(options,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=this.options.getOptions(true);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=this.options.getOptions(opt);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=options.getOption(stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integerpos=initOptions();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integer[]arguments=getOptions(options);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(options,tokens,stopAtNonOption,options);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=option.getOptions(pos);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=option.cloneOptions();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser<?>)this.options.get();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser)super.parameters.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=options.get(options.size()-2);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96While(stopAtNonOption){init();}elseif(stopAtNonOption){thrownewIllegalStateException("");}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96While(stopAtNonOption){init();}elseif(!stopAtNonOption){thrownewIllegalStateException("");}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=options.getOption(this.options,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Injectables.checkArgument(arguments.length!=0);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=Arrays.asList(opt).iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=Arrays.asList(apply).iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integer[]arguments=getOptions().toArray(arguments,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionsoptions=options.getOption("stopAtNonOption");
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96While(stopAtNonOption){init();}else{tokens.add(arguments[pos]);}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Injectables.checkNotNull(options,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integer[]arguments=options.get("stopAtNonOption",stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integer[]arguments=options.get("stopAtNonOption").toLowerCase();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser)this.arguments.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96While(stopAtNonOption){init();}elseif(stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96While(stopAtNonOption){init();}elseif(!stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Preconditions.checkState(stopAtNonOption){init();}else{thrownewIllegalArgumentException("");}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=options.getOption(options);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96While(stopAtNonOption&&arguments.length>1){init();}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integeri=options.get(arguments[pos],stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser<?>)modules.toArray(newPosixParser[modules.size()]);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Injectables.checkArgument(stopAtNonOption,tokens);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96if(stopAtNonOption){Iterator<String>iter=Arrays.asList(arguments).iterator();}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=options.getValues().iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=options.getOption("opt",null);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=options.getOption("opt").toLowerCase();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Injectables.checkNotNull(options,StopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96if(stopAtNonOption){Iteratoriter=Arrays.asList(options).iterator();}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser)this.options.get(0);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser)params.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=options.getOptions(opt);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>super=(PosixParser)super.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<Object>parser=(PosixParser)super.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96if(stopAtNonOption){Iterator<String>iter=Arrays.asList(options).iterator();}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionsoptions=options.getOptions();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Iteratoriter=Arrays.asList(opt).iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integerpos=tokens.indexOf("-"+opt);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<Object>iter=(this.options!=null)?this.options.iterator():null;
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionsoptions=options.get(arguments[pos]);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integerpos=tokens.indexOf("null");
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integerpos=tokens.indexOf("options");
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Iteratoriter=Arrays.asList(this.tokens).iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=options.getOptions(true,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=options.getOptions(false,null);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<Object>iter=options.values().iterator(0);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integerpos=tokens.size()-1;
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=tokens.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96ArrayList<String>tokens=Lists.newArrayList(arguments,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Option[]options=this.options.cloneOptions();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Preconditions.checkState(!stopAtNonOption){init();}else{thrownewIllegalStateException("");}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Preconditions.checkState(!stopAtNonOption){thrownewIllegalStateException("");}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=options.get(arguments-1);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96while(stopAtNonOption){init();}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96List<String>tokens=Lists.newArrayListWithOptions(arguments);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Option[]options=options.toArray(newOption[options.getOptions()-1]);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integerpos=initWithOptions(options);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Option[]options=arguments.toArray(newOption[arguments.size()]);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser<?>)arguments.toArray(newPosixParser<?>));
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser<?>)arguments.get(arguments.length);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96while(stopAtNonOption&&options.size()>0){init();}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser)this.params.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96if(stopAtNonOption){init();}else{thrownewIllegalArgumentException("".equals(arguments));}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96if(stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser<?>)this.arguments.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser<?>)arguments.peek();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<Object>parser=(PosixParser)this.options.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=options.all().iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser<?>)this.options.peek();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96while(!stopAtNonOption&&options.isEmpty()){init();}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96while(!stopAtNonOption&&arguments.length>0){thrownewIllegalStateException("");}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96while(!stopAtNonOption&&options.size()>0){init();}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96while(!stopAtNonOption){init();}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Option[]options=options.toArray(newOption[args.size()]);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<Object>iter=options.all().iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96while(stopAtNonOption){init();}else{tokens.add(opt);}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=options.getOption(token,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser<?>)modules.peek();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96options=(options==null)?null:options.getOptions();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integer[]arguments=getOptions().values();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96while(stopAtNonOption){init();}else{thrownewIllegalArgumentException("");}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integer[]arguments=getOptions().toArray(this);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Option[]options=this.options.toArray();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(arguments,stopAtNonOption,token);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96while(stopAtNonOption){init();}else{thrownewIllegalStateException("");}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=options.getOption(opt,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96ArrayList<String>tokens=Lists.newArrayList(arguments.length);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser)parameters.peek();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Iterator<String>iter=Arrays.asList(opt).iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Iterator<String>iter=Arrays.asList(this.options).iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=options.getOptions(this);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(tokens,options,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(opt,stopAtNonOption,option);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=options.getOption("option",null);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=options.get(arguments.size());
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser<?>)parameters.peek();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=this.options.getOption(opt);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(tokens,options);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=this.options.getOption(option);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integeroptions=getOptions().iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=options.get(optional);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integer[]arguments=options.get("stopAtNonOption").toString();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Injectables.checkArgument(stopAtNonOption,arguments.length);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Injectables.checkState(stopAtNonOption,arguments.length);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=Arrays.asList(this.options).iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Injectables.checkArgument(arguments.length==2);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(tokens,arguments,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(tokens,arguments);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integerpos=this.tokens.indexOf("-");
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Option[]options=options.toArray(newOption[options.getAllOptions()]);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=options.getOption(options,pos);
