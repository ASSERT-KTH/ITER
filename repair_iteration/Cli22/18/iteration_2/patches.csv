bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  option  =  options.getOption(this.stopAtNonOption);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(this.stopAtNonOption);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  option  =  options.getOption(this.stopAtNonOption);	  Option    option    =    options.getOption(stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
2	[BUG]  [BUGGY]  Option  option  =  options.getOption(stopAtNonOption,  arguments);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(stopAtNonOption,  arguments);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  option  =  options.getOption(stopAtNonOption,  arguments);	  Option    option    =    options.getOption(stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
3	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(options,  stopAtNonOption);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  option  =  options.getOption(options,  stopAtNonOption);	  Option    option    =    options.getOption(stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
4	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  Lists.newArrayList(options);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  Lists.newArrayList(options);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	ArrayList  <  String>  tokens  =  Lists.newArrayList(options);	  List    <    String>    tokens    =    Lists.newArrayList(options);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
5	[BUG]  [BUGGY]  List  <  String>  tokens  =  Lists.newLinkedList(arguments);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  Lists.newLinkedList(arguments);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	List  <  String>  tokens  =  Lists.newLinkedList(arguments);	  List    <    String>    tokens    =    Lists.newArrayList(options);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
6	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser)arguments.get(0);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =(PosixParser)arguments.get(0);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser)arguments.get(0);	  PosixParser    <?>    parser    =(PosixParser)arguments.clone();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
7	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser)arguments.get(pos);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =(PosixParser)arguments.get(pos);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser)arguments.get(pos);	  PosixParser    <?>    parser    =(PosixParser)arguments.clone();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
8	[BUG]  [BUGGY]  While(!stopAtNonOption  &&  arguments.length  >  0)  {  init();  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  While(!stopAtNonOption  &&  arguments.length  >  0)  {  init();  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	While(!stopAtNonOption  &&  arguments.length  >  0)  {  init();  }	  While(!stopAtNonOption)    {    init();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
9	[BUG]  [BUGGY]  While(!stopAtNonOption  &&  options.size()  >  0)  {  init();  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  While(!stopAtNonOption  &&  options.size()  >  0)  {  init();  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	While(!stopAtNonOption  &&  options.size()  >  0)  {  init();  }	  While(!stopAtNonOption)    {    init();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
10	[BUG]  [BUGGY]  While(!stopAtNonOption  &&  options.length  >  0)  {  init();  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  While(!stopAtNonOption  &&  options.length  >  0)  {  init();  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	While(!stopAtNonOption  &&  options.length  >  0)  {  init();  }	  While(!stopAtNonOption)    {    init();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
11	[BUG]  [BUGGY]  Option[]  options  =  this.options.getAllOptions();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option[]  options  =  this.options.getAllOptions();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option[]  options  =  this.options.getAllOptions();	  Option[]    options    =    this.options.getOptions();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
12	[BUG]  [BUGGY]  Option[]  options  =  this.options.getOptions(arguments);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option[]  options  =  this.options.getOptions(arguments);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option[]  options  =  this.options.getOptions(arguments);	  Option[]    options    =    this.options.getOptions();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
13	[BUG]  [BUGGY]  Option[]  options  =  this.options.toArray(arguments);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option[]  options  =  this.options.toArray(arguments);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option[]  options  =  this.options.toArray(arguments);	  Option[]    options    =    this.options.getOptions();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
14	[BUG]  [BUGGY]  While(stopAtNonOption)  {  init();  }  else  {  tokens.add(option);  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  While(stopAtNonOption)  {  init();  }  else  {  tokens.add(option);  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	While(stopAtNonOption)  {  init();  }  else  {  tokens.add(option);  }	  While(stopAtNonOption)    {    init();    }    else    {    tokens.add(opt);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
15	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser)this.super.clone();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =(PosixParser)this.super.clone();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser)this.super.clone();	  PosixParser    <?>    parser    =(PosixParser)super.clone();    	non-compiled	[CE]  <identifier>  expected	81	None	replace
16	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser)this.pos.clone();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =(PosixParser)this.pos.clone();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser)this.pos.clone();	  PosixParser    <?>    parser    =(PosixParser)super.clone();    	non-compiled	[CE]  <identifier>  expected	81	None	replace
17	[BUG]  [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(option,  stopAtNonOption,  tokens);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(option,  stopAtNonOption,  tokens);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =  new  PosixParser(option,  stopAtNonOption,  tokens);	  PosixParser    <?>    parser    =    new    PosixParser(tokens,    stopAtNonOption,    option);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
18	[BUG]  [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(tokens,  option,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(tokens,  option,  stopAtNonOption);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =  new  PosixParser(tokens,  option,  stopAtNonOption);	  PosixParser    <?>    parser    =    new    PosixParser(tokens,    stopAtNonOption,    option);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
19	[BUG]  [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(opt,  stopAtNonOption,  tokens);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(opt,  stopAtNonOption,  tokens);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =  new  PosixParser(opt,  stopAtNonOption,  tokens);	  PosixParser    <?>    parser    =    new    PosixParser(tokens,    stopAtNonOption,    option);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
20	[BUG]  [BUGGY]  Option  option  =  options.getOption(pos,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(pos,  stopAtNonOption);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  option  =  options.getOption(pos,  stopAtNonOption);	  Option    option    =    options.getOption(pos);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
21	[BUG]  [BUGGY]  Option  option  =  options.getOption(pos  +  1);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(pos  +  1);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  option  =  options.getOption(pos  +  1);	  Option    option    =    options.getOption(pos);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
22	[BUG]  [BUGGY]  options  =(Option)this.options.clone();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  options  =(Option)this.options.clone();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	options  =(Option)this.options.clone();	  Option    options    =(Option)this.options.clone();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
23	[BUG]  [BUGGY]  Option  options  =(Option)this.options.get(0);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =(Option)this.options.get(0);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  options  =(Option)this.options.get(0);	  Option    options    =(Option)this.options.clone();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
24	[BUG]  [BUGGY]  Options  options  =(Option)this.options.clone();  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      {      [BUGGY]  Options  options  =(Option)this.options.clone();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Options  options  =(Option)this.options.clone();	  Option    options    =(Option)this.options.clone();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
25	[BUG]  [BUGGY]  List  <  String>  tokens  =  Lists.newLinkedList();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  Lists.newLinkedList();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	List  <  String>  tokens  =  Lists.newLinkedList();	  List    <    String>    tokens    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
26	[BUG]  [BUGGY]  List  <  String>  tokens  =  Lists.newArrayList(0);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  Lists.newArrayList(0);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	List  <  String>  tokens  =  Lists.newArrayList(0);	  List    <    String>    tokens    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
27	[BUG]  [BUGGY]  List  <  String>  iter  =  Arrays.asList(arguments).iterator();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  iter  =  Arrays.asList(arguments).iterator();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	List  <  String>  iter  =  Arrays.asList(arguments).iterator();	  Iterator    <    String>    iter    =    Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
28	[BUG]  [BUGGY]  Ilerator  <  String>  iter  =  Arrays.asList(arguments).iterator();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Ilerator  <  String>  iter  =  Arrays.asList(arguments).iterator();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Ilerator  <  String>  iter  =  Arrays.asList(arguments).iterator();	  Iterator    <    String>    iter    =    Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
29	[BUG]  [BUGGY]  Integer  pos  =  tokens.indexOf( "opt ");  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer  pos  =  tokens.indexOf( "opt ");  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  pos  =  tokens.indexOf( "opt ");	  Integer    pos    =    tokens.indexOf(   "u   ");    	non-compiled	[CE]  <identifier>  expected	90	None	replace
30	[BUG]  [BUGGY]  Integer  pos  =  options.indexOf( "u   ");  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer  pos  =  options.indexOf( "u   ");  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  pos  =  options.indexOf( "u   ");	  Integer    pos    =    tokens.indexOf(   "u   ");    	non-compiled	[CE]  <identifier>  expected	90	None	replace
31	[BUG]  [BUGGY]  Integer  pos  =  arguments.indexOf( "u   ");  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer  pos  =  arguments.indexOf( "u   ");  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  pos  =  arguments.indexOf( "u   ");	  Integer    pos    =    tokens.indexOf(   "u   ");    	non-compiled	[CE]  <identifier>  expected	90	None	replace
32	[BUG]  [BUGGY]  Injectables.checkNotNull(options);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Injectables.checkNotNull(options);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Injectables.checkNotNull(options);	  Injectables.checkNotNull(arguments);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
33	[BUG]  [BUGGY]  Arguments.checkNotNull(arguments);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Arguments.checkNotNull(arguments);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Arguments.checkNotNull(arguments);	  Injectables.checkNotNull(arguments);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
34	[BUG]  [BUGGY]  PosixParser  <  String>  iter  =  options.get(option);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <  String>  iter  =  options.get(option);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  String>  iter  =  options.get(option);	  PosixParser    <    String>    iter    =    options.get(token);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
35	[BUG]  [BUGGY]  options  =  options.getOption( "stopAtNonOption ");  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  options  =  options.getOption( "stopAtNonOption ");  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	options  =  options.getOption( "stopAtNonOption ");	  Option    options    =    options.getOption(   "stopAtNonOption   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
36	[BUG]  [BUGGY]  Option  options  =  options.getOption( "stopAtNonOption ").toLowerCase();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOption( "stopAtNonOption ").toLowerCase();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  options  =  options.getOption( "stopAtNonOption ").toLowerCase();	  Option    options    =    options.getOption(   "stopAtNonOption   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
37	[BUG]  [BUGGY]  Option  option  =  this.options.getOption(options);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  this.options.getOption(options);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  option  =  this.options.getOption(options);	  Option    option    =    options.getOption(this.options);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
38	[BUG]  [BUGGY]  Option  option  =  options.getOption(this.options,  this.pos);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(this.options,  this.pos);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  option  =  options.getOption(this.options,  this.pos);	  Option    option    =    options.getOption(this.options);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
39	[BUG]  [BUGGY]  Option  option  =  options.getOption(this.options,  pos);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(this.options,  pos);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  option  =  options.getOption(this.options,  pos);	  Option    option    =    options.getOption(this.options);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
40	[BUG]  [BUGGY]  Option  option  =  options.getOption( "stopAtNonOption ");  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption( "stopAtNonOption ");  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  option  =  options.getOption( "stopAtNonOption ");	  Option    option    =    options.getOption(   "opt   ");    	non-compiled	[CE]  <identifier>  expected	62	None	replace
41	[BUG]  [BUGGY]  Option  option  =  options.getOption( "options ");  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption( "options ");  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  option  =  options.getOption( "options ");	  Option    option    =    options.getOption(   "opt   ");    	non-compiled	[CE]  <identifier>  expected	62	None	replace
42	[BUG]  [BUGGY]  options.add(arguments[pos],  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  options.add(arguments[pos],  stopAtNonOption);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	options.add(arguments[pos],  stopAtNonOption);	  options.add(arguments[pos]);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
43	[BUG]  [BUGGY]  options.add(arguments[0]);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  options.add(arguments[0]);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	options.add(arguments[0]);	  options.add(arguments[pos]);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
44	[BUG]  [BUGGY]  options.add(arguments[pos  +  1]);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  options.add(arguments[pos  +  1]);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	options.add(arguments[pos  +  1]);	  options.add(arguments[pos]);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
45	[BUG]  [BUGGY]  Option  options  =  option.getOption(pos);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  option.getOption(pos);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  options  =  option.getOption(pos);	  Option    options    =    option.getOptions();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
46	[BUG]  [BUGGY]  String[]  arguments  =  options.get( "stopAtNonOption ");  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  options.get( "stopAtNonOption ");  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	String[]  arguments  =  options.get( "stopAtNonOption ");	  Integer[]    arguments    =    options.get(   "stopAtNonOption   ");    	non-compiled	[CE]  <identifier>  expected	79	None	replace
47	[BUG]  [BUGGY]  Integer[]  arguments  =  options.get( "stopAtNonOption   ",  pos);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer[]  arguments  =  options.get( "stopAtNonOption   ",  pos);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer[]  arguments  =  options.get( "stopAtNonOption   ",  pos);	  Integer[]    arguments    =    options.get(   "stopAtNonOption   ");    	non-compiled	[CE]  <identifier>  expected	79	None	replace
48	[BUG]  [BUGGY]  Iterator  iter  =  this.arguments.iterator();  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  Iterator  iter  =  this.arguments.iterator();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Iterator  iter  =  this.arguments.iterator();	  Iterator    iter    =    arguments.iterator();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
49	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  this.arguments.iterator();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Iterator  <  String>  iter  =  this.arguments.iterator();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Iterator  <  String>  iter  =  this.arguments.iterator();	  Iterator    <    String>    iter    =    arguments.iterator();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
50	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  tokens.iterator();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Iterator  <  String>  iter  =  tokens.iterator();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Iterator  <  String>  iter  =  tokens.iterator();	  Iterator    <    String>    iter    =    arguments.iterator();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
51	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)this.options.get(pos);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)this.options.get(pos);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser  <?>)this.options.get(pos);	  PosixParser    <?>    parser    =(PosixParser    <?>)this.options.clone();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
52	[BUG]  [BUGGY]  PosixParser  <  Object>  iter  =  this.tokens.iterator();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <  Object>  iter  =  this.tokens.iterator();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  Object>  iter  =  this.tokens.iterator();	  PosixParser    <    Object>    iter    =    tokens.iterator();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
53	[BUG]  [BUGGY]  options  =  this.options.getOptions();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  options  =  this.options.getOptions();  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	options  =  this.options.getOptions();	  options    =    options.getOptions();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
54	[BUG]  [BUGGY]  options  =  options.getOptions(pos);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  options  =  options.getOptions(pos);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	options  =  options.getOptions(pos);	  options    =    options.getOptions();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
55	[BUG]  [BUGGY]  while(stopAtNonOption  &&  arguments.length  >  0)  {  init();  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  while(stopAtNonOption  &&  arguments.length  >  0)  {  init();  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	while(stopAtNonOption  &&  arguments.length  >  0)  {  init();  }	  While(stopAtNonOption)    {    init();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
56	[BUG]  [BUGGY]  While(stopAtNonOption  &&  arguments.size()  >  0)  {  init();  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  While(stopAtNonOption  &&  arguments.size()  >  0)  {  init();  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	While(stopAtNonOption  &&  arguments.size()  >  0)  {  init();  }	  While(stopAtNonOption    &&    options.size()    >    0)    {    init();    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
57	[BUG]  [BUGGY]  While(stopAtNonOption  &&  options.size()  >  1)  {  init();  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  While(stopAtNonOption  &&  options.size()  >  1)  {  init();  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	While(stopAtNonOption  &&  options.size()  >  1)  {  init();  }	  While(stopAtNonOption    &&    options.size()    >    0)    {    init();    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
58	[BUG]  [BUGGY]  PosixParser  <  String>  iter  =  options.get(pos  +  1);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <  String>  iter  =  options.get(pos  +  1);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  String>  iter  =  options.get(pos  +  1);	  PosixParser    <    String>    iter    =    options.get(pos);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
59	[BUG]  [BUGGY]  PosixParser  <  String>  iter  =  options.get(pos  -  1);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <  String>  iter  =  options.get(pos  -  1);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  String>  iter  =  options.get(pos  -  1);	  PosixParser    <    String>    iter    =    options.get(pos);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
60	[BUG]  [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(arguments,  stopAtNonOption,  tokens);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(arguments,  stopAtNonOption,  tokens);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =  new  PosixParser(arguments,  stopAtNonOption,  tokens);	  PosixParser    <?>    parser    =    new    PosixParser(tokens,    stopAtNonOption,    argument);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
61	[BUG]  [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(tokens,  argument,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(tokens,  argument,  stopAtNonOption);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =  new  PosixParser(tokens,  argument,  stopAtNonOption);	  PosixParser    <?>    parser    =    new    PosixParser(tokens,    stopAtNonOption,    argument);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
62	[BUG]  [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(argument,  stopAtNonOption,  tokens);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(argument,  stopAtNonOption,  tokens);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =  new  PosixParser(argument,  stopAtNonOption,  tokens);	  PosixParser    <?>    parser    =    new    PosixParser(tokens,    stopAtNonOption,    argument);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
63	[BUG]  [BUGGY]  Injectables.checkArgument(arguments.length  >  0);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Injectables.checkArgument(arguments.length  >  0);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Injectables.checkArgument(arguments.length  >  0);	  Injectables.checkArgument(arguments.length    ==    0);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
64	[BUG]  [BUGGY]  Injectables.checkArgument(arguments.length);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Injectables.checkArgument(arguments.length);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Injectables.checkArgument(arguments.length);	  Injectables.checkArgument(arguments.length    ==    0);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
65	[BUG]  [BUGGY]  Injectables.checkArgument(arguments.length  ==  1);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Injectables.checkArgument(arguments.length  ==  1);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Injectables.checkArgument(arguments.length  ==  1);	  Injectables.checkArgument(arguments.length    ==    0);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
66	[BUG]  [BUGGY]  Integer  pos  =  init(arguments);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer  pos  =  init(arguments);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  pos  =  init(arguments);	  Integer    pos    =    init(options);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
67	[BUG]  [BUGGY]  Integer  pos  =  init(arguments,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer  pos  =  init(arguments,  stopAtNonOption);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  pos  =  init(arguments,  stopAtNonOption);	  Integer    pos    =    init(options);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
68	[BUG]  [BUGGY]  Integer  pos  =  init(options,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer  pos  =  init(options,  stopAtNonOption);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  pos  =  init(options,  stopAtNonOption);	  Integer    pos    =    init(options);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
69	[BUG]  [BUGGY]  Integer  pos  =  init(this.options);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer  pos  =  init(this.options);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  pos  =  init(this.options);	  Integer    pos    =    init(options);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
70	[BUG]  [BUGGY]  Integer  pos  =  this.stopAtNonOption();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer  pos  =  this.stopAtNonOption();  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  pos  =  this.stopAtNonOption();	  Integer    pos    =    init();    	non-compiled	[CE]  <identifier>  expected	80	None	replace
71	[BUG]  [BUGGY]  Integer  pos  =  this.init();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer  pos  =  this.init();  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  pos  =  this.init();	  Integer    pos    =    init();    	non-compiled	[CE]  <identifier>  expected	80	None	replace
72	[BUG]  [BUGGY]  Integer  pos  =  this.stopAtNonOption;  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer  pos  =  this.stopAtNonOption;  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  pos  =  this.stopAtNonOption;	  Integer    pos    =    init();    	non-compiled	[CE]  <identifier>  expected	80	None	replace
73	[BUG]  [BUGGY]  Integer[]  arguments  =  getArguments();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer[]  arguments  =  getArguments();  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer[]  arguments  =  getArguments();	  Integer[]    arguments    =    getOptions();    	non-compiled	[CE]  <identifier>  expected	88	None	replace
74	[BUG]  [BUGGY]  String[]  arguments  =  getOptions();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  getOptions();  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	String[]  arguments  =  getOptions();	  Integer[]    arguments    =    getOptions();    	non-compiled	[CE]  <identifier>  expected	88	None	replace
75	[BUG]  [BUGGY]  Integer  i  =  options.get(arguments[0]);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer  i  =  options.get(arguments[0]);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  i  =  options.get(arguments[0]);	  Integer    i    =    options.get(arguments[pos]);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
76	[BUG]  [BUGGY]  Integer  i  =  options.get(arguments[pos]  -  1);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer  i  =  options.get(arguments[pos]  -  1);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  i  =  options.get(arguments[pos]  -  1);	  Integer    i    =    options.get(arguments[pos]);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
77	[BUG]  [BUGGY]  Integer  i  =  options.get(arguments[pos]  +  1);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer  i  =  options.get(arguments[pos]  +  1);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  i  =  options.get(arguments[pos]  +  1);	  Integer    i    =    options.get(arguments[pos]);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
78	[BUG]  [BUGGY]  Integer  i  =  options.get(arguments[pos  +  1]);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer  i  =  options.get(arguments[pos  +  1]);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  i  =  options.get(arguments[pos  +  1]);	  Integer    i    =    options.get(arguments[pos]);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
79	[BUG]  [BUGGY]  PosixParser  <  Object>  iter  =  options.keySet().iterator();  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <  Object>  iter  =  options.keySet().iterator();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  Object>  iter  =  options.keySet().iterator();	  PosixParser    <    Object>    iter    =    options.values().iterator();    	non-compiled	[CE]  <identifier>  expected	67	None	replace
80	[BUG]  [BUGGY]  PosixParser  <  Object>  iter  =  this.options.values().iterator();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <  Object>  iter  =  this.options.values().iterator();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  Object>  iter  =  this.options.values().iterator();	  PosixParser    <    Object>    iter    =    options.values().iterator();    	non-compiled	[CE]  <identifier>  expected	67	None	replace
81	[BUG]  [BUGGY]  Ilerator  iter  =  Arrays.asList(arguments).iterator();  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  Ilerator  iter  =  Arrays.asList(arguments).iterator();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Ilerator  iter  =  Arrays.asList(arguments).iterator();	  Iterator    iter    =    Arrays.asList(options).iterator();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
82	[BUG]  [BUGGY]  iter  =  Arrays.asList(arguments).iterator();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  iter  =  Arrays.asList(arguments).iterator();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	iter  =  Arrays.asList(arguments).iterator();	  Iterator    iter    =    Arrays.asList(options).iterator();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
83	[BUG]  [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(options,  stopAtNonOption,  arguments);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(options,  stopAtNonOption,  arguments);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =  new  PosixParser(options,  stopAtNonOption,  arguments);	  PosixParser    <?>    parser    =    new    PosixParser(tokens,    stopAtNonOption,    arguments);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
84	[BUG]  [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(options,  stopAtNonOption,  tokens);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(options,  stopAtNonOption,  tokens);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =  new  PosixParser(options,  stopAtNonOption,  tokens);	  PosixParser    <?>    parser    =    new    PosixParser(tokens,    stopAtNonOption,    arguments);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
85	[BUG]  [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(tokens,  opt,  stopAtNonOption,  arguments);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(tokens,  opt,  stopAtNonOption,  arguments);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =  new  PosixParser(tokens,  opt,  stopAtNonOption,  arguments);	  PosixParser    <?>    parser    =    new    PosixParser(tokens,    stopAtNonOption,    arguments);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
86	[BUG]  [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(tokens,  stopAtNonOption,  arguments,  options);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(tokens,  stopAtNonOption,  arguments,  options);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =  new  PosixParser(tokens,  stopAtNonOption,  arguments,  options);	  PosixParser    <?>    parser    =    new    PosixParser(tokens,    stopAtNonOption,    arguments);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
87	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser)this.options.get(pos);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =(PosixParser)this.options.get(pos);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser)this.options.get(pos);	  PosixParser    <?>    parser    =(PosixParser)options.get(pos);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
88	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser)options.get(0);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =(PosixParser)options.get(0);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser)options.get(0);	  PosixParser    <?>    parser    =(PosixParser)options.get(pos);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
89	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser)options.get(pos  +  1);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =(PosixParser)options.get(pos  +  1);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser)options.get(pos  +  1);	  PosixParser    <?>    parser    =(PosixParser)options.get(pos);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
90	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser)this.parameters.clone();  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =(PosixParser)this.parameters.clone();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser)this.parameters.clone();	  PosixParser    <?>    parser    =(PosixParser)parameters.clone();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
91	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser)parameters.get(pos);  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =(PosixParser)parameters.get(pos);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser)parameters.get(pos);	  PosixParser    <?>    parser    =(PosixParser)parameters.clone();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
92	[BUG]  [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(tokens,  opt,  options);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(tokens,  opt,  options);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =  new  PosixParser(tokens,  opt,  options);	  PosixParser    <?>    parser    =    new    PosixParser(tokens,    stopAtNonOption,    options);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
93	[BUG]  [BUGGY]  List  <  String>  tokens  =  Lists.newArrayList(arguments.length  +  1);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  Lists.newArrayList(arguments.length  +  1);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	List  <  String>  tokens  =  Lists.newArrayList(arguments.length  +  1);	  List    <    String>    tokens    =    Lists.newArrayList(arguments.length);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
94	[BUG]  [BUGGY]  List  <  String>  tokens  =  Lists.newArrayList(arguments.length  -  1);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  Lists.newArrayList(arguments.length  -  1);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	List  <  String>  tokens  =  Lists.newArrayList(arguments.length  -  1);	  List    <    String>    tokens    =    Lists.newArrayList(arguments.length);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
95	[BUG]  [BUGGY]  List  <  String>  tokens  =  Lists.newArrayList(arguments.length,  arguments.length);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  Lists.newArrayList(arguments.length,  arguments.length);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	List  <  String>  tokens  =  Lists.newArrayList(arguments.length,  arguments.length);	  List    <    String>    tokens    =    Lists.newArrayList(arguments.length);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
96	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)arguments.toArray(new  PosixParser[arguments.size()  ]);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)arguments.toArray(new  PosixParser[arguments.size()  ]);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser  <?>)arguments.toArray(new  PosixParser[arguments.size()  ]);	  PosixParser    <?>    parser    =(PosixParser    <?>)arguments.clone();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
97	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)arguments.get(pos);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)arguments.get(pos);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser  <?>)arguments.get(pos);	  PosixParser    <?>    parser    =(PosixParser    <?>)arguments.clone();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
98	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)arguments.get(0);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)arguments.get(0);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser  <?>)arguments.get(0);	  PosixParser    <?>    parser    =(PosixParser    <?>)arguments.clone();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
99	[BUG]  [BUGGY]  PosixParser  <  String>  iter  =  this.arguments.iterator();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <  String>  iter  =  this.arguments.iterator();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  String>  iter  =  this.arguments.iterator();	  PosixParser    <    String>    iter    =    arguments.iterator();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
100	[BUG]  [BUGGY]  PosixParser  <  String>  iter  =  Arrays.asList(arguments).iterator();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <  String>  iter  =  Arrays.asList(arguments).iterator();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  String>  iter  =  Arrays.asList(arguments).iterator();	  PosixParser    <    String>    iter    =    arguments.iterator();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
101	[BUG]  [BUGGY]  PosixParser  <  String>  iter  =  options.keySet().iterator();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <  String>  iter  =  options.keySet().iterator();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  String>  iter  =  options.keySet().iterator();	  PosixParser    <    String>    iter    =    options.values().iterator();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
102	[BUG]  [BUGGY]  PosixParser  <  Object>  iter  =  this.arguments.iterator();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <  Object>  iter  =  this.arguments.iterator();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  Object>  iter  =  this.arguments.iterator();	  PosixParser    <    Object>    iter    =    arguments.iterator();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
103	[BUG]  [BUGGY]  PosixParser  <  String>  iter  =(this.options!=  null)?  null  :  this.options.iterator();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <  String>  iter  =(this.options!=  null)?  null  :  this.options.iterator();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  String>  iter  =(this.options!=  null)?  null  :  this.options.iterator();	  PosixParser    <    String>    iter    =    this.options.iterator();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
104	[BUG]  [BUGGY]  Anjectables.checkNotNull(arguments,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Anjectables.checkNotNull(arguments,  stopAtNonOption);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Anjectables.checkNotNull(arguments,  stopAtNonOption);	  Injectables.checkNotNull(arguments,    StopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
105	[BUG]  [BUGGY]  Option  options  =  options.getOptions(false);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOptions(false);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  options  =  options.getOptions(false);	  Option    options    =    options.getOptions(true);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
106	[BUG]  [BUGGY]  Option  options  =  options.getOptions(false,  false);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOptions(false,  false);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  options  =  options.getOptions(false,  false);	  Option    options    =    options.getOptions(true);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
107	[BUG]  [BUGGY]  Option  options  =  options.getOptions(false,  true);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOptions(false,  true);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  options  =  options.getOptions(false,  true);	  Option    options    =    options.getOptions(true);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
108	[BUG]  [BUGGY]  Option  options  =  options.getOptions(true,  false);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOptions(true,  false);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  options  =  options.getOptions(true,  false);	  Option    options    =    options.getOptions(true);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
109	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)this.parameters.clone();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)this.parameters.clone();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser  <?>)this.parameters.clone();	  PosixParser    <?>    parser    =(PosixParser    <?>)parameters.clone();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
110	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)parameters.get(pos);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)parameters.get(pos);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser  <?>)parameters.get(pos);	  PosixParser    <?>    parser    =(PosixParser    <?>)parameters.clone();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
111	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Injectables.checkArgument(arguments,  stopAtNonOption);  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(stopAtNonOption)  {  Injectables.checkArgument(arguments,  stopAtNonOption);  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	if(stopAtNonOption)  {  Injectables.checkArgument(arguments,  stopAtNonOption);  }	  Injectables.checkArgument(stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
112	[BUG]  [BUGGY]  Injectables.checkArgument(stopAtNonOption,  arguments);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Injectables.checkArgument(stopAtNonOption,  arguments);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Injectables.checkArgument(stopAtNonOption,  arguments);	  Injectables.checkArgument(stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
113	[BUG]  [BUGGY]  Injectables.checkArgument(this.stopAtNonOption);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Injectables.checkArgument(this.stopAtNonOption);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Injectables.checkArgument(this.stopAtNonOption);	  Injectables.checkArgument(stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
114	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  stopAtNonOption,  arguments);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(opt,  stopAtNonOption,  arguments);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  option  =  options.getOption(opt,  stopAtNonOption,  arguments);	  Option    option    =    options.getOption(opt,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
115	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  arguments);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(opt,  arguments);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  option  =  options.getOption(opt,  arguments);	  Option    option    =    options.getOption(opt,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
116	[BUG]  [BUGGY]  Option[]  options  =  options.toArray(new  Option[options.getOptions()  +  1]);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option[]  options  =  options.toArray(new  Option[options.getOptions()  +  1]);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option[]  options  =  options.toArray(new  Option[options.getOptions()  +  1]);	  Option[]    options    =    options.toArray(new    Option[options.getOptions()    ]);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
117	[BUG]  [BUGGY]  Option[]  options  =  options.toArray(new  Option[options.getRawOptions()  ]);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option[]  options  =  options.toArray(new  Option[options.getRawOptions()  ]);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option[]  options  =  options.toArray(new  Option[options.getRawOptions()  ]);	  Option[]    options    =    options.toArray(new    Option[options.getOptions()    ]);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
118	[BUG]  [BUGGY]  PosixParser  <  String>  iter  =  options.get(1);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <  String>  iter  =  options.get(1);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  String>  iter  =  options.get(1);	  PosixParser    <    String>    iter    =    options.get(0);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
119	[BUG]  [BUGGY]  Option[]  options  =  options.toArray(this.options);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option[]  options  =  options.toArray(this.options);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option[]  options  =  options.toArray(this.options);	  Option[]    options    =    options.toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
120	[BUG]  [BUGGY]  Option[]  options  =  options.toArray(arguments,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option[]  options  =  options.toArray(arguments,  stopAtNonOption);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option[]  options  =  options.toArray(arguments,  stopAtNonOption);	  Option[]    options    =    options.toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
121	[BUG]  [BUGGY]  Option[]  options  =  arguments.toArray(options);  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option[]  options  =  arguments.toArray(options);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option[]  options  =  arguments.toArray(options);	  Option[]    options    =    options.toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
122	[BUG]  [BUGGY]  Option  options  =  this.options.getOptions(arguments);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  this.options.getOptions(arguments);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  options  =  this.options.getOptions(arguments);	  Option    options    =    this.options.getOptions();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
123	[BUG]  [BUGGY]  Option  options  =  this.options.getOption(arguments);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  this.options.getOption(arguments);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  options  =  this.options.getOption(arguments);	  Option    options    =    this.options.getOptions();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
124	[BUG]  [BUGGY]  Injectables.checkState(this.stopAtNonOption);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Injectables.checkState(this.stopAtNonOption);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Injectables.checkState(this.stopAtNonOption);	  Injectables.checkState(stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
125	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Injectables.checkState(!stopAtNonOption);  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(stopAtNonOption)  {  Injectables.checkState(!stopAtNonOption);  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	if(stopAtNonOption)  {  Injectables.checkState(!stopAtNonOption);  }	  Injectables.checkState(stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
126	[BUG]  [BUGGY]  String[]  arguments  =  getOptions().toArray(arguments);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  String[]  arguments  =  getOptions().toArray(arguments);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	String[]  arguments  =  getOptions().toArray(arguments);	  Integer[]    arguments    =    getOptions().toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
127	[BUG]  [BUGGY]  Integer[]  arguments  =  getOptions().toArray(this.options);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer[]  arguments  =  getOptions().toArray(this.options);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer[]  arguments  =  getOptions().toArray(this.options);	  Integer[]    arguments    =    getOptions().toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
128	[BUG]  [BUGGY]  Integer[]  arguments  =  getOptions().toArray(arguments,  pos);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer[]  arguments  =  getOptions().toArray(arguments,  pos);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer[]  arguments  =  getOptions().toArray(arguments,  pos);	  Integer[]    arguments    =    getOptions().toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
129	[BUG]  [BUGGY]  Integer  pos  =  arguments.size();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer  pos  =  arguments.size();  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  pos  =  arguments.size();	  Integer    pos    =    tokens.size();    	non-compiled	[CE]  <identifier>  expected	89	None	replace
130	[BUG]  [BUGGY]  Integer  pos  =  options.size();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer  pos  =  options.size();  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  pos  =  options.size();	  Integer    pos    =    tokens.size();    	non-compiled	[CE]  <identifier>  expected	89	None	replace
131	[BUG]  [BUGGY]  Integer  pos  =  this.tokens.size();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer  pos  =  this.tokens.size();  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  pos  =  this.tokens.size();	  Integer    pos    =    tokens.size();    	non-compiled	[CE]  <identifier>  expected	89	None	replace
132	[BUG]  [BUGGY]  Integer  pos  =  tokens.size()  +  1;  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer  pos  =  tokens.size()  +  1;  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  pos  =  tokens.size()  +  1;	  Integer    pos    =    tokens.size();    	non-compiled	[CE]  <identifier>  expected	89	None	replace
133	[BUG]  [BUGGY]  Iterator  iter  =  Arrays.asList(this.options).iterator();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Iterator  iter  =  Arrays.asList(this.options).iterator();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Iterator  iter  =  Arrays.asList(this.options).iterator();	  Iterator    iter    =    Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
134	[BUG]  [BUGGY]  Option[]  options  =  options.toArray(new  Option[options.size()  +  1]);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option[]  options  =  options.toArray(new  Option[options.size()  +  1]);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option[]  options  =  options.toArray(new  Option[options.size()  +  1]);	  Option[]    options    =    options.toArray(new    Option[options.size()    ]);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
135	[BUG]  [BUGGY]  Option[]  options  =  options.toArray(new  Option[options.size()  -  1]);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option[]  options  =  options.toArray(new  Option[options.size()  -  1]);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option[]  options  =  options.toArray(new  Option[options.size()  -  1]);	  Option[]    options    =    options.toArray(new    Option[options.size()    ]);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
136	[BUG]  [BUGGY]  Option[]  options  =  options.toArray(new  Option[modules.size()  ]);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option[]  options  =  options.toArray(new  Option[modules.size()  ]);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option[]  options  =  options.toArray(new  Option[modules.size()  ]);	  Option[]    options    =    options.toArray(new    Option[options.size()    ]);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
137	[BUG]  [BUGGY]  Option[]  options  =  options.clone();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option[]  options  =  options.clone();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option[]  options  =  options.clone();	  Option[]    options    =    options.cloneOptions();    	non-compiled	[CE]  <identifier>  expected	60	None	replace
138	[BUG]  [BUGGY]  PosixParser  <  String>  iter  =  options.get(options.size());  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <  String>  iter  =  options.get(options.size());  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  String>  iter  =  options.get(options.size());	  PosixParser    <    String>    iter    =    options.get(options.size()    -    1);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
139	[BUG]  [BUGGY]  PosixParser  <  String>  iter  =  options.get(options.size()  +  1);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <  String>  iter  =  options.get(options.size()  +  1);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  String>  iter  =  options.get(options.size()  +  1);	  PosixParser    <    String>    iter    =    options.get(options.size()    -    1);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
140	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser)this.modules.clone();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =(PosixParser)this.modules.clone();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser)this.modules.clone();	  PosixParser    <?>    parser    =(PosixParser)modules.clone();    	non-compiled	[CE]  <identifier>  expected	69	None	replace
141	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser)modules.get(pos);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =(PosixParser)modules.get(pos);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser)modules.get(pos);	  PosixParser    <?>    parser    =(PosixParser)modules.clone();    	non-compiled	[CE]  <identifier>  expected	69	None	replace
142	[BUG]  [BUGGY]  Option  options  =  options.getOptions(arguments);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOptions(arguments);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  options  =  options.getOptions(arguments);	  Option    options    =    options.getOptions(options);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	73	None	replace
143	[BUG]  [BUGGY]  Option  options  =  this.options.getOptions(options);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  this.options.getOptions(options);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  options  =  this.options.getOptions(options);	  Option    options    =    options.getOptions(options);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	73	None	replace
144	[BUG]  [BUGGY]  Option  options  =  options.getOptions(this.options);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOptions(this.options);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  options  =  options.getOptions(this.options);	  Option    options    =    options.getOptions(options);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	73	None	replace
145	[BUG]  [BUGGY]  Option  options  =  options.getOptions(options,  stopAtNonOption);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOptions(options,  stopAtNonOption);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  options  =  options.getOptions(options,  stopAtNonOption);	  Option    options    =    options.getOptions(options);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	73	None	replace
146	[BUG]  [BUGGY]  While(stopAtNonOption  &&  arguments.length  >  0)  {  this.options  =  options;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  While(stopAtNonOption  &&  arguments.length  >  0)  {  this.options  =  options;  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	While(stopAtNonOption  &&  arguments.length  >  0)  {  this.options  =  options;  }	  While(stopAtNonOption    &&    arguments.length    >    0)    {    init();    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
147	[BUG]  [BUGGY]  List  <  String>  tokens  =  Lists.newArrayList(arguments,  eatTheRest);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  Lists.newArrayList(arguments,  eatTheRest);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	List  <  String>  tokens  =  Lists.newArrayList(arguments,  eatTheRest);	  List    <    String>    tokens    =    Lists.newArrayList(arguments,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
148	[BUG]  [BUGGY]  List  <  String>  tokens  =  Lists.newArrayList(arguments,  stopAtNonOption,  options);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  Lists.newArrayList(arguments,  stopAtNonOption,  options);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	List  <  String>  tokens  =  Lists.newArrayList(arguments,  stopAtNonOption,  options);	  List    <    String>    tokens    =    Lists.newArrayList(arguments,    stopAtNonOption);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	78	None	replace
149	[BUG]  [BUGGY]  List  <  String>  tokens  =  Lists.newArrayList(arguments,  stopAtNonOption,  opt);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  Lists.newArrayList(arguments,  stopAtNonOption,  opt);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	List  <  String>  tokens  =  Lists.newArrayList(arguments,  stopAtNonOption,  opt);	  List    <    String>    tokens    =    Lists.newArrayList(arguments,    stopAtNonOption);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	78	None	replace
150	[BUG]  [BUGGY]  List  <  String>  tokens  =  Lists.newArrayList(arguments,  stopAtNonOption,  pos);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  Lists.newArrayList(arguments,  stopAtNonOption,  pos);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	List  <  String>  tokens  =  Lists.newArrayList(arguments,  stopAtNonOption,  pos);	  List    <    String>    tokens    =    Lists.newArrayList(arguments,    stopAtNonOption);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	78	None	replace
151	[BUG]  [BUGGY]  this.stopAtNonOption  =  stopAtNonOption;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  this.stopAtNonOption  =  stopAtNonOption;  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	this.stopAtNonOption  =  stopAtNonOption;	  While(stopAtNonOption)    {    init();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
152	[BUG]  [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(options,  arguments,  stopAtNonOption);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(options,  arguments,  stopAtNonOption);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =  new  PosixParser(options,  arguments,  stopAtNonOption);	  PosixParser    <?>    parser    =    new    PosixParser(options,    tokens,    stopAtNonOption);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
153	[BUG]  [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(options,  options,  stopAtNonOption);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(options,  options,  stopAtNonOption);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =  new  PosixParser(options,  options,  stopAtNonOption);	  PosixParser    <?>    parser    =    new    PosixParser(options,    tokens,    stopAtNonOption);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
154	[BUG]  [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(options,  tokens,  stopAtNonOption,  arguments);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(options,  tokens,  stopAtNonOption,  arguments);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =  new  PosixParser(options,  tokens,  stopAtNonOption,  arguments);	  PosixParser    <?>    parser    =    new    PosixParser(options,    tokens,    stopAtNonOption);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
155	[BUG]  [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(options,  tokens,  stopAtNonOption,  argument);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(options,  tokens,  stopAtNonOption,  argument);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =  new  PosixParser(options,  tokens,  stopAtNonOption,  argument);	  PosixParser    <?>    parser    =    new    PosixParser(options,    tokens,    stopAtNonOption);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
156	[BUG]  [BUGGY]  Integer  pos  =  arguments.indexOf( "- ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer  pos  =  arguments.indexOf( "- ");  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  pos  =  arguments.indexOf( "- ");	  Integer    pos    =    tokens.indexOf(   "-   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	87	None	replace
157	[BUG]  [BUGGY]  Integer  pos  =  options.indexOf( "- ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer  pos  =  options.indexOf( "- ");  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  pos  =  options.indexOf( "- ");	  Integer    pos    =    tokens.indexOf(   "-   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	87	None	replace
158	[BUG]  [BUGGY]  Integer  pos  =  tokens.indexOf( "- ").intValue();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer  pos  =  tokens.indexOf( "- ").intValue();  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  pos  =  tokens.indexOf( "- ").intValue();	  Integer    pos    =    tokens.indexOf(   "-   ");    	non-compiled	[CE]  <identifier>  expected	87	None	replace
159	[BUG]  [BUGGY]  Option  options  =  options.getOption(options,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOption(options,  stopAtNonOption);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  options  =  options.getOption(options,  stopAtNonOption);	  Option    options    =    options.getOption(options);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
160	[BUG]  [BUGGY]  Option  options  =  options.getOption(arguments);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOption(arguments);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  options  =  options.getOption(arguments);	  Option    options    =    options.getOption(options);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
161	[BUG]  [BUGGY]  Option  options  =  options.getOption(this.options);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOption(this.options);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  options  =  options.getOption(this.options);	  Option    options    =    options.getOption(options);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
162	[BUG]  [BUGGY]  Option  options  =  this.options.getOption(options);  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  this.options.getOption(options);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  options  =  this.options.getOption(options);	  Option    options    =    options.getOption(options);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
163	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)modules.get(pos);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)modules.get(pos);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser  <?>)modules.get(pos);	  PosixParser    <?>    parser    =(PosixParser    <?>)modules.clone();    	non-compiled	[CE]  <identifier>  expected	76	None	replace
164	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)this.modules.clone();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)this.modules.clone();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser  <?>)this.modules.clone();	  PosixParser    <?>    parser    =(PosixParser    <?>)modules.clone();    	non-compiled	[CE]  <identifier>  expected	76	None	replace
165	[BUG]  [BUGGY]  PosixParser  <  String>  iter  =  options.get(arguments.length);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <  String>  iter  =  options.get(arguments.length);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  String>  iter  =  options.get(arguments.length);	  PosixParser    <    String>    iter    =    options.get(arguments);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
166	[BUG]  [BUGGY]  PosixParser  <  String>  iter  =  options.get(arguments,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <  String>  iter  =  options.get(arguments,  stopAtNonOption);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  String>  iter  =  options.get(arguments,  stopAtNonOption);	  PosixParser    <    String>    iter    =    options.get(arguments);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
167	[BUG]  [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(tokens,  opt,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(tokens,  opt,  stopAtNonOption);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =  new  PosixParser(tokens,  opt,  stopAtNonOption);	  PosixParser    <?>    parser    =    new    PosixParser(opt,    tokens,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
168	[BUG]  [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(option,  tokens,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(option,  tokens,  stopAtNonOption);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =  new  PosixParser(option,  tokens,  stopAtNonOption);	  PosixParser    <?>    parser    =    new    PosixParser(opt,    tokens,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
169	[BUG]  [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(pos,  tokens,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(pos,  tokens,  stopAtNonOption);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =  new  PosixParser(pos,  tokens,  stopAtNonOption);	  PosixParser    <?>    parser    =    new    PosixParser(opt,    tokens,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
170	[BUG]  [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(opt,  arguments,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(opt,  arguments,  stopAtNonOption);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =  new  PosixParser(opt,  arguments,  stopAtNonOption);	  PosixParser    <?>    parser    =    new    PosixParser(opt,    tokens,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
171	[BUG]  [BUGGY]  Option  option  =  options.getOption(option,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(option,  stopAtNonOption);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  option  =  options.getOption(option,  stopAtNonOption);	  Option    option    =    options.getOption(option);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
172	[BUG]  [BUGGY]  Option[]  options  =  this.arguments.getOptions();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option[]  options  =  this.arguments.getOptions();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option[]  options  =  this.arguments.getOptions();	  Option[]    options    =    arguments.getOptions();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
173	[BUG]  [BUGGY]  Option[]  options  =  arguments!=  null?  arguments.getOptions()  :  null;  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option[]  options  =  arguments!=  null?  arguments.getOptions()  :  null;  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option[]  options  =  arguments!=  null?  arguments.getOptions()  :  null;	  Option[]    options    =    arguments.getOptions();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
174	[BUG]  [BUGGY]  while(!stopAtNonOption  &&  arguments.length  >  0)  {  init();  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  while(!stopAtNonOption  &&  arguments.length  >  0)  {  init();  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	while(!stopAtNonOption  &&  arguments.length  >  0)  {  init();  }	  While(!stopAtNonOption)    {    init();    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
175	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  Lists.newArrayList();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	ArrayList  <  String>  tokens  =  Lists.newArrayList();	  ArrayList    <    String>    tokens    =    Lists.newArrayList(arguments);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
176	[BUG]  [BUGGY]  Integer  options  =  getOptions(pos);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer  options  =  getOptions(pos);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  options  =  getOptions(pos);	  Integer    options    =    getOptions();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
177	[BUG]  [BUGGY]  Integer  options  =  getOptions()  -  1;  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer  options  =  getOptions()  -  1;  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  options  =  getOptions()  -  1;	  Integer    options    =    getOptions();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
178	[BUG]  [BUGGY]  Integer  options  =  getOptions(options);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer  options  =  getOptions(options);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  options  =  getOptions(options);	  Integer    options    =    getOptions();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
179	[BUG]  [BUGGY]  Injectables.checkNotNull(arguments,  eatTheRest);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  Injectables.checkNotNull(arguments,  eatTheRest);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Injectables.checkNotNull(arguments,  eatTheRest);	  Injectables.checkNotNull(arguments,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
180	[BUG]  [BUGGY]  Option  options  =  options.getOption(pos);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOption(pos);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  options  =  options.getOption(pos);	  Option    options    =    options.getOption(opt);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
181	[BUG]  [BUGGY]  Option  options  =  options.getOption(token);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOption(token);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  options  =  options.getOption(token);	  Option    options    =    options.getOption(opt);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
182	[BUG]  [BUGGY]  options  =  options.getOption(pos);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  options  =  options.getOption(pos);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	options  =  options.getOption(pos);	  Option    options    =    options.getOption(opt);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
183	[BUG]  [BUGGY]  PosixParser  <  String>  iter  =  Arrays.asList(objects).iterator();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <  String>  iter  =  Arrays.asList(objects).iterator();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  String>  iter  =  Arrays.asList(objects).iterator();	  PosixParser    <    String>    iter    =    Arrays.asList(options).iterator();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
184	[BUG]  [BUGGY]  PosixParser  <  String>  iter  =  Arrays.asList(pos).iterator();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <  String>  iter  =  Arrays.asList(pos).iterator();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  String>  iter  =  Arrays.asList(pos).iterator();	  PosixParser    <    String>    iter    =    Arrays.asList(options).iterator();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
185	[BUG]  [BUGGY]  while(!stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  while(!stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	while(!stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalStateException( " ");  }	  While(!stopAtNonOption)    {    init();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
186	[BUG]  [BUGGY]  Preconditions.checkState(!stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Preconditions.checkState(!stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Preconditions.checkState(!stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  While(!stopAtNonOption)    {    init();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
187	[BUG]  [BUGGY]  Preconditions.checkState(!stopAtNonOption)  {  init();  }  else  if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Preconditions.checkState(!stopAtNonOption)  {  init();  }  else  if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Preconditions.checkState(!stopAtNonOption)  {  init();  }  else  if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  While(!stopAtNonOption)    {    init();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
188	[BUG]  [BUGGY]  Preconditions.checkState(!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Preconditions.checkState(!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Preconditions.checkState(!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  While(!stopAtNonOption)    {    init();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
189	[BUG]  [BUGGY]  Preconditions.checkState(!stopAtNonOption)  {  this.init();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Preconditions.checkState(!stopAtNonOption)  {  this.init();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Preconditions.checkState(!stopAtNonOption)  {  this.init();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  While(!stopAtNonOption)    {    init();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
190	[BUG]  [BUGGY]  List  <  String>  tokens  =  Lists.newArrayList(arguments,  stopAtNonOption,  eatTheRest);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  Lists.newArrayList(arguments,  stopAtNonOption,  eatTheRest);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	List  <  String>  tokens  =  Lists.newArrayList(arguments,  stopAtNonOption,  eatTheRest);	  List    <    String>    tokens    =    Lists.newArrayList(arguments,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
191	[BUG]  [BUGGY]  List  <  String>  tokens  =  Lists.newArrayList(options,  stopAtNonOption);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  Lists.newArrayList(options,  stopAtNonOption);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	List  <  String>  tokens  =  Lists.newArrayList(options,  stopAtNonOption);	  List    <    String>    tokens    =    Lists.newArrayList(arguments,    stopAtNonOption);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	78	None	replace
192	[BUG]  [BUGGY]  Option  options  =  this.options.getOptions(true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  this.options.getOptions(true);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  options  =  this.options.getOptions(true);	  Option    options    =    this.options.getOptions();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
193	[BUG]  [BUGGY]  Option  options  =  this.options.getOptions(opt);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  this.options.getOptions(opt);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  options  =  this.options.getOptions(opt);	  Option    options    =    this.options.getOptions();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
194	[BUG]  [BUGGY]  Option  options  =  options.getOption(stopAtNonOption);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOption(stopAtNonOption);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  options  =  options.getOption(stopAtNonOption);	  Option    options    =    options.getOption(opt);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
195	[BUG]  [BUGGY]  Integer  pos  =  initOptions();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer  pos  =  initOptions();  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  pos  =  initOptions();	  Integer    pos    =    init();    	non-compiled	[CE]  <identifier>  expected	80	None	replace
196	[BUG]  [BUGGY]  Integer[]  arguments  =  getOptions(options);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer[]  arguments  =  getOptions(options);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer[]  arguments  =  getOptions(options);	  Integer[]    arguments    =    getOptions();    	non-compiled	[CE]  <identifier>  expected	88	None	replace
197	[BUG]  [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(options,  tokens,  stopAtNonOption,  options);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(options,  tokens,  stopAtNonOption,  options);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =  new  PosixParser(options,  tokens,  stopAtNonOption,  options);	  PosixParser    <?>    parser    =    new    PosixParser(options,    tokens,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
198	[BUG]  [BUGGY]  Option  options  =  option.getOptions(pos);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  option.getOptions(pos);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  options  =  option.getOptions(pos);	  Option    options    =    option.getOptions();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
199	[BUG]  [BUGGY]  Option  options  =  option.cloneOptions();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  option.cloneOptions();  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  options  =  option.cloneOptions();	  Option    options    =    option.getOptions();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
200	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)this.options.get();  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)this.options.get();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser  <?>)this.options.get();	  PosixParser    <?>    parser    =(PosixParser    <?>)this.options.clone();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
201	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser)super.parameters.clone();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =(PosixParser)super.parameters.clone();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser)super.parameters.clone();	  PosixParser    <?>    parser    =(PosixParser)parameters.clone();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
202	[BUG]  [BUGGY]  PosixParser  <  String>  iter  =  options.get(options.size()  -  2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <  String>  iter  =  options.get(options.size()  -  2);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  String>  iter  =  options.get(options.size()  -  2);	  PosixParser    <    String>    iter    =    options.get(options.size()    -    1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
203	[BUG]  [BUGGY]  While(stopAtNonOption)  {  init();  }  else  if(stopAtNonOption)  {  throw  new  IllegalStateException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  While(stopAtNonOption)  {  init();  }  else  if(stopAtNonOption)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	While(stopAtNonOption)  {  init();  }  else  if(stopAtNonOption)  {  throw  new  IllegalStateException( " ");  }	  While(stopAtNonOption)    {    init();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	22	None	replace
204	[BUG]  [BUGGY]  While(stopAtNonOption)  {  init();  }  else  if(!stopAtNonOption)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  While(stopAtNonOption)  {  init();  }  else  if(!stopAtNonOption)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	While(stopAtNonOption)  {  init();  }  else  if(!stopAtNonOption)  {  throw  new  IllegalStateException( " ");  }	  While(stopAtNonOption)    {    init();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
205	[BUG]  [BUGGY]  Option  option  =  options.getOption(this.options,  stopAtNonOption);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(this.options,  stopAtNonOption);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  option  =  options.getOption(this.options,  stopAtNonOption);	  Option    option    =    options.getOption(this.options);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
206	[BUG]  [BUGGY]  Injectables.checkArgument(arguments.length!=  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Injectables.checkArgument(arguments.length!=  0);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Injectables.checkArgument(arguments.length!=  0);	  Injectables.checkArgument(arguments.length    ==    0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	57	None	replace
207	[BUG]  [BUGGY]  PosixParser  <  String>  iter  =  Arrays.asList(opt).iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <  String>  iter  =  Arrays.asList(opt).iterator();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  String>  iter  =  Arrays.asList(opt).iterator();	  PosixParser    <    String>    iter    =    Arrays.asList(options).iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
208	[BUG]  [BUGGY]  PosixParser  <  String>  iter  =  Arrays.asList(apply).iterator();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <  String>  iter  =  Arrays.asList(apply).iterator();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  String>  iter  =  Arrays.asList(apply).iterator();	  PosixParser    <    String>    iter    =    Arrays.asList(options).iterator();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
209	[BUG]  [BUGGY]  Integer[]  arguments  =  getOptions().toArray(arguments,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer[]  arguments  =  getOptions().toArray(arguments,  stopAtNonOption);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer[]  arguments  =  getOptions().toArray(arguments,  stopAtNonOption);	  Integer[]    arguments    =    getOptions().toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
210	[BUG]  [BUGGY]  Options  options  =  options.getOption( "stopAtNonOption ");  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Options  options  =  options.getOption( "stopAtNonOption ");  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Options  options  =  options.getOption( "stopAtNonOption ");	  Option    options    =    options.getOption(   "stopAtNonOption   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
211	[BUG]  [BUGGY]  While(stopAtNonOption)  {  init();  }  else  {  tokens.add(arguments[pos]);  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  While(stopAtNonOption)  {  init();  }  else  {  tokens.add(arguments[pos]);  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	While(stopAtNonOption)  {  init();  }  else  {  tokens.add(arguments[pos]);  }	  While(stopAtNonOption)    {    init();    }    else    {    tokens.add(opt);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
212	[BUG]  [BUGGY]  Injectables.checkNotNull(options,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  Injectables.checkNotNull(options,  stopAtNonOption);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Injectables.checkNotNull(options,  stopAtNonOption);	  Injectables.checkNotNull(arguments,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
213	[BUG]  [BUGGY]  Integer[]  arguments  =  options.get( "stopAtNonOption   ",  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer[]  arguments  =  options.get( "stopAtNonOption   ",  stopAtNonOption);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer[]  arguments  =  options.get( "stopAtNonOption   ",  stopAtNonOption);	  Integer[]    arguments    =    options.get(   "stopAtNonOption   ");    	non-compiled	[CE]  <identifier>  expected	79	None	replace
214	[BUG]  [BUGGY]  Integer[]  arguments  =  options.get( "stopAtNonOption ").toLowerCase();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer[]  arguments  =  options.get( "stopAtNonOption ").toLowerCase();  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer[]  arguments  =  options.get( "stopAtNonOption ").toLowerCase();	  Integer[]    arguments    =    options.get(   "stopAtNonOption   ");    	non-compiled	[CE]  <identifier>  expected	79	None	replace
215	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser)this.arguments.clone();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =(PosixParser)this.arguments.clone();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser)this.arguments.clone();	  PosixParser    <?>    parser    =(PosixParser)arguments.clone();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
216	[BUG]  [BUGGY]  While(stopAtNonOption)  {  init();  }  else  if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  While(stopAtNonOption)  {  init();  }  else  if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	While(stopAtNonOption)  {  init();  }  else  if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  While(stopAtNonOption)    {    init();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
217	[BUG]  [BUGGY]  While(stopAtNonOption)  {  init();  }  else  if(!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  While(stopAtNonOption)  {  init();  }  else  if(!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	While(stopAtNonOption)  {  init();  }  else  if(!stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  While(stopAtNonOption)    {    init();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
218	[BUG]  [BUGGY]  Preconditions.checkState(stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Preconditions.checkState(stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Preconditions.checkState(stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  While(stopAtNonOption)    {    init();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
219	[BUG]  [BUGGY]  Option  option  =  options.getOption(options);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(options);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  option  =  options.getOption(options);	  Option    option    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
220	[BUG]  [BUGGY]  While(stopAtNonOption  &&  arguments.length  >  1)  {  init();  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  While(stopAtNonOption  &&  arguments.length  >  1)  {  init();  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	While(stopAtNonOption  &&  arguments.length  >  1)  {  init();  }	  While(stopAtNonOption    &&    arguments.length    >    0)    {    init();    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
221	[BUG]  [BUGGY]  Integer  i  =  options.get(arguments[pos],  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer  i  =  options.get(arguments[pos],  stopAtNonOption);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  i  =  options.get(arguments[pos],  stopAtNonOption);	  Integer    i    =    options.get(arguments[pos]);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
222	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)modules.toArray(new  PosixParser[modules.size()  ]);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)modules.toArray(new  PosixParser[modules.size()  ]);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser  <?>)modules.toArray(new  PosixParser[modules.size()  ]);	  PosixParser    <?>    parser    =(PosixParser    <?>)modules.clone();    	non-compiled	[CE]  <identifier>  expected	76	None	replace
223	[BUG]  [BUGGY]  Injectables.checkArgument(stopAtNonOption,  tokens);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Injectables.checkArgument(stopAtNonOption,  tokens);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Injectables.checkArgument(stopAtNonOption,  tokens);	  Injectables.checkArgument(stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
224	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Iterator  <  String>  iter  =  Arrays.asList(arguments).iterator();  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(stopAtNonOption)  {  Iterator  <  String>  iter  =  Arrays.asList(arguments).iterator();  }  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	if(stopAtNonOption)  {  Iterator  <  String>  iter  =  Arrays.asList(arguments).iterator();  }	  Iterator    <    String>    iter    =    Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
225	[BUG]  [BUGGY]  PosixParser  <  String>  iter  =  options.getValues().iterator();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <  String>  iter  =  options.getValues().iterator();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  String>  iter  =  options.getValues().iterator();	  PosixParser    <    String>    iter    =    options.values().iterator();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
226	[BUG]  [BUGGY]  Option  option  =  options.getOption( "opt ",  null);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption( "opt ",  null);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  option  =  options.getOption( "opt ",  null);	  Option    option    =    options.getOption(   "opt   ");    	non-compiled	[CE]  <identifier>  expected	62	None	replace
227	[BUG]  [BUGGY]  Option  option  =  options.getOption( "opt ").toLowerCase();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption( "opt ").toLowerCase();  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  option  =  options.getOption( "opt ").toLowerCase();	  Option    option    =    options.getOption(   "opt   ");    	non-compiled	[CE]  <identifier>  expected	62	None	replace
228	[BUG]  [BUGGY]  Injectables.checkNotNull(options,  StopAtNonOption);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Injectables.checkNotNull(options,  StopAtNonOption);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Injectables.checkNotNull(options,  StopAtNonOption);	  Injectables.checkNotNull(arguments,    StopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
229	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Iterator  iter  =  Arrays.asList(options).iterator();  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(stopAtNonOption)  {  Iterator  iter  =  Arrays.asList(options).iterator();  }  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	if(stopAtNonOption)  {  Iterator  iter  =  Arrays.asList(options).iterator();  }	  Iterator    iter    =    Arrays.asList(options).iterator();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
230	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser)this.options.get(0);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =(PosixParser)this.options.get(0);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser)this.options.get(0);	  PosixParser    <?>    parser    =(PosixParser)this.options.clone();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
231	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser)params.clone();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =(PosixParser)params.clone();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser)params.clone();	  PosixParser    <?>    parser    =(PosixParser)this.options.clone();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
232	[BUG]  [BUGGY]  Option  options  =  options.getOptions(opt);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOptions(opt);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  options  =  options.getOptions(opt);	  Option    options    =    options.getOptions(options);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
233	[BUG]  [BUGGY]  PosixParser  <?>  super  =(PosixParser)super.clone();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  super  =(PosixParser)super.clone();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  super  =(PosixParser)super.clone();	  PosixParser    <?>    parser    =(PosixParser)super.clone();    	non-compiled	[CE]  <identifier>  expected	81	None	replace
234	[BUG]  [BUGGY]  PosixParser  <  Object>  parser  =(PosixParser)super.clone();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <  Object>  parser  =(PosixParser)super.clone();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  Object>  parser  =(PosixParser)super.clone();	  PosixParser    <?>    parser    =(PosixParser)super.clone();    	non-compiled	[CE]  <identifier>  expected	81	None	replace
235	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Iterator  <  String>  iter  =  Arrays.asList(options).iterator();  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(stopAtNonOption)  {  Iterator  <  String>  iter  =  Arrays.asList(options).iterator();  }  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	if(stopAtNonOption)  {  Iterator  <  String>  iter  =  Arrays.asList(options).iterator();  }	  Iterator    <    String>    iter    =    Arrays.asList(options).iterator();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
236	[BUG]  [BUGGY]  Options  options  =  options.getOptions();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Options  options  =  options.getOptions();  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Options  options  =  options.getOptions();	  options    =    options.getOptions();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
237	[BUG]  [BUGGY]  Iterator  iter  =  Arrays.asList(opt).iterator();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Iterator  iter  =  Arrays.asList(opt).iterator();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Iterator  iter  =  Arrays.asList(opt).iterator();	  Iterator    iter    =    Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
238	[BUG]  [BUGGY]  Integer  pos  =  tokens.indexOf( "- "  +  opt);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer  pos  =  tokens.indexOf( "- "  +  opt);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  pos  =  tokens.indexOf( "- "  +  opt);	  Integer    pos    =    tokens.indexOf(   "-   ");    	non-compiled	[CE]  <identifier>  expected	87	None	replace
239	[BUG]  [BUGGY]  PosixParser  <  Object>  iter  =(this.options!=  null)?  this.options.iterator()  :  null;  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <  Object>  iter  =(this.options!=  null)?  this.options.iterator()  :  null;  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  Object>  iter  =(this.options!=  null)?  this.options.iterator()  :  null;	  PosixParser    <    Object>    iter    =    this.options.iterator();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
240	[BUG]  [BUGGY]  Options  options  =  options.get(arguments[pos]);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Options  options  =  options.get(arguments[pos]);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Options  options  =  options.get(arguments[pos]);	  options.add(arguments[pos]);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
241	[BUG]  [BUGGY]  Integer  pos  =  tokens.indexOf( "null ");  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer  pos  =  tokens.indexOf( "null ");  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  pos  =  tokens.indexOf( "null ");	  Integer    pos    =    tokens.indexOf(   "u   ");    	non-compiled	[CE]  <identifier>  expected	90	None	replace
242	[BUG]  [BUGGY]  Integer  pos  =  tokens.indexOf( "options ");  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer  pos  =  tokens.indexOf( "options ");  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  pos  =  tokens.indexOf( "options ");	  Integer    pos    =    tokens.indexOf(   "u   ");    	non-compiled	[CE]  <identifier>  expected	90	None	replace
243	[BUG]  [BUGGY]  Iterator  iter  =  Arrays.asList(this.tokens).iterator();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Iterator  iter  =  Arrays.asList(this.tokens).iterator();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Iterator  iter  =  Arrays.asList(this.tokens).iterator();	  Iterator    iter    =    this.tokens.iterator();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
244	[BUG]  [BUGGY]  Option  options  =  options.getOptions(true,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOptions(true,  stopAtNonOption);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  options  =  options.getOptions(true,  stopAtNonOption);	  Option    options    =    options.getOptions(true);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
245	[BUG]  [BUGGY]  Option  options  =  options.getOptions(false,  null);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOptions(false,  null);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  options  =  options.getOptions(false,  null);	  Option    options    =    options.getOptions(true);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
246	[BUG]  [BUGGY]  PosixParser  <  Object>  iter  =  options.values().iterator(0);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <  Object>  iter  =  options.values().iterator(0);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  Object>  iter  =  options.values().iterator(0);	  PosixParser    <    Object>    iter    =    options.values().iterator();    	non-compiled	[CE]  <identifier>  expected	67	None	replace
247	[BUG]  [BUGGY]  Integer  pos  =  tokens.size()  -  1;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer  pos  =  tokens.size()  -  1;  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  pos  =  tokens.size()  -  1;	  Integer    pos    =    tokens.size();    	non-compiled	[CE]  <identifier>  expected	89	None	replace
248	[BUG]  [BUGGY]  PosixParser  <  String>  iter  =  tokens.iterator();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <  String>  iter  =  tokens.iterator();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  String>  iter  =  tokens.iterator();	  PosixParser    <    String>    iter    =    this.options.iterator();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
249	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  Lists.newArrayList(arguments,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  Lists.newArrayList(arguments,  stopAtNonOption);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	ArrayList  <  String>  tokens  =  Lists.newArrayList(arguments,  stopAtNonOption);	  ArrayList    <    String>    tokens    =    Lists.newArrayList(arguments);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
250	[BUG]  [BUGGY]  Option[]  options  =  this.options.cloneOptions();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option[]  options  =  this.options.cloneOptions();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option[]  options  =  this.options.cloneOptions();	  Option[]    options    =    this.options.getOptions();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
251	[BUG]  [BUGGY]  Preconditions.checkState(!stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Preconditions.checkState(!stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Preconditions.checkState(!stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalStateException( " ");  }	  While(!stopAtNonOption)    {    init();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
252	[BUG]  [BUGGY]  Preconditions.checkState(!stopAtNonOption)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Preconditions.checkState(!stopAtNonOption)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Preconditions.checkState(!stopAtNonOption)  {  throw  new  IllegalStateException( " ");  }	  While(!stopAtNonOption)    {    init();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
253	[BUG]  [BUGGY]  PosixParser  <  String>  iter  =  options.get(arguments  -  1);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <  String>  iter  =  options.get(arguments  -  1);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  String>  iter  =  options.get(arguments  -  1);	  PosixParser    <    String>    iter    =    options.get(arguments);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
254	[BUG]  [BUGGY]  while(stopAtNonOption)  {  init();  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  while(stopAtNonOption)  {  init();  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	while(stopAtNonOption)  {  init();  }	  While(stopAtNonOption)    {    init();    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
255	[BUG]  [BUGGY]  List  <  String>  tokens  =  Lists.newArrayListWithOptions(arguments);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  tokens  =  Lists.newArrayListWithOptions(arguments);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	List  <  String>  tokens  =  Lists.newArrayListWithOptions(arguments);	  List    <    String>    tokens    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
256	[BUG]  [BUGGY]  Option[]  options  =  options.toArray(new  Option[options.getOptions()  -  1]);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option[]  options  =  options.toArray(new  Option[options.getOptions()  -  1]);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option[]  options  =  options.toArray(new  Option[options.getOptions()  -  1]);	  Option[]    options    =    options.toArray(new    Option[options.getOptions()    ]);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
257	[BUG]  [BUGGY]  Integer  pos  =  initWithOptions(options);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer  pos  =  initWithOptions(options);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  pos  =  initWithOptions(options);	  Integer    pos    =    init(options);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
258	[BUG]  [BUGGY]  Option[]  options  =  arguments.toArray(new  Option[arguments.size()  ]);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option[]  options  =  arguments.toArray(new  Option[arguments.size()  ]);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option[]  options  =  arguments.toArray(new  Option[arguments.size()  ]);	  Option[]    options    =    arguments.getOptions();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
259	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)arguments.toArray(new  PosixParser  <?>));  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)arguments.toArray(new  PosixParser  <?>));  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser  <?>)arguments.toArray(new  PosixParser  <?>));	  PosixParser    <?>    parser    =(PosixParser    <?>)arguments.clone();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
260	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)arguments.get(arguments.length);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)arguments.get(arguments.length);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser  <?>)arguments.get(arguments.length);	  PosixParser    <?>    parser    =(PosixParser    <?>)arguments.clone();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
261	[BUG]  [BUGGY]  while(stopAtNonOption  &&  options.size()  >  0)  {  init();  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  while(stopAtNonOption  &&  options.size()  >  0)  {  init();  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	while(stopAtNonOption  &&  options.size()  >  0)  {  init();  }	  While(stopAtNonOption    &&    options.size()    >    0)    {    init();    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
262	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser)this.params.clone();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =(PosixParser)this.params.clone();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser)this.params.clone();	  PosixParser    <?>    parser    =(PosixParser)arguments.clone();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
263	[BUG]  [BUGGY]  if(stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalArgumentException( " ".equals(arguments));  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalArgumentException( " ".equals(arguments));  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	if(stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalArgumentException( " ".equals(arguments));  }	  While(!stopAtNonOption)    {    init();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
264	[BUG]  [BUGGY]  if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  While(!stopAtNonOption)    {    init();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
265	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)this.arguments.clone();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)this.arguments.clone();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser  <?>)this.arguments.clone();	  PosixParser    <?>    parser    =(PosixParser    <?>)arguments.clone();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
266	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)arguments.peek();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)arguments.peek();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser  <?>)arguments.peek();	  PosixParser    <?>    parser    =(PosixParser    <?>)arguments.clone();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
267	[BUG]  [BUGGY]  PosixParser  <  Object>  parser  =(PosixParser)this.options.clone();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <  Object>  parser  =(PosixParser)this.options.clone();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  Object>  parser  =(PosixParser)this.options.clone();	  PosixParser    <?>    parser    =(PosixParser)this.options.clone();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
268	[BUG]  [BUGGY]  PosixParser  <  String>  iter  =  options.all().iterator();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <  String>  iter  =  options.all().iterator();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  String>  iter  =  options.all().iterator();	  PosixParser    <    String>    iter    =    options.values().iterator();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
269	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)this.options.peek();  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)this.options.peek();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser  <?>)this.options.peek();	  PosixParser    <?>    parser    =(PosixParser    <?>)this.options.clone();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
270	[BUG]  [BUGGY]  while(!stopAtNonOption  &&  options.isEmpty())  {  init();  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  while(!stopAtNonOption  &&  options.isEmpty())  {  init();  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	while(!stopAtNonOption  &&  options.isEmpty())  {  init();  }	  While(!stopAtNonOption)    {    init();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
271	[BUG]  [BUGGY]  while(!stopAtNonOption  &&  arguments.length  >  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  while(!stopAtNonOption  &&  arguments.length  >  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	while(!stopAtNonOption  &&  arguments.length  >  0)  {  throw  new  IllegalStateException( " ");  }	  While(!stopAtNonOption)    {    init();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
272	[BUG]  [BUGGY]  while(!stopAtNonOption  &&  options.size()  >  0)  {  init();  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  while(!stopAtNonOption  &&  options.size()  >  0)  {  init();  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	while(!stopAtNonOption  &&  options.size()  >  0)  {  init();  }	  While(!stopAtNonOption)    {    init();    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
273	[BUG]  [BUGGY]  while(!stopAtNonOption)  {  init();  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  while(!stopAtNonOption)  {  init();  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	while(!stopAtNonOption)  {  init();  }	  While(!stopAtNonOption)    {    init();    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
274	[BUG]  [BUGGY]  Option[]  options  =  options.toArray(new  Option[args.size()  ]);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option[]  options  =  options.toArray(new  Option[args.size()  ]);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option[]  options  =  options.toArray(new  Option[args.size()  ]);	  Option[]    options    =    options.toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
275	[BUG]  [BUGGY]  PosixParser  <  Object>  iter  =  options.all().iterator();  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <  Object>  iter  =  options.all().iterator();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  Object>  iter  =  options.all().iterator();	  PosixParser    <    Object>    iter    =    options.values().iterator();    	non-compiled	[CE]  <identifier>  expected	67	None	replace
276	[BUG]  [BUGGY]  while(stopAtNonOption)  {  init();  }  else  {  tokens.add(opt);  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  while(stopAtNonOption)  {  init();  }  else  {  tokens.add(opt);  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	while(stopAtNonOption)  {  init();  }  else  {  tokens.add(opt);  }	  While(stopAtNonOption)    {    init();    }    else    {    tokens.add(opt);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
277	[BUG]  [BUGGY]  Option  option  =  options.getOption(token,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(token,  stopAtNonOption);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  option  =  options.getOption(token,  stopAtNonOption);	  Option    option    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
278	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)modules.peek();  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)modules.peek();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser  <?>)modules.peek();	  PosixParser    <?>    parser    =(PosixParser    <?>)modules.clone();    	non-compiled	[CE]  <identifier>  expected	76	None	replace
279	[BUG]  [BUGGY]  options  =(options  ==  null)?  null  :  options.getOptions();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  options  =(options  ==  null)?  null  :  options.getOptions();  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	options  =(options  ==  null)?  null  :  options.getOptions();	  options    =    options.getOptions();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
280	[BUG]  [BUGGY]  Integer[]  arguments  =  getOptions().values();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer[]  arguments  =  getOptions().values();  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer[]  arguments  =  getOptions().values();	  Integer[]    arguments    =    getOptions();    	non-compiled	[CE]  <identifier>  expected	88	None	replace
281	[BUG]  [BUGGY]  while(stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  while(stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	while(stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  While(stopAtNonOption)    {    init();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
282	[BUG]  [BUGGY]  Integer[]  arguments  =  getOptions().toArray(this);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer[]  arguments  =  getOptions().toArray(this);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer[]  arguments  =  getOptions().toArray(this);	  Integer[]    arguments    =    getOptions().toArray(arguments);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
283	[BUG]  [BUGGY]  Option[]  options  =  this.options.toArray();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option[]  options  =  this.options.toArray();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option[]  options  =  this.options.toArray();	  Option[]    options    =    this.options.getOptions();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
284	[BUG]  [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(arguments,  stopAtNonOption,  token);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(arguments,  stopAtNonOption,  token);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =  new  PosixParser(arguments,  stopAtNonOption,  token);	  PosixParser    <?>    parser    =    new    PosixParser(tokens,    stopAtNonOption,    argument);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
285	[BUG]  [BUGGY]  while(stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  while(stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	while(stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalStateException( " ");  }	  While(stopAtNonOption)    {    init();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
286	[BUG]  [BUGGY]  Option  options  =  options.getOption(opt,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOption(opt,  stopAtNonOption);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  options  =  options.getOption(opt,  stopAtNonOption);	  Option    options    =    options.getOption(opt);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
287	[BUG]  [BUGGY]  ArrayList  <  String>  tokens  =  Lists.newArrayList(arguments.length);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  ArrayList  <  String>  tokens  =  Lists.newArrayList(arguments.length);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	ArrayList  <  String>  tokens  =  Lists.newArrayList(arguments.length);	  List    <    String>    tokens    =    Lists.newArrayList(arguments.length);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
288	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser)parameters.peek();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =(PosixParser)parameters.peek();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser)parameters.peek();	  PosixParser    <?>    parser    =(PosixParser)parameters.clone();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
289	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  Arrays.asList(opt).iterator();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Iterator  <  String>  iter  =  Arrays.asList(opt).iterator();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Iterator  <  String>  iter  =  Arrays.asList(opt).iterator();	  Iterator    <    String>    iter    =    Arrays.asList(options).iterator();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
290	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  Arrays.asList(this.options).iterator();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Iterator  <  String>  iter  =  Arrays.asList(this.options).iterator();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Iterator  <  String>  iter  =  Arrays.asList(this.options).iterator();	  Iterator    <    String>    iter    =    Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
291	[BUG]  [BUGGY]  Option  options  =  options.getOptions(this);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOptions(this);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  options  =  options.getOptions(this);	  Option    options    =    options.getOptions(options);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
292	[BUG]  [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(tokens,  options,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(tokens,  options,  stopAtNonOption);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =  new  PosixParser(tokens,  options,  stopAtNonOption);	  PosixParser    <?>    parser    =    new    PosixParser(tokens,    stopAtNonOption,    option);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
293	[BUG]  [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(opt,  stopAtNonOption,  option);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(opt,  stopAtNonOption,  option);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =  new  PosixParser(opt,  stopAtNonOption,  option);	  PosixParser    <?>    parser    =    new    PosixParser(tokens,    stopAtNonOption,    option);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
294	[BUG]  [BUGGY]  Option  option  =  options.getOption( "option ",  null);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption( "option ",  null);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  option  =  options.getOption( "option ",  null);	  Option    option    =    options.getOption(   "option   ");    	non-compiled	[CE]  <identifier>  expected	64	None	replace
295	[BUG]  [BUGGY]  PosixParser  <  String>  iter  =  options.get(arguments.size());  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <  String>  iter  =  options.get(arguments.size());  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  String>  iter  =  options.get(arguments.size());	  PosixParser    <    String>    iter    =    options.get(arguments);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
296	[BUG]  [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)parameters.peek();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =(PosixParser  <?>)parameters.peek();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =(PosixParser  <?>)parameters.peek();	  PosixParser    <?>    parser    =(PosixParser    <?>)parameters.clone();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
297	[BUG]  [BUGGY]  Option  options  =  this.options.getOption(opt);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  this.options.getOption(opt);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  options  =  this.options.getOption(opt);	  Option    options    =    this.options.getOptions();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
298	[BUG]  [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(tokens,  options);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(tokens,  options);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =  new  PosixParser(tokens,  options);	  PosixParser    <?>    parser    =    new    PosixParser(tokens,    stopAtNonOption,    options);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
299	[BUG]  [BUGGY]  Option  option  =  this.options.getOption(option);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  this.options.getOption(option);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  option  =  this.options.getOption(option);	  Option    option    =    options.getOption(this.options);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
300	[BUG]  [BUGGY]  Integer  options  =  getOptions().iterator();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer  options  =  getOptions().iterator();  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  options  =  getOptions().iterator();	  Integer    options    =    getOptions();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
301	[BUG]  [BUGGY]  PosixParser  <  String>  iter  =  options.get(optional);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <  String>  iter  =  options.get(optional);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  String>  iter  =  options.get(optional);	  PosixParser    <    String>    iter    =    options.get(token);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
302	[BUG]  [BUGGY]  Integer[]  arguments  =  options.get( "stopAtNonOption ").toString();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer[]  arguments  =  options.get( "stopAtNonOption ").toString();  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer[]  arguments  =  options.get( "stopAtNonOption ").toString();	  Integer[]    arguments    =    options.get(   "stopAtNonOption   ");    	non-compiled	[CE]  <identifier>  expected	79	None	replace
303	[BUG]  [BUGGY]  Injectables.checkArgument(stopAtNonOption,  arguments.length);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Injectables.checkArgument(stopAtNonOption,  arguments.length);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Injectables.checkArgument(stopAtNonOption,  arguments.length);	  Injectables.checkArgument(stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
304	[BUG]  [BUGGY]  Injectables.checkState(stopAtNonOption,  arguments.length);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Injectables.checkState(stopAtNonOption,  arguments.length);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Injectables.checkState(stopAtNonOption,  arguments.length);	  Injectables.checkState(stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
305	[BUG]  [BUGGY]  PosixParser  <  String>  iter  =  Arrays.asList(this.options).iterator();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <  String>  iter  =  Arrays.asList(this.options).iterator();  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <  String>  iter  =  Arrays.asList(this.options).iterator();	  PosixParser    <    String>    iter    =    Arrays.asList(options).iterator();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
306	[BUG]  [BUGGY]  Injectables.checkArgument(arguments.length  ==  2);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Injectables.checkArgument(arguments.length  ==  2);  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Injectables.checkArgument(arguments.length  ==  2);	  Injectables.checkArgument(arguments.length    ==    0);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
307	[BUG]  [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(tokens,  arguments,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(tokens,  arguments,  stopAtNonOption);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =  new  PosixParser(tokens,  arguments,  stopAtNonOption);	  PosixParser    <?>    parser    =    new    PosixParser(tokens,    stopAtNonOption,    arguments);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
308	[BUG]  [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(tokens,  arguments);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  PosixParser  <?>  parser  =  new  PosixParser(tokens,  arguments);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	PosixParser  <?>  parser  =  new  PosixParser(tokens,  arguments);	  PosixParser    <?>    parser    =    new    PosixParser(tokens,    stopAtNonOption,    arguments);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
309	[BUG]  [BUGGY]  Integer  pos  =  this.tokens.indexOf( "- ");  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  Integer  pos  =  this.tokens.indexOf( "- ");  [BUGGY]      this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Integer  pos  =  this.tokens.indexOf( "- ");	  Integer    pos    =    tokens.indexOf(   "-   ");    	non-compiled	[CE]  <identifier>  expected	87	None	replace
310	[BUG]  [BUGGY]  Option[]  options  =  options.toArray(new  Option[options.getAllOptions()  ]);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option[]  options  =  options.toArray(new  Option[options.getAllOptions()  ]);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option[]  options  =  options.toArray(new  Option[options.getAllOptions()  ]);	  Option[]    options    =    options.toArray(new    Option[options.getOptions()    ]);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
311	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  pos);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(options,  pos);  [BUGGY]      init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	Option  option  =  options.getOption(options,  pos);	  Option    option    =    options.getOption(pos);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
