projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser<?>)options.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(tokens,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=options.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Option[]options=options.getOptions();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser)options.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96init();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96if(stopAtNonOption){init();}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96if(stopAtNonOption){init();}else{thrownewIllegalArgumentException("");}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96if(stopAtNonOption){init();}else{thrownewIllegalStateException("");}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96if(stopAtNonOption){init();}else{tokens.add(arguments[pos]);}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<Object>iter=options.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=options.getOption(opt);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=options.get(opt);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=options.getOptions();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96if(stopAtNonOption){init();}else{tokens.add(opt);}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Iteratoriter=options.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96List<String>tokens=Lists.newArrayList(arguments);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Iterator<String>iter=options.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Iteratoriter=tokens.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96While(stopAtNonOption){init();}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96While(stopAtNonOption){init();}else{tokens.add(opt);}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96While(stopAtNonOption&&arguments.length>0){init();}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96While(stopAtNonOption&&options.size()>0){init();}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Iterator<String>iter=Arrays.asList(arguments).iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Iterator<String>iter=this.options.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Iterator<String>iter=arguments.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Iteratoriter=arguments.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Iteratoriter=this.options.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=options.get(pos);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=options.get(0);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=options.get(arguments);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=options.get(options.size()-1);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Iteratoriter=this.tokens.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Iteratoriter=Arrays.asList(arguments).iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<Object>iter=this.options.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<Object>iter=arguments.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<Object>iter=tokens.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=this.options.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=arguments.iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=Arrays.asList(options).iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96While(stopAtNonOption){init();}else{thrownewIllegalStateException("");}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96While(!stopAtNonOption){init();}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96While(!stopAtNonOption){init();}else{thrownewIllegalStateException("");}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96List<String>tokens=Lists.newArrayList();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96List<String>tokens=Lists.newArrayList(arguments.length);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96ArrayList<String>tokens=Lists.newArrayList(arguments);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(tokens,stopAtNonOption,arguments);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(opt,tokens,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(options,tokens,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(tokens,stopAtNonOption,options);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=this.options.getOptions();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=options.getOption("stopAtNonOption");
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=(Option)this.options.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96options.add(arguments[pos]);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=option.getOptions();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=options.getOption(option);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Option[]options=this.options.getOptions();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Option[]options=arguments.getOptions();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Option[]options=options.toArray(arguments);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser)this.options.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser)arguments.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser)parameters.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=options.getOption(pos);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=options.getOption(token);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=options.getOption(this.options);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser<?>)this.options.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser<?>)arguments.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser<?>)parameters.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96While(stopAtNonOption){init();}else{thrownewIllegalArgumentException("");}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96While(!stopAtNonOption){init();}else{thrownewIllegalArgumentException("");}
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Injectables.checkNotNull(arguments,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Injectables.checkNotNull(arguments);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Injectables.checkState(stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(tokens,stopAtNonOption,argument);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=newPosixParser(tokens,stopAtNonOption,option);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Injectables.checkArgument(arguments.length==0);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integeroptions=getOptions();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Option[]options=options.toArray(newOption[options.size()]);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Option[]options=options.cloneOptions();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Option[]options=options.toArray(newOption[options.getOptions()]);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=options.getOption("opt");
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96options=options.getOptions();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=options.getOption("option");
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Injectables.checkArgument(stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Injectables.checkNotNull(arguments,StopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<Object>iter=options.values().iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser)options.get(pos);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser)modules.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=options.values().iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=options.getOption(stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=options.getOptions(true);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=options.getOptions(options);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Iteratoriter=Arrays.asList(options).iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Iterator<String>iter=Arrays.asList(options).iterator();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser<?>)modules.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96List<String>tokens=Lists.newArrayList(options);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96List<String>tokens=Lists.newArrayList(arguments,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integer[]arguments=options.get("stopAtNonOption");
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integerpos=init();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<?>parser=(PosixParser)super.clone();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96PosixParser<String>iter=options.get(token);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=options.getOption(opt);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoptions=options.getOption(options);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integerpos=init(options);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Optionoption=options.getOption(opt,stopAtNonOption);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integerpos=tokens.indexOf("-");
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integer[]arguments=getOptions();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integerpos=tokens.size();
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integerpos=tokens.indexOf("u");
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integeri=options.get(arguments[pos]);
projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java96Integer[]arguments=getOptions().toArray(arguments);
