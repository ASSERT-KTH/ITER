bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    PosixParser  <?>  parser  =(PosixParser  <?>)options.clone();  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  {  [BUGGY]    PosixParser  <?>  parser  =(PosixParser  <?>)options.clone();  [BUGGY]  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	    PosixParser  <?>  parser  =(PosixParser  <?>)options.clone();		non-compiled	[CE]  <identifier>  expected	36	None	add
2	[BUG]  [BUGGY]    PosixParser  <?>  parser  =  new  PosixParser(tokens,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]      ComparisonFailure  [CONTEXT]  {  [BUGGY]    PosixParser  <?>  parser  =  new  PosixParser(tokens,  stopAtNonOption);  [BUGGY]  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	    PosixParser  <?>  parser  =  new  PosixParser(tokens,  stopAtNonOption);		non-compiled	[CE]  <identifier>  expected	36	None	add
3	[BUG]  [BUGGY]    PosixParser  <  String>  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]        ComparisonFailure  [CONTEXT]  {  [BUGGY]    PosixParser  <  String>  iter  =  options.iterator();  [BUGGY]  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	    PosixParser  <  String>  iter  =  options.iterator();		non-compiled	[CE]  <identifier>  expected	36	None	add
4	[BUG]  [BUGGY]    Option[]  options  =  options.getOptions();  [CE]  <identifier>  expected  [FE]          ComparisonFailure  [CONTEXT]  {  [BUGGY]    Option[]  options  =  options.getOptions();  [BUGGY]  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	    Option[]  options  =  options.getOptions();		non-compiled	[CE]  <identifier>  expected	36	None	add
5	[BUG]  [BUGGY]    PosixParser  <?>  parser  =(PosixParser)options.clone();  [CE]  <identifier>  expected  [FE]            ComparisonFailure  [CONTEXT]  {  [BUGGY]    PosixParser  <?>  parser  =(PosixParser)options.clone();  [BUGGY]  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	    PosixParser  <?>  parser  =(PosixParser)options.clone();		non-compiled	[CE]  <identifier>  expected	36	None	add
6	[BUG]  [BUGGY]  if(stopAtNonOption)  {  init();  }  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  {  [BUGGY]  if(stopAtNonOption)  {  init();  }  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	if(stopAtNonOption)  {  init();  }	init();  	non-compiled	[CE]  <identifier>  expected	35	None	replace
7	[BUG]  [BUGGY]  if(stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]      ComparisonFailure  [CONTEXT]  {  [BUGGY]  if(stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	if(stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalArgumentException( " ");  }	init();  	non-compiled	[CE]  <identifier>  expected	35	None	replace
8	[BUG]  [BUGGY]  if(stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]        ComparisonFailure  [CONTEXT]  {  [BUGGY]  if(stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	if(stopAtNonOption)  {  init();  }  else  {  throw  new  IllegalStateException( " ");  }	init();  	non-compiled	[CE]  <identifier>  expected	35	None	replace
9	[BUG]  [BUGGY]  if(stopAtNonOption)  {  init();  }  else  {  tokens.add(arguments[pos]);  }  [CE]  <identifier>  expected  [FE]          ComparisonFailure  [CONTEXT]  {  [BUGGY]  if(stopAtNonOption)  {  init();  }  else  {  tokens.add(arguments[pos]);  }  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	if(stopAtNonOption)  {  init();  }  else  {  tokens.add(arguments[pos]);  }	init();  	non-compiled	[CE]  <identifier>  expected	35	None	replace
10	[BUG]  [BUGGY]    PosixParser  <  Object>  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  {  [BUGGY]    PosixParser  <  Object>  iter  =  options.iterator();  [BUGGY]  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	    PosixParser  <  Object>  iter  =  options.iterator();		non-compiled	[CE]  <identifier>  expected	36	None	add
11	[BUG]  [BUGGY]    Option  option  =  options.getOption(opt);  [CE]  <identifier>  expected  [FE]      ComparisonFailure  [CONTEXT]  {  [BUGGY]    Option  option  =  options.getOption(opt);  [BUGGY]  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	    Option  option  =  options.getOption(opt);		non-compiled	[CE]  <identifier>  expected	36	None	add
12	[BUG]  [BUGGY]    PosixParser  <  String>  iter  =  options.get(opt);  [CE]  <identifier>  expected  [FE]        ComparisonFailure  [CONTEXT]  {  [BUGGY]    PosixParser  <  String>  iter  =  options.get(opt);  [BUGGY]  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	    PosixParser  <  String>  iter  =  options.get(opt);		non-compiled	[CE]  <identifier>  expected	36	None	add
13	[BUG]  [BUGGY]    Option  options  =  options.getOptions();  [CE]  <identifier>  expected  [FE]          ComparisonFailure  [CONTEXT]  {  [BUGGY]    Option  options  =  options.getOptions();  [BUGGY]  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	    Option  options  =  options.getOptions();		non-compiled	[CE]  <identifier>  expected	36	None	add
14	[BUG]  [BUGGY]  if(stopAtNonOption)  {  init();  }  else  {  tokens.add(opt);  }  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  {  [BUGGY]  if(stopAtNonOption)  {  init();  }  else  {  tokens.add(opt);  }  [BUGGY]  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	if(stopAtNonOption)  {  init();  }  else  {  tokens.add(opt);  }	init();  	non-compiled	[CE]  <identifier>  expected	35	None	replace
15	[BUG]  [BUGGY]    Iterator  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  {  [BUGGY]    Iterator  iter  =  options.iterator();  [BUGGY]  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	    Iterator  iter  =  options.iterator();		non-compiled	[CE]  <identifier>  expected	36	None	add
16	[BUG]  [BUGGY]    List  <  String>  tokens  =  Lists.newArrayList(arguments);  [CE]  <identifier>  expected  [FE]      ComparisonFailure  [CONTEXT]  {  [BUGGY]    List  <  String>  tokens  =  Lists.newArrayList(arguments);  [BUGGY]  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	    List  <  String>  tokens  =  Lists.newArrayList(arguments);		non-compiled	[CE]  <identifier>  expected	36	None	add
17	[BUG]  [BUGGY]    Iterator  <  String>  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]        ComparisonFailure  [CONTEXT]  {  [BUGGY]    Iterator  <  String>  iter  =  options.iterator();  [BUGGY]  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	    Iterator  <  String>  iter  =  options.iterator();		non-compiled	[CE]  <identifier>  expected	36	None	add
18	[BUG]  [BUGGY]    Iterator  iter  =  tokens.iterator();  [CE]  <identifier>  expected  [FE]          ComparisonFailure  [CONTEXT]  {  [BUGGY]    Iterator  iter  =  tokens.iterator();  [BUGGY]  init();  this.options  =  options;  Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	96	96	2	replace	    Iterator  iter  =  tokens.iterator();		non-compiled	[CE]  <identifier>  expected	36	None	add
