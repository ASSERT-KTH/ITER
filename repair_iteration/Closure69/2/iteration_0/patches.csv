bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  validator.expectNumber(t,  left,  getJSType(right), "increment/decrement ");  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();  [BUGGY]  validator.expectNumber(t,  left,  getJSType(right), "increment/decrement ");  [BUGGY]  t,  left,  getJSType(left),   "increment/decrement ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	validator.expectNumber(t,  left,  getJSType(right), "increment/decrement ");	validator.expectNumber(  t,  left,  getJSType(left),   "increment/decrement ");  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
2	[BUG]  [BUGGY]  validator.expectNumber(t,  left,  getJSType(left), ",increment/decrement ");  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();  [BUGGY]  validator.expectNumber(t,  left,  getJSType(left), ",increment/decrement ");  [BUGGY]  t,  left,  getJSType(left),   "increment/decrement ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	validator.expectNumber(t,  left,  getJSType(left), ",increment/decrement ");	validator.expectNumber(  t,  left,  getJSType(left),   "increment/decrement ");  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
3	[BUG]  [BUGGY]  validateTyped(t,  n,  left,  getJSType(left), "increment/decrement ");  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();  [BUGGY]  validateTyped(t,  n,  left,  getJSType(left), "increment/decrement ");  [BUGGY]  t,  left,  getJSType(left),   "increment/decrement ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	validateTyped(t,  n,  left,  getJSType(left), "increment/decrement ");	validator.expectNumber(  t,  left,  getJSType(left),   "increment/decrement ");  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
4	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();  [BUGGY]    [BUGGY]  t,  left,  getJSType(left),   "increment/decrement ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	  	validator.expectNumber(  t,  left,  getJSType(left),   "increment/decrement ");  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
5	[BUG]  [BUGGY]  validator.expectNumber(t,  left,  getJSType(left)+  1,   "increment/decrement ");  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();  [BUGGY]  validator.expectNumber(t,  left,  getJSType(left)+  1,   "increment/decrement ");  [BUGGY]  t,  left,  getJSType(left),   "increment/decrement ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	validator.expectNumber(t,  left,  getJSType(left)+  1,   "increment/decrement ");	validator.expectNumber(  t,  left,  getJSType(left),   "increment/decrement ");  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
6	[BUG]  [BUGGY]  validator.expectNumber(t,  left,  getJSType(left));  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();  [BUGGY]  validator.expectNumber(t,  left,  getJSType(left));  [BUGGY]  t,  left,  getJSType(left),   "increment/decrement ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	validator.expectNumber(t,  left,  getJSType(left));	validator.expectNumber(  t,  left,  getJSType(left),   "increment/decrement ");  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
