bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Node  left  =  n.getLastChild();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();    [BUGGY]  Node  left  =  n.getLastChild();  [BUGGY]    t,  left,  getJSType(left),     "increment/decrement   ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	Node  left  =  n.getLastChild();	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
2	[BUG]  [BUGGY]  t,  left,  getJSType(left), "increment/decrement ");  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();    [BUGGY]  t,  left,  getJSType(left), "increment/decrement ");  [BUGGY]    t,  left,  getJSType(left),     "increment/decrement   ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	t,  left,  getJSType(left), "increment/decrement ");	      	non-compiled	[CE]  not  a  statement	4	None	replace
3	[BUG]  [BUGGY]  Node  right  =  n.getLastChild();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();    [BUGGY]  Node  right  =  n.getLastChild();  [BUGGY]    t,  left,  getJSType(left),     "increment/decrement   ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	Node  right  =  n.getLastChild();	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
4	[BUG]  [BUGGY]  Node  left  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();    [BUGGY]  Node  left  =  n.getFirstChild();  [BUGGY]    t,  left,  getJSType(left),     "increment/decrement   ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	Node  left  =  n.getFirstChild();	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
5	[BUG]  [BUGGY]  n  =  n.getLastChild();  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();    [BUGGY]  n  =  n.getLastChild();  [BUGGY]    t,  left,  getJSType(left),     "increment/decrement   ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	n  =  n.getLastChild();	      	non-compiled	[CE]  not  a  statement	4	None	replace
6	[BUG]  [BUGGY]  validator.expectNumber(t,  left,  getJSType(left),  typeable);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();    [BUGGY]  validator.expectNumber(t,  left,  getJSType(left),  typeable);  [BUGGY]    t,  left,  getJSType(left),     "increment/decrement   ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	validator.expectNumber(t,  left,  getJSType(left),  typeable);	  validator.expectNumber(t,    left,    getJSType(left));    	non-compiled	[CE]  not  a  statement	6	None	replace
7	[BUG]  [BUGGY]  validator.expectNumber(t,  left,  getJSType(left), "increment/decrement ",  typeable);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();    [BUGGY]  validator.expectNumber(t,  left,  getJSType(left), "increment/decrement ",  typeable);  [BUGGY]    t,  left,  getJSType(left),     "increment/decrement   ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	validator.expectNumber(t,  left,  getJSType(left), "increment/decrement ",  typeable);	  validator.expectNumber(t,    left,    getJSType(left),   ",increment/decrement   ");    	non-compiled	[CE]  not  a  statement	2	None	replace
8	[BUG]  [BUGGY]  validator.expectNumber(t,  left,  getJSType(left), "increment/decrement ",  n);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();    [BUGGY]  validator.expectNumber(t,  left,  getJSType(left), "increment/decrement ",  n);  [BUGGY]    t,  left,  getJSType(left),     "increment/decrement   ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	validator.expectNumber(t,  left,  getJSType(left), "increment/decrement ",  n);	  validator.expectNumber(t,    left,    getJSType(left),   ",increment/decrement   ");    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
9	[BUG]  [BUGGY]  validator.expectNumber(t,  left,  getJSType(right), "increment/decrement ",  n);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();    [BUGGY]  validator.expectNumber(t,  left,  getJSType(right), "increment/decrement ",  n);  [BUGGY]    t,  left,  getJSType(left),     "increment/decrement   ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	validator.expectNumber(t,  left,  getJSType(right), "increment/decrement ",  n);	  validator.expectNumber(t,    left,    getJSType(right),   "increment/decrement   ");    	non-compiled	[CE]  not  a  statement	1	None	replace
10	[BUG]  [BUGGY]  validateTyped(t,  n,  right,  getJSType(left), "increment/decrement ");  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();    [BUGGY]  validateTyped(t,  n,  right,  getJSType(left), "increment/decrement ");  [BUGGY]    t,  left,  getJSType(left),     "increment/decrement   ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	validateTyped(t,  n,  right,  getJSType(left), "increment/decrement ");	  validateTyped(t,    n,    left,    getJSType(left),   "increment/decrement   ");    	non-compiled	[CE]  not  a  statement	3	None	replace
11	[BUG]  [BUGGY]  validateTyped(t,  n,  left,  getJSType(left));  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();    [BUGGY]  validateTyped(t,  n,  left,  getJSType(left));  [BUGGY]    t,  left,  getJSType(left),     "increment/decrement   ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	validateTyped(t,  n,  left,  getJSType(left));	  validateTyped(t,    n,    left,    getJSType(left),   "increment/decrement   ");    	non-compiled	[CE]  not  a  statement	3	None	replace
12	[BUG]  [BUGGY]  validateTyped(t,  left,  getJSType(left), "increment/decrement ");  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();    [BUGGY]  validateTyped(t,  left,  getJSType(left), "increment/decrement ");  [BUGGY]    t,  left,  getJSType(left),     "increment/decrement   ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	validateTyped(t,  left,  getJSType(left), "increment/decrement ");	  validateTyped(t,    n,    left,    getJSType(left),   "increment/decrement   ");    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
13	[BUG]  [BUGGY]  validateTyped(t,  n,  left,  getJSType(right), "increment/decrement ");  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();    [BUGGY]  validateTyped(t,  n,  left,  getJSType(right), "increment/decrement ");  [BUGGY]    t,  left,  getJSType(left),     "increment/decrement   ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	validateTyped(t,  n,  left,  getJSType(right), "increment/decrement ");	  validateTyped(t,    n,    left,    getJSType(left),   "increment/decrement   ");    	non-compiled	[CE]  not  a  statement	3	None	replace
14	[BUG]  [BUGGY]  validator.expectNumber(t,  left,  getJSType(left)+  1,  right,   "increment/decrement ");  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();    [BUGGY]  validator.expectNumber(t,  left,  getJSType(left)+  1,  right,   "increment/decrement ");  [BUGGY]    t,  left,  getJSType(left),     "increment/decrement   ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	validator.expectNumber(t,  left,  getJSType(left)+  1,  right,   "increment/decrement ");	  validator.expectNumber(t,    left,    getJSType(left)+    1,       "increment/decrement   ");    	non-compiled	[CE]  not  a  statement	5	None	replace
15	[BUG]  [BUGGY]  validator.expectNumber(t,  left,  getJSType(left)+  1,   "increment/decrement ",  n);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();    [BUGGY]  validator.expectNumber(t,  left,  getJSType(left)+  1,   "increment/decrement ",  n);  [BUGGY]    t,  left,  getJSType(left),     "increment/decrement   ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	validator.expectNumber(t,  left,  getJSType(left)+  1,   "increment/decrement ",  n);	  validator.expectNumber(t,    left,    getJSType(left)+    1,       "increment/decrement   ");    	non-compiled	[CE]  not  a  statement	5	None	replace
16	[BUG]  [BUGGY]  validator.expectNumber(t,  left,  getJSType(left)+  1,  n,   "increment/decrement ");  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();    [BUGGY]  validator.expectNumber(t,  left,  getJSType(left)+  1,  n,   "increment/decrement ");  [BUGGY]    t,  left,  getJSType(left),     "increment/decrement   ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	validator.expectNumber(t,  left,  getJSType(left)+  1,  n,   "increment/decrement ");	  validator.expectNumber(t,    left,    getJSType(left)+    1,       "increment/decrement   ");    	non-compiled	[CE]  not  a  statement	5	None	replace
17	[BUG]  [BUGGY]  validator.expectNumber(t,  left,  getJSType(left)+  1,   "increment/decrement ",  typeable);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();    [BUGGY]  validator.expectNumber(t,  left,  getJSType(left)+  1,   "increment/decrement ",  typeable);  [BUGGY]    t,  left,  getJSType(left),     "increment/decrement   ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	validator.expectNumber(t,  left,  getJSType(left)+  1,   "increment/decrement ",  typeable);	  validator.expectNumber(t,    left,    getJSType(left)+    1,       "increment/decrement   ");    	non-compiled	[CE]  not  a  statement	5	None	replace
18	[BUG]  [BUGGY]  validator.expectNumber(t,  left,  getJSType(right)+  1,   "increment/decrement ");  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();    [BUGGY]  validator.expectNumber(t,  left,  getJSType(right)+  1,   "increment/decrement ");  [BUGGY]    t,  left,  getJSType(left),     "increment/decrement   ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	validator.expectNumber(t,  left,  getJSType(right)+  1,   "increment/decrement ");	  validator.expectNumber(t,    left,    getJSType(left)+    1,       "increment/decrement   ");    	non-compiled	[CE]  not  a  statement	5	None	replace
19	[BUG]  [BUGGY]  validator.expectNumber(t,  left,  getJSType(left)+  1,  typeable);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();    [BUGGY]  validator.expectNumber(t,  left,  getJSType(left)+  1,  typeable);  [BUGGY]    t,  left,  getJSType(left),     "increment/decrement   ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	validator.expectNumber(t,  left,  getJSType(left)+  1,  typeable);	  validator.expectNumber(t,    left,    getJSType(left)+    1,       "increment/decrement   ");    	non-compiled	[CE]  not  a  statement	5	None	replace
20	[BUG]  [BUGGY]  ensureTyped(t,  n,  INVALID_TYPE);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();    [BUGGY]  ensureTyped(t,  n,  INVALID_TYPE);  [BUGGY]    t,  left,  getJSType(left),     "increment/decrement   ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	ensureTyped(t,  n,  INVALID_TYPE);	      	non-compiled	[CE]  not  a  statement	4	None	replace
21	[BUG]  [BUGGY]  ensureTyped(t,  n,  NUMBER_TYPE);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();    [BUGGY]  ensureTyped(t,  n,  NUMBER_TYPE);  [BUGGY]    t,  left,  getJSType(left),     "increment/decrement   ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	ensureTyped(t,  n,  NUMBER_TYPE);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
22	[BUG]  [BUGGY]  ensureTyped(t,  n,  DETERMINISTIC_TEST);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();    [BUGGY]  ensureTyped(t,  n,  DETERMINISTIC_TEST);  [BUGGY]    t,  left,  getJSType(left),     "increment/decrement   ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	ensureTyped(t,  n,  DETERMINISTIC_TEST);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
23	[BUG]  [BUGGY]  ensureTyped(t,  n,  BAD_IMPLEMENTED_TYPE);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();    [BUGGY]  ensureTyped(t,  n,  BAD_IMPLEMENTED_TYPE);  [BUGGY]    t,  left,  getJSType(left),     "increment/decrement   ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	ensureTyped(t,  n,  BAD_IMPLEMENTED_TYPE);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
24	[BUG]  [BUGGY]  validator.expectNumber(t,  left,  getJSType(left),   "decrement/decrement ");  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();    [BUGGY]  validator.expectNumber(t,  left,  getJSType(left),   "decrement/decrement ");  [BUGGY]    t,  left,  getJSType(left),     "increment/decrement   ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	validator.expectNumber(t,  left,  getJSType(left),   "decrement/decrement ");	  validator.expectNumber(t,    left,    getJSType(left));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
25	[BUG]  [BUGGY]  validateTyped(t,  n,  NUMBER_TYPE);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();    [BUGGY]  validateTyped(t,  n,  NUMBER_TYPE);  [BUGGY]    t,  left,  getJSType(left),     "increment/decrement   ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	validateTyped(t,  n,  NUMBER_TYPE);	  validator.expectNumber(t,    left,    getJSType(left));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
26	[BUG]  [BUGGY]  validateTyped(t,  n,  INVALID_TYPE,  left,  getJSType(left), "increment/decrement ");  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();    [BUGGY]  validateTyped(t,  n,  INVALID_TYPE,  left,  getJSType(left), "increment/decrement ");  [BUGGY]    t,  left,  getJSType(left),     "increment/decrement   ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	validateTyped(t,  n,  INVALID_TYPE,  left,  getJSType(left), "increment/decrement ");	  validateTyped(t,    n,    left,    getJSType(left),   "increment/decrement   ");    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
27	[BUG]  [BUGGY]  validateTyped(t,  n,  DETERMINISTIC_TEST,  left,  getJSType(left), "increment/decrement ");  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();    [BUGGY]  validateTyped(t,  n,  DETERMINISTIC_TEST,  left,  getJSType(left), "increment/decrement ");  [BUGGY]    t,  left,  getJSType(left),     "increment/decrement   ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	validateTyped(t,  n,  DETERMINISTIC_TEST,  left,  getJSType(left), "increment/decrement ");	  validateTyped(t,    n,    left,    getJSType(left),   "increment/decrement   ");    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
28	[BUG]  [BUGGY]  ensureTyped(t,  n,  DETERMINISTIC_TEST,  left,  getJSType(left), "increment/decrement ");  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();    [BUGGY]  ensureTyped(t,  n,  DETERMINISTIC_TEST,  left,  getJSType(left), "increment/decrement ");  [BUGGY]    t,  left,  getJSType(left),     "increment/decrement   ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	ensureTyped(t,  n,  DETERMINISTIC_TEST,  left,  getJSType(left), "increment/decrement ");	  validateTyped(t,    n,    left,    getJSType(left),   "increment/decrement   ");    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
29	[BUG]  [BUGGY]  ensureTyped(t,  n,  INVALID_TYPE,  left,  getJSType(left), "increment/decrement ");  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();    [BUGGY]  ensureTyped(t,  n,  INVALID_TYPE,  left,  getJSType(left), "increment/decrement ");  [BUGGY]    t,  left,  getJSType(left),     "increment/decrement   ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	ensureTyped(t,  n,  INVALID_TYPE,  left,  getJSType(left), "increment/decrement ");	  validateTyped(t,    n,    left,    getJSType(left),   "increment/decrement   ");    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
30	[BUG]  [BUGGY]  validator.expectNumber(t,  left,  getJSType(left)+  1,  2, "increment/decrement ");  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();    [BUGGY]  validator.expectNumber(t,  left,  getJSType(left)+  1,  2, "increment/decrement ");  [BUGGY]    t,  left,  getJSType(left),     "increment/decrement   ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	validator.expectNumber(t,  left,  getJSType(left)+  1,  2, "increment/decrement ");	  validator.expectNumber(t,    left,    getJSType(left)+    1,       "increment/decrement   ");    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
31	[BUG]  [BUGGY]  ensureTyped(t,  n,  NUMBER_TYPE,  getJSType(left), "increment/decrement ");  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();    [BUGGY]  ensureTyped(t,  n,  NUMBER_TYPE,  getJSType(left), "increment/decrement ");  [BUGGY]    t,  left,  getJSType(left),     "increment/decrement   ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	ensureTyped(t,  n,  NUMBER_TYPE,  getJSType(left), "increment/decrement ");	  validateTyped(t,    n,    left,    getJSType(left),   "increment/decrement   ");    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
32	[BUG]  [BUGGY]  State  state  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();    [BUGGY]  State  state  =  n.getFirstChild();  [BUGGY]    t,  left,  getJSType(left),     "increment/decrement   ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	State  state  =  n.getFirstChild();	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
33	[BUG]  [BUGGY]  validator.expectNumber(t,  left,  getJSType(right), ",increment/decrement ");  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();    [BUGGY]  validator.expectNumber(t,  left,  getJSType(right), ",increment/decrement ");  [BUGGY]    t,  left,  getJSType(left),     "increment/decrement   ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	validator.expectNumber(t,  left,  getJSType(right), ",increment/decrement ");	  validator.expectNumber(t,    left,    getJSType(right),   "increment/decrement   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
34	[BUG]  [BUGGY]  validator.expectNumber(t,  left,  getJSType(left),  right);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    break;  case  Token.RETURN:  visitReturn(t,  n);  typeable  =  false;  break;  case  Token.DEC:  case  Token.INC:  left  =  n.getFirstChild();    [BUGGY]  validator.expectNumber(t,  left,  getJSType(left),  right);  [BUGGY]    t,  left,  getJSType(left),     "increment/decrement   ");  ensureTyped(t,  n,  NUMBER_TYPE);  break;  case  Token.NOT:  ensureTyped(t,  n,  BOOLEAN_TYPE);  break;  case  Token.VOID:  ensureTyped(t,  n,  VOID_TYPE);  [CLASS]  TypeCheck  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  ReverseAbstractInterpreter  reverseInterpreter  JSType  caseType  childType  leftType  leftTypeRestricted  rightType  rightTypeRestricted  switchType  NodeTraversal  t  DiagnosticGroup  ALL_DIAGNOSTICS  CheckLevel  reportMissingOverride  reportUnknownTypes  Node  child  key  left  n  parent  right  ScopeCreator  scopeCreator  String  OVERRIDING_PROTOTYPE_WITH_NON_OBJECT  functionPrivateName  message  TernaryValue  result  int  noTypeCheckSection  nullCount  typedCount  unknownCount  TypeValidator  validator  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  enterSection  externs  inExterns  report  reportMissingProperties  typeable  Scope  outerScope  topScope  DiagnosticType  BAD_DELETE  BAD_IMPLEMENTED_TYPE  BIT_OPERATION  CONFLICTING_EXTENDED_TYPE  CONFLICTING_IMPLEMENTED_TYPE  CONSTRUCTOR_NOT_CALLABLE  DETERMINISTIC_TEST  DETERMINISTIC_TEST_NO_RESULT  ENUM_DUP  ENUM_NOT_CONSTANT  EXPECTED_THIS_TYPE  FUNCTION_MASKS_VARIABLE  HIDDEN_INTERFACE_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY  HIDDEN_SUPERCLASS_PROPERTY_MISMATCH  ILLEGAL_IMPLICIT_CAST  INCOMPATIBLE_EXTENDED_PROPERTY_TYPE  INEXISTENT_ENUM_ELEMENT  INEXISTENT_PROPERTY  INTERFACE_FUNCTION_NOT_EMPTY  INTERFACE_METHOD_OVERRIDE  INVALID_INTERFACE_MEMBER_DECLARATION  MULTIPLE_VAR_DEF  NOT_A_CONSTRUCTOR  NOT_CALLABLE  UNEXPECTED_TOKEN  UNKNOWN_EXPR_TYPE  UNKNOWN_OVERRIDE  UNRESOLVED_TYPE  WRONG_ARGUMENT_COUNT  diagnosticType  InferJSDocInfo  inferJSDocInfo  	projects/Closure69/src/com/google/javascript/jscomp/TypeCheck.java	0.20412414523193154	569	570	3	replace	validator.expectNumber(t,  left,  getJSType(left),  right);	  validator.expectNumber(t,    left,    getJSType(left));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
