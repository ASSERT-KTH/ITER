bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(val.length()  ==  0  ||  val.charAt(0)  ==  '-')  {  return  null;  }  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  if(val.length()  ==  0  ||  val.charAt(0)  ==  '-')  {  return  null;  }  [BUGGY]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.length()  ==  0  ||  val.charAt(0)  ==  '-')  {  return  null;  }	      if(val.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	8	None	replace
2	[BUG]  [BUGGY]  if(val.length()  ==  0  ||  val.charAt(0)!=  '-')  {  return  null;  }  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  if(val.length()  ==  0  ||  val.charAt(0)!=  '-')  {  return  null;  }  [BUGGY]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.length()  ==  0  ||  val.charAt(0)!=  '-')  {  return  null;  }	      if(val.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	8	None	replace
3	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length());  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  String  val  =  val.substring(0,  val.length());  [BUGGY]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	String  val  =  val.substring(0,  val.length());	      String    val    =    val.substring(0,    val.length()    -    2);    	non-compiled	[CE]  not  a  statement	2	None	replace
4	[BUG]  [BUGGY]  char  val  =  val.substring(0,  val.length());  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  char  val  =  val.substring(0,  val.length());  [BUGGY]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	char  val  =  val.substring(0,  val.length());	      String    val    =    val.substring(0,    val.length()    -    2);    	non-compiled	[CE]  not  a  statement	2	None	replace
5	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length();  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  String  val  =  val.substring(0,  val.length();  [BUGGY]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	String  val  =  val.substring(0,  val.length();	      String    val    =    val.substring(0,    val.length()    -    2);    	non-compiled	[CE]  not  a  statement	2	None	replace
6	[BUG]  [BUGGY]  String  val  =  val,  val.substring(0,  val.length());  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  String  val  =  val,  val.substring(0,  val.length());  [BUGGY]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	String  val  =  val,  val.substring(0,  val.length());	      String    val    =    val.substring(0,    val.length()    -    2);    	non-compiled	[CE]  not  a  statement	2	None	replace
7	[BUG]  [BUGGY]  if(val.length()  ==  0)  {  return  createNumber(val);  }  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  if(val.length()  ==  0)  {  return  createNumber(val);  }  [BUGGY]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.length()  ==  0)  {  return  createNumber(val);  }	      if(val.length()    ==    0)    {    return    createBigInteger(val);    }    	non-compiled	[CE]  not  a  statement	13	None	replace
8	[BUG]  [BUGGY]  if(val.length()  ==  0)  {  return  createInteger(val);  }  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  if(val.length()  ==  0)  {  return  createInteger(val);  }  [BUGGY]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.length()  ==  0)  {  return  createInteger(val);  }	      if(val.length()    ==    0)    {    return    createBigInteger(val);    }    	non-compiled	[CE]  not  a  statement	13	None	replace
9	[BUG]  [BUGGY]  if(val.length()  ==  0)  {  return  createBigDecimal(val);  }  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  if(val.length()  ==  0)  {  return  createBigDecimal(val);  }  [BUGGY]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.length()  ==  0)  {  return  createBigDecimal(val);  }	      if(val.length()    ==    0)    {    return    createBigInteger(val);    }    	non-compiled	[CE]  not  a  statement	13	None	replace
10	[BUG]  [BUGGY]  if(val.startsWith( "-0 ")||  val.startsWith( "-0 "))  {  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  if(val.startsWith( "-0 ")||  val.startsWith( "-0 "))  {  [BUGGY]        return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( "-0 ")||  val.startsWith( "-0 "))  {	  if(val.startsWith(   "-   ")||    val.startsWith(   "-0   "))    {    	non-compiled	[CE]  not  a  statement	7	None	replace
11	[BUG]  [BUGGY]  if(val.startsWith( "-0x   ")||  val.startsWith( "-0x   "))  {  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  if(val.startsWith( "-0x   ")||  val.startsWith( "-0x   "))  {  [BUGGY]        return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( "-0x   ")||  val.startsWith( "-0x   "))  {	  if(val.startsWith(   "-   ")||    val.startsWith(   "-0   "))    {    	non-compiled	[CE]  not  a  statement	7	None	replace
12	[BUG]  [BUGGY]  if(val.startsWith( ".0 ")||  val.startsWith( ".0 "))  {  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  if(val.startsWith( ".0 ")||  val.startsWith( ".0 "))  {  [BUGGY]        return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( ".0 ")||  val.startsWith( ".0 "))  {	  if(val.startsWith(   "--   ")||    val.startsWith(   "--   "))    {    	non-compiled	[CE]  not  a  statement	6	None	replace
13	[BUG]  [BUGGY]  if(val.startsWith( "-- ")||  val.startsWith( "--))  {  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  if(val.startsWith( "-- ")||  val.startsWith( "--))  {  [BUGGY]        return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( "-- ")||  val.startsWith( "--))  {	  if(val.startsWith(   "--   ")||    val.startsWith(   "--   "))    {    	non-compiled	[CE]  not  a  statement	6	None	replace
14	[BUG]  [BUGGY]  Number  val  =(Number)val.getValue();  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  Number  val  =(Number)val.getValue();  [BUGGY]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	Number  val  =(Number)val.getValue();	      Number    val    =(Number)val.clone();    	non-compiled	[CE]  not  a  statement	4	None	replace
15	[BUG]  [BUGGY]  Number  val  =(Number)val.cloneTree();  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  Number  val  =(Number)val.cloneTree();  [BUGGY]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	Number  val  =(Number)val.cloneTree();	      Number    val    =(Number)val.clone();    	non-compiled	[CE]  not  a  statement	4	None	replace
16	[BUG]  [BUGGY]  Number  val  =(Number)n.clone();  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  Number  val  =(Number)n.clone();  [BUGGY]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	Number  val  =(Number)n.clone();	      Number    val    =(Number)val.clone();    	non-compiled	[CE]  not  a  statement	4	None	replace
17	[BUG]  [BUGGY]  char  val  =  val.substring(0,  val.length()  -  1);  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  char  val  =  val.substring(0,  val.length()  -  1);  [BUGGY]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	char  val  =  val.substring(0,  val.length()  -  1);	      String    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	1	None	replace
18	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length()  +  1);  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  String  val  =  val.substring(0,  val.length()  +  1);  [BUGGY]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	String  val  =  val.substring(0,  val.length()  +  1);	      String    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	1	None	replace
19	[BUG]  [BUGGY]  String  val  =  val.toUpperCase();  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  String  val  =  val.toUpperCase();  [BUGGY]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	String  val  =  val.toUpperCase();	      String    val    =    val.toLowerCase();    	non-compiled	[CE]  not  a  statement	3	None	replace
20	[BUG]  [BUGGY]  String  val  =  val.toLowerCase(Locale.ENGLISH);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  String  val  =  val.toLowerCase(Locale.ENGLISH);  [BUGGY]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	String  val  =  val.toLowerCase(Locale.ENGLISH);	      String    val    =    val.toLowerCase();    	non-compiled	[CE]  not  a  statement	3	None	replace
21	[BUG]  [BUGGY]  if(val.startsWith( "0x   ")||  val.startsWith( "-1))  {  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  if(val.startsWith( "0x   ")||  val.startsWith( "-1))  {  [BUGGY]        return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( "0x   ")||  val.startsWith( "-1))  {	  if(val.startsWith(   "0x   ")||    val.startsWith(   "-0x   "))    {    	non-compiled	[CE]  not  a  statement	5	None	replace
22	[BUG]  [BUGGY]  Number  val  =  val.substring(0,  val.length()  -  1);  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  Number  val  =  val.substring(0,  val.length()  -  1);  [BUGGY]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	Number  val  =  val.substring(0,  val.length()  -  1);	      if(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	12	None	replace
23	[BUG]  [BUGGY]  while(val.length()  ==  0)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number.   ");  }  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  while(val.length()  ==  0)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number.   ");  }  [BUGGY]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	while(val.length()  ==  0)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number.   ");  }	      if(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	12	None	replace
24	[BUG]  [BUGGY]  while(val.length()!=  0)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number.   ");  }  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  while(val.length()!=  0)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number.   ");  }  [BUGGY]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	while(val.length()!=  0)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number.   ");  }	      if(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	12	None	replace
25	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length())+  1;  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  String  val  =  val.substring(0,  val.length())+  1;  [BUGGY]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	String  val  =  val.substring(0,  val.length())+  1;	      String    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	1	None	replace
26	[BUG]  [BUGGY]  nisip  =  val.charAt(val.length()  -  1);  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  nisip  =  val.charAt(val.length()  -  1);  [BUGGY]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	nisip  =  val.charAt(val.length()  -  1);	      if(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	12	None	replace
27	[BUG]  [BUGGY]  Number  val  =  val.substring(0,  val.length()  -  2);  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  Number  val  =  val.substring(0,  val.length()  -  2);  [BUGGY]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	Number  val  =  val.substring(0,  val.length()  -  2);	      if(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	12	None	replace
28	[BUG]  [BUGGY]  if(val.startsWith( ".0x ")||  val.startsWith( "-0x "))  {  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  if(val.startsWith( ".0x ")||  val.startsWith( "-0x "))  {  [BUGGY]        return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( ".0x ")||  val.startsWith( "-0x "))  {	  if(val.startsWith(   "0x   ")||    val.startsWith(   "-0x   "))    {    	non-compiled	[CE]  not  a  statement	5	None	replace
29	[BUG]  [BUGGY]  if(val.startsWith( "0x ")||  val.startsWith( "-1x "))  {  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  if(val.startsWith( "0x ")||  val.startsWith( "-1x "))  {  [BUGGY]        return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( "0x ")||  val.startsWith( "-1x "))  {	  if(val.startsWith(   "0x   ")||    val.startsWith(   "-0x   "))    {    	non-compiled	[CE]  not  a  statement	5	None	replace
30	[BUG]  [BUGGY]  if(val.length()  ==  1)  {  return  null;  }  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  if(val.length()  ==  1)  {  return  null;  }  [BUGGY]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.length()  ==  1)  {  return  null;  }	      if(val.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	8	None	replace
31	[BUG]  [BUGGY]  if(val.length()  ==  0)  {  return  this;  }  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  if(val.length()  ==  0)  {  return  this;  }  [BUGGY]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.length()  ==  0)  {  return  this;  }	      if(val.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	8	None	replace
32	[BUG]  [BUGGY]  if(val.length()!=  0)  {  return  null;  }  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  if(val.length()!=  0)  {  return  null;  }  [BUGGY]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.length()!=  0)  {  return  null;  }	      if(val.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	8	None	replace
33	[BUG]  [BUGGY]  Number  val  =(Number)nfe.clone();  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  Number  val  =(Number)nfe.clone();  [BUGGY]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	Number  val  =(Number)nfe.clone();	      Number    val    =(Number)val.clone();    	non-compiled	[CE]  not  a  statement	4	None	replace
34	[BUG]  [BUGGY]  Number  val  =(Number)val.toCharArray();  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  Number  val  =(Number)val.toCharArray();  [BUGGY]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	Number  val  =(Number)val.toCharArray();	      Number    val    =(Number)val.clone();    	non-compiled	[CE]  not  a  statement	4	None	replace
35	[BUG]  [BUGGY]  if(val.startsWith( "- ")||  val.startsWith( "-+ "))  {  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  if(val.startsWith( "- ")||  val.startsWith( "-+ "))  {  [BUGGY]        return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( "- ")||  val.startsWith( "-+ "))  {	  if(val.startsWith(   "-   ")||    val.startsWith(   "-   "))    {    	non-compiled	[CE]  not  a  statement	11	None	replace
36	[BUG]  [BUGGY]  if(val.startsWith( "- ")||  val.startsWith( "-- ")||  val.startsWith( "-- "))  {  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  if(val.startsWith( "- ")||  val.startsWith( "-- ")||  val.startsWith( "-- "))  {  [BUGGY]        return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( "- ")||  val.startsWith( "-- ")||  val.startsWith( "-- "))  {	  if(val.startsWith(   "-   ")||    val.startsWith(   "--   "))    {    	non-compiled	[CE]  not  a  statement	10	None	replace
37	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length()));  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  String  val  =  val.substring(0,  val.length()));  [BUGGY]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	String  val  =  val.substring(0,  val.length()));	      String    val    =    val.substring(0,    val.length()    -    2);    	non-compiled	[CE]  not  a  statement	2	None	replace
38	[BUG]  [BUGGY]  if(val.startsWith( "- ")||  val.startsWith( "-0x "))  {  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  if(val.startsWith( "- ")||  val.startsWith( "-0x "))  {  [BUGGY]        return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( "- ")||  val.startsWith( "-0x "))  {	  if(val.startsWith(   "-   ")||    val.startsWith(   "-0   "))    {    	non-compiled	[CE]  not  a  statement	7	None	replace
39	[BUG]  [BUGGY]  if(val.startsWith( ".0 ")||  val.startsWith( "-0 "))  {  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  if(val.startsWith( ".0 ")||  val.startsWith( "-0 "))  {  [BUGGY]        return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( ".0 ")||  val.startsWith( "-0 "))  {	  if(val.startsWith(   "-   ")||    val.startsWith(   "-0   "))    {    	non-compiled	[CE]  not  a  statement	7	None	replace
40	[BUG]  [BUGGY]  if(val.startsWith( "-- ")||  val.startsWith( "-- ")||  val.startsWith( "-- "))  {  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  if(val.startsWith( "-- ")||  val.startsWith( "-- ")||  val.startsWith( "-- "))  {  [BUGGY]        return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( "-- ")||  val.startsWith( "-- ")||  val.startsWith( "-- "))  {	  if(val.startsWith(   "--   ")||    val.startsWith(   "--   "))    {    	non-compiled	[CE]  not  a  statement	6	None	replace
41	[BUG]  [BUGGY]  if(val.startsWith( "0x ")||  val.startsWith( "-1 "))  {  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  if(val.startsWith( "0x ")||  val.startsWith( "-1 "))  {  [BUGGY]        return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( "0x ")||  val.startsWith( "-1 "))  {	  if(val.startsWith(   "0x   ")||    val.startsWith(   "-0x   "))    {    	non-compiled	[CE]  not  a  statement	5	None	replace
42	[BUG]  [BUGGY]  while(val.length()  <  =  0)  {  throw  new  NumberFormatException( " ");  }  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  while(val.length()  <  =  0)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	while(val.length()  <  =  0)  {  throw  new  NumberFormatException( " ");  }	      if(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	12	None	replace
43	[BUG]  [BUGGY]  while(val.length()  <  2)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");  }  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  while(val.length()  <  2)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");  }  [BUGGY]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	while(val.length()  <  2)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");  }	      if(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	12	None	replace
44	[BUG]  [BUGGY]  while(val.length()  <  1)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");  }  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  while(val.length()  <  1)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");  }  [BUGGY]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	while(val.length()  <  1)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");  }	      if(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	12	None	replace
45	[BUG]  [BUGGY]  if(val.startsWith( "-1 ")||  val.startsWith( "-1 "))  {  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  if(val.startsWith( "-1 ")||  val.startsWith( "-1 "))  {  [BUGGY]        return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( "-1 ")||  val.startsWith( "-1 "))  {	  if(val.startsWith(   "--   ")||    val.startsWith(   "--   "))    {    	non-compiled	[CE]  not  a  statement	6	None	replace
46	[BUG]  [BUGGY]  if(val.length()  ==  1)  {  return  createBigInteger(val);  }  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  if(val.length()  ==  1)  {  return  createBigInteger(val);  }  [BUGGY]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.length()  ==  1)  {  return  createBigInteger(val);  }	      if(val.length()    ==    0)    {    return    createBigInteger(val);    }    	non-compiled	[CE]  not  a  statement	13	None	replace
47	[BUG]  [BUGGY]  if(val.length()  ==  1)  {  return  createInteger(val);  }  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }    [BUGGY]  if(val.length()  ==  1)  {  return  createInteger(val);  }  [BUGGY]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.length()  ==  1)  {  return  createInteger(val);  }	      if(val.length()    ==    0)    {    return    createBigInteger(val);    }    	non-compiled	[CE]  not  a  statement	13	None	replace
