bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  val  =  val.toUpperCase(Locale.ENGLISH);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  String  val  =  val.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	String  val  =  val.toUpperCase(Locale.ENGLISH);	  String    val    =    val.toUpperCase();    	non-compiled	[CE]  not  a  statement	19	None	replace
2	[BUG]  [BUGGY]  char  val  =  val.substring(0,  val.length()  -  2);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  char  val  =  val.substring(0,  val.length()  -  2);  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	char  val  =  val.substring(0,  val.length()  -  2);	  char    val    =    val.substring(0,    val.length());    	non-compiled	[CE]  not  a  statement	4	None	replace
3	[BUG]  [BUGGY]  if(val.startsWith( "0x   ")||  val.startsWith( ".-1))  {  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.startsWith( "0x   ")||  val.startsWith( ".-1))  {  [BUGGY]          return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( "0x   ")||  val.startsWith( ".-1))  {	  if(val.startsWith(   "0x       ")||    val.startsWith(   "-1))    {    	non-compiled	[CE]  not  a  statement	21	None	replace
4	[BUG]  [BUGGY]  Number  val  =(Number)nfe.getValue();  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  Number  val  =(Number)nfe.getValue();  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	Number  val  =(Number)nfe.getValue();	  Number    val    =(Number)nfe.clone();    	non-compiled	[CE]  not  a  statement	33	None	replace
5	[BUG]  [BUGGY]  Number  val  =(Number)f.clone();  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  Number  val  =(Number)f.clone();  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	Number  val  =(Number)f.clone();	  Number    val    =(Number)nfe.clone();    	non-compiled	[CE]  not  a  statement	33	None	replace
6	[BUG]  [BUGGY]  if(val.startsWith( "-- ")||  val.startsWith( ".-- "))  {  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.startsWith( "-- ")||  val.startsWith( ".-- "))  {  [BUGGY]          return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( "-- ")||  val.startsWith( ".-- "))  {	  if(val.startsWith(   "--   ")||    val.startsWith(   "--))    {    	non-compiled	[CE]  not  a  statement	13	None	replace
7	[BUG]  [BUGGY]  if(val.startsWith( "0x   ")||  val.startsWith( "--   ")||  val.startsWith( "--   "))  {  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.startsWith( "0x   ")||  val.startsWith( "--   ")||  val.startsWith( "--   "))  {  [BUGGY]          return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( "0x   ")||  val.startsWith( "--   ")||  val.startsWith( "--   "))  {	  if(val.startsWith(   "--   ")||    val.startsWith(   "--   ")||    val.startsWith(   "--   "))    {    	non-compiled	[CE]  not  a  statement	40	None	replace
8	[BUG]  [BUGGY]  if(val.startsWith( ".0 ")||  val.startsWith( ".0 ")||  val.startsWith( ".0 "))  {  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.startsWith( ".0 ")||  val.startsWith( ".0 ")||  val.startsWith( ".0 "))  {  [BUGGY]          return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( ".0 ")||  val.startsWith( ".0 ")||  val.startsWith( ".0 "))  {	  if(val.startsWith(   "--   ")||    val.startsWith(   "--   ")||    val.startsWith(   "--   "))    {    	non-compiled	[CE]  not  a  statement	40	None	replace
9	[BUG]  [BUGGY]  if(val.startsWith( "0 ")||  val.startsWith( "-0 "))  {  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.startsWith( "0 ")||  val.startsWith( "-0 "))  {  [BUGGY]          return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( "0 ")||  val.startsWith( "-0 "))  {	  if(val.startsWith(   ".0   ")||    val.startsWith(   "-0   "))    {    	non-compiled	[CE]  not  a  statement	39	None	replace
10	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length()).trim();  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  String  val  =  val.substring(0,  val.length()).trim();  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	String  val  =  val.substring(0,  val.length()).trim();	  String    val    =    val.substring(0,    val.length()    +    1);    	non-compiled	[CE]  not  a  statement	18	None	replace
11	[BUG]  [BUGGY]  String  val  =  val.toLowerCase(Locale.ENGLISH,  true);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  String  val  =  val.toLowerCase(Locale.ENGLISH,  true);  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	String  val  =  val.toLowerCase(Locale.ENGLISH,  true);	  String    val    =    val.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  not  a  statement	20	None	replace
12	[BUG]  [BUGGY]  String  val  =  val.toLowerCase(Locale.ENGLISH,  false);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  String  val  =  val.toLowerCase(Locale.ENGLISH,  false);  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	String  val  =  val.toLowerCase(Locale.ENGLISH,  false);	  String    val    =    val.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  not  a  statement	20	None	replace
13	[BUG]  [BUGGY]  Number  val  =(Number)val.cloneByte();  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  Number  val  =(Number)val.cloneByte();  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	Number  val  =(Number)val.cloneByte();	  Number    val    =(Number)val.cloneTree();    	non-compiled	[CE]  not  a  statement	15	None	replace
14	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length()  -  1));  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  String  val  =  val.substring(0,  val.length()  -  1));  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	String  val  =  val.substring(0,  val.length()  -  1));	  String    val    =    val.substring(0,    val.length()));    	non-compiled	[CE]  not  a  statement	37	None	replace
15	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length()  -  2));  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  String  val  =  val.substring(0,  val.length()  -  2));  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	String  val  =  val.substring(0,  val.length()  -  2));	  String    val    =    val.substring(0,    val.length()));    	non-compiled	[CE]  not  a  statement	37	None	replace
16	[BUG]  [BUGGY]  if(val.startsWith( "0 ")||  val.startsWith( "0 "))  {  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.startsWith( "0 ")||  val.startsWith( "0 "))  {  [BUGGY]          return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( "0 ")||  val.startsWith( "0 "))  {	  if(val.startsWith(   "-0   ")||    val.startsWith(   "-0   "))    {    	non-compiled	[CE]  not  a  statement	10	None	replace
17	[BUG]  [BUGGY]  if(val.length()  ==  1)  {  return  createNumber(val);  }  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.length()  ==  1)  {  return  createNumber(val);  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.length()  ==  1)  {  return  createNumber(val);  }	  if(val.length()    ==    1)    {    return    createInteger(val);    }    	non-compiled	[CE]  not  a  statement	47	None	replace
18	[BUG]  [BUGGY]  if(val.length()  ==  1)  {  return  createNull(val);  }  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.length()  ==  1)  {  return  createNull(val);  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.length()  ==  1)  {  return  createNull(val);  }	  if(val.length()    ==    1)    {    return    createInteger(val);    }    	non-compiled	[CE]  not  a  statement	47	None	replace
19	[BUG]  [BUGGY]  if(val.length()  ==  1)  {  return  createInteger(0);  }  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.length()  ==  1)  {  return  createInteger(0);  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.length()  ==  1)  {  return  createInteger(0);  }	  if(val.length()    ==    1)    {    return    createInteger(val);    }    	non-compiled	[CE]  not  a  statement	47	None	replace
20	[BUG]  [BUGGY]  String  val  =  val,  val.substring(0,  val.length()  -  1);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  String  val  =  val,  val.substring(0,  val.length()  -  1);  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	String  val  =  val,  val.substring(0,  val.length()  -  1);	  String    val    =    val,    val.substring(0,    val.length());    	non-compiled	[CE]  not  a  statement	6	None	replace
21	[BUG]  [BUGGY]  String  val  =  val,  val.substring(0,  val.length()  -  2);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  String  val  =  val,  val.substring(0,  val.length()  -  2);  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	String  val  =  val,  val.substring(0,  val.length()  -  2);	  String    val    =    val,    val.substring(0,    val.length());    	non-compiled	[CE]  not  a  statement	6	None	replace
22	[BUG]  [BUGGY]  Character  val  =  val.substring(0,  val.length()  -  1);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  Character  val  =  val.substring(0,  val.length()  -  1);  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	Character  val  =  val.substring(0,  val.length()  -  1);	  char    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	17	None	replace
23	[BUG]  [BUGGY]  while(val.length()  <  1)  {  throw  new  NumberFormatException( " "  is  not  a  valid  number. ");  }  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  while(val.length()  <  1)  {  throw  new  NumberFormatException( " "  is  not  a  valid  number. ");  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	while(val.length()  <  1)  {  throw  new  NumberFormatException( " "  is  not  a  valid  number. ");  }	  while(val.length()    <    1)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.   ");    }    	non-compiled	[CE]  not  a  statement	44	None	replace
24	[BUG]  [BUGGY]  while(val.length()  ==  1)  {  throw  new  NumberFormatException( " ", "  is  not  a  valid  number.   ");  }  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  while(val.length()  ==  1)  {  throw  new  NumberFormatException( " ", "  is  not  a  valid  number.   ");  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	while(val.length()  ==  1)  {  throw  new  NumberFormatException( " ", "  is  not  a  valid  number.   ");  }	  while(val.length()    <    1)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.   ");    }    	non-compiled	[CE]  not  a  statement	44	None	replace
25	[BUG]  [BUGGY]  while(val.length()  >  1)  {  throw  new  NumberFormatException( " ", "  is  not  a  valid  number.   ");  }  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  while(val.length()  >  1)  {  throw  new  NumberFormatException( " ", "  is  not  a  valid  number.   ");  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	while(val.length()  >  1)  {  throw  new  NumberFormatException( " ", "  is  not  a  valid  number.   ");  }	  while(val.length()    <    1)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.   ");    }    	non-compiled	[CE]  not  a  statement	44	None	replace
26	[BUG]  [BUGGY]  if(val.length()  ==  1)  {  return  createBigDecimal(val);  }  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.length()  ==  1)  {  return  createBigDecimal(val);  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.length()  ==  1)  {  return  createBigDecimal(val);  }	  if(val.length()    ==    1)    {    return    createBigInteger(val);    }    	non-compiled	[CE]  not  a  statement	46	None	replace
27	[BUG]  [BUGGY]  if(val.length()  ==  0  ||  val.charAt(0)  ==  '-')return  null;  }  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.length()  ==  0  ||  val.charAt(0)  ==  '-')return  null;  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.length()  ==  0  ||  val.charAt(0)  ==  '-')return  null;  }	  if(val.length()    ==    0    ||    val.charAt(0)    ==    '-')    {    return    null;    }    	non-compiled	[CE]  not  a  statement	1	None	replace
28	[BUG]  [BUGGY]  if(val.length()  ==  0  ||  val.charAt(1)  ==  '-')  {  return  null;  }  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.length()  ==  0  ||  val.charAt(1)  ==  '-')  {  return  null;  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.length()  ==  0  ||  val.charAt(1)  ==  '-')  {  return  null;  }	  if(val.length()    ==    0    ||    val.charAt(0)    ==    '-')    {    return    null;    }    	non-compiled	[CE]  not  a  statement	1	None	replace
29	[BUG]  [BUGGY]  Number  val  =(Number)number.clone();  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  Number  val  =(Number)number.clone();  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	Number  val  =(Number)number.clone();	  Number    val    =(Number)n.clone();    	non-compiled	[CE]  not  a  statement	16	None	replace
30	[BUG]  [BUGGY]  Number  val  =(Number)null;  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  Number  val  =(Number)null;  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	Number  val  =(Number)null;	  Number    val    =(Number)n.clone();    	non-compiled	[CE]  not  a  statement	16	None	replace
31	[BUG]  [BUGGY]  if(val.startsWith( "-0 ")||  val.startsWith( "-0x "))  {  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.startsWith( "-0 ")||  val.startsWith( "-0x "))  {  [BUGGY]          return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( "-0 ")||  val.startsWith( "-0x "))  {	  if(val.startsWith(   "-   ")||    val.startsWith(   "-0x   "))    {    	non-compiled	[CE]  not  a  statement	38	None	replace
32	[BUG]  [BUGGY]  if(val.startsWith( "- ")||  val.startsWith( "-1))  {  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.startsWith( "- ")||  val.startsWith( "-1))  {  [BUGGY]          return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( "- ")||  val.startsWith( "-1))  {	  if(val.startsWith(   "-   ")||    val.startsWith(   "-0x   "))    {    	non-compiled	[CE]  not  a  statement	38	None	replace
33	[BUG]  [BUGGY]  if(val.startsWith( "-1x   ")||  val.startsWith( "-1x   "))  {  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.startsWith( "-1x   ")||  val.startsWith( "-1x   "))  {  [BUGGY]          return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( "-1x   ")||  val.startsWith( "-1x   "))  {	  if(val.startsWith(   "-1   ")||    val.startsWith(   "-1   "))    {    	non-compiled	[CE]  not  a  statement	45	None	replace
34	[BUG]  [BUGGY]  if(val.startsWith( ".0 ")||  val.startsWith( "-1 "))  {  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.startsWith( ".0 ")||  val.startsWith( "-1 "))  {  [BUGGY]          return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( ".0 ")||  val.startsWith( "-1 "))  {	  if(val.startsWith(   "-1   ")||    val.startsWith(   "-1   "))    {    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
35	[BUG]  [BUGGY]  while(val.length()  <  2)  {  throw  new  NumberFormatException( " "  is  not  a  valid  number. ");  }  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  while(val.length()  <  2)  {  throw  new  NumberFormatException( " "  is  not  a  valid  number. ");  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	while(val.length()  <  2)  {  throw  new  NumberFormatException( " "  is  not  a  valid  number. ");  }	  while(val.length()    <    2)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.   ");    }    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
36	[BUG]  [BUGGY]  while(val.length()  ==  2)  {  throw  new  NumberFormatException( " ", "  is  not  a  valid  number.   ");  }  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  while(val.length()  ==  2)  {  throw  new  NumberFormatException( " ", "  is  not  a  valid  number.   ");  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	while(val.length()  ==  2)  {  throw  new  NumberFormatException( " ", "  is  not  a  valid  number.   ");  }	  while(val.length()    <    2)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.   ");    }    	non-compiled	[CE]  not  a  statement	43	None	replace
37	[BUG]  [BUGGY]  if(val.length()!=  1)  {  return  null;  }  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.length()!=  1)  {  return  null;  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.length()!=  1)  {  return  null;  }	  if(val.length()    ==    1)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	30	None	replace
38	[BUG]  [BUGGY]  while(val.length()  ==  1)  {  val  =  val.substring(1);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  while(val.length()  ==  1)  {  val  =  val.substring(1);  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	while(val.length()  ==  1)  {  val  =  val.substring(1);	  if(val.length()    ==    1)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	30	None	replace
39	[BUG]  [BUGGY]  if(val.startsWith( "0x   ")||  val.startsWith( "0x   "))  {  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.startsWith( "0x   ")||  val.startsWith( "0x   "))  {  [BUGGY]          return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( "0x   ")||  val.startsWith( "0x   "))  {	  if(val.startsWith(   ".0   ")||    val.startsWith(   ".0   "))    {    	non-compiled	[CE]  not  a  statement	12	None	replace
40	[BUG]  [BUGGY]  if(val.startsWith( "0x   ")||  val.startsWith( "0.0x   "))  {  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.startsWith( "0x   ")||  val.startsWith( "0.0x   "))  {  [BUGGY]          return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( "0x   ")||  val.startsWith( "0.0x   "))  {	  if(val.startsWith(   ".0   ")||    val.startsWith(   ".0   "))    {    	non-compiled	[CE]  not  a  statement	12	None	replace
41	[BUG]  [BUGGY]  if(val.length()  ==  0  ||  val.charAt(0)!=  '-')return  null;  }  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.length()  ==  0  ||  val.charAt(0)!=  '-')return  null;  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.length()  ==  0  ||  val.charAt(0)!=  '-')return  null;  }	  if(val.length()    ==    0    ||    val.charAt(0)!=    '-')    {    return    null;    }    	non-compiled	[CE]  not  a  statement	2	None	replace
42	[BUG]  [BUGGY]  if(val.length()!=  0  ||  val.charAt(0)!=  '-')  {  return  null;  }  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.length()!=  0  ||  val.charAt(0)!=  '-')  {  return  null;  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.length()!=  0  ||  val.charAt(0)!=  '-')  {  return  null;  }	  if(val.length()    ==    0    ||    val.charAt(0)!=    '-')    {    return    null;    }    	non-compiled	[CE]  not  a  statement	2	None	replace
43	[BUG]  [BUGGY]  if(val.length()  ==  0  ||  val.charAt(1)!=  '-')  {  return  null;  }  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.length()  ==  0  ||  val.charAt(1)!=  '-')  {  return  null;  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.length()  ==  0  ||  val.charAt(1)!=  '-')  {  return  null;  }	  if(val.length()    ==    0    ||    val.charAt(0)!=    '-')    {    return    null;    }    	non-compiled	[CE]  not  a  statement	2	None	replace
44	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length()  -  1)+  1;  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  String  val  =  val.substring(0,  val.length()  -  1)+  1;  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	String  val  =  val.substring(0,  val.length()  -  1)+  1;	  String    val    =    val.substring(0,    val.length())+    1;    	non-compiled	[CE]  not  a  statement	25	None	replace
45	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length()  +  1)+  1;  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  String  val  =  val.substring(0,  val.length()  +  1)+  1;  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	String  val  =  val.substring(0,  val.length()  +  1)+  1;	  String    val    =    val.substring(0,    val.length())+    1;    	non-compiled	[CE]  not  a  statement	25	None	replace
46	[BUG]  [BUGGY]  if(val.length()  ==  0)  {  return  createNull(val);  }  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.length()  ==  0)  {  return  createNull(val);  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.length()  ==  0)  {  return  createNull(val);  }	  if(val.length()    ==    0)    {    return    createInteger(val);    }    	non-compiled	[CE]  not  a  statement	8	None	replace
47	[BUG]  [BUGGY]  if(val.length()  ==  0  ||  val.charAt(0)  ==  '-')  {  return  createInteger(val);  }  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.length()  ==  0  ||  val.charAt(0)  ==  '-')  {  return  createInteger(val);  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.length()  ==  0  ||  val.charAt(0)  ==  '-')  {  return  createInteger(val);  }	  if(val.length()    ==    0)    {    return    createInteger(val);    }    	non-compiled	[CE]  not  a  statement	8	None	replace
48	[BUG]  [BUGGY]  if(val.startsWith( "-0 ")||  val.startsWith( "-- ")||  val.startsWith( "-- "))  {  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.startsWith( "-0 ")||  val.startsWith( "-- ")||  val.startsWith( "-- "))  {  [BUGGY]          return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( "-0 ")||  val.startsWith( "-- ")||  val.startsWith( "-- "))  {	  if(val.startsWith(   "-   ")||    val.startsWith(   "--   ")||    val.startsWith(   "--   "))    {    	non-compiled	[CE]  not  a  statement	36	None	replace
49	[BUG]  [BUGGY]  Number  val  =  val.substring(0,  val.length());  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  Number  val  =  val.substring(0,  val.length());  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	Number  val  =  val.substring(0,  val.length());	  Number    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	22	None	replace
50	[BUG]  [BUGGY]  val  =  val.substring(0,  val.length());  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  val  =  val.substring(0,  val.length());  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	val  =  val.substring(0,  val.length());	  Number    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	22	None	replace
51	[BUG]  [BUGGY]  Number  val  =  val.substring(0,  val.length();  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  Number  val  =  val.substring(0,  val.length();  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	Number  val  =  val.substring(0,  val.length();	  Number    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	22	None	replace
52	[BUG]  [BUGGY]  nisip  =  val.charAt(val.length());  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  nisip  =  val.charAt(val.length());  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	nisip  =  val.charAt(val.length());	  nisip    =    val.charAt(val.length()    -    1);    	non-compiled	[CE]  not  a  statement	26	None	replace
53	[BUG]  [BUGGY]  nisip  =  val.trim().charAt(val.length()  -  1);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  nisip  =  val.trim().charAt(val.length()  -  1);  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	nisip  =  val.trim().charAt(val.length()  -  1);	  nisip    =    val.charAt(val.length()    -    1);    	non-compiled	[CE]  not  a  statement	26	None	replace
54	[BUG]  [BUGGY]  nisip  =  val.substring(val.length()  -  1);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  nisip  =  val.substring(val.length()  -  1);  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	nisip  =  val.substring(val.length()  -  1);	  nisip    =    val.charAt(val.length()    -    1);    	non-compiled	[CE]  not  a  statement	26	None	replace
55	[BUG]  [BUGGY]  nisip  =  val.charAt(val.length()  +  1);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  nisip  =  val.charAt(val.length()  +  1);  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	nisip  =  val.charAt(val.length()  +  1);	  nisip    =    val.charAt(val.length()    -    1);    	non-compiled	[CE]  not  a  statement	26	None	replace
56	[BUG]  [BUGGY]  while(val.length()  ==  0)  {  throw  new  NumberFormatException( " ");  }  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  while(val.length()  ==  0)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	while(val.length()  ==  0)  {  throw  new  NumberFormatException( " ");  }	  while(val.length()    <    =    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	42	None	replace
57	[BUG]  [BUGGY]  while(val.length()!=  0)  {  throw  new  NumberFormatException( " ");  }  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  while(val.length()!=  0)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	while(val.length()!=  0)  {  throw  new  NumberFormatException( " ");  }	  while(val.length()    <    =    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	42	None	replace
58	[BUG]  [BUGGY]  while(val.length()  >=  0)  {  throw  new  NumberFormatException( " ");  }  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  while(val.length()  >=  0)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	while(val.length()  >=  0)  {  throw  new  NumberFormatException( " ");  }	  while(val.length()    <    =    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	42	None	replace
59	[BUG]  [BUGGY]  Number  val  =(Number)val.getKey();  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  Number  val  =(Number)val.getKey();  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	Number  val  =(Number)val.getKey();	  Number    val    =(Number)val.getValue();    	non-compiled	[CE]  not  a  statement	14	None	replace
60	[BUG]  [BUGGY]  Number  val  =(Number)val.intValue();  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  Number  val  =(Number)val.intValue();  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	Number  val  =(Number)val.intValue();	  Number    val    =(Number)val.getValue();    	non-compiled	[CE]  not  a  statement	14	None	replace
61	[BUG]  [BUGGY]  if(val.startsWith( "0x   ")||  val.startsWith( "-+ "))  {  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.startsWith( "0x   ")||  val.startsWith( "-+ "))  {  [BUGGY]          return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( "0x   ")||  val.startsWith( "-+ "))  {	  if(val.startsWith(   "-   ")||    val.startsWith(   "-+   "))    {    	non-compiled	[CE]  not  a  statement	35	None	replace
62	[BUG]  [BUGGY]  if(val.startsWith( ".0 ")||  val.startsWith( "-+ "))  {  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.startsWith( ".0 ")||  val.startsWith( "-+ "))  {  [BUGGY]          return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( ".0 ")||  val.startsWith( "-+ "))  {	  if(val.startsWith(   "-   ")||    val.startsWith(   "-+   "))    {    	non-compiled	[CE]  not  a  statement	35	None	replace
63	[BUG]  [BUGGY]  if(val.startsWith( "-+ ")||  val.startsWith( "-+ "))  {  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.startsWith( "-+ ")||  val.startsWith( "-+ "))  {  [BUGGY]          return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( "-+ ")||  val.startsWith( "-+ "))  {	  if(val.startsWith(   "-   ")||    val.startsWith(   "-+   "))    {    	non-compiled	[CE]  not  a  statement	35	None	replace
64	[BUG]  [BUGGY]  number  =  val.substring(0,  val.length());  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  number  =  val.substring(0,  val.length());  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	number  =  val.substring(0,  val.length());	  Number    val    =    val.substring(0,    val.length()    -    2);    	non-compiled	[CE]  not  a  statement	27	None	replace
65	[BUG]  [BUGGY]  Number  val  =(Number)val.toString();  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  Number  val  =(Number)val.toString();  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	Number  val  =(Number)val.toString();	  Number    val    =(Number)val.toCharArray();    	non-compiled	[CE]  not  a  statement	34	None	replace
66	[BUG]  [BUGGY]  if(val.length()  ==  0  ||  val.charAt(0)  ==  '-')  {  return  createNumber(val);  }  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.length()  ==  0  ||  val.charAt(0)  ==  '-')  {  return  createNumber(val);  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.length()  ==  0  ||  val.charAt(0)  ==  '-')  {  return  createNumber(val);  }	  if(val.length()    ==    0)    {    return    createNumber(val);    }    	non-compiled	[CE]  not  a  statement	7	None	replace
67	[BUG]  [BUGGY]  if(val.length()  ==  0  ||  val.charAt(0)!=  '-')  {  return  createNumber(val);  }  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.length()  ==  0  ||  val.charAt(0)!=  '-')  {  return  createNumber(val);  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.length()  ==  0  ||  val.charAt(0)!=  '-')  {  return  createNumber(val);  }	  if(val.length()    ==    0)    {    return    createNumber(val);    }    	non-compiled	[CE]  not  a  statement	7	None	replace
68	[BUG]  [BUGGY]  while(val.length()!=  1)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");  }  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  while(val.length()!=  1)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	while(val.length()!=  1)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");  }	  while(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    }    	non-compiled	[CE]  not  a  statement	23	None	replace
69	[BUG]  [BUGGY]  nisip  =  val.charAt(val.length())+  1;  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  nisip  =  val.charAt(val.length())+  1;  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	nisip  =  val.charAt(val.length())+  1;	  nisip    =    val.charAt(val.length()    -    1);    	non-compiled	[CE]  not  a  statement	26	None	replace
70	[BUG]  [BUGGY]  nisip  =  val.charAt(val.length()  *  1);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  nisip  =  val.charAt(val.length()  *  1);  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	nisip  =  val.charAt(val.length()  *  1);	  nisip    =    val.charAt(val.length()    -    1);    	non-compiled	[CE]  not  a  statement	26	None	replace
71	[BUG]  [BUGGY]  if(val.startsWith( "- ")||  val.startsWith( "-0x ")||  val.startsWith( "-1))  {  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.startsWith( "- ")||  val.startsWith( "-0x ")||  val.startsWith( "-1))  {  [BUGGY]          return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( "- ")||  val.startsWith( "-0x ")||  val.startsWith( "-1))  {	  if(val.startsWith(   "-   ")||    val.startsWith(   "-0x   "))    {    	non-compiled	[CE]  not  a  statement	38	None	replace
72	[BUG]  [BUGGY]  if(val.startsWith( "- ")||  val.startsWith( "-0x ")||  val.startsWith( "-0x "))  {  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.startsWith( "- ")||  val.startsWith( "-0x ")||  val.startsWith( "-0x "))  {  [BUGGY]          return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( "- ")||  val.startsWith( "-0x ")||  val.startsWith( "-0x "))  {	  if(val.startsWith(   "-   ")||    val.startsWith(   "-0x   "))    {    	non-compiled	[CE]  not  a  statement	38	None	replace
73	[BUG]  [BUGGY]  if(val.startsWith( "- ")||  val.startsWith( "-+ ")||  val.startsWith( "-0 "))  {  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.startsWith( "- ")||  val.startsWith( "-+ ")||  val.startsWith( "-0 "))  {  [BUGGY]          return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( "- ")||  val.startsWith( "-+ ")||  val.startsWith( "-0 "))  {	  if(val.startsWith(   "-   ")||    val.startsWith(   "-+   "))    {    	non-compiled	[CE]  not  a  statement	35	None	replace
74	[BUG]  [BUGGY]  while(val.length()  <  1)  {  throw  new  NumberFormatException( " ", "  is  not  a  valid  number. ");  }  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  while(val.length()  <  1)  {  throw  new  NumberFormatException( " ", "  is  not  a  valid  number. ");  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	while(val.length()  <  1)  {  throw  new  NumberFormatException( " ", "  is  not  a  valid  number. ");  }	  while(val.length()    <    1)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.   ");    }    	non-compiled	[CE]  not  a  statement	44	None	replace
75	[BUG]  [BUGGY]  Number  val  =(Number)val.toLowerCase();  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  Number  val  =(Number)val.toLowerCase();  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	Number  val  =(Number)val.toLowerCase();	  Number    val    =(Number)val.toCharArray();    	non-compiled	[CE]  not  a  statement	34	None	replace
76	[BUG]  [BUGGY]  if(val.length()  ==  1)  {  return  this;  }  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.length()  ==  1)  {  return  this;  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.length()  ==  1)  {  return  this;  }	  if(val.length()    ==    1)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	30	None	replace
77	[BUG]  [BUGGY]  null  =  val.length();  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  null  =  val.length();  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	null  =  val.length();	  if(val.length()!=    0)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	32	None	replace
78	[BUG]  [BUGGY]  if(val.startsWith( ".0x ")||  val.startsWith( "-1x "))  {  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.startsWith( ".0x ")||  val.startsWith( "-1x "))  {  [BUGGY]          return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( ".0x ")||  val.startsWith( "-1x "))  {	  if(val.startsWith(   "0x   ")||    val.startsWith(   "-1x   "))    {    	non-compiled	[CE]  not  a  statement	29	None	replace
79	[BUG]  [BUGGY]  if(val.startsWith( "-- ")||  val.startsWith( "-- ")||  val.startsWith( "--))  {  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.startsWith( "-- ")||  val.startsWith( "-- ")||  val.startsWith( "--))  {  [BUGGY]          return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( "-- ")||  val.startsWith( "-- ")||  val.startsWith( "--))  {	  if(val.startsWith(   "--   ")||    val.startsWith(   "--   ")||    val.startsWith(   "--   "))    {    	non-compiled	[CE]  not  a  statement	40	None	replace
80	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length())+  2;  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  String  val  =  val.substring(0,  val.length())+  2;  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	String  val  =  val.substring(0,  val.length())+  2;	  String    val    =    val.substring(0,    val.length())+    1;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
81	[BUG]  [BUGGY]  while(val.length()  <  2)  {  throw  new  NumberFormatException( " ", "  is  not  a  valid  number. ");  }  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  while(val.length()  <  2)  {  throw  new  NumberFormatException( " ", "  is  not  a  valid  number. ");  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	while(val.length()  <  2)  {  throw  new  NumberFormatException( " ", "  is  not  a  valid  number. ");  }	  while(val.length()    <    2)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.   ");    }    	non-compiled	[CE]  not  a  statement	43	None	replace
82	[BUG]  [BUGGY]  if(val.length()  ==  0)  {  return  createUniqueNumber(val);  }  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.length()  ==  0)  {  return  createUniqueNumber(val);  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.length()  ==  0)  {  return  createUniqueNumber(val);  }	  if(val.length()    ==    0)    {    return    createNumber(val);    }    	non-compiled	[CE]  not  a  statement	7	None	replace
83	[BUG]  [BUGGY]  if(val.startsWith( ".0x ")||  val.startsWith( ".- "))  {  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.startsWith( ".0x ")||  val.startsWith( ".- "))  {  [BUGGY]          return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( ".0x ")||  val.startsWith( ".- "))  {	  if(val.startsWith(   ".0x   ")||    val.startsWith(   "-0x   "))    {    	non-compiled	[CE]  not  a  statement	28	None	replace
84	[BUG]  [BUGGY]  while(val.length()  ==  0)  {  throw  new  NumberFormatException( " " ", "  is  not  a  valid  number. ");  }  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  while(val.length()  ==  0)  {  throw  new  NumberFormatException( " " ", "  is  not  a  valid  number. ");  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	while(val.length()  ==  0)  {  throw  new  NumberFormatException( " " ", "  is  not  a  valid  number. ");  }	  while(val.length()!=    0)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    }    	non-compiled	[CE]  not  a  statement	24	None	replace
85	[BUG]  [BUGGY]  while(val.length()  ==  0)  {  throw  new  NumberFormatException( " " "  +  val.toString());  }  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  while(val.length()  ==  0)  {  throw  new  NumberFormatException( " " "  +  val.toString());  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	while(val.length()  ==  0)  {  throw  new  NumberFormatException( " " "  +  val.toString());  }	  while(val.length()!=    0)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    }    	non-compiled	[CE]  not  a  statement	24	None	replace
86	[BUG]  [BUGGY]  if(val.startsWith( ".0x ")||  val.startsWith( "-1))  {  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.startsWith( ".0x ")||  val.startsWith( "-1))  {  [BUGGY]          return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( ".0x ")||  val.startsWith( "-1))  {	  if(val.startsWith(   "0x       ")||    val.startsWith(   "-1))    {    	non-compiled	[CE]  not  a  statement	21	None	replace
87	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length()  -  3);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  String  val  =  val.substring(0,  val.length()  -  3);  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	String  val  =  val.substring(0,  val.length()  -  3);	  String    val    =    val.substring(0,    val.length());    	non-compiled	[CE]  not  a  statement	3	None	replace
88	[BUG]  [BUGGY]  if(val.startsWith( "-- ")||  val.startsWith( "--)||  val.startsWith( "-- "))  {  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.startsWith( "-- ")||  val.startsWith( "--)||  val.startsWith( "-- "))  {  [BUGGY]          return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( "-- ")||  val.startsWith( "--)||  val.startsWith( "-- "))  {	  if(val.startsWith(   "--   ")||    val.startsWith(   "--))    {    	non-compiled	[CE]  not  a  statement	13	None	replace
89	[BUG]  [BUGGY]  if(val.startsWith( "0.0   ")||  val.startsWith( "-0   "))  {  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.startsWith( "0.0   ")||  val.startsWith( "-0   "))  {  [BUGGY]          return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( "0.0   ")||  val.startsWith( "-0   "))  {	  if(val.startsWith(   ".0   ")||    val.startsWith(   "-0   "))    {    	non-compiled	[CE]  not  a  statement	39	None	replace
90	[BUG]  [BUGGY]  while(val.length()  <  0)  {  throw  new  NumberFormatException( " ");  }  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  while(val.length()  <  0)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	while(val.length()  <  0)  {  throw  new  NumberFormatException( " ");  }	  while(val.length()    <    =    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	42	None	replace
91	[BUG]  [BUGGY]  if(val.length()  ==  1)  {  return  createUniqueNumber(val);  }  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.length()  ==  1)  {  return  createUniqueNumber(val);  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.length()  ==  1)  {  return  createUniqueNumber(val);  }	  if(val.length()    ==    1)    {    return    createInteger(val);    }    	non-compiled	[CE]  not  a  statement	47	None	replace
92	[BUG]  [BUGGY]  Numer  val  =  val.substring(0,  val.length());  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  Numer  val  =  val.substring(0,  val.length());  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	Numer  val  =  val.substring(0,  val.length());	  Number    val    =    val.substring(0,    val.length()    -    2);    	non-compiled	[CE]  not  a  statement	27	None	replace
93	[BUG]  [BUGGY]  Numeric  val  =  val.substring(0,  val.length());  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  Numeric  val  =  val.substring(0,  val.length());  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	Numeric  val  =  val.substring(0,  val.length());	  Number    val    =    val.substring(0,    val.length()    -    2);    	non-compiled	[CE]  not  a  statement	27	None	replace
94	[BUG]  [BUGGY]  Node  val  =  val.substring(0,  val.length());  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  Node  val  =  val.substring(0,  val.length());  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	Node  val  =  val.substring(0,  val.length());	  Number    val    =    val.substring(0,    val.length()    -    2);    	non-compiled	[CE]  not  a  statement	27	None	replace
95	[BUG]  [BUGGY]  if(val.startsWith( "- ")||  val.startsWith( "-- ")||  val.startsWith( "--))  {  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.startsWith( "- ")||  val.startsWith( "-- ")||  val.startsWith( "--))  {  [BUGGY]          return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( "- ")||  val.startsWith( "-- ")||  val.startsWith( "--))  {	  if(val.startsWith(   "-   ")||    val.startsWith(   "--   ")||    val.startsWith(   "--   "))    {    	non-compiled	[CE]  not  a  statement	36	None	replace
96	[BUG]  [BUGGY]  if(val.startsWith( "-1 ")||  val.startsWith( "-1 ")||  val.startsWith( "-1 "))  {  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.startsWith( "-1 ")||  val.startsWith( "-1 ")||  val.startsWith( "-1 "))  {  [BUGGY]          return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( "-1 ")||  val.startsWith( "-1 ")||  val.startsWith( "-1 "))  {	  if(val.startsWith(   "-1   ")||    val.startsWith(   "-1   "))    {    	non-compiled	[CE]  not  a  statement	45	None	replace
97	[BUG]  [BUGGY]  if(val.startsWith( "-1 ")||  val.startsWith( "-1 ")||  val.startsWith( "-0 "))  {  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.startsWith( "-1 ")||  val.startsWith( "-1 ")||  val.startsWith( "-0 "))  {  [BUGGY]          return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( "-1 ")||  val.startsWith( "-1 ")||  val.startsWith( "-0 "))  {	  if(val.startsWith(   "-1   ")||    val.startsWith(   "-1   "))    {    	non-compiled	[CE]  not  a  statement	45	None	replace
98	[BUG]  [BUGGY]  String  val  =  val.toLowerCase(Locale.ENGLISH).trim();  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  String  val  =  val.toLowerCase(Locale.ENGLISH).trim();  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	String  val  =  val.toLowerCase(Locale.ENGLISH).trim();	  String    val    =    val.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  not  a  statement	20	None	replace
99	[BUG]  [BUGGY]  Number  val  =  val.substring(0,  val.length()  +  1);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  Number  val  =  val.substring(0,  val.length()  +  1);  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	Number  val  =  val.substring(0,  val.length()  +  1);	  Number    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	22	None	replace
100	[BUG]  [BUGGY]  Number  val  =  val.substring(1,  val.length());  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  Number  val  =  val.substring(1,  val.length());  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	Number  val  =  val.substring(1,  val.length());	  Number    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	22	None	replace
101	[BUG]  [BUGGY]  if(val.startsWith( "-1 ")||  val.startsWith( "-1))  {  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.startsWith( "-1 ")||  val.startsWith( "-1))  {  [BUGGY]          return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( "-1 ")||  val.startsWith( "-1))  {	  if(val.startsWith(   "-1   ")||    val.startsWith(   "-1   "))    {    	non-compiled	[CE]  not  a  statement	45	None	replace
102	[BUG]  [BUGGY]  while(val.length()  <  1)  {  throw  new  NumberFormatException( " "'  is  not  a  valid  number. ");  }  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  while(val.length()  <  1)  {  throw  new  NumberFormatException( " "'  is  not  a  valid  number. ");  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	while(val.length()  <  1)  {  throw  new  NumberFormatException( " "'  is  not  a  valid  number. ");  }	  while(val.length()    <    1)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.   ");    }    	non-compiled	[CE]  not  a  statement	44	None	replace
103	[BUG]  [BUGGY]  while(val.length()  <  1)  {  throw  new  NumberFormatException( " " "  +  val.substring(1));  }  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  while(val.length()  <  1)  {  throw  new  NumberFormatException( " " "  +  val.substring(1));  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	while(val.length()  <  1)  {  throw  new  NumberFormatException( " " "  +  val.substring(1));  }	  while(val.length()    <    1)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.   ");    }    	non-compiled	[CE]  not  a  statement	44	None	replace
104	[BUG]  [BUGGY]  while(val.length()  <  1)  {  throw  new  NumberFormatException( " " "  +  val.toString()  + "  is  not  a  valid  number. ");  }  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  while(val.length()  <  1)  {  throw  new  NumberFormatException( " " "  +  val.toString()  + "  is  not  a  valid  number. ");  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	while(val.length()  <  1)  {  throw  new  NumberFormatException( " " "  +  val.toString()  + "  is  not  a  valid  number. ");  }	  while(val.length()    <    1)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.   ");    }    	non-compiled	[CE]  not  a  statement	44	None	replace
105	[BUG]  [BUGGY]  while(val.length()  <  =  0)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number.   ");  }  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  while(val.length()  <  =  0)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number.   ");  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	while(val.length()  <  =  0)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number.   ");  }	  while(val.length()    <    =    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	42	None	replace
106	[BUG]  [BUGGY]  if(val.startsWith( "-1 ")||  val.startsWith( "-+ "))  {  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.startsWith( "-1 ")||  val.startsWith( "-+ "))  {  [BUGGY]          return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( "-1 ")||  val.startsWith( "-+ "))  {	  if(val.startsWith(   "-   ")||    val.startsWith(   "-+   "))    {    	non-compiled	[CE]  not  a  statement	35	None	replace
107	[BUG]  [BUGGY]  if(val.startsWith( "-0x ")||  val.startsWith( "-1))  {  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.startsWith( "-0x ")||  val.startsWith( "-1))  {  [BUGGY]          return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( "-0x ")||  val.startsWith( "-1))  {	  if(val.startsWith(   "0x       ")||    val.startsWith(   "-1))    {    	non-compiled	[CE]  not  a  statement	21	None	replace
108	[BUG]  [BUGGY]  if(val.startsWith( ".0 ")||  val.startsWith( "-1))  {  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.startsWith( ".0 ")||  val.startsWith( "-1))  {  [BUGGY]          return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( ".0 ")||  val.startsWith( "-1))  {	  if(val.startsWith(   "0x       ")||    val.startsWith(   "-1))    {    	non-compiled	[CE]  not  a  statement	21	None	replace
109	[BUG]  [BUGGY]  while(val.length()  <  =  0)  {  throw  new  NumberFormatException( " " ", "  is  not  a  valid  number. ");  }  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  while(val.length()  <  =  0)  {  throw  new  NumberFormatException( " " ", "  is  not  a  valid  number. ");  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	while(val.length()  <  =  0)  {  throw  new  NumberFormatException( " " ", "  is  not  a  valid  number. ");  }	  while(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    }    	non-compiled	[CE]  not  a  statement	23	None	replace
110	[BUG]  [BUGGY]  if(val.startsWith( ".0x ")||  val.startsWith( "-1 "))  {  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.startsWith( ".0x ")||  val.startsWith( "-1 "))  {  [BUGGY]          return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( ".0x ")||  val.startsWith( "-1 "))  {	  if(val.startsWith(   "0x   ")||    val.startsWith(   "-1   "))    {    	non-compiled	[CE]  not  a  statement	41	None	replace
111	[BUG]  [BUGGY]  if(val.startsWith( "--   "))  {  return  null;  }  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.startsWith( "--   "))  {  return  null;  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.startsWith( "--   "))  {  return  null;  }	  if(val.length()!=    0)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	32	None	replace
112	[BUG]  [BUGGY]  Null  val  =  val.substring(0,  val.length());  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  Null  val  =  val.substring(0,  val.length());  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	Null  val  =  val.substring(0,  val.length());	  Number    val    =    val.substring(0,    val.length()    -    2);    	non-compiled	[CE]  not  a  statement	27	None	replace
113	[BUG]  [BUGGY]  if(val.length()  ==  1)  {  return  createNull();  }  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.length()  ==  1)  {  return  createNull();  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.length()  ==  1)  {  return  createNull();  }	  if(val.length()    ==    1)    {    return    createInteger(val);    }    	non-compiled	[CE]  not  a  statement	47	None	replace
114	[BUG]  [BUGGY]  while(val.length()  <  1)  {  throw  new  NumberFormatException( " " ", "  is  not  a  valid  number. ");  }  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  while(val.length()  <  1)  {  throw  new  NumberFormatException( " " ", "  is  not  a  valid  number. ");  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	while(val.length()  <  1)  {  throw  new  NumberFormatException( " " ", "  is  not  a  valid  number. ");  }	  while(val.length()    <    2)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.   ");    }    	non-compiled	[CE]  not  a  statement	43	None	replace
115	[BUG]  [BUGGY]  while(val.length()  <  2)  {  throw  new  NumberFormatException( " " "  +  val.substring(1));  }  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  while(val.length()  <  2)  {  throw  new  NumberFormatException( " " "  +  val.substring(1));  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	while(val.length()  <  2)  {  throw  new  NumberFormatException( " " "  +  val.substring(1));  }	  while(val.length()    <    2)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.   ");    }    	non-compiled	[CE]  not  a  statement	43	None	replace
116	[BUG]  [BUGGY]  while(val.length()  <  =  2)  {  throw  new  NumberFormatException( " ", "  is  not  a  valid  number. ");  }  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  while(val.length()  <  =  2)  {  throw  new  NumberFormatException( " ", "  is  not  a  valid  number. ");  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	while(val.length()  <  =  2)  {  throw  new  NumberFormatException( " ", "  is  not  a  valid  number. ");  }	  while(val.length()    <    2)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.   ");    }    	non-compiled	[CE]  not  a  statement	43	None	replace
117	[BUG]  [BUGGY]  if(val.length()  <  1)  {  return  null;  }  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.length()  <  1)  {  return  null;  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.length()  <  1)  {  return  null;  }	  if(val.length()    ==    1)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	30	None	replace
118	[BUG]  [BUGGY]  while(val.length()  ==  0)  {  throw  new  NumberFormatException( " ", "  is  not  a  valid  number. ");  }  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  while(val.length()  ==  0)  {  throw  new  NumberFormatException( " ", "  is  not  a  valid  number. ");  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	while(val.length()  ==  0)  {  throw  new  NumberFormatException( " ", "  is  not  a  valid  number. ");  }	  while(val.length()!=    0)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    }    	non-compiled	[CE]  not  a  statement	24	None	replace
119	[BUG]  [BUGGY]  if(val.length()  ==  1  ||  val.charAt(0)  ==  '-')  {  return  null;  }  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  if(val.length()  ==  1  ||  val.charAt(0)  ==  '-')  {  return  null;  }  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	if(val.length()  ==  1  ||  val.charAt(0)  ==  '-')  {  return  null;  }	  if(val.length()    ==    0    ||    val.charAt(0)    ==    '-')    {    return    null;    }    	non-compiled	[CE]  not  a  statement	1	None	replace
120	[BUG]  [BUGGY]  Number  val  =  val.substring(0,  val.length())+  1;  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }      [BUGGY]  Number  val  =  val.substring(0,  val.length())+  1;  [BUGGY]      if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	145	145	1	replace	Number  val  =  val.substring(0,  val.length())+  1;	  Number    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	22	None	replace
