bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(val  ==  null  ||  val.trim().equals(   "-   "))  {  if(val  ==  null  ||  val.trim().equals( "-   "))  {  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.trim().equals(   "-   "))  {  if(val  ==  null  ||  val.trim().equals( "-   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.trim().equals(   "-   "))    {    if(val  ==  null  ||  val.trim().equals( "-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	108	None	add
2	[BUG]  [BUGGY]  if(val  ==  null  ||  val.trim().equals(   "-   "))  {  if(val  ==  null  ||  val.trim().equals( ".-   "))  {  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.trim().equals(   "-   "))  {  if(val  ==  null  ||  val.trim().equals( ".-   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.trim().equals(   "-   "))    {    if(val  ==  null  ||  val.trim().equals( ".-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	108	None	add
3	[BUG]  [BUGGY]  if(val  ==  null  ||  val.trim().equals(   "-   "))  {  If(val  ==  null  ||  val.trim().equals( "-   "))  {  [CE]  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.trim().equals(   "-   "))  {  If(val  ==  null  ||  val.trim().equals( "-   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.trim().equals(   "-   "))    {    If(val  ==  null  ||  val.trim().equals( "-   "))  {	  	non-compiled	[CE]  	108	None	add
4	[BUG]  [BUGGY]  If(val  ==  null  ||  val.length()  ==  0)  {  [CE]  ';'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  If(val  ==  null  ||  val.length()  ==  0)  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	If(val  ==  null  ||  val.length()  ==  0)  {	  if(val    ==    null    ||    val.length()    ==    0)    {    If(val    ==    null    ||    val.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	71	None	replace
5	[BUG]  [BUGGY]  Number  val  =  getValue(val.toLowerCase(),  true);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getValue(val.toLowerCase(),  true);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getValue(val.toLowerCase(),  true);	  Number    val    =    getValue(val.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
6	[BUG]  [BUGGY]  Number  val  =  getValue(val.toLowerCase(),  false);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getValue(val.toLowerCase(),  false);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getValue(val.toLowerCase(),  false);	  Number    val    =    getValue(val.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
7	[BUG]  [BUGGY]  if(val  ==  null  ||!val.trim().equals(   "-   "))  {  if(val  ==  null  ||!val.trim().equals( "-   "))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||!val.trim().equals(   "-   "))  {  if(val  ==  null  ||!val.trim().equals( "-   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||!val.trim().equals(   "-   "))    {    if(val  ==  null  ||!val.trim().equals( "-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
8	[BUG]  [BUGGY]  if(val  ==  null  ||!val.trim().equals(   "-   "))  {  if(val  ==  null  ||!val.trim().equals( ".-   "))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||!val.trim().equals(   "-   "))  {  if(val  ==  null  ||!val.trim().equals( ".-   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||!val.trim().equals(   "-   "))    {    if(val  ==  null  ||!val.trim().equals( ".-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
9	[BUG]  [BUGGY]  if(val  ==  null  ||!val.trim().equals(   "-   "))  {  If(val  ==  null  ||!val.trim().equals( "-   "))  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||!val.trim().equals(   "-   "))  {  If(val  ==  null  ||!val.trim().equals( "-   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||!val.trim().equals(   "-   "))    {    If(val  ==  null  ||!val.trim().equals( "-   "))  {	  	non-compiled	[CE]  	100	None	add
10	[BUG]  [BUGGY]  If(val  ==  null  ||  val.equals( "- "))  {  [CE]  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  If(val  ==  null  ||  val.equals( "- "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	If(val  ==  null  ||  val.equals( "- "))  {	  if(val    ==    null    ||    val.equals(       "-       "))    {    If(val    ==    null    ||    val.equals(   "-       "))    {    	non-compiled	[CE]  	64	None	replace
11	[BUG]  [BUGGY]  if(val  ==  null  ||  val.startsWith( "- "))  {  If(val  ==  null  ||  val.equals( "- "))  {  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.startsWith( "- "))  {  If(val  ==  null  ||  val.equals( "- "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||  val.startsWith( "- "))  {  If(val  ==  null  ||  val.equals( "- "))  {	  if(val    ==    null    ||    val.equals(       "-       "))    {    If(val    ==    null    ||    val.equals(   "-       "))    {    	non-compiled	[CE]  	64	None	replace
12	[BUG]  [BUGGY]  while(val!=  null  &&  val.length()  ==  0)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  while(val!=  null  &&  val.length()  ==  0)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	while(val!=  null  &&  val.length()  ==  0)  {  throw  new  NumberFormatException( " ");  }	  if(val    ==    null    ||    val.length()    ==    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
13	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  while(val!=  null  &&  val.length()  ==  0)  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	add	while(val!=  null  &&  val.length()  ==  0)  {	  if(val    ==    null    ||    val.length()    ==    0)    {    throw    new    NumberFormatException(   "   ");    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	95	1	replace
14	[BUG]  [BUGGY]  while(val!=  null  &&  val.length()  ==  0)  {  [FE]  StringIndexOutOfBoundsException  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  while(val!=  null  &&  val.length()  ==  0)  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	while(val!=  null  &&  val.length()  ==  0)  {	  if(val    ==    null    ||    val.length()    ==    0)    {    throw    new    NumberFormatException(   "   ");    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	95	1	replace
15	[BUG]  [BUGGY]  Number  val  =(Number)this.number;  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)this.number;  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)this.number;	  Number    val    =(Number)this.null;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
16	[BUG]  [BUGGY]  Number  val  =(Number)this.values.get(0);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)this.values.get(0);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)this.values.get(0);	  Number    val    =(Number)this.null;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
17	[BUG]  [BUGGY]  Number  val  =  getValue(val,  null,  0);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getValue(val,  null,  0);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getValue(val,  null,  0);	  Number    val    =    getValue(val,    null);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
18	[BUG]  [BUGGY]  Number  val  =  getValue(val,  this);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getValue(val,  this);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getValue(val,  this);	  Number    val    =    getValue(val,    null);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
19	[BUG]  [BUGGY]  Number  val  =  getValue(val,  null,  true);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getValue(val,  null,  true);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getValue(val,  null,  true);	  Number    val    =    getValue(val,    null);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
20	[BUG]  [BUGGY]  Number  val  =  getValue(val,  null,  false);  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getValue(val,  null,  false);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getValue(val,  null,  false);	  Number    val    =    getValue(val,    null);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
21	[BUG]  [BUGGY]  Number  val  =  getValue(val.toUpperCase(),  false);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getValue(val.toUpperCase(),  false);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getValue(val.toUpperCase(),  false);	  Number    val    =    getValue(val.toUpperCase());    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
22	[BUG]  [BUGGY]  Number  val  =  getValue(val.toUpperCase(),  true);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getValue(val.toUpperCase(),  true);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getValue(val.toUpperCase(),  true);	  Number    val    =    getValue(val.toUpperCase());    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
23	[BUG]  [BUGGY]  Number  val  =  getValue(val.toUpperCase(Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getValue(val.toUpperCase(Locale.ENGLISH));  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getValue(val.toUpperCase(Locale.ENGLISH));	  Number    val    =    getValue(val.toUpperCase());    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
24	[BUG]  [BUGGY]  number  =  new  Double(val.length());  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  number  =  new  Double(val.length());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	number  =  new  Double(val.length());	  Number    val    =    new    Double(val.length()    +    1);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
25	[BUG]  [BUGGY]  Number  val  =  new  Double(null.length());  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  new  Double(null.length());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  new  Double(null.length());	  Number    val    =    new    Double(val.length()    +    1);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
26	[BUG]  [BUGGY]  Number  val  =  getNumberValue(val.toLowerCase(),  false);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumberValue(val.toLowerCase(),  false);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumberValue(val.toLowerCase(),  false);	  Number    val    =    getNumberValue(val.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
27	[BUG]  [BUGGY]  Number  val  =  getNumberValue(val.toCharArray());  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumberValue(val.toCharArray());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumberValue(val.toCharArray());	  Number    val    =    getNumberValue(val.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
28	[BUG]  [BUGGY]  Number  val  =  getNumberValue(val.toLowerCase(),  true);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumberValue(val.toLowerCase(),  true);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumberValue(val.toLowerCase(),  true);	  Number    val    =    getNumberValue(val.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
29	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  null,  val);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  null,  val);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val.toCharArray(),  null,  val);	  Number    val    =    createNumber(val.toCharArray(),    null);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
30	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  null,  0);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  null,  0);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val.toCharArray(),  null,  0);	  Number    val    =    createNumber(val.toCharArray(),    null);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
31	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  null,  val.length());  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  null,  val.length());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val.toCharArray(),  null,  val.length());	  Number    val    =    createNumber(val.toCharArray(),    null);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
32	[BUG]  [BUGGY]  String  val  =  val.toUpperCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  String  val  =  val.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	String  val  =  val.toUpperCase(Locale.ENGLISH);	  String    val    =    val.toUpperCase();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
33	[BUG]  [BUGGY]  NumberUtils.copyNumber(val,  0,  val.length()  -  1);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  NumberUtils.copyNumber(val,  0,  val.length()  -  1);  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	NumberUtils.copyNumber(val,  0,  val.length()  -  1);	  NumberUtils.copyNumber(val,    0,    val.length());    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
34	[BUG]  [BUGGY]  NumberUtils.copyNumber(val,  0,  val.length()  -  2);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  NumberUtils.copyNumber(val,  0,  val.length()  -  2);  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	NumberUtils.copyNumber(val,  0,  val.length()  -  2);	  NumberUtils.copyNumber(val,    0,    val.length());    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
35	[BUG]  [BUGGY]  NumberUtils.copyNumber(val,  0,  val.length()  +  1);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  NumberUtils.copyNumber(val,  0,  val.length()  +  1);  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	NumberUtils.copyNumber(val,  0,  val.length()  +  1);	  NumberUtils.copyNumber(val,    0,    val.length());    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
36	[BUG]  [BUGGY]  NumberUtils.copyNumber(null,  val,  0,  val.length());  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  NumberUtils.copyNumber(null,  val,  0,  val.length());  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	NumberUtils.copyNumber(null,  val,  0,  val.length());	  NumberUtils.copyNumber(val,    0,    val.length());    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
37	[BUG]  [BUGGY]  Number  f  =  createNumber(null,  val);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  f  =  createNumber(null,  val);  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  f  =  createNumber(null,  val);	  Number    f    =    createNumber(val);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
38	[BUG]  [BUGGY]  Number  f  =  createNumber(val,  null);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  f  =  createNumber(val,  null);  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  f  =  createNumber(val,  null);	  Number    f    =    createNumber(val);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
39	[BUG]  [BUGGY]  Number  f  =  createNumber(val,  false);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  f  =  createNumber(val,  false);  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  f  =  createNumber(val,  false);	  Number    f    =    createNumber(val);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
40	[BUG]  [BUGGY]  Number  f  =  createNumber(val,  true);  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  f  =  createNumber(val,  true);  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  f  =  createNumber(val,  true);	  Number    f    =    createNumber(val);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
41	[BUG]  [BUGGY]  Number  val  =  createNumber(null,  true);  [CE]  illegal  start  of  type  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(null,  true);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(null,  true);	  Number    val    =    createNumber(val,    true);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
42	[BUG]  [BUGGY]  Numeric  val  =  createNumber(val,  false);  [CE]  illegal  start  of  type  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Numeric  val  =  createNumber(val,  false);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Numeric  val  =  createNumber(val,  false);	  Number    val    =    createNumber(val,    true);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
43	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.length()  >=  0)  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	add	if(val  ==  null  ||  val.length()  >=  0)  {	  if(val    ==    null    ||    val.length()!=    0)    {    	compilable	  [FE]  AssertionFailedError  	2	3	replace
44	[BUG]  [BUGGY]  if(val  ==  null  ||  val.length()  >=  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.length()  >=  0)  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||  val.length()  >=  0)  {	  if(val    ==    null    ||    val.length()!=    0)    {    	compilable	  [FE]  AssertionFailedError  	2	3	replace
45	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toString(),  false);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(val.toString(),  false);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val.toString(),  false);	  Number    val    =    createNumber(val.toCharArray(),    false);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
46	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  false,  val);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  false,  val);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val.toCharArray(),  false,  val);	  Number    val    =    createNumber(val.toCharArray(),    false);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
47	[BUG]  [BUGGY]  Number  val  =  getNumber(val.toCharArray(),  false);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumber(val.toCharArray(),  false);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumber(val.toCharArray(),  false);	  Number    val    =    createNumber(val.toCharArray(),    false);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
48	[BUG]  [BUGGY]  Number  val  =  getValue(val.toCharArray());  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getValue(val.toCharArray());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getValue(val.toCharArray());	  Number    val    =    getValue(null);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
49	[BUG]  [BUGGY]  Number  val  =  getNumber(val.substring(1));  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumber(val.substring(1));  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumber(val.substring(1));	  Number    val    =    getNumber(val.toCharArray());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
50	[BUG]  [BUGGY]  if(val  ==  null  ||  val.equals(   "number   "))  {  if(val  ==  null  ||  val.equals( "number   "))  {  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.equals(   "number   "))  {  if(val  ==  null  ||  val.equals( "number   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.equals(   "number   "))    {    if(val  ==  null  ||  val.equals( "number   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
51	[BUG]  [BUGGY]  if(val  ==  null  ||  val.equals(   "number   "))  {  if(val  ==  null  ||  val.equals( ".number   "))  {  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.equals(   "number   "))  {  if(val  ==  null  ||  val.equals( ".number   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.equals(   "number   "))    {    if(val  ==  null  ||  val.equals( ".number   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
52	[BUG]  [BUGGY]  if(val  ==  null  ||  val.equals(   "number   "))  {  if(val  ==  null  ||  val.equals( ",number   "))  {  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.equals(   "number   "))  {  if(val  ==  null  ||  val.equals( ",number   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.equals(   "number   "))    {    if(val  ==  null  ||  val.equals( ",number   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
53	[BUG]  [BUGGY]  Number  val  =  createNumber(val,  null,  0);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(val,  null,  0);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val,  null,  0);	  Number    val    =    createNumber(val,    null);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
54	[BUG]  [BUGGY]  Number  val  =  createNumber(val,  null,  true);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(val,  null,  true);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val,  null,  true);	  Number    val    =    createNumber(val,    null);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
55	[BUG]  [BUGGY]  Number  val  =  createNumber(val,  null,  val);  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(val,  null,  val);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val,  null,  val);	  Number    val    =    createNumber(val,    null);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
56	[BUG]  [BUGGY]  Number  val  =  createNumber(val,  this);  [CE]  illegal  start  of  type  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(val,  this);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val,  this);	  Number    val    =    createNumber(val,    null);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
57	[BUG]  [BUGGY]  Number  val  =(Number)nativeObject.clone();  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)nativeObject.clone();  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)nativeObject.clone();	  Number    val    =(Number)this.nativeObject.clone();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
58	[BUG]  [BUGGY]  Number  val  =(Number)this.nativeObject.cloneTree();  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)this.nativeObject.cloneTree();  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)this.nativeObject.cloneTree();	  Number    val    =(Number)this.nativeObject.clone();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
59	[BUG]  [BUGGY]  Number  val  =(Number)this.nativeObject.getValue();  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)this.nativeObject.getValue();  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)this.nativeObject.getValue();	  Number    val    =(Number)this.nativeObject.clone();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
60	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.startsWith( ".number "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	add	if(val  ==  null  ||  val.startsWith( ".number "))  {	  if(val    ==    null    ||    val.startsWith(   "null   "))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	16	1	replace
61	[BUG]  [BUGGY]  if(val  ==  null  ||  val.startsWith( ".number "))  {  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.startsWith( ".number "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||  val.startsWith( ".number "))  {	  if(val    ==    null    ||    val.startsWith(   "null   "))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	16	1	replace
62	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||!val.equals( "0 "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	add	if(val  ==  null  ||!val.equals( "0 "))  {	  if(val    ==    null    ||!val.equals(   "-0   "))    {    	compilable	  [FE]  AssertionFailedError  	8	3	replace
63	[BUG]  [BUGGY]  if(val  ==  null  ||!val.equals( "0 "))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||!val.equals( "0 "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||!val.equals( "0 "))  {	  if(val    ==    null    ||!val.equals(   "-0   "))    {    	compilable	  [FE]  AssertionFailedError  	8	3	replace
64	[BUG]  [BUGGY]  if(val  ==  null  ||!val.equals( "-1))  {  [CE]  unclosed  string  literal  [FE]      AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||!val.equals( "-1))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||!val.equals( "-1))  {	  if(val    ==    null    ||!val.equals(   "-0   "))    {    	non-compiled	[CE]  unclosed  string  literal	8	None	replace
65	[BUG]  [BUGGY]  Number  val  =(Number)nfe.getValue();  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)nfe.getValue();  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)nfe.getValue();	  Number    val    =(Number)nfe.clone();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
66	[BUG]  [BUGGY]  Number  val  =(Number)this.nfe.clone();  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)this.nfe.clone();  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)this.nfe.clone();	  Number    val    =(Number)nfe.clone();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
67	[BUG]  [BUGGY]  Number  val  =(Number)nfe.cloneTree();  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)nfe.cloneTree();  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)nfe.cloneTree();	  Number    val    =(Number)nfe.clone();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
68	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.startsWith( "0 "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	add	if(val  ==  null  ||  val.startsWith( "0 "))  {	  if(val    ==    null    ||    val.startsWith(   ".0   "))    {    	compilable	  [FE]  NullPointerException  	107	3	replace
69	[BUG]  [BUGGY]  if(val  ==  null  ||  val.startsWith( "0 "))  {  [FE]  NullPointerException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.startsWith( "0 "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||  val.startsWith( "0 "))  {	  if(val    ==    null    ||    val.startsWith(   ".0   "))    {    	compilable	  [FE]  NullPointerException  	107	3	replace
70	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.startsWith( "-0 "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	add	if(val  ==  null  ||  val.startsWith( "-0 "))  {	  if(val    ==    null    ||    val.startsWith(   ".0   "))    {    	compilable	  [FE]  NullPointerException  	107	3	replace
71	[BUG]  [BUGGY]  if(val  ==  null  ||  val.startsWith( "-0 "))  {  [FE]  NullPointerException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.startsWith( "-0 "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||  val.startsWith( "-0 "))  {	  if(val    ==    null    ||    val.startsWith(   ".0   "))    {    	compilable	  [FE]  NullPointerException  	107	3	replace
72	[BUG]  [BUGGY]  Number  val  =  getNumber(0);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumber(0);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumber(0);	  Number    val    =    getNumber();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
73	[BUG]  [BUGGY]  Number  val  =  getNumber()  +  1;  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumber()  +  1;  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumber()  +  1;	  Number    val    =    getNumber();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
74	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  this,  0);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  this,  0);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val.toCharArray(),  this,  0);	  Number    val    =    createNumber(val.toCharArray(),    this);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
75	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.equals( ".number "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	add	if(val  ==  null  ||  val.equals( ".number "))  {	  if(val    ==    null    ||    val.equals(   "number   "))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	20	1	replace
76	[BUG]  [BUGGY]  if(val  ==  null  ||  val.equals( ".number "))  {  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.equals( ".number "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||  val.equals( ".number "))  {	  if(val    ==    null    ||    val.equals(   "number   "))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	20	1	replace
77	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.startsWith( "number "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	add	if(val  ==  null  ||  val.startsWith( "number "))  {	  if(val    ==    null    ||    val.equals(   "number   "))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	20	1	replace
78	[BUG]  [BUGGY]  if(val  ==  null  ||  val.startsWith( "number "))  {  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.startsWith( "number "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||  val.startsWith( "number "))  {	  if(val    ==    null    ||    val.equals(   "number   "))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	20	1	replace
79	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val!=  null  ||  val.equals( "number "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	add	if(val!=  null  ||  val.equals( "number "))  {	  if(val    ==    null    ||    val.equals(   "number   "))    {    	compilable	  [FE]  AssertionFailedError  	20	3	replace
80	[BUG]  [BUGGY]  if(val!=  null  ||  val.equals( "number "))  {  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val!=  null  ||  val.equals( "number "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val!=  null  ||  val.equals( "number "))  {	  if(val    ==    null    ||    val.equals(   "number   "))    {    	compilable	  [FE]  AssertionFailedError  	20	3	replace
81	[BUG]  [BUGGY]  Number  f  =  getNumber(val.toLowerCase());  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  f  =  getNumber(val.toLowerCase());  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  f  =  getNumber(val.toLowerCase());	  Number    f    =    getNumber(val);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
82	[BUG]  [BUGGY]  Number  f  =  getNumber(val.toCharArray());  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  f  =  getNumber(val.toCharArray());  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  f  =  getNumber(val.toCharArray());	  Number    f    =    getNumber(val);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
83	[BUG]  [BUGGY]  Number  f  =  getNumber(val,  0);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  f  =  getNumber(val,  0);  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  f  =  getNumber(val,  0);	  Number    f    =    getNumber(val);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
84	[BUG]  [BUGGY]  if(val  ==  null  ||!val.startsWith(   "-   "))  {  if(val  ==  null  ||!val.startsWith( "-   "))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||!val.startsWith(   "-   "))  {  if(val  ==  null  ||!val.startsWith( "-   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||!val.startsWith(   "-   "))    {    if(val  ==  null  ||!val.startsWith( "-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
85	[BUG]  [BUGGY]  if(val  ==  null  ||!val.startsWith(   "-   "))  {  if(val  ==  null  ||!val.startsWith( ".-   "))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||!val.startsWith(   "-   "))  {  if(val  ==  null  ||!val.startsWith( ".-   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||!val.startsWith(   "-   "))    {    if(val  ==  null  ||!val.startsWith( ".-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
86	[BUG]  [BUGGY]  if(val  ==  null  ||!val.startsWith(   "-   "))  {  If(val  ==  null  ||!val.startsWith( "-   "))  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||!val.startsWith(   "-   "))  {  If(val  ==  null  ||!val.startsWith( "-   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||!val.startsWith(   "-   "))    {    If(val  ==  null  ||!val.startsWith( "-   "))  {	  	non-compiled	[CE]  	102	None	add
87	[BUG]  [BUGGY]  if(val  ==  null  ||!val.equals(   "-0   "))  {  if(val  ==  null  ||!val.equals( "-0   "))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||!val.equals(   "-0   "))  {  if(val  ==  null  ||!val.equals( "-0   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||!val.equals(   "-0   "))    {    if(val  ==  null  ||!val.equals( "-0   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
88	[BUG]  [BUGGY]  if(val  ==  null  ||!val.equals(   "-0   "))  {  if(val  ==  null  ||!val.equals( ".0   "))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||!val.equals(   "-0   "))  {  if(val  ==  null  ||!val.equals( ".0   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||!val.equals(   "-0   "))    {    if(val  ==  null  ||!val.equals( ".0   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
89	[BUG]  [BUGGY]  if(val  ==  null  ||!val.equals(   "-0   "))  {  if(val  ==  null  ||!val.equals( "-1   "))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||!val.equals(   "-0   "))  {  if(val  ==  null  ||!val.equals( "-1   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||!val.equals(   "-0   "))    {    if(val  ==  null  ||!val.equals( "-1   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
90	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toString(),  true);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(val.toString(),  true);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val.toString(),  true);	  Number    val    =    createNumber(val.toCharArray(),    true);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
91	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  true,  false);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  true,  false);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val.toCharArray(),  true,  false);	  Number    val    =    createNumber(val.toCharArray(),    true);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
92	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length());  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  String  val  =  val.substring(0,  val.length());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	String  val  =  val.substring(0,  val.length());	  String    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
93	[BUG]  [BUGGY]  val  =  val.substring(0,  val.length());  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  val  =  val.substring(0,  val.length());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	val  =  val.substring(0,  val.length());	  String    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
94	[BUG]  [BUGGY]  char  val  =  val.substring(0,  val.length());  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  char  val  =  val.substring(0,  val.length());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	char  val  =  val.substring(0,  val.length());	  String    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
95	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length())+  1;  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  String  val  =  val.substring(0,  val.length())+  1;  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	String  val  =  val.substring(0,  val.length())+  1;	  String    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
96	[BUG]  [BUGGY]  Number  val  =  new  Double(val.length()),  val.length());  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  new  Double(val.length()),  val.length());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  new  Double(val.length()),  val.length());	  Number    val    =    new    Double(val.length()    +    1,    val.length());    	non-compiled	[CE]  	104	None	replace
97	[BUG]  [BUGGY]  Number  val  =  new  Double(val.length()  *  1,  val.length());  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  new  Double(val.length()  *  1,  val.length());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  new  Double(val.length()  *  1,  val.length());	  Number    val    =    new    Double(val.length()    +    1,    val.length());    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
98	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.equals( "-- "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	add	if(val  ==  null  ||  val.equals( "-- "))  {	  if(val    ==    null    ||    val.startsWith(   "--   "))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	36	1	replace
99	[BUG]  [BUGGY]  if(val  ==  null  ||  val.equals( "-- "))  {  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.equals( "-- "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||  val.equals( "-- "))  {	  if(val    ==    null    ||    val.startsWith(   "--   "))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	36	1	replace
100	[BUG]  [BUGGY]  Number  val  =  getNumberValue().trim();  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumberValue().trim();  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumberValue().trim();	  Number    val    =    getNumberValue();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
101	[BUG]  [BUGGY]  Number  val  =  getNumberValue(val,  null,  0);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumberValue(val,  null,  0);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumberValue(val,  null,  0);	  Number    val    =    getNumberValue(val,    null);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
102	[BUG]  [BUGGY]  Number  val  =  getNumberValue(val,  this);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumberValue(val,  this);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumberValue(val,  this);	  Number    val    =    getNumberValue(val,    null);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
103	[BUG]  [BUGGY]  Number  val  =  getNumberValue(val,  null,  -1);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumberValue(val,  null,  -1);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumberValue(val,  null,  -1);	  Number    val    =    getNumberValue(val,    null);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
104	[BUG]  [BUGGY]  Number  val  =  getNumberValue(val,  null,  true);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumberValue(val,  null,  true);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumberValue(val,  null,  true);	  Number    val    =    getNumberValue(val,    null);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
105	[BUG]  [BUGGY]  Number  val  =(Number)val.toString();  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)val.toString();  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)val.toString();	  Number    val    =(Number)val.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
106	[BUG]  [BUGGY]  Number  val  =(Number)val.toLowerCase();  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)val.toLowerCase();  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)val.toLowerCase();	  Number    val    =(Number)val.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
107	[BUG]  [BUGGY]  Number  val  =  new  Double(Value.length());  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  new  Double(Value.length());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  new  Double(Value.length());	  Number    val    =    new    Double(val.length()    -    2);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
108	[BUG]  [BUGGY]  Number  val  =  getNumberValue(val.toUpperCase(),  false);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumberValue(val.toUpperCase(),  false);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumberValue(val.toUpperCase(),  false);	  Number    val    =    getNumberValue(val.toUpperCase());    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
109	[BUG]  [BUGGY]  Number  val  =  getNumberValue(val.toUpperCase(Locale.ENGLISH));  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumberValue(val.toUpperCase(Locale.ENGLISH));  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumberValue(val.toUpperCase(Locale.ENGLISH));	  Number    val    =    getNumberValue(val.toUpperCase());    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
110	[BUG]  [BUGGY]  Number  val  =  getNumberValue().toString();  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumberValue().toString();  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumberValue().toString();	  Number    val    =    getNullValue().toString();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
111	[BUG]  [BUGGY]  Number  val  =  getNullValue().getNumber();  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNullValue().getNumber();  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNullValue().getNumber();	  Number    val    =    getNullValue().toString();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
112	[BUG]  [BUGGY]  Number  val  =  getNullValue().toNumber();  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNullValue().toNumber();  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNullValue().toNumber();	  Number    val    =    getNullValue().toString();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
113	[BUG]  [BUGGY]  if(val  ==  null  ||  val.trim().equals( "-))  {  [CE]  unclosed  string  literal  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.trim().equals( "-))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||  val.trim().equals( "-))  {	  if(val    ==    null    ||    val.trim().equals(   "-   "))    {    	non-compiled	[CE]  unclosed  string  literal	109	None	replace
114	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.trim().equals( "-0 "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	add	if(val  ==  null  ||  val.trim().equals( "-0 "))  {	  if(val    ==    null    ||    val.trim().equals(   "-   "))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	109	2	replace
115	[BUG]  [BUGGY]  if(val  ==  null  ||  val.trim().equals( "-0 "))  {  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.trim().equals( "-0 "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||  val.trim().equals( "-0 "))  {	  if(val    ==    null    ||    val.trim().equals(   "-   "))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	109	2	replace
116	[BUG]  [BUGGY]  Number  val  =  getNumberValue(new  String(val),  null);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumberValue(new  String(val),  null);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumberValue(new  String(val),  null);	  Number    val    =    getNumberValue(new    String(val));    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
117	[BUG]  [BUGGY]  Number  val  =  getNumberValue(new  String(val),  0);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumberValue(new  String(val),  0);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumberValue(new  String(val),  0);	  Number    val    =    getNumberValue(new    String(val));    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
118	[BUG]  [BUGGY]  Number  val  =  getNumberValue(new  String(val)+  1);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumberValue(new  String(val)+  1);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumberValue(new  String(val)+  1);	  Number    val    =    getNumberValue(new    String(val));    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
119	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.equals( "[null] "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	add	if(val  ==  null  ||  val.equals( "[null] "))  {	  if(val    ==    null    ||    val.equals(   ".   "))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	75	1	replace
120	[BUG]  [BUGGY]  if(val  ==  null  ||  val.equals( "[null] "))  {  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.equals( "[null] "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||  val.equals( "[null] "))  {	  if(val    ==    null    ||    val.equals(   ".   "))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	75	1	replace
121	[BUG]  [BUGGY]  Number  val  =(Number)null.multiply(val,  null);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)null.multiply(val,  null);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)null.multiply(val,  null);	  Number    val    =(Number)null.multiply(val);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
122	[BUG]  [BUGGY]  Number  val  =(Number)null.multiply(val,  false);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)null.multiply(val,  false);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)null.multiply(val,  false);	  Number    val    =(Number)null.multiply(val);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
123	[BUG]  [BUGGY]  Number  val  =(Number)null.multiply(val,  1.0);  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)null.multiply(val,  1.0);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)null.multiply(val,  1.0);	  Number    val    =(Number)null.multiply(val);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
124	[BUG]  [BUGGY]  String  val  =  val.toLowerCase(Locale.ENGLISH,  true);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  String  val  =  val.toLowerCase(Locale.ENGLISH,  true);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	String  val  =  val.toLowerCase(Locale.ENGLISH,  true);	  String    val    =    val.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
125	[BUG]  [BUGGY]  String  val  =  val.toLowerCase(Locale.ENGLISH,  false);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  String  val  =  val.toLowerCase(Locale.ENGLISH,  false);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	String  val  =  val.toLowerCase(Locale.ENGLISH,  false);	  String    val    =    val.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
126	[BUG]  [BUGGY]  String  val  =  val.toLowerCase(Locale.ENGLISH,  128);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  String  val  =  val.toLowerCase(Locale.ENGLISH,  128);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	String  val  =  val.toLowerCase(Locale.ENGLISH,  128);	  String    val    =    val.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
127	[BUG]  [BUGGY]  Number  val  =(Number)this.values.getValue(val,  0);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)this.values.getValue(val,  0);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)this.values.getValue(val,  0);	  Number    val    =(Number)this.values.getValue(val);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
128	[BUG]  [BUGGY]  Number  val  =(Number)this.values.getValue(val,  0.0);  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)this.values.getValue(val,  0.0);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)this.values.getValue(val,  0.0);	  Number    val    =(Number)this.values.getValue(val);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
129	[BUG]  [BUGGY]  Number  val  =(Number)this.values.getValue(val,  true);  [CE]  illegal  start  of  type  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)this.values.getValue(val,  true);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)this.values.getValue(val,  true);	  Number    val    =(Number)this.values.getValue(val);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
130	[BUG]  [BUGGY]  if(val  ==  null  ||  val.startsWith(   ".0   "))  {  if(val  ==  null  ||  val.startsWith( ".0   "))  {  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.startsWith(   ".0   "))  {  if(val  ==  null  ||  val.startsWith( ".0   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.startsWith(   ".0   "))    {    if(val  ==  null  ||  val.startsWith( ".0   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	106	None	add
131	[BUG]  [BUGGY]  Number  val  =  new  Double(val.length(),  val.length()  -  1);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  new  Double(val.length(),  val.length()  -  1);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  new  Double(val.length(),  val.length()  -  1);	  Number    val    =    new    Double(val.length(),    val.length());    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
132	[BUG]  [BUGGY]  Number  val  =  new  Double(val.length(),  val.length()  +  1);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  new  Double(val.length(),  val.length()  +  1);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  new  Double(val.length(),  val.length()  +  1);	  Number    val    =    new    Double(val.length(),    val.length());    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
133	[BUG]  [BUGGY]  Number  val  =  new  Double(val.length()  -  1,  val.length());  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  new  Double(val.length()  -  1,  val.length());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  new  Double(val.length()  -  1,  val.length());	  Number    val    =    new    Double(val.length(),    val.length());    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
134	[BUG]  [BUGGY]  Number  val  =(Number)this.numbers.get(0);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)this.numbers.get(0);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)this.numbers.get(0);	  Number    val    =(Number)numbers.get(0);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
135	[BUG]  [BUGGY]  Number  val  =(Number)this.numbers.get(1);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)this.numbers.get(1);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)this.numbers.get(1);	  Number    val    =(Number)numbers.get(0);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
136	[BUG]  [BUGGY]  Number  val  =(Number)numbers.get(val);  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)numbers.get(val);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)numbers.get(val);	  Number    val    =(Number)numbers.get(0);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
137	[BUG]  [BUGGY]  if(val  ==  null  ||  val.length()!=  0)  {  return  new  Double(val.doubleValue());  }  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.length()!=  0)  {  return  new  Double(val.doubleValue());  }  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||  val.length()!=  0)  {  return  new  Double(val.doubleValue());  }	  if(val    ==    null    ||    val.length()    ==    0)    {    return    new    Double(val.doubleValue());    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
138	[BUG]  [BUGGY]  Number  val  =  new  Double(val.doubleValue());  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  new  Double(val.doubleValue());  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  new  Double(val.doubleValue());	  if(val    ==    null    ||    val.length()    ==    0)    {    return    new    Double(val.doubleValue());    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
139	[BUG]  [BUGGY]  if(val  ==  null  ||!val.equals(   "-+   "))  {  if(val  ==  null  ||!val.equals( "-+   "))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||!val.equals(   "-+   "))  {  if(val  ==  null  ||!val.equals( "-+   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||!val.equals(   "-+   "))    {    if(val  ==  null  ||!val.equals( "-+   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	78	None	add
140	[BUG]  [BUGGY]  if(val  ==  null  ||!val.equals(   "-+   "))  {  if(val  ==  null  ||!val.equals( ".++   "))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||!val.equals(   "-+   "))  {  if(val  ==  null  ||!val.equals( ".++   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||!val.equals(   "-+   "))    {    if(val  ==  null  ||!val.equals( ".++   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	78	None	add
141	[BUG]  [BUGGY]  if(val  ==  null  ||!val.equals(   "-+   "))  {  If(val  ==  null  ||!val.equals( "-+   "))  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||!val.equals(   "-+   "))  {  If(val  ==  null  ||!val.equals( "-+   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||!val.equals(   "-+   "))    {    If(val  ==  null  ||!val.equals( "-+   "))  {	  	non-compiled	[CE]  	78	None	add
142	[BUG]  [BUGGY]  if(val!=  null  ||!val.equals(   "-   "))  {  if(val!=  null  ||!val.equals( "-   "))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val!=  null  ||!val.equals(   "-   "))  {  if(val!=  null  ||!val.equals( "-   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val!=    null    ||!val.equals(   "-   "))    {    if(val!=  null  ||!val.equals( "-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
143	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val!=  null  ||!val.equals(   "-   "))  {  if(val  ==  null  ||!val.equals( "-   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	add	if(val!=    null    ||!val.equals(   "-   "))    {    if(val  ==  null  ||!val.equals( "-   "))  {	  	compilable	  [FE]  StringIndexOutOfBoundsException  	9	1	add
144	[BUG]  [BUGGY]  if(val!=  null  ||!val.equals(   "-   "))  {  if(val  ==  null  ||!val.equals( "-   "))  {  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val!=  null  ||!val.equals(   "-   "))  {  if(val  ==  null  ||!val.equals( "-   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val!=    null    ||!val.equals(   "-   "))    {    if(val  ==  null  ||!val.equals( "-   "))  {	  	compilable	  [FE]  StringIndexOutOfBoundsException  	9	1	add
145	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val!=  null  ||!val.equals(   "-   "))  {  if(val!=  null  ||!val.equals( ".-   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	add	if(val!=    null    ||!val.equals(   "-   "))    {    if(val!=  null  ||!val.equals( ".-   "))  {	  	compilable	  [FE]  StringIndexOutOfBoundsException  	9	1	add
146	[BUG]  [BUGGY]  if(val!=  null  ||!val.equals(   "-   "))  {  if(val!=  null  ||!val.equals( ".-   "))  {  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val!=  null  ||!val.equals(   "-   "))  {  if(val!=  null  ||!val.equals( ".-   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val!=    null    ||!val.equals(   "-   "))    {    if(val!=  null  ||!val.equals( ".-   "))  {	  	compilable	  [FE]  StringIndexOutOfBoundsException  	9	1	add
147	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||!val.equals(   "--   "))  {  if(val  ==  null  ||!val.equals( "--   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	add	if(val    ==    null    ||!val.equals(   "--   "))    {    if(val  ==  null  ||!val.equals( "--   "))  {	  	compilable	  [FE]  StringIndexOutOfBoundsException  	76	1	add
148	[BUG]  [BUGGY]  if(val  ==  null  ||!val.equals(   "--   "))  {  if(val  ==  null  ||!val.equals( "--   "))  {  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||!val.equals(   "--   "))  {  if(val  ==  null  ||!val.equals( "--   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||!val.equals(   "--   "))    {    if(val  ==  null  ||!val.equals( "--   "))  {	  	compilable	  [FE]  StringIndexOutOfBoundsException  	76	1	add
149	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||!val.equals(   "--   "))  {  if(val  ==  null  ||!val.equals( ".--   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	add	if(val    ==    null    ||!val.equals(   "--   "))    {    if(val  ==  null  ||!val.equals( ".--   "))  {	  	compilable	  [FE]  StringIndexOutOfBoundsException  	76	1	add
150	[BUG]  [BUGGY]  if(val  ==  null  ||!val.equals(   "--   "))  {  if(val  ==  null  ||!val.equals( ".--   "))  {  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||!val.equals(   "--   "))  {  if(val  ==  null  ||!val.equals( ".--   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||!val.equals(   "--   "))    {    if(val  ==  null  ||!val.equals( ".--   "))  {	  	compilable	  [FE]  StringIndexOutOfBoundsException  	76	1	add
151	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||!val.equals(   "--   "))  {  If(val  ==  null  ||!val.equals( "--   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	add	if(val    ==    null    ||!val.equals(   "--   "))    {    If(val  ==  null  ||!val.equals( "--   "))  {	  	compilable	  [FE]  StringIndexOutOfBoundsException  	76	1	add
152	[BUG]  [BUGGY]  if(val  ==  null  ||!val.equals(   "--   "))  {  If(val  ==  null  ||!val.equals( "--   "))  {  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||!val.equals(   "--   "))  {  If(val  ==  null  ||!val.equals( "--   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||!val.equals(   "--   "))    {    If(val  ==  null  ||!val.equals( "--   "))  {	  	compilable	  [FE]  StringIndexOutOfBoundsException  	76	1	add
153	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  NumberUtils.copyNumber(val,  val.length());  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	add	NumberUtils.copyNumber(val,  val.length());	  NumberUtils.copyNumber(val,    val);    	compilable	  [FE]  StringIndexOutOfBoundsException  	29	1	replace
154	[BUG]  [BUGGY]  NumberUtils.copyNumber(val,  val.length());  [FE]  StringIndexOutOfBoundsException  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  NumberUtils.copyNumber(val,  val.length());  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	NumberUtils.copyNumber(val,  val.length());	  NumberUtils.copyNumber(val,    val);    	compilable	  [FE]  StringIndexOutOfBoundsException  	29	1	replace
155	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  NumberUtils.copyNumber(null,  val);  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	add	NumberUtils.copyNumber(null,  val);	  NumberUtils.copyNumber(val,    val);    	compilable	  [FE]  StringIndexOutOfBoundsException  	29	1	replace
156	[BUG]  [BUGGY]  NumberUtils.copyNumber(null,  val);  [FE]  StringIndexOutOfBoundsException  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  NumberUtils.copyNumber(null,  val);  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	NumberUtils.copyNumber(null,  val);	  NumberUtils.copyNumber(val,    val);    	compilable	  [FE]  StringIndexOutOfBoundsException  	29	1	replace
157	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  NumberUtils.copyNumber(mant,  val);  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	add	NumberUtils.copyNumber(mant,  val);	  NumberUtils.copyNumber(val,    val);    	compilable	  [FE]  StringIndexOutOfBoundsException  	29	1	replace
158	[BUG]  [BUGGY]  NumberUtils.copyNumber(mant,  val);  [FE]  StringIndexOutOfBoundsException  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  NumberUtils.copyNumber(mant,  val);  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	NumberUtils.copyNumber(mant,  val);	  NumberUtils.copyNumber(val,    val);    	compilable	  [FE]  StringIndexOutOfBoundsException  	29	1	replace
159	[BUG]  [BUGGY]  NumberUtils.copyNumber(val,  this.mant);  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  NumberUtils.copyNumber(val,  this.mant);  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	NumberUtils.copyNumber(val,  this.mant);	  NumberUtils.copyNumber(val,    val);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	29	None	replace
160	[BUG]  [BUGGY]  Number  val  =  getNumber(val,  Integer.MIN_VALUE);  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumber(val,  Integer.MIN_VALUE);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumber(val,  Integer.MIN_VALUE);	  Number    val    =    getNumber(val,    Integer.MAX_VALUE);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	111	None	replace
161	[BUG]  [BUGGY]  Number  val  =  getNumber(val,  Integer.MAX_VALUE,  1);  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumber(val,  Integer.MAX_VALUE,  1);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumber(val,  Integer.MAX_VALUE,  1);	  Number    val    =    getNumber(val,    Integer.MAX_VALUE);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	111	None	replace
162	[BUG]  [BUGGY]  Number  val  =  getNumber(val,  Long.MAX_VALUE);  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumber(val,  Long.MAX_VALUE);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumber(val,  Long.MAX_VALUE);	  Number    val    =    getNumber(val,    Integer.MAX_VALUE);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	111	None	replace
163	[BUG]  [BUGGY]  Number  val  =  getNumber(val,  Integer.MAX_VALUE,  10);  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumber(val,  Integer.MAX_VALUE,  10);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumber(val,  Integer.MAX_VALUE,  10);	  Number    val    =    getNumber(val,    Integer.MAX_VALUE);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	111	None	replace
164	[BUG]  [BUGGY]  Number  val  =  getNumberValue(null,  val,  null);  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumberValue(null,  val,  null);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumberValue(null,  val,  null);	  Number    val    =    getNumberValue(null,    val);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	50	None	replace
165	[BUG]  [BUGGY]  Number  val  =  getNumberValue(null,  val.toLowerCase());  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumberValue(null,  val.toLowerCase());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumberValue(null,  val.toLowerCase());	  Number    val    =    getNumberValue(null,    val);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	50	None	replace
166	[BUG]  [BUGGY]  Number  val  =  getNumberValue(null,  val.toCharArray());  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumberValue(null,  val.toCharArray());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumberValue(null,  val.toCharArray());	  Number    val    =    getNumberValue(null,    val);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	50	None	replace
167	[BUG]  [BUGGY]  Number  val  =  getNumberValue(null,  val,  0);  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumberValue(null,  val,  0);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumberValue(null,  val,  0);	  Number    val    =    getNumberValue(null,    val);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	50	None	replace
168	[BUG]  [BUGGY]  Number  val  =  new  Double(null,  val.length());  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  new  Double(null,  val.length());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  new  Double(null,  val.length());	  Number    val    =    new    Double(val.length()    -    1);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	24	None	replace
169	[BUG]  [BUGGY]  if(val  ==  null  ||  val.equals( ".null "))  {  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.equals( ".null "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||  val.equals( ".null "))  {	  if(val    ==    null    ||    val.equals(       "null       "))    {    if(val    ==    null    ||    val.equals(   ".null       "))    {    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	31	None	replace
170	[BUG]  [BUGGY]  if(val!=  null  ||  val.length()  ==  0)  {  if(val!=  null  ||  val.length()  ==  0)  {  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]    AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val!=  null  ||  val.length()  ==  0)  {  if(val!=  null  ||  val.length()  ==  0)  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val!=    null    ||    val.length()    ==    0)    {    if(val!=  null  ||  val.length()  ==  0)  {	  	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	3	None	add
171	[BUG]  [BUGGY]  if(val!=  null  ||  val.length()  ==  0)  {  if(val  ==  null  ||  val.length()  ==  0)  {  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]      AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val!=  null  ||  val.length()  ==  0)  {  if(val  ==  null  ||  val.length()  ==  0)  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val!=    null    ||    val.length()    ==    0)    {    if(val  ==  null  ||  val.length()  ==  0)  {	  	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	3	None	add
172	[BUG]  [BUGGY]  if(val!=  null  ||  val.length()  ==  0)  {  if(val  >=  null  ||  val.length()  ==  0)  {  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]        AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val!=  null  ||  val.length()  ==  0)  {  if(val  >=  null  ||  val.length()  ==  0)  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val!=    null    ||    val.length()    ==    0)    {    if(val  >=  null  ||  val.length()  ==  0)  {	  	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	3	None	add
173	[BUG]  [BUGGY]  if(val  ==  null  ||  val.startsWith(   "-   "))  {  if(val  ==  null  ||  val.startsWith( "-   "))  {  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]    AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.startsWith(   "-   "))  {  if(val  ==  null  ||  val.startsWith( "-   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.startsWith(   "-   "))    {    if(val  ==  null  ||  val.startsWith( "-   "))  {	  	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	33	None	add
174	[BUG]  [BUGGY]  if(val  ==  null  ||  val.startsWith(   "-   "))  {  if(val  ==  null  ||  val.startsWith( ".-   "))  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.startsWith(   "-   "))  {  if(val  ==  null  ||  val.startsWith( ".-   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.startsWith(   "-   "))    {    if(val  ==  null  ||  val.startsWith( ".-   "))  {	  	non-compiled	[CE]  ';'  expected	33	None	add
175	[BUG]  [BUGGY]  if(val  ==  null  ||  val.startsWith(   "-   "))  {  if(val!=  null  ||  val.startsWith( "-   "))  {  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]        AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.startsWith(   "-   "))  {  if(val!=  null  ||  val.startsWith( "-   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.startsWith(   "-   "))    {    if(val!=  null  ||  val.startsWith( "-   "))  {	  	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	33	None	add
176	[BUG]  [BUGGY]  if(val  ==  null  ||!val.startsWith( ".0 "))  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||!val.startsWith( ".0 "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||!val.startsWith( ".0 "))  {	  if(val    ==    null    ||!val.startsWith(   "-   "))    {    	non-compiled	[CE]  ')'  expected	103	None	replace
177	[BUG]  [BUGGY]  if(val  ==  null  ||!val.startsWith( "0 "))  {  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||!val.startsWith( "0 "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||!val.startsWith( "0 "))  {	  if(val    ==    null    ||!val.startsWith(   "-   "))    {    	non-compiled	[CE]  ')'  expected	103	None	replace
178	[BUG]  [BUGGY]  Number  val  =  getNumber(val.toLowerCase(),  false);  [CE]  cannot  find  symbol  NumberShort  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumber(val.toLowerCase(),  false);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumber(val.toLowerCase(),  false);	  Number    val    =    getNumber(val.toLowerCase());    	non-compiled	[CE]  cannot  find  symbol  NumberShort	54	None	replace
179	[BUG]  [BUGGY]  if(val!=  null  ||  val.equals( "- "))  {  [CE]  cannot  find  symbol  NumberShort  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val!=  null  ||  val.equals( "- "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val!=  null  ||  val.equals( "- "))  {	  if(val    ==    null    ||    val.equals(       "-       "))    {    if(val    ==    null    ||    val.equals(   ".-       "))    {    	non-compiled	[CE]  cannot  find  symbol  NumberShort	63	None	replace
180	[BUG]  [BUGGY]  Number  val  =(Number)this.values.get(val  +  1);  [CE]  cannot  find  symbol  NumberShort  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)this.values.get(val  +  1);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)this.values.get(val  +  1);	  Number    val    =(Number)this.values.get(val);    	non-compiled	[CE]  cannot  find  symbol  NumberShort	98	None	replace
181	[BUG]  [BUGGY]  Number  val  =(Number)this.values.get(val,  0);  [CE]  cannot  find  symbol  NumberShort  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)this.values.get(val,  0);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)this.values.get(val,  0);	  Number    val    =(Number)this.values.get(val);    	non-compiled	[CE]  cannot  find  symbol  NumberShort	98	None	replace
182	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toString(),  val.toCharArray());  [CE]  cannot  find  symbol  NumberShort  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(val.toString(),  val.toCharArray());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val.toString(),  val.toCharArray());	  Number    val    =    createNumber(val.toCharArray(),    val.toCharArray());    	non-compiled	[CE]  cannot  find  symbol  NumberShort	110	None	replace
183	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toLowerCase(),  val.toCharArray());  [CE]  cannot  find  symbol  NumberShort  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(val.toLowerCase(),  val.toCharArray());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val.toLowerCase(),  val.toCharArray());	  Number    val    =    createNumber(val.toCharArray(),    val.toCharArray());    	non-compiled	[CE]  cannot  find  symbol  NumberShort	110	None	replace
184	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  val.toCharArray(),  0);  [CE]  cannot  find  symbol  NumberShort  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  val.toCharArray(),  0);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val.toCharArray(),  val.toCharArray(),  0);	  Number    val    =    createNumber(val.toCharArray(),    val.toCharArray());    	non-compiled	[CE]  cannot  find  symbol  NumberShort	110	None	replace
185	[BUG]  [BUGGY]  while(val.length()  ==  0)  {  throw  new  NumberFormatException( " ");  }  [CE]  cannot  find  symbol  NumberShort  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  while(val.length()  ==  0)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	while(val.length()  ==  0)  {  throw  new  NumberFormatException( " ");  }	  if(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  NumberShort	97	None	replace
186	[BUG]  [BUGGY]  Number  val  =  val.substring(0,  val.length()  -  1);  [CE]  cannot  find  symbol  NumberShort  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  val.substring(0,  val.length()  -  1);  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  val.substring(0,  val.length()  -  1);	  if(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  NumberShort	97	None	replace
187	[BUG]  [BUGGY]  String  val  =  val.trim().toLowerCase(Locale.ENGLISH);  [CE]  cannot  find  symbol  NumberShort  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  String  val  =  val.trim().toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	String  val  =  val.trim().toLowerCase(Locale.ENGLISH);	  String    val    =    val.trim().toLowerCase();    	non-compiled	[CE]  cannot  find  symbol  NumberShort	5	None	replace
188	[BUG]  [BUGGY]  String  val  =  val.trim().toLowerCase(Locale.US);  [CE]  cannot  find  symbol  NumberShort  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  String  val  =  val.trim().toLowerCase(Locale.US);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	String  val  =  val.trim().toLowerCase(Locale.US);	  String    val    =    val.trim().toLowerCase();    	non-compiled	[CE]  cannot  find  symbol  NumberShort	5	None	replace
189	[BUG]  [BUGGY]  String  val  =  val.trim().toLowerCase(Locale.getDefault());  [CE]  cannot  find  symbol  NumberShort  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  String  val  =  val.trim().toLowerCase(Locale.getDefault());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	String  val  =  val.trim().toLowerCase(Locale.getDefault());	  String    val    =    val.trim().toLowerCase();    	non-compiled	[CE]  cannot  find  symbol  NumberShort	5	None	replace
190	[BUG]  [BUGGY]  Number  val  =(Number)val.nextToken();  [CE]  cannot  find  symbol  NumberShort  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)val.nextToken();  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)val.nextToken();	  Number    val    =(Number)val.next();    	non-compiled	[CE]  cannot  find  symbol  NumberShort	67	None	replace
191	[BUG]  [BUGGY]  Number  val  =(Number)val.nextElement();  [CE]  cannot  find  symbol  NumberShort  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)val.nextElement();  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)val.nextElement();	  Number    val    =(Number)val.next();    	non-compiled	[CE]  cannot  find  symbol  NumberShort	67	None	replace
192	[BUG]  [BUGGY]  NumberUtils.copyValue(val,  val.length());  [CE]  cannot  find  symbol  NumberShort  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  NumberUtils.copyValue(val,  val.length());  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	NumberUtils.copyValue(val,  val.length());	  NumberUtils.copyValue(val,    val);    	non-compiled	[CE]  cannot  find  symbol  NumberShort	86	None	replace
193	[BUG]  [BUGGY]  NumberUtils.copyValue(val,  val.intValue());  [CE]  cannot  find  symbol  NumberShort  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  NumberUtils.copyValue(val,  val.intValue());  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	NumberUtils.copyValue(val,  val.intValue());	  NumberUtils.copyValue(val,    val);    	non-compiled	[CE]  cannot  find  symbol  NumberShort	86	None	replace
194	[BUG]  [BUGGY]  NumberUtils.copyValue(val,  val.toLowerCase());  [CE]  cannot  find  symbol  NumberShort  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  NumberUtils.copyValue(val,  val.toLowerCase());  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	NumberUtils.copyValue(val,  val.toLowerCase());	  NumberUtils.copyValue(val,    val);    	non-compiled	[CE]  cannot  find  symbol  NumberShort	86	None	replace
195	[BUG]  [BUGGY]  NumberUtils.copyValue(val,  val.toCharArray());  [CE]  cannot  find  symbol  NumberShort  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  NumberUtils.copyValue(val,  val.toCharArray());  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	NumberUtils.copyValue(val,  val.toCharArray());	  NumberUtils.copyValue(val,    val);    	non-compiled	[CE]  cannot  find  symbol  NumberShort	86	None	replace
196	[BUG]  [BUGGY]  Number  val  =(Number)val.cloneBound();  [CE]  cannot  find  symbol  NumberShort  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)val.cloneBound();  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)val.cloneBound();	  Number    val    =(Number)val.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  NumberShort	66	None	replace
197	[BUG]  [BUGGY]  Number  val  =  getValue(null,  val,  null);  [CE]  variable  numeric  is  already  defined  in  method  createNumber(String)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getValue(null,  val,  null);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getValue(null,  val,  null);	  Number    val    =    getValue(null,    val);    	non-compiled	[CE]  variable  numeric  is  already  defined  in  method  createNumber(String)	59	None	replace
198	[BUG]  [BUGGY]  Number  val  =  getValue(null,  val.toLowerCase());  [CE]  unreachable  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getValue(null,  val.toLowerCase());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getValue(null,  val.toLowerCase());	  Number    val    =    getValue(null,    val);    	non-compiled	[CE]  unreachable  statement	59	None	replace
199	[BUG]  [BUGGY]  Number  val  =  getValue(null,  val.toCharArray());  [CE]  unreachable  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getValue(null,  val.toCharArray());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getValue(null,  val.toCharArray());	  Number    val    =    getValue(null,    val);    	non-compiled	[CE]  unreachable  statement	59	None	replace
200	[BUG]  [BUGGY]  Number  val  =  getValue(null,  val,  false);  [CE]  unreachable  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getValue(null,  val,  false);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getValue(null,  val,  false);	  Number    val    =    getValue(null,    val);    	non-compiled	[CE]  unreachable  statement	59	None	replace
201	[BUG]  [BUGGY]  if(val!=  null  ||  val.equals(   "null   "))  {  if(val!=  null  ||  val.equals( "null   "))  {  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val!=  null  ||  val.equals(   "null   "))  {  if(val!=  null  ||  val.equals( "null   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val!=    null    ||    val.equals(   "null   "))    {    if(val!=  null  ||  val.equals( "null   "))  {	  	non-compiled	[CE]  unreachable  statement	17	None	add
202	[BUG]  [BUGGY]  if(val!=  null  ||  val.equals(   "null   "))  {  if(val  ==  null  ||  val.equals( "null   "))  {  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val!=  null  ||  val.equals(   "null   "))  {  if(val  ==  null  ||  val.equals( "null   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val!=    null    ||    val.equals(   "null   "))    {    if(val  ==  null  ||  val.equals( "null   "))  {	  	non-compiled	[CE]  not  a  statement	17	None	add
203	[BUG]  [BUGGY]  if(val!=  null  ||  val.equals(   "null   "))  {  if(val!=  null  ||  val.equals( ".null   "))  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val!=  null  ||  val.equals(   "null   "))  {  if(val!=  null  ||  val.equals( ".null   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val!=    null    ||    val.equals(   "null   "))    {    if(val!=  null  ||  val.equals( ".null   "))  {	  	non-compiled	[CE]  not  a  statement	17	None	add
204	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toUpperCase(),  false);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(val.toUpperCase(),  false);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val.toUpperCase(),  false);	  Number    val    =    createNumber(val.toUpperCase());    	non-compiled	[CE]  not  a  statement	99	None	replace
205	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toUpperCase(Locale.ENGLISH));  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(val.toUpperCase(Locale.ENGLISH));  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val.toUpperCase(Locale.ENGLISH));	  Number    val    =    createNumber(val.toUpperCase());    	non-compiled	[CE]  not  a  statement	99	None	replace
206	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toUpperCase(),  true);  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(val.toUpperCase(),  true);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val.toUpperCase(),  true);	  Number    val    =    createNumber(val.toUpperCase());    	non-compiled	[CE]  not  a  statement	99	None	replace
207	[BUG]  [BUGGY]  if(val  ==  null  ||  val.startsWith(   "null   "))  {  if(val  ==  null  ||  val.startsWith( "null   "))  {  [CE]  not  a  statement  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.startsWith(   "null   "))  {  if(val  ==  null  ||  val.startsWith( "null   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.startsWith(   "null   "))    {    if(val  ==  null  ||  val.startsWith( "null   "))  {	  	non-compiled	[CE]  not  a  statement	15	None	add
208	[BUG]  [BUGGY]  if(val  ==  null  ||  val.startsWith(   "null   "))  {  if(val  ==  null  ||  val.startsWith( ".null   "))  {  [CE]  unreachable  statement  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.startsWith(   "null   "))  {  if(val  ==  null  ||  val.startsWith( ".null   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.startsWith(   "null   "))    {    if(val  ==  null  ||  val.startsWith( ".null   "))  {	  	non-compiled	[CE]  unreachable  statement	15	None	add
209	[BUG]  [BUGGY]  if(val  ==  null  ||  val.startsWith(   "null   "))  {  if(val  ==  null  ||  val.startsWith( ",null   "))  {  [CE]  unreachable  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.startsWith(   "null   "))  {  if(val  ==  null  ||  val.startsWith( ",null   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.startsWith(   "null   "))    {    if(val  ==  null  ||  val.startsWith( ",null   "))  {	  	non-compiled	[CE]  unreachable  statement	15	None	add
210	[BUG]  [BUGGY]  Number  val  =  createNumber(null,  val.toLowerCase());  [CE]  unreachable  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(null,  val.toLowerCase());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(null,  val.toLowerCase());	  Number    val    =    createNumber(null,    val);    	non-compiled	[CE]  unreachable  statement	13	None	replace
211	[BUG]  [BUGGY]  Number  val  =  createNumber(null,  val.toCharArray());  [CE]  unreachable  statement  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(null,  val.toCharArray());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(null,  val.toCharArray());	  Number    val    =    createNumber(null,    val);    	non-compiled	[CE]  unreachable  statement	13	None	replace
212	[BUG]  [BUGGY]  Number  val  =  createNumber(null,  val,  null);  [CE]  unreachable  statement  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(null,  val,  null);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(null,  val,  null);	  Number    val    =    createNumber(null,    val);    	non-compiled	[CE]  unreachable  statement	13	None	replace
213	[BUG]  [BUGGY]  if(val  ==  null  ||!val.trim().equals( "-))  {  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||!val.trim().equals( "-))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||!val.trim().equals( "-))  {	  if(val    ==    null    ||!val.trim().equals(   "-   "))    {    	non-compiled	[CE]  unreachable  statement	101	None	replace
214	[BUG]  [BUGGY]  if(val!=  null  ||!val.trim().equals( "- "))  {  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val!=  null  ||!val.trim().equals( "- "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val!=  null  ||!val.trim().equals( "- "))  {	  if(val    ==    null    ||!val.trim().equals(   "-   "))    {    	non-compiled	[CE]  unreachable  statement	101	None	replace
215	[BUG]  [BUGGY]  if(val  ==  null  ||  val.equals(   ".   "))  {  if(val  ==  null  ||  val.equals(   ".   "))  {  [CE]  unreachable  statement  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.equals(   ".   "))  {  if(val  ==  null  ||  val.equals(   ".   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.equals(   ".   "))    {    if(val  ==  null  ||  val.equals(   ".   "))  {	  	non-compiled	[CE]  unreachable  statement	74	None	add
216	[BUG]  [BUGGY]  if(val  ==  null  ||  val.equals(   ".   "))  {  if(val  ==  null  ||  val.equals(... ".   "))  {  [CE]  unreachable  statement  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.equals(   ".   "))  {  if(val  ==  null  ||  val.equals(... ".   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.equals(   ".   "))    {    if(val  ==  null  ||  val.equals(... ".   "))  {	  	non-compiled	[CE]  unreachable  statement	74	None	add
217	[BUG]  [BUGGY]  if(val  ==  null  ||  val.equals(   ".   "))  {  if(val  ==  null  ||  val.equals(. ".   "))  {  [CE]  unreachable  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.equals(   ".   "))  {  if(val  ==  null  ||  val.equals(. ".   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.equals(   ".   "))    {    if(val  ==  null  ||  val.equals(. ".   "))  {	  	non-compiled	[CE]  unreachable  statement	74	None	add
218	[BUG]  [BUGGY]  Number  val  =  new  Double(val.length()  *  2  +  1);  [CE]  unreachable  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  new  Double(val.length()  *  2  +  1);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  new  Double(val.length()  *  2  +  1);	  Number    val    =    new    Double(val.length()    *    2);    	non-compiled	[CE]  unreachable  statement	26	None	replace
219	[BUG]  [BUGGY]  Number  val  =  new  Double(val.length()  +  2);  [CE]  unreachable  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  new  Double(val.length()  +  2);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  new  Double(val.length()  +  2);	  Number    val    =    new    Double(val.length()    *    2);    	non-compiled	[CE]  unreachable  statement	26	None	replace
220	[BUG]  [BUGGY]  If(val  ==  null  ||!val.equals( "- "))  {  [CE]  unreachable  statement  [FE]        AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  If(val  ==  null  ||!val.equals( "- "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	If(val  ==  null  ||!val.equals( "- "))  {	  if(val    ==    null    ||!val.equals(       "-       "))    {    If(val    ==    null    ||!val.equals(   "-       "))    {    	non-compiled	[CE]  unreachable  statement	80	None	replace
221	[BUG]  [BUGGY]  if(val  ==  null  ||!val.equals( "- "))  {  If(val  ==  null  ||!val.equals( "-0 "))  {  [CE]  unreachable  statement  [FE]          AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||!val.equals( "- "))  {  If(val  ==  null  ||!val.equals( "-0 "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||!val.equals( "- "))  {  If(val  ==  null  ||!val.equals( "-0 "))  {	  if(val    ==    null    ||!val.equals(       "-       "))    {    If(val    ==    null    ||!val.equals(   "-       "))    {    	non-compiled	[CE]  unreachable  statement	80	None	replace
222	[BUG]  [BUGGY]  if(val  ==  null  ||!val.equals( "--))  {  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||!val.equals( "--))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||!val.equals( "--))  {	  if(val    ==    null    ||!val.equals(   "--   "))    {    	non-compiled	[CE]  orphaned  case	77	None	replace
223	[BUG]  [BUGGY]  Number  val  =  getNullValue(number);  [CE]  orphaned  case  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNullValue(number);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNullValue(number);	  Number    val    =    getNumberValue(number);    	non-compiled	[CE]  orphaned  case	53	None	replace
224	[BUG]  [BUGGY]  if(val  ==  null  ||  val.equals(   "-0   "))  {  if(val  ==  null  ||  val.equals( "-0   "))  {  [CE]  not  a  statement  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.equals(   "-0   "))  {  if(val  ==  null  ||  val.equals( "-0   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.equals(   "-0   "))    {    if(val  ==  null  ||  val.equals( "-0   "))  {	  	non-compiled	[CE]  not  a  statement	37	None	add
225	[BUG]  [BUGGY]  if(val  ==  null  ||  val.equals(   "-0   "))  {  if(val  ==  null  ||  val.equals( ".0   "))  {  [CE]  not  a  statement  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.equals(   "-0   "))  {  if(val  ==  null  ||  val.equals( ".0   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.equals(   "-0   "))    {    if(val  ==  null  ||  val.equals( ".0   "))  {	  	non-compiled	[CE]  not  a  statement	37	None	add
226	[BUG]  [BUGGY]  if(val  ==  null  ||  val.equals(   "-0   "))  {  if(val  ==  null  ||  val.equals( "-1   "))  {  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.equals(   "-0   "))  {  if(val  ==  null  ||  val.equals( "-1   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.equals(   "-0   "))    {    if(val  ==  null  ||  val.equals( "-1   "))  {	  	non-compiled	[CE]  not  a  statement	37	None	add
227	[BUG]  [BUGGY]  if(val  ==  null  ||  val.startsWith(   "--   "))  {  if(val  ==  null  ||  val.startsWith( "--   "))  {  [CE]  not  a  statement  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.startsWith(   "--   "))  {  if(val  ==  null  ||  val.startsWith( "--   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.startsWith(   "--   "))    {    if(val  ==  null  ||  val.startsWith( "--   "))  {	  	non-compiled	[CE]  not  a  statement	35	None	add
228	[BUG]  [BUGGY]  if(val  ==  null  ||  val.startsWith(   "--   "))  {  if(val  ==  null  ||  val.startsWith( ".--   "))  {  [CE]  not  a  statement  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.startsWith(   "--   "))  {  if(val  ==  null  ||  val.startsWith( ".--   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.startsWith(   "--   "))    {    if(val  ==  null  ||  val.startsWith( ".--   "))  {	  	non-compiled	[CE]  not  a  statement	35	None	add
229	[BUG]  [BUGGY]  NumberUtils.safeMultiply(val);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  NumberUtils.safeMultiply(val);  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	NumberUtils.safeMultiply(val);	  if(val    ==    null)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	94	None	replace
230	[BUG]  [BUGGY]  NumberUtils.copyNumber(val);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  NumberUtils.copyNumber(val);  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	NumberUtils.copyNumber(val);	  if(val    ==    null)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	94	None	replace
231	[BUG]  [BUGGY]  NumberUtils.copyNumber(val,  this);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  NumberUtils.copyNumber(val,  this);  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	NumberUtils.copyNumber(val,  this);	  if(val    ==    null)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	94	None	replace
232	[BUG]  [BUGGY]  Number  val  =(Number)val.getKey();  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)val.getKey();  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)val.getKey();	  Number    val    =(Number)val.getValue();    	non-compiled	[CE]  not  a  statement	65	None	replace
233	[BUG]  [BUGGY]  Number  val  =(Number)val.intValue();  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)val.intValue();  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)val.intValue();	  Number    val    =(Number)val.getValue();    	non-compiled	[CE]  not  a  statement	65	None	replace
234	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toLowerCase(),  false);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(val.toLowerCase(),  false);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val.toLowerCase(),  false);	  Number    val    =    createNumber(val.toLowerCase());    	non-compiled	[CE]  not  a  statement	73	None	replace
235	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toLowerCase(),  true);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(val.toLowerCase(),  true);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val.toLowerCase(),  true);	  Number    val    =    createNumber(val.toLowerCase());    	non-compiled	[CE]  not  a  statement	73	None	replace
236	[BUG]  [BUGGY]  Number  val  =(Number)val.doubleValue();  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)val.doubleValue();  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)val.doubleValue();	  Number    val    =(Number)null.doubleValue();    	non-compiled	[CE]  not  a  statement	88	None	replace
237	[BUG]  [BUGGY]  Number  val  =(Number)number.doubleValue();  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)number.doubleValue();  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)number.doubleValue();	  Number    val    =(Number)null.doubleValue();    	non-compiled	[CE]  not  a  statement	88	None	replace
238	[BUG]  [BUGGY]  Number  val  =  getNumber(val.toUpperCase(Locale.ENGLISH));  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumber(val.toUpperCase(Locale.ENGLISH));  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumber(val.toUpperCase(Locale.ENGLISH));	  Number    val    =    getNumber(val.toUpperCase());    	non-compiled	[CE]  not  a  statement	55	None	replace
239	[BUG]  [BUGGY]  Number  val  =  getNumber(val.toUpperCase(),  false);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumber(val.toUpperCase(),  false);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumber(val.toUpperCase(),  false);	  Number    val    =    getNumber(val.toUpperCase());    	non-compiled	[CE]  not  a  statement	55	None	replace
240	[BUG]  [BUGGY]  if(val  ==  null  ||  val.length()!=  0)  {  if(val  ==  null  ||  val.length()!=  0)  {  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.length()!=  0)  {  if(val  ==  null  ||  val.length()!=  0)  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.length()!=    0)    {    if(val  ==  null  ||  val.length()!=  0)  {	  	non-compiled	[CE]  not  a  statement	1	None	add
241	[BUG]  [BUGGY]  if(val  ==  null  ||  val.length()!=  0)  {  if(val  ==  null  ||  val.length()  >=  0)  {  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.length()!=  0)  {  if(val  ==  null  ||  val.length()  >=  0)  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.length()!=    0)    {    if(val  ==  null  ||  val.length()  >=  0)  {	  	non-compiled	[CE]  not  a  statement	1	None	add
242	[BUG]  [BUGGY]  if(val  ==  null  ||  val.length()!=  0)  {  if(val!=  null  ||  val.length()!=  0)  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.length()!=  0)  {  if(val!=  null  ||  val.length()!=  0)  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.length()!=    0)    {    if(val!=  null  ||  val.length()!=  0)  {	  	non-compiled	[CE]  not  a  statement	1	None	add
243	[BUG]  [BUGGY]  if(val  ==  null  ||  val.length()!=  0)  {  If(val  ==  null  ||  val.length()!=  0)  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.length()!=  0)  {  If(val  ==  null  ||  val.length()!=  0)  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.length()!=    0)    {    If(val  ==  null  ||  val.length()!=  0)  {	  	non-compiled	[CE]  not  a  statement	1	None	add
244	[BUG]  [BUGGY]  Number  val  =  createNumber(val,  false,  null);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(val,  false,  null);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val,  false,  null);	  Number    val    =    createNumber(val,    false);    	non-compiled	[CE]  not  a  statement	12	None	replace
245	[BUG]  [BUGGY]  Number  val  =  createNumber(val,  false,  val);  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(val,  false,  val);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val,  false,  val);	  Number    val    =    createNumber(val,    false);    	non-compiled	[CE]  not  a  statement	12	None	replace
246	[BUG]  [BUGGY]  if(val  ==  null  ||  val.equals( "0 "))  {  [CE]  not  a  statement  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.equals( "0 "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||  val.equals( "0 "))  {	  if(val    ==    null    ||    val.equals(   "-0   "))    {    	non-compiled	[CE]  not  a  statement	38	None	replace
247	[BUG]  [BUGGY]  if(val  ==  null  ||!val.trim().equals( ". "))  {  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||!val.trim().equals( ". "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||!val.trim().equals( ". "))  {	  if(val    ==    null    ||!val.trim().equals(   "-   "))    {    	non-compiled	[CE]  not  a  statement	101	None	replace
248	[BUG]  [BUGGY]  if(val  ==  null  ||  val.length()!=  0)  {  if(val  {  null  ||  val.length()!=  0)  {  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.length()!=  0)  {  if(val  {  null  ||  val.length()!=  0)  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.length()!=    0)    {    if(val  {  null  ||  val.length()!=  0)  {	  	non-compiled	[CE]  not  a  statement	1	None	add
249	[BUG]  [BUGGY]  if(val  ==  null  ||  val.startsWith(   "-   "))  {  If(val  ==  null  ||  val.startsWith( "-   "))  {  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.startsWith(   "-   "))  {  If(val  ==  null  ||  val.startsWith( "-   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.startsWith(   "-   "))    {    If(val  ==  null  ||  val.startsWith( "-   "))  {	  	non-compiled	[CE]  not  a  statement	33	None	add
250	[BUG]  [BUGGY]  if(val  ==  null  ||!val.equals(   "-0   "))  {  if(val  ==  null  ||!val.equals( ".-0   "))  {  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||!val.equals(   "-0   "))  {  if(val  ==  null  ||!val.equals( ".-0   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||!val.equals(   "-0   "))    {    if(val  ==  null  ||!val.equals( ".-0   "))  {	  	non-compiled	[CE]  not  a  statement	7	None	add
251	[BUG]  [BUGGY]  Number  val  =(Number)val.cloneByte();  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)val.cloneByte();  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)val.cloneByte();	  Number    val    =(Number)val.cloneTree();    	non-compiled	[CE]  not  a  statement	66	None	replace
252	[BUG]  [BUGGY]  NumberUtils.copyValue(mant,  val);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  NumberUtils.copyValue(mant,  val);  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	NumberUtils.copyValue(mant,  val);	  NumberUtils.copyValue(val,    val);    	non-compiled	[CE]  not  a  statement	86	None	replace
253	[BUG]  [BUGGY]  NumberUtils.copyValue(val,  mant);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  NumberUtils.copyValue(val,  mant);  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	NumberUtils.copyValue(val,  mant);	  NumberUtils.copyValue(val,    val);    	non-compiled	[CE]  not  a  statement	86	None	replace
254	[BUG]  [BUGGY]  String  val  =  val.toLowerCase(Locale.ENGLISH).trim();  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  String  val  =  val.toLowerCase(Locale.ENGLISH).trim();  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	String  val  =  val.toLowerCase(Locale.ENGLISH).trim();	  String    val    =    val.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  not  a  statement	48	None	replace
255	[BUG]  [BUGGY]  Number  val  =  getValue(val.toLowerCase(),  DEFAULT_NUMBER_VALUE);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getValue(val.toLowerCase(),  DEFAULT_NUMBER_VALUE);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getValue(val.toLowerCase(),  DEFAULT_NUMBER_VALUE);	  Number    val    =    getValue(val.toLowerCase());    	non-compiled	[CE]  not  a  statement	58	None	replace
256	[BUG]  [BUGGY]  Number  val  =(Number)this;  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)this;  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)this;	  Number    val    =(Number)this.null;    	non-compiled	[CE]  not  a  statement	42	None	replace
257	[BUG]  [BUGGY]  Number  val  =  getNumberValue(val.substring(1));  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumberValue(val.substring(1));  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumberValue(val.substring(1));	  Number    val    =    getNumberValue(val.toUpperCase());    	non-compiled	[CE]  not  a  statement	91	None	replace
258	[BUG]  [BUGGY]  number  val  =  new  Double(val.length());  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  number  val  =  new  Double(val.length());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	number  val  =  new  Double(val.length());	  Number    val    =    new    Double(val.length()    +    1);    	non-compiled	[CE]  not  a  statement	25	None	replace
259	[BUG]  [BUGGY]  Number  val  =  new  Double(val,  val.length());  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  new  Double(val,  val.length());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  new  Double(val,  val.length());	  Number    val    =    new    Double(val.length()    +    1);    	non-compiled	[CE]  not  a  statement	25	None	replace
260	[BUG]  [BUGGY]  Numer  val  =  new  Double(val.length());  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Numer  val  =  new  Double(val.length());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Numer  val  =  new  Double(val.length());	  Number    val    =    new    Double(val.length()    +    1);    	non-compiled	[CE]  not  a  statement	25	None	replace
261	[BUG]  [BUGGY]  if(val  ==  null  ||!val.equals( "- "))  {  If(val  ==  null  ||  val.startsWith( "-   "))  {  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||!val.equals( "- "))  {  If(val  ==  null  ||  val.startsWith( "-   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||!val.equals( "- "))  {  If(val  ==  null  ||  val.startsWith( "-   "))  {	  if(val    ==    null    ||!val.equals(       "-       "))    {    If(val    ==    null    ||!val.equals(   "-       "))    {    	non-compiled	[CE]  not  a  statement	80	None	replace
262	[BUG]  [BUGGY]  if(val  ==  null  ||!val.equals( "- "))  {  If(val  ==  null  ||  val.equals( "- "))  {  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||!val.equals( "- "))  {  If(val  ==  null  ||  val.equals( "- "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||!val.equals( "- "))  {  If(val  ==  null  ||  val.equals( "- "))  {	  if(val    ==    null    ||!val.equals(       "-       "))    {    If(val    ==    null    ||!val.equals(   "-       "))    {    	non-compiled	[CE]  not  a  statement	80	None	replace
263	[BUG]  [BUGGY]  Number  val  =(Number)this.mant.doubleValue();  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)this.mant.doubleValue();  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)this.mant.doubleValue();	  Number    val    =(Number)null.doubleValue();    	non-compiled	[CE]  not  a  statement	88	None	replace
264	[BUG]  [BUGGY]  Number  val  =  getValue(null,  val,  0);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getValue(null,  val,  0);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getValue(null,  val,  0);	  Number    val    =    getValue(null,    val);    	non-compiled	[CE]  not  a  statement	59	None	replace
265	[BUG]  [BUGGY]  Number  val  =(Number)val.toUpperCase();  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)val.toUpperCase();  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)val.toUpperCase();	  Number    val    =(Number)val.toCharArray();    	non-compiled	[CE]  not  a  statement	83	None	replace
266	[BUG]  [BUGGY]  Numer  val  =  createNumber(val,  false);  [CE]  not  a  statement  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Numer  val  =  createNumber(val,  false);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Numer  val  =  createNumber(val,  false);	  Number    val    =    createNumber(val,    true);    	non-compiled	[CE]  not  a  statement	14	None	replace
267	[BUG]  [BUGGY]  String  val  =  val  ==  null?  null  :  val.toUpperCase();  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  String  val  =  val  ==  null?  null  :  val.toUpperCase();  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	String  val  =  val  ==  null?  null  :  val.toUpperCase();	  String    val    =    val.toUpperCase();    	non-compiled	[CE]  not  a  statement	49	None	replace
268	[BUG]  [BUGGY]  safeMultiply(val)  {  throw  new  NumberFormatException( " ");  }  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  safeMultiply(val)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	safeMultiply(val)  {  throw  new  NumberFormatException( " ");  }	  if(val    ==    null)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	94	None	replace
269	[BUG]  [BUGGY]  MutableFormat.getInstance().println(val);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  MutableFormat.getInstance().println(val);  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	MutableFormat.getInstance().println(val);	  if(val    ==    null)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	94	None	replace
270	[BUG]  [BUGGY]  NullPointer  val  =  new  NullPointer();  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  NullPointer  val  =  new  NullPointer();  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	NullPointer  val  =  new  NullPointer();	  if(val    ==    null)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	94	None	replace
271	[BUG]  [BUGGY]  NullPointer  val  =  new  Double(val.doubleValue());  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  NullPointer  val  =  new  Double(val.doubleValue());  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	NullPointer  val  =  new  Double(val.doubleValue());	  if(val    ==    null)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	94	None	replace
272	[BUG]  [BUGGY]  Number  val  =  getValue(val,  null,  -1);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getValue(val,  null,  -1);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getValue(val,  null,  -1);	  Number    val    =    getValue(val,    null);    	non-compiled	[CE]  not  a  statement	60	None	replace
273	[BUG]  [BUGGY]  Number  val  =  getValue(val,  null,  f);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getValue(val,  null,  f);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getValue(val,  null,  f);	  Number    val    =    getValue(val,    null);    	non-compiled	[CE]  not  a  statement	60	None	replace
274	[BUG]  [BUGGY]  Number  val  =(Number)null.multiply(val,  Integer.MAX_VALUE);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)null.multiply(val,  Integer.MAX_VALUE);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)null.multiply(val,  Integer.MAX_VALUE);	  Number    val    =(Number)null.multiply(val);    	non-compiled	[CE]  not  a  statement	89	None	replace
275	[BUG]  [BUGGY]  if(val!=  null  ||  val.equals(   "null   "))  {  if(val!=  null  ||  val.equals( ",null   "))  {  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val!=  null  ||  val.equals(   "null   "))  {  if(val!=  null  ||  val.equals( ",null   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val!=    null    ||    val.equals(   "null   "))    {    if(val!=  null  ||  val.equals( ",null   "))  {	  	non-compiled	[CE]  not  a  statement	17	None	add
276	[BUG]  [BUGGY]  if(val  ==  null  ||!val.equals( "-1 "))  {  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||!val.equals( "-1 "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||!val.equals( "-1 "))  {	  if(val    ==    null    ||!val.equals(   "-0   "))    {    	non-compiled	[CE]  not  a  statement	8	None	replace
277	[BUG]  [BUGGY]  if(val!=  null  ||  val.length()  ==  0)  {  If(val!=  null  ||  val.length()  ==  0)  {  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val!=  null  ||  val.length()  ==  0)  {  If(val!=  null  ||  val.length()  ==  0)  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val!=    null    ||    val.length()    ==    0)    {    If(val!=  null  ||  val.length()  ==  0)  {	  	non-compiled	[CE]  not  a  statement	3	None	add
278	[BUG]  [BUGGY]  Number  val  =  createNumber(null,  false);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(null,  false);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(null,  false);	  Number    val    =    createNumber(val,    false);    	non-compiled	[CE]  not  a  statement	12	None	replace
279	[BUG]  [BUGGY]  Number  val  =  createNumber(val.substring(1),  val.toCharArray());  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(val.substring(1),  val.toCharArray());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val.substring(1),  val.toCharArray());	  Number    val    =    createNumber(val.toCharArray(),    val.toCharArray());    	non-compiled	[CE]  not  a  statement	110	None	replace
280	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  this.mant.toCharArray());  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  this.mant.toCharArray());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val.toCharArray(),  this.mant.toCharArray());	  Number    val    =    createNumber(val.toCharArray(),    val.toCharArray());    	non-compiled	[CE]  not  a  statement	110	None	replace
281	[BUG]  [BUGGY]  Number  val  =  getNumberValue(val,  this.null);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumberValue(val,  this.null);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumberValue(val,  this.null);	  Number    val    =    getNumberValue(val,    null);    	non-compiled	[CE]  not  a  statement	90	None	replace
282	[BUG]  [BUGGY]  if(val  ==  null  ||!val.equals( "-+ ")||  val.startsWith( "-- "))  {  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||!val.equals( "-+ ")||  val.startsWith( "-- "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||!val.equals( "-+ ")||  val.startsWith( "-- "))  {	  if(val    ==    null    ||!val.equals(   "-+   "))    {    	non-compiled	[CE]  not  a  statement	79	None	replace
283	[BUG]  [BUGGY]  Number  val  =(Number)this.nativeObject.getValue(val);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)this.nativeObject.getValue(val);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)this.nativeObject.getValue(val);	  Number    val    =(Number)this.nativeObject.clone();    	non-compiled	[CE]  not  a  statement	93	None	replace
284	[BUG]  [BUGGY]  Number  val  =  getNumberValue(new  String(val),  this);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumberValue(new  String(val),  this);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumberValue(new  String(val),  this);	  Number    val    =    getNumberValue(new    String(val));    	non-compiled	[CE]  not  a  statement	92	None	replace
285	[BUG]  [BUGGY]  Number  val  =  getNumberValue(new  String(val),  val);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumberValue(new  String(val),  val);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumberValue(new  String(val),  val);	  Number    val    =    getNumberValue(new    String(val));    	non-compiled	[CE]  not  a  statement	92	None	replace
286	[BUG]  [BUGGY]  Number  val  =(Number)this.values.getValue(val,  1.0);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)this.values.getValue(val,  1.0);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)this.values.getValue(val,  1.0);	  Number    val    =(Number)this.values.getValue(val);    	non-compiled	[CE]  not  a  statement	44	None	replace
287	[BUG]  [BUGGY]  if(val  ==  null  ||  val.equals(   "number   "))  {  If(val  ==  null  ||  val.equals( "number   "))  {  [CE]  not  a  statement  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.equals(   "number   "))  {  If(val  ==  null  ||  val.equals( "number   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.equals(   "number   "))    {    If(val  ==  null  ||  val.equals( "number   "))  {	  	non-compiled	[CE]  not  a  statement	19	None	add
288	[BUG]  [BUGGY]  if(val  ==  null  ||!val.equals(   "-+   "))  {  if(val  ==  null  ||!val.equals( ".-+   "))  {  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||!val.equals(   "-+   "))  {  if(val  ==  null  ||!val.equals( ".-+   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||!val.equals(   "-+   "))    {    if(val  ==  null  ||!val.equals( ".-+   "))  {	  	non-compiled	[CE]  not  a  statement	78	None	add
289	[BUG]  [BUGGY]  if(val  ==  null  ||  val.length()  ==  0)  {  return  new  Double(val.doubleValue()  +  1);  }  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.length()  ==  0)  {  return  new  Double(val.doubleValue()  +  1);  }  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||  val.length()  ==  0)  {  return  new  Double(val.doubleValue()  +  1);  }	  if(val    ==    null    ||    val.length()    ==    0)    {    return    new    Double(val.doubleValue());    }    	non-compiled	[CE]  not  a  statement	96	None	replace
290	[BUG]  [BUGGY]  if(val  ==  null  ||  val.length()  ==  1)  {  return  new  Double(val.doubleValue());  }  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.length()  ==  1)  {  return  new  Double(val.doubleValue());  }  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||  val.length()  ==  1)  {  return  new  Double(val.doubleValue());  }	  if(val    ==    null    ||    val.length()    ==    0)    {    return    new    Double(val.doubleValue());    }    	non-compiled	[CE]  not  a  statement	96	None	replace
291	[BUG]  [BUGGY]  if(val  ==  null  ||  val.length()  ==  0)  {  throw  new  NumberFormatException( ", ");  }  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.length()  ==  0)  {  throw  new  NumberFormatException( ", ");  }  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||  val.length()  ==  0)  {  throw  new  NumberFormatException( ", ");  }	  if(val    ==    null    ||    val.length()    ==    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	95	None	replace
292	[BUG]  [BUGGY]  if(val  ==  null  ||  val.length()!=  0)  {  throw  new  NumberFormatException( " ");  }  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.length()!=  0)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||  val.length()!=  0)  {  throw  new  NumberFormatException( " ");  }	  if(val    ==    null    ||    val.length()    ==    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	95	None	replace
293	[BUG]  [BUGGY]  if(val  ==  null  ||  val.length()  ==  0)  {  throw  new  NumberFormatException( " ",  val);  }  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.length()  ==  0)  {  throw  new  NumberFormatException( " ",  val);  }  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||  val.length()  ==  0)  {  throw  new  NumberFormatException( " ",  val);  }	  if(val    ==    null    ||    val.length()    ==    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	95	None	replace
294	[BUG]  [BUGGY]  if(val  ==  null  ||!val.equals( "-+ "))  {  if(val  ==  null  ||!val.equals( "-- "))  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||!val.equals( "-+ "))  {  if(val  ==  null  ||!val.equals( "-- "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||!val.equals( "-+ "))  {  if(val  ==  null  ||!val.equals( "-- "))  {	  if(val    ==    null    ||!val.equals(       "-       "))    {    if(val!=    null    ||!val.equals(   "-       "))    {    	non-compiled	[CE]  not  a  statement	23	None	replace
295	[BUG]  [BUGGY]  Number  val  =  getNumber(val.toCharArray(),  true);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumber(val.toCharArray(),  true);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumber(val.toCharArray(),  true);	  Number    val    =    createNumber(val.toCharArray(),    false);    	non-compiled	[CE]  not  a  statement	39	None	replace
296	[BUG]  [BUGGY]  Number  val  =  createNumber(val.substring(1),  false);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(val.substring(1),  false);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val.substring(1),  false);	  Number    val    =    createNumber(val.toCharArray(),    false);    	non-compiled	[CE]  not  a  statement	39	None	replace
297	[BUG]  [BUGGY]  Number  val  =(Number)nfe.getValue(val);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)nfe.getValue(val);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)nfe.getValue(val);	  Number    val    =(Number)nfe.clone();    	non-compiled	[CE]  not  a  statement	82	None	replace
298	[BUG]  [BUGGY]  Number  val  =(Number)nfe.createValue(val);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)nfe.createValue(val);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)nfe.createValue(val);	  Number    val    =(Number)nfe.clone();    	non-compiled	[CE]  not  a  statement	82	None	replace
299	[BUG]  [BUGGY]  Number  f  =  getNumber(mant);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  f  =  getNumber(mant);  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  f  =  getNumber(mant);	  Number    f    =    getNumber(val);    	non-compiled	[CE]  not  a  statement	84	None	replace
300	[BUG]  [BUGGY]  NumberUtils.copyNumber(val,  mant);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  NumberUtils.copyNumber(val,  mant);  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	NumberUtils.copyNumber(val,  mant);	  NumberUtils.copyNumber(val,    val);    	non-compiled	[CE]  not  a  statement	29	None	replace
301	[BUG]  [BUGGY]  Number  val  =  getNumber(val.toCharArray(),  DEFAULT_NUMBER_VALUE);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumber(val.toCharArray(),  DEFAULT_NUMBER_VALUE);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumber(val.toCharArray(),  DEFAULT_NUMBER_VALUE);	  Number    val    =    getNumber(val.toCharArray());    	non-compiled	[CE]  not  a  statement	57	None	replace
302	[BUG]  [BUGGY]  Number  val  =(Number)this.values.get(val.toLowerCase());  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)this.values.get(val.toLowerCase());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)this.values.get(val.toLowerCase());	  Number    val    =(Number)this.values.get(val);    	non-compiled	[CE]  not  a  statement	98	None	replace
303	[BUG]  [BUGGY]  Number  val  =  createNumber(val,  this.null);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(val,  this.null);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val,  this.null);	  Number    val    =    createNumber(val,    null);    	non-compiled	[CE]  not  a  statement	11	None	replace
304	[BUG]  [BUGGY]  Number  val  =  createNumber(val,  null,  -1);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(val,  null,  -1);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val,  null,  -1);	  Number    val    =    createNumber(val,    null);    	non-compiled	[CE]  not  a  statement	11	None	replace
305	[BUG]  [BUGGY]  NumberUtils.copyNumber(mant,  val,  0,  val.length());  [CE]  ';'  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  NumberUtils.copyNumber(mant,  val,  0,  val.length());  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	NumberUtils.copyNumber(mant,  val,  0,  val.length());	  NumberUtils.copyNumber(val,    0,    val.length());    	non-compiled	[CE]  ';'  expected	28	None	replace
306	[BUG]  [BUGGY]  String  val  =  val.trim().toLowerCase(len);  [CE]  ';'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  String  val  =  val.trim().toLowerCase(len);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	String  val  =  val.trim().toLowerCase(len);	  String    val    =    val.trim().toLowerCase();    	non-compiled	[CE]  ';'  expected	5	None	replace
307	[BUG]  [BUGGY]  Number  val  =  getNumberWithValue(val);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumberWithValue(val);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumberWithValue(val);	  Number    val    =    getNumber(number);    	non-compiled	[CE]  not  a  statement	56	None	replace
308	[BUG]  [BUGGY]  if(val  ==  null  ||!val.startsWith( "-- "))  {  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||!val.startsWith( "-- "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||!val.startsWith( "-- "))  {	  if(val    ==    null    ||!val.equals(   "--   "))    {    	non-compiled	[CE]  not  a  statement	77	None	replace
309	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length()));  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  String  val  =  val.substring(0,  val.length()));  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	String  val  =  val.substring(0,  val.length()));	  String    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	6	None	replace
310	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length()).trim();  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  String  val  =  val.substring(0,  val.length()).trim();  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	String  val  =  val.substring(0,  val.length()).trim();	  String    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	6	None	replace
311	[BUG]  [BUGGY]  if(val  ==  null  ||  val.equals(   "-0   "))  {  if(val  ==  null  ||  val.equals( ".-0   "))  {  [CE]  not  a  statement  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.equals(   "-0   "))  {  if(val  ==  null  ||  val.equals( ".-0   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.equals(   "-0   "))    {    if(val  ==  null  ||  val.equals( ".-0   "))  {	  	non-compiled	[CE]  not  a  statement	37	None	add
312	[BUG]  [BUGGY]  NumberUtils.copyValue(val,  0,  val.length());  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  NumberUtils.copyValue(val,  0,  val.length());  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	NumberUtils.copyValue(val,  0,  val.length());	  if(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	97	None	replace
313	[BUG]  [BUGGY]  Number  val  =  getNumericValue().toString();  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumericValue().toString();  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumericValue().toString();	  Number    val    =    getNullValue().toString();    	non-compiled	[CE]  not  a  statement	47	None	replace
314	[BUG]  [BUGGY]  if(val  ==  null  ||  val.startsWith( "-- "))  {  If(val  ==  null  ||  val.equals( "-- "))  {  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.startsWith( "-- "))  {  If(val  ==  null  ||  val.equals( "-- "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||  val.startsWith( "-- "))  {  If(val  ==  null  ||  val.equals( "-- "))  {	  if(val    ==    null    ||    val.equals(       "-       "))    {    If(val    ==    null    ||    val.equals(   "-       "))    {    	non-compiled	[CE]  not  a  statement	64	None	replace
315	[BUG]  [BUGGY]  Number  val  =  getNumber(val,  Integer.MAX_VALUE,  4);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumber(val,  Integer.MAX_VALUE,  4);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumber(val,  Integer.MAX_VALUE,  4);	  Number    val    =    getNumber(val,    Integer.MAX_VALUE);    	non-compiled	[CE]  not  a  statement	111	None	replace
316	[BUG]  [BUGGY]  Number  val  =  getNumber(val.toLowerCase(),  true);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumber(val.toLowerCase(),  true);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumber(val.toLowerCase(),  true);	  Number    val    =    getNumber(val.toLowerCase());    	non-compiled	[CE]  not  a  statement	54	None	replace
317	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toLowerCase(Locale.ENGLISH));  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(val.toLowerCase(Locale.ENGLISH));  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val.toLowerCase(Locale.ENGLISH));	  Number    val    =    createNumber(val.toLowerCase());    	non-compiled	[CE]  not  a  statement	73	None	replace
318	[BUG]  [BUGGY]  if(val!=  null  ||!val.equals(   "-   "))  {  If(val!=  null  ||!val.equals( "-   "))  {  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val!=  null  ||!val.equals(   "-   "))  {  If(val!=  null  ||!val.equals( "-   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val!=    null    ||!val.equals(   "-   "))    {    If(val!=  null  ||!val.equals( "-   "))  {	  	non-compiled	[CE]  not  a  statement	9	None	add
319	[BUG]  [BUGGY]  Number  val  =  createValue(val);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createValue(val);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createValue(val);	  Number    val    =    getValue(null);    	non-compiled	[CE]  not  a  statement	61	None	replace
320	[BUG]  [BUGGY]  Number  val  =  getNullValue(val);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNullValue(val);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNullValue(val);	  Number    val    =    getValue(null);    	non-compiled	[CE]  not  a  statement	61	None	replace
321	[BUG]  [BUGGY]  Number  f  =  createNumber(val,  0);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  f  =  createNumber(val,  0);  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  f  =  createNumber(val,  0);	  Number    f    =    createNumber(val);    	non-compiled	[CE]  not  a  statement	85	None	replace
322	[BUG]  [BUGGY]  Number  val  =  getValue();  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getValue();  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getValue();	  Number    val    =    getNumber();    	non-compiled	[CE]  not  a  statement	46	None	replace
323	[BUG]  [BUGGY]  Number  val  =  getNumberValue(null,  val.toUpperCase());  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumberValue(null,  val.toUpperCase());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumberValue(null,  val.toUpperCase());	  Number    val    =    getNumberValue(null,    val);    	non-compiled	[CE]  not  a  statement	50	None	replace
324	[BUG]  [BUGGY]  Node  val  =  new  Double(val.length());  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Node  val  =  new  Double(val.length());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Node  val  =  new  Double(val.length());	  Number    val    =    new    Double(val.length()    -    1);    	non-compiled	[CE]  not  a  statement	24	None	replace
325	[BUG]  [BUGGY]  Null  val  =  new  Double(val.length());  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Null  val  =  new  Double(val.length());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Null  val  =  new  Double(val.length());	  Number    val    =    new    Double(val.length()    -    1);    	non-compiled	[CE]  not  a  statement	24	None	replace
326	[BUG]  [BUGGY]  Number  val  =(Number)null.multiply(val,  Integer.MIN_VALUE);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)null.multiply(val,  Integer.MIN_VALUE);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)null.multiply(val,  Integer.MIN_VALUE);	  Number    val    =(Number)null.multiply(val);    	non-compiled	[CE]  not  a  statement	89	None	replace
327	[BUG]  [BUGGY]  Null  val  =  getValue(val);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Null  val  =  getValue(val);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Null  val  =  getValue(val);	  Number    val    =    getValue(null);    	non-compiled	[CE]  not  a  statement	61	None	replace
328	[BUG]  [BUGGY]  Number  val  =(Number)this.values.get(val).intValue();  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)this.values.get(val).intValue();  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)this.values.get(val).intValue();	  Number    val    =(Number)this.values.get(val);    	non-compiled	[CE]  not  a  statement	98	None	replace
329	[BUG]  [BUGGY]  Number  val  =  getValue(val,  null,  val);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getValue(val,  null,  val);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getValue(val,  null,  val);	  Number    val    =    getValue(val,    null);    	non-compiled	[CE]  not  a  statement	60	None	replace
330	[BUG]  [BUGGY]  Number  val  =  getValue(val,  null,  '-');  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getValue(val,  null,  '-');  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getValue(val,  null,  '-');	  Number    val    =    getValue(val,    null);    	non-compiled	[CE]  not  a  statement	60	None	replace
331	[BUG]  [BUGGY]  Number  val  =  getValue(val,  null,  val.length());  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getValue(val,  null,  val.length());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getValue(val,  null,  val.length());	  Number    val    =    getValue(val,    null);    	non-compiled	[CE]  not  a  statement	60	None	replace
332	[BUG]  [BUGGY]  val  =  createNumber(val.toCharArray(),  false);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  val  =  createNumber(val.toCharArray(),  false);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	val  =  createNumber(val.toCharArray(),  false);	  Number    val    =    createNumber(val.toCharArray(),    true);    	non-compiled	[CE]  not  a  statement	40	None	replace
333	[BUG]  [BUGGY]  if(val  ==  null  ||!val.equals( "-))  {  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||!val.equals( "-))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||!val.equals( "-))  {	  if(val!=    null    ||!val.equals(   "-   "))    {    	non-compiled	[CE]  not  a  statement	10	None	replace
334	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  val.toCharArray(),  val.toCharArray());  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  val.toCharArray(),  val.toCharArray());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val.toCharArray(),  val.toCharArray(),  val.toCharArray());	  Number    val    =    createNumber(val.toCharArray(),    val.toCharArray());    	non-compiled	[CE]  not  a  statement	110	None	replace
335	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  val.toCharArray()  +  1);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  val.toCharArray()  +  1);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val.toCharArray(),  val.toCharArray()  +  1);	  Number    val    =    createNumber(val.toCharArray(),    val.toCharArray());    	non-compiled	[CE]  not  a  statement	110	None	replace
336	[BUG]  [BUGGY]  while(val!=  null  &&  val.length()  ==  0)  {  return  new  Double(val.doubleValue());  }  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  while(val!=  null  &&  val.length()  ==  0)  {  return  new  Double(val.doubleValue());  }  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	while(val!=  null  &&  val.length()  ==  0)  {  return  new  Double(val.doubleValue());  }	  if(val    ==    null    ||    val.length()    ==    0)    {    return    new    Double(val.doubleValue());    }    	non-compiled	[CE]  not  a  statement	96	None	replace
337	[BUG]  [BUGGY]  Number  val  =  getNumberValue(val.toUpperCase(),  Double.POSITIVE_INFINITY);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumberValue(val.toUpperCase(),  Double.POSITIVE_INFINITY);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumberValue(val.toUpperCase(),  Double.POSITIVE_INFINITY);	  Number    val    =    getNumberValue(val.toUpperCase());    	non-compiled	[CE]  not  a  statement	91	None	replace
338	[BUG]  [BUGGY]  Number  val  =  getNumberValue(val.toUpperCase(),  val.toUpperCase());  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumberValue(val.toUpperCase(),  val.toUpperCase());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumberValue(val.toUpperCase(),  val.toUpperCase());	  Number    val    =    getNumberValue(val.toUpperCase());    	non-compiled	[CE]  not  a  statement	91	None	replace
339	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  this,  '-');  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  this,  '-');  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val.toCharArray(),  this,  '-');	  Number    val    =    createNumber(val.toCharArray(),    this);    	non-compiled	[CE]  not  a  statement	72	None	replace
340	[BUG]  [BUGGY]  Number  val  =(Number)this.value;  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)this.value;  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)this.value;	  Number    val    =(Number)this.null;    	non-compiled	[CE]  not  a  statement	42	None	replace
341	[BUG]  [BUGGY]  Number  val  =(Number)this.negative;  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =(Number)this.negative;  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)this.negative;	  Number    val    =(Number)this.null;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
342	[BUG]  [BUGGY]  String  val  =  val.trim().toLowerCase()  +  1;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  String  val  =  val.trim().toLowerCase()  +  1;  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	String  val  =  val.trim().toLowerCase()  +  1;	  String    val    =    val.trim().toLowerCase();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
343	[BUG]  [BUGGY]  String  val  =  val.trim().toUpperCase();  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  String  val  =  val.trim().toUpperCase();  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	String  val  =  val.trim().toUpperCase();	  String    val    =    val.trim().toLowerCase();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
344	[BUG]  [BUGGY]  if(val  ==  null  ||!val.trim().equals( "-- "))  {  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||!val.trim().equals( "-- "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||!val.trim().equals( "-- "))  {	  if(val    ==    null    ||!val.equals(   "--   "))    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
345	[BUG]  [BUGGY]  Number  val  =  getNumber().toString();  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumber().toString();  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumber().toString();	  Number    val    =    getNullValue().toString();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
346	[BUG]  [BUGGY]  Number  val  =  getValue(val.toLowerCase(),  val.toLowerCase());  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getValue(val.toLowerCase(),  val.toLowerCase());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getValue(val.toLowerCase(),  val.toLowerCase());	  Number    val    =    getValue(val.toLowerCase());    	non-compiled	[CE]  <identifier>  expected	58	None	replace
347	[BUG]  [BUGGY]  Number  val  =  getNumberValue(val.toLowerCase(),  val.toLowerCase());  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumberValue(val.toLowerCase(),  val.toLowerCase());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumberValue(val.toLowerCase(),  val.toLowerCase());	  Number    val    =    getNumberValue(val.toLowerCase());    	non-compiled	[CE]  <identifier>  expected	51	None	replace
348	[BUG]  [BUGGY]  Number  val  =  getNumberValue(val.toLowerCase(),  Double.POSITIVE_INFINITY);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumberValue(val.toLowerCase(),  Double.POSITIVE_INFINITY);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumberValue(val.toLowerCase(),  Double.POSITIVE_INFINITY);	  Number    val    =    getNumberValue(val.toLowerCase());    	non-compiled	[CE]  <identifier>  expected	51	None	replace
349	[BUG]  [BUGGY]  if(val  ==  null  ||!val.trim().startsWith( "- "))  {  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||!val.trim().startsWith( "- "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||!val.trim().startsWith( "- "))  {	  if(val    ==    null    ||!val.trim().equals(   "-   "))    {    	non-compiled	[CE]  <identifier>  expected	101	None	replace
350	[BUG]  [BUGGY]  if(val  ==  null  ||  val.startsWith( ". "))  {  [CE]  <identifier>  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.startsWith( ". "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||  val.startsWith( ". "))  {	  if(val    ==    null    ||    val.startsWith(   "null   "))    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
351	[BUG]  [BUGGY]  Number  f  =  getNumber(val.toUpperCase());  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  f  =  getNumber(val.toUpperCase());  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  f  =  getNumber(val.toUpperCase());	  Number    f    =    getNumber(val);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
352	[BUG]  [BUGGY]  NumberUtils.copyNumber(val,  val.intValue());  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  NumberUtils.copyNumber(val,  val.intValue());  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	NumberUtils.copyNumber(val,  val.intValue());	  NumberUtils.copyNumber(val,    val);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
353	[BUG]  [BUGGY]  Float  f  =  createNumber(val);  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Float  f  =  createNumber(val);  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Float  f  =  createNumber(val);	  Number    f    =    createNumber(val);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
354	[BUG]  [BUGGY]  Number  f  =  createNumber(val.substring(1));  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  f  =  createNumber(val.substring(1));  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  f  =  createNumber(val.substring(1));	  Number    f    =    createNumber(val);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
355	[BUG]  [BUGGY]  Number  val  =  getValue(new  String(val));  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getValue(new  String(val));  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getValue(new  String(val));	  Number    val    =    getNumberValue(new    String(val));    	non-compiled	[CE]  <identifier>  expected	92	None	replace
356	[BUG]  [BUGGY]  Number  val  =  getNumber(new  String(val));  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumber(new  String(val));  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumber(new  String(val));	  Number    val    =    getNumberValue(new    String(val));    	non-compiled	[CE]  not  a  statement	92	None	replace
357	[BUG]  [BUGGY]  Number  val  =  getNumber(val.toLowerCase()  +  1);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumber(val.toLowerCase()  +  1);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumber(val.toLowerCase()  +  1);	  Number    val    =    getNumber(val.toLowerCase());    	non-compiled	[CE]  not  a  statement	54	None	replace
358	[BUG]  [BUGGY]  Number  val  =  createNumber(val,  null,  '-');  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(val,  null,  '-');  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val,  null,  '-');	  Number    val    =    createNumber(val,    null);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
359	[BUG]  [BUGGY]  Number  val  =  createNumber(val,  null,  f);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(val,  null,  f);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val,  null,  f);	  Number    val    =    createNumber(val,    null);    	non-compiled	[CE]  not  a  statement	11	None	replace
360	[BUG]  [BUGGY]  if(val  ==  null  ||  val.startsWith(   "--   "))  {  If(val  ==  null  ||  val.startsWith( "--   "))  {  [CE]  not  a  statement  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  if(val  ==  null  ||  val.startsWith(   "--   "))  {  If(val  ==  null  ||  val.startsWith( "--   "))  {  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.startsWith(   "--   "))    {    If(val  ==  null  ||  val.startsWith( "--   "))  {	  	non-compiled	[CE]  not  a  statement	35	None	add
361	[BUG]  [BUGGY]  MutableFormat.getNumberFormat().println(val);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  MutableFormat.getNumberFormat().println(val);  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	MutableFormat.getNumberFormat().println(val);	  if(val    ==    null)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	94	None	replace
362	[BUG]  [BUGGY]  aughtException( " ");  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  aughtException( " ");  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	aughtException( " ");	  if(val    ==    null)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	94	None	replace
363	[BUG]  [BUGGY]  aughtException( "Number  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  aughtException( "Number  is  not  a  valid  number.   ");  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	aughtException( "Number  is  not  a  valid  number.   ");	  if(val    ==    null)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	94	None	replace
364	[BUG]  [BUGGY]  Number  val  =  getNumberValue(val,  null,  '-');  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumberValue(val,  null,  '-');  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumberValue(val,  null,  '-');	  Number    val    =    getNumberValue(val,    null);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
365	[BUG]  [BUGGY]  Number  val  =  getNumberValue(val,  null,  val.length());  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumberValue(val,  null,  val.length());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumberValue(val,  null,  val.length());	  Number    val    =    getNumberValue(val,    null);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
366	[BUG]  [BUGGY]  Null  val  =  createNumber(val,  false);  [CE]  <identifier>  expected  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Null  val  =  createNumber(val,  false);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Null  val  =  createNumber(val,  false);	  Number    val    =    createNumber(val,    true);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
367	[BUG]  [BUGGY]  Number  val  =  getValue(null,  val,  Integer.MAX_VALUE);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getValue(null,  val,  Integer.MAX_VALUE);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getValue(null,  val,  Integer.MAX_VALUE);	  Number    val    =    getValue(null,    val);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
368	[BUG]  [BUGGY]  Number  val  =  getNumber(val,  Integer.MAX_VALUE,  16);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumber(val,  Integer.MAX_VALUE,  16);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumber(val,  Integer.MAX_VALUE,  16);	  Number    val    =    getNumber(val,    Integer.MAX_VALUE);    	non-compiled	[CE]  <identifier>  expected	111	None	replace
369	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  null,  '-');  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  null,  '-');  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val.toCharArray(),  null,  '-');	  Number    val    =    createNumber(val.toCharArray(),    null);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
370	[BUG]  [BUGGY]  Number  val  =  getNumber(val.toUpperCase()  +  1);  [CE]  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumber(val.toUpperCase()  +  1);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumber(val.toUpperCase()  +  1);	  Number    val    =    getNumber(val.toUpperCase());    	non-compiled	[CE]  	55	None	replace
371	[BUG]  [BUGGY]  Number  val  =  getNumber(val.toUpperCase(),  true);  [CE]  <identifier>  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumber(val.toUpperCase(),  true);  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumber(val.toUpperCase(),  true);	  Number    val    =    getNumber(val.toUpperCase());    	non-compiled	[CE]  <identifier>  expected	55	None	replace
372	[BUG]  [BUGGY]  val  =  val.toLowerCase();  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  val  =  val.toLowerCase();  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	val  =  val.toLowerCase();	  String    val    =    val.toLowerCase()    +    1;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
373	[BUG]  [BUGGY]  Number  val  =  createNumber(null,  val.toUpperCase());  [CE]  <identifier>  expected  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(null,  val.toUpperCase());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(null,  val.toUpperCase());	  Number    val    =    createNumber(null,    val);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
374	[BUG]  [BUGGY]  Number  val  =  new  Double(val.length()  *  2,  val.length());  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  new  Double(val.length()  *  2,  val.length());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  new  Double(val.length()  *  2,  val.length());	  Number    val    =    new    Double(val.length()    +    1,    val.length());    	non-compiled	[CE]  <identifier>  expected	104	None	replace
375	[BUG]  [BUGGY]  while(val.length()  <  =  0)  {  throw  new  NumberFormatException( " ");  }  [CE]  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  while(val.length()  <  =  0)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	while(val.length()  <  =  0)  {  throw  new  NumberFormatException( " ");  }	  if(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  	97	None	replace
376	[BUG]  [BUGGY]  while(val.length()  <  2)  {  throw  new  NumberFormatException( " ");  }  [CE]  unclosed  string  literal  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  while(val.length()  <  2)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	while(val.length()  <  2)  {  throw  new  NumberFormatException( " ");  }	  if(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  unclosed  string  literal	97	None	replace
377	[BUG]  [BUGGY]  Number  val  =  getNumber(val.toCharArray(),  val.toCharArray());  [CE]  unclosed  string  literal  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  getNumber(val.toCharArray(),  val.toCharArray());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumber(val.toCharArray(),  val.toCharArray());	  Number    val    =    getNumber(val.toCharArray());    	non-compiled	[CE]  unclosed  string  literal	57	None	replace
378	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toLowerCase(),  val.toLowerCase());  [CE]  unclosed  string  literal  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {      [BUGGY]  Number  val  =  createNumber(val.toLowerCase(),  val.toLowerCase());  [BUGGY]      if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val.toLowerCase(),  val.toLowerCase());	  Number    val    =    createNumber(val.toLowerCase());    	non-compiled	[CE]  unclosed  string  literal	73	None	replace
