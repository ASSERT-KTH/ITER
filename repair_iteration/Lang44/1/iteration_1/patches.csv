bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||  val.length()!=  0)  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	add	if(val  ==  null  ||  val.length()!=  0)  {	  if(val    ==    null    ||    val.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	2	3	replace
2	[BUG]  [BUGGY]  if(val  ==  null  ||  val.length()!=  0)  {  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||  val.length()!=  0)  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||  val.length()!=  0)  {	  if(val    ==    null    ||    val.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	2	3	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val!=  null  ||  val.length()  ==  0)  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	add	if(val!=  null  ||  val.length()  ==  0)  {	  if(val    ==    null    ||    val.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	2	3	replace
4	[BUG]  [BUGGY]  if(val!=  null  ||  val.length()  ==  0)  {  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val!=  null  ||  val.length()  ==  0)  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val!=  null  ||  val.length()  ==  0)  {	  if(val    ==    null    ||    val.length()    ==    0)    {    	compilable	  [FE]  AssertionFailedError  	2	3	replace
5	[BUG]  [BUGGY]  String  val  =  val.trim().toLowerCase();  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  String  val  =  val.trim().toLowerCase();  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	String  val  =  val.trim().toLowerCase();	      String    val    =    val.trim();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
6	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length()  -  1);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  String  val  =  val.substring(0,  val.length()  -  1);  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	String  val  =  val.substring(0,  val.length()  -  1);	      String    val    =    val.trim();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||!val.equals( "-0 "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	add	if(val  ==  null  ||!val.equals( "-0 "))  {	  if(val    ==    null    ||!val.equals(   "-   "))    {    	compilable	  [FE]  AssertionFailedError  	17	3	replace
8	[BUG]  [BUGGY]  if(val  ==  null  ||!val.equals( "-0 "))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||!val.equals( "-0 "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||!val.equals( "-0 "))  {	  if(val    ==    null    ||!val.equals(   "-   "))    {    	compilable	  [FE]  AssertionFailedError  	17	3	replace
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val!=  null  ||!val.equals( "- "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	add	if(val!=  null  ||!val.equals( "- "))  {	  if(val    ==    null    ||!val.equals(   "-   "))    {    	compilable	  [FE]  AssertionFailedError  	17	3	replace
10	[BUG]  [BUGGY]  if(val!=  null  ||!val.equals( "- "))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val!=  null  ||!val.equals( "- "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val!=  null  ||!val.equals( "- "))  {	  if(val    ==    null    ||!val.equals(   "-   "))    {    	compilable	  [FE]  AssertionFailedError  	17	3	replace
11	[BUG]  [BUGGY]  Number  val  =  createNumber(val,  null);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =  createNumber(val,  null);  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val,  null);	      Number    val    =    createNumber(val);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
12	[BUG]  [BUGGY]  Number  val  =  createNumber(val,  false);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =  createNumber(val,  false);  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val,  false);	      Number    val    =    createNumber(val);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
13	[BUG]  [BUGGY]  Number  val  =  createNumber(null,  val);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =  createNumber(null,  val);  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(null,  val);	      Number    val    =    createNumber(val);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
14	[BUG]  [BUGGY]  Number  val  =  createNumber(val,  true);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =  createNumber(val,  true);  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val,  true);	      Number    val    =    createNumber(val);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
15	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||  val.startsWith( "null "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	add	if(val  ==  null  ||  val.startsWith( "null "))  {	  if(val    ==    null    ||    val.equals(   "null   "))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	4	1	replace
16	[BUG]  [BUGGY]  if(val  ==  null  ||  val.startsWith( "null "))  {  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||  val.startsWith( "null "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||  val.startsWith( "null "))  {	  if(val    ==    null    ||    val.equals(   "null   "))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	4	1	replace
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val!=  null  ||  val.equals( "null "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	add	if(val!=  null  ||  val.equals( "null "))  {	  if(val    ==    null    ||    val.equals(   "null   "))    {    	compilable	  [FE]  AssertionFailedError  	4	3	replace
18	[BUG]  [BUGGY]  if(val!=  null  ||  val.equals( "null "))  {  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val!=  null  ||  val.equals( "null "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val!=  null  ||  val.equals( "null "))  {	  if(val    ==    null    ||    val.equals(   "null   "))    {    	compilable	  [FE]  AssertionFailedError  	4	3	replace
19	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||  val.equals( "number "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	add	if(val  ==  null  ||  val.equals( "number "))  {	  if(val    ==    null    ||    val.equals(   "null   "))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	4	1	replace
20	[BUG]  [BUGGY]  if(val  ==  null  ||  val.equals( "number "))  {  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||  val.equals( "number "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||  val.equals( "number "))  {	  if(val    ==    null    ||    val.equals(   "null   "))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	4	1	replace
21	[BUG]  [BUGGY]  if(val  ==  null  ||!val.equals(   "-   "))  {  if(val  ==  null  ||!val.equals( "-   "))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||!val.equals(   "-   "))  {  if(val  ==  null  ||!val.equals( "-   "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||!val.equals(   "-   "))    {    if(val  ==  null  ||!val.equals( "-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
22	[BUG]  [BUGGY]  if(val  ==  null  ||!val.equals(   "-   "))  {  if(val  ==  null  ||!val.equals( ".-   "))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||!val.equals(   "-   "))  {  if(val  ==  null  ||!val.equals( ".-   "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||!val.equals(   "-   "))    {    if(val  ==  null  ||!val.equals( ".-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
23	[BUG]  [BUGGY]  if(val  ==  null  ||!val.equals(   "-   "))  {  if(val!=  null  ||!val.equals( "-   "))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||!val.equals(   "-   "))  {  if(val!=  null  ||!val.equals( "-   "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||!val.equals(   "-   "))    {    if(val!=  null  ||!val.equals( "-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
24	[BUG]  [BUGGY]  Number  val  =  new  Double(val.length()  -  1);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =  new  Double(val.length()  -  1);  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  new  Double(val.length()  -  1);	      Number    val    =    new    Double(val.length());    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
25	[BUG]  [BUGGY]  Number  val  =  new  Double(val.length()  +  1);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =  new  Double(val.length()  +  1);  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  new  Double(val.length()  +  1);	      Number    val    =    new    Double(val.length());    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
26	[BUG]  [BUGGY]  Number  val  =  new  Double(val.length()  *  2);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =  new  Double(val.length()  *  2);  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  new  Double(val.length()  *  2);	      Number    val    =    new    Double(val.length());    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
27	[BUG]  [BUGGY]  Number  val  =  new  Double(val.length()  -  2);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =  new  Double(val.length()  -  2);  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  new  Double(val.length()  -  2);	      Number    val    =    new    Double(val.length());    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
28	[BUG]  [BUGGY]  NumberUtils.copyNumber(val,  0,  val.length());  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  NumberUtils.copyNumber(val,  0,  val.length());  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	NumberUtils.copyNumber(val,  0,  val.length());	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
29	[BUG]  [BUGGY]  NumberUtils.copyNumber(val,  val);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  NumberUtils.copyNumber(val,  val);  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	NumberUtils.copyNumber(val,  val);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
30	[BUG]  [BUGGY]  if(val  ==  null  ||  val.equals(   "null   "))  {  if(val  ==  null  ||  val.equals( "null   "))  {  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||  val.equals(   "null   "))  {  if(val  ==  null  ||  val.equals( "null   "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.equals(   "null   "))    {    if(val  ==  null  ||  val.equals( "null   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
31	[BUG]  [BUGGY]  if(val  ==  null  ||  val.equals(   "null   "))  {  if(val  ==  null  ||  val.equals( ".null   "))  {  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||  val.equals(   "null   "))  {  if(val  ==  null  ||  val.equals( ".null   "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.equals(   "null   "))    {    if(val  ==  null  ||  val.equals( ".null   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
32	[BUG]  [BUGGY]  if(val  ==  null  ||  val.equals(   "null   "))  {  if(val  ==  null  ||  val.equals( ",null   "))  {  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||  val.equals(   "null   "))  {  if(val  ==  null  ||  val.equals( ",null   "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.equals(   "null   "))    {    if(val  ==  null  ||  val.equals( ",null   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
33	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||  val.startsWith( "- "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	add	if(val  ==  null  ||  val.startsWith( "- "))  {	  if(val    ==    null    ||    val.equals(   "-   "))    {    	compilable	  [FE]  AssertionFailedError  	15	3	replace
34	[BUG]  [BUGGY]  if(val  ==  null  ||  val.startsWith( "- "))  {  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||  val.startsWith( "- "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||  val.startsWith( "- "))  {	  if(val    ==    null    ||    val.equals(   "-   "))    {    	compilable	  [FE]  AssertionFailedError  	15	3	replace
35	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||  val.startsWith( "-- "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	add	if(val  ==  null  ||  val.startsWith( "-- "))  {	  if(val    ==    null    ||    val.equals(   "-   "))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	15	1	replace
36	[BUG]  [BUGGY]  if(val  ==  null  ||  val.startsWith( "-- "))  {  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||  val.startsWith( "-- "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||  val.startsWith( "-- "))  {	  if(val    ==    null    ||    val.equals(   "-   "))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	15	1	replace
37	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||  val.equals( "-0 "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	add	if(val  ==  null  ||  val.equals( "-0 "))  {	  if(val    ==    null    ||    val.equals(   "-   "))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	15	2	replace
38	[BUG]  [BUGGY]  if(val  ==  null  ||  val.equals( "-0 "))  {  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||  val.equals( "-0 "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||  val.equals( "-0 "))  {	  if(val    ==    null    ||    val.equals(   "-   "))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	15	2	replace
39	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  false);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  false);  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val.toCharArray(),  false);	      Number    val    =    createNumber(val.toCharArray());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
40	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  true);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  true);  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val.toCharArray(),  true);	      Number    val    =    createNumber(val.toCharArray());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
41	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  null);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  null);  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val.toCharArray(),  null);	      Number    val    =    createNumber(val.toCharArray());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
42	[BUG]  [BUGGY]  Number  val  =(Number)this.null;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =(Number)this.null;  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)this.null;	      Number    val    =(Number)null;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
43	[BUG]  [BUGGY]  Number  val  =(Number)numbers.get(0);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =(Number)numbers.get(0);  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)numbers.get(0);	      Number    val    =(Number)null;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
44	[BUG]  [BUGGY]  Number  val  =(Number)this.values.getValue(val);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =(Number)this.values.getValue(val);  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)this.values.getValue(val);	      Number    val    =(Number)null;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
45	[BUG]  [BUGGY]  Number  val  =  getNumberValue();  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =  getNumberValue();  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumberValue();	      Number    val    =    getNullValue();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
46	[BUG]  [BUGGY]  Number  val  =  getNumber();  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =  getNumber();  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumber();	      Number    val    =    getNullValue();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
47	[BUG]  [BUGGY]  Number  val  =  getNullValue().toString();  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =  getNullValue().toString();  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNullValue().toString();	      Number    val    =    getNullValue();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
48	[BUG]  [BUGGY]  String  val  =  val.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  String  val  =  val.toLowerCase(Locale.ENGLISH);  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	String  val  =  val.toLowerCase(Locale.ENGLISH);	      String    val    =    val.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
49	[BUG]  [BUGGY]  String  val  =  val.toUpperCase();  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  String  val  =  val.toUpperCase();  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	String  val  =  val.toUpperCase();	      String    val    =    val.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
50	[BUG]  [BUGGY]  Number  val  =  getNumberValue(null,  val);  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =  getNumberValue(null,  val);  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumberValue(null,  val);	      Number    val    =    getNumberValue(val);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
51	[BUG]  [BUGGY]  Number  val  =  getNumberValue(val.toLowerCase());  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =  getNumberValue(val.toLowerCase());  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumberValue(val.toLowerCase());	      Number    val    =    getNumberValue(val);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
52	[BUG]  [BUGGY]  Number  val  =  getNumberValue(null);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =  getNumberValue(null);  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumberValue(null);	      Number    val    =    getNumberValue(val);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
53	[BUG]  [BUGGY]  Number  val  =  getNumberValue(number);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =  getNumberValue(number);  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumberValue(number);	      Number    val    =    getNumberValue(val);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
54	[BUG]  [BUGGY]  Number  val  =  getNumber(val.toLowerCase());  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =  getNumber(val.toLowerCase());  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumber(val.toLowerCase());	      Number    val    =    getNumber(val);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
55	[BUG]  [BUGGY]  Number  val  =  getNumber(val.toUpperCase());  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =  getNumber(val.toUpperCase());  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumber(val.toUpperCase());	      Number    val    =    getNumber(val);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
56	[BUG]  [BUGGY]  Number  val  =  getNumber(number);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =  getNumber(number);  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumber(number);	      Number    val    =    getNumber(val);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
57	[BUG]  [BUGGY]  Number  val  =  getNumber(val.toCharArray());  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =  getNumber(val.toCharArray());  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumber(val.toCharArray());	      Number    val    =    getNumber(val);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
58	[BUG]  [BUGGY]  Number  val  =  getValue(val.toLowerCase());  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =  getValue(val.toLowerCase());  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getValue(val.toLowerCase());	      Number    val    =    getValue(val);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
59	[BUG]  [BUGGY]  Number  val  =  getValue(null,  val);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =  getValue(null,  val);  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getValue(null,  val);	      Number    val    =    getValue(val);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
60	[BUG]  [BUGGY]  Number  val  =  getValue(val,  null);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =  getValue(val,  null);  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getValue(val,  null);	      Number    val    =    getValue(val);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
61	[BUG]  [BUGGY]  Number  val  =  getValue(null);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =  getValue(null);  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getValue(null);	      Number    val    =    getValue(val);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
62	[BUG]  [BUGGY]  if(val  ==  null  ||  val.equals(   "-   "))  {  if(val  ==  null  ||  val.equals( "-   "))  {  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||  val.equals(   "-   "))  {  if(val  ==  null  ||  val.equals( "-   "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.equals(   "-   "))    {    if(val  ==  null  ||  val.equals( "-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
63	[BUG]  [BUGGY]  if(val  ==  null  ||  val.equals(   "-   "))  {  if(val  ==  null  ||  val.equals( ".-   "))  {  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||  val.equals(   "-   "))  {  if(val  ==  null  ||  val.equals( ".-   "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.equals(   "-   "))    {    if(val  ==  null  ||  val.equals( ".-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
64	[BUG]  [BUGGY]  if(val  ==  null  ||  val.equals(   "-   "))  {  If(val  ==  null  ||  val.equals( "-   "))  {  [CE]  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||  val.equals(   "-   "))  {  If(val  ==  null  ||  val.equals( "-   "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.equals(   "-   "))    {    If(val  ==  null  ||  val.equals( "-   "))  {	  	non-compiled	[CE]  	14	None	add
65	[BUG]  [BUGGY]  Number  val  =(Number)val.getValue();  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =(Number)val.getValue();  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)val.getValue();	      Number    val    =(Number)val.clone();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
66	[BUG]  [BUGGY]  Number  val  =(Number)val.cloneTree();  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =(Number)val.cloneTree();  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)val.cloneTree();	      Number    val    =(Number)val.clone();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
67	[BUG]  [BUGGY]  Number  val  =(Number)val.next();  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =(Number)val.next();  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)val.next();	      Number    val    =(Number)val.clone();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
68	[BUG]  [BUGGY]  if(val  ==  null  ||  val.length()  ==  0)  {  if(val  ==  null  ||  val.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||  val.length()  ==  0)  {  if(val  ==  null  ||  val.length()  ==  0)  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.length()    ==    0)    {    if(val  ==  null  ||  val.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
69	[BUG]  [BUGGY]  if(val  ==  null  ||  val.length()  ==  0)  {  if(val  ==  null  ||  val.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||  val.length()  ==  0)  {  if(val  ==  null  ||  val.length()!=  0)  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.length()    ==    0)    {    if(val  ==  null  ||  val.length()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
70	[BUG]  [BUGGY]  if(val  ==  null  ||  val.length()  ==  0)  {  if(val!=  null  ||  val.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||  val.length()  ==  0)  {  if(val!=  null  ||  val.length()  ==  0)  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.length()    ==    0)    {    if(val!=  null  ||  val.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
71	[BUG]  [BUGGY]  if(val  ==  null  ||  val.length()  ==  0)  {  If(val  ==  null  ||  val.length()  ==  0)  {  [CE]  ';'  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||  val.length()  ==  0)  {  If(val  ==  null  ||  val.length()  ==  0)  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.length()    ==    0)    {    If(val  ==  null  ||  val.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
72	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  this);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  this);  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val.toCharArray(),  this);	      Number    val    =    createNumber(val.toCharArray());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
73	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toLowerCase());  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =  createNumber(val.toLowerCase());  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val.toLowerCase());	      Number    val    =    createNumber(val);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
74	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||  val.equals( ". "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	add	if(val  ==  null  ||  val.equals( ". "))  {	  if(val    ==    null    ||    val.equals(   "null   "))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	4	1	replace
75	[BUG]  [BUGGY]  if(val  ==  null  ||  val.equals( ". "))  {  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||  val.equals( ". "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||  val.equals( ". "))  {	  if(val    ==    null    ||    val.equals(   "null   "))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	4	1	replace
76	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||!val.equals( "-- "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	add	if(val  ==  null  ||!val.equals( "-- "))  {	  if(val    ==    null    ||!val.equals(   "-   "))    {    	compilable	  [FE]  AssertionFailedError  	17	3	replace
77	[BUG]  [BUGGY]  if(val  ==  null  ||!val.equals( "-- "))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||!val.equals( "-- "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||!val.equals( "-- "))  {	  if(val    ==    null    ||!val.equals(   "-   "))    {    	compilable	  [FE]  AssertionFailedError  	17	3	replace
78	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||!val.equals( "-+ "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	add	if(val  ==  null  ||!val.equals( "-+ "))  {	  if(val    ==    null    ||!val.equals(   "-   "))    {    	compilable	  [FE]  AssertionFailedError  	17	3	replace
79	[BUG]  [BUGGY]  if(val  ==  null  ||!val.equals( "-+ "))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||!val.equals( "-+ "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||!val.equals( "-+ "))  {	  if(val    ==    null    ||!val.equals(   "-   "))    {    	compilable	  [FE]  AssertionFailedError  	17	3	replace
80	[BUG]  [BUGGY]  if(val  ==  null  ||!val.equals(   "-   "))  {  If(val  ==  null  ||!val.equals( "-   "))  {  [CE]  [FE]    AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||!val.equals(   "-   "))  {  If(val  ==  null  ||!val.equals( "-   "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||!val.equals(   "-   "))    {    If(val  ==  null  ||!val.equals( "-   "))  {	  	non-compiled	[CE]  	16	None	add
81	[BUG]  [BUGGY]  String  val  =  val.toLowerCase()  +  1;  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  String  val  =  val.toLowerCase()  +  1;  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	String  val  =  val.toLowerCase()  +  1;	      String    val    =    val.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
82	[BUG]  [BUGGY]  Number  val  =(Number)nfe.clone();  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =(Number)nfe.clone();  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)nfe.clone();	      Number    val    =(Number)val.clone();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
83	[BUG]  [BUGGY]  Number  val  =(Number)val.toCharArray();  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =(Number)val.toCharArray();  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)val.toCharArray();	      Number    val    =(Number)val.clone();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
84	[BUG]  [BUGGY]  Number  f  =  getNumber(val);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  f  =  getNumber(val);  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  f  =  getNumber(val);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
85	[BUG]  [BUGGY]  Number  f  =  createNumber(val);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  f  =  createNumber(val);  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  f  =  createNumber(val);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
86	[BUG]  [BUGGY]  NumberUtils.copyValue(val,  val);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  NumberUtils.copyValue(val,  val);  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	NumberUtils.copyValue(val,  val);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
87	[BUG]  [BUGGY]  if(val  ==  null  ||  val.length()  ==  0)  {  if(val  {  null  ||  val.length()  ==  0)  {  [CE]  ')'  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||  val.length()  ==  0)  {  if(val  {  null  ||  val.length()  ==  0)  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val    ==    null    ||    val.length()    ==    0)    {    if(val  {  null  ||  val.length()  ==  0)  {	  	non-compiled	[CE]  ')'  expected	1	None	add
88	[BUG]  [BUGGY]  Number  val  =(Number)null.doubleValue();  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =(Number)null.doubleValue();  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)null.doubleValue();	      Number    val    =(Number)null;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
89	[BUG]  [BUGGY]  Number  val  =(Number)null.multiply(val);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =(Number)null.multiply(val);  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)null.multiply(val);	      Number    val    =(Number)null;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
90	[BUG]  [BUGGY]  Number  val  =  getNumberValue(val,  null);  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =  getNumberValue(val,  null);  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumberValue(val,  null);	      Number    val    =    getNumberValue(val);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
91	[BUG]  [BUGGY]  Number  val  =  getNumberValue(val.toUpperCase());  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =  getNumberValue(val.toUpperCase());  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumberValue(val.toUpperCase());	      Number    val    =    getNumberValue(val);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
92	[BUG]  [BUGGY]  Number  val  =  getNumberValue(new  String(val));  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =  getNumberValue(new  String(val));  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumberValue(new  String(val));	      Number    val    =    getNumberValue(val);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
93	[BUG]  [BUGGY]  Number  val  =(Number)this.nativeObject.clone();  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =(Number)this.nativeObject.clone();  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)this.nativeObject.clone();	      Number    val    =(Number)val.clone();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
94	[BUG]  [BUGGY]  if(val  ==  null)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null)  {  throw  new  NumberFormatException( " ");  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
95	[BUG]  [BUGGY]  if(val  ==  null  ||  val.length()  ==  0)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||  val.length()  ==  0)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||  val.length()  ==  0)  {  throw  new  NumberFormatException( " ");  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
96	[BUG]  [BUGGY]  if(val  ==  null  ||  val.length()  ==  0)  {  return  new  Double(val.doubleValue());  }  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||  val.length()  ==  0)  {  return  new  Double(val.doubleValue());  }  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||  val.length()  ==  0)  {  return  new  Double(val.doubleValue());  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
97	[BUG]  [BUGGY]  if(val.length()  ==  0)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val.length()  ==  0)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val.length()  ==  0)  {  throw  new  NumberFormatException( " ");  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
98	[BUG]  [BUGGY]  Number  val  =(Number)this.values.get(val);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =(Number)this.values.get(val);  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =(Number)this.values.get(val);	      Number    val    =(Number)null;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
99	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toUpperCase());  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =  createNumber(val.toUpperCase());  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val.toUpperCase());	      Number    val    =    createNumber(val);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
100	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||!val.trim().equals( "- "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	add	if(val  ==  null  ||!val.trim().equals( "- "))  {	  if(val    ==    null    ||!val.equals(   "-   "))    {    	compilable	  [FE]  AssertionFailedError  	17	3	replace
101	[BUG]  [BUGGY]  if(val  ==  null  ||!val.trim().equals( "- "))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||!val.trim().equals( "- "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||!val.trim().equals( "- "))  {	  if(val    ==    null    ||!val.equals(   "-   "))    {    	compilable	  [FE]  AssertionFailedError  	17	3	replace
102	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||!val.startsWith( "- "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	add	if(val  ==  null  ||!val.startsWith( "- "))  {	  if(val    ==    null    ||!val.equals(   "-   "))    {    	compilable	  [FE]  AssertionFailedError  	17	3	replace
103	[BUG]  [BUGGY]  if(val  ==  null  ||!val.startsWith( "- "))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||!val.startsWith( "- "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||!val.startsWith( "- "))  {	  if(val    ==    null    ||!val.equals(   "-   "))    {    	compilable	  [FE]  AssertionFailedError  	17	3	replace
104	[BUG]  [BUGGY]  Number  val  =  new  Double(val.length()  +  1,  val.length());  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =  new  Double(val.length()  +  1,  val.length());  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  new  Double(val.length()  +  1,  val.length());	      Number    val    =    new    Double(val.length());    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
105	[BUG]  [BUGGY]  Number  val  =  new  Double(val.length(),  val.length());  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =  new  Double(val.length(),  val.length());  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  new  Double(val.length(),  val.length());	      Number    val    =    new    Double(val.length());    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
106	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||  val.startsWith( ".0 "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	add	if(val  ==  null  ||  val.startsWith( ".0 "))  {	  if(val    ==    null    ||    val.equals(   "-   "))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	15	1	replace
107	[BUG]  [BUGGY]  if(val  ==  null  ||  val.startsWith( ".0 "))  {  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||  val.startsWith( ".0 "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||  val.startsWith( ".0 "))  {	  if(val    ==    null    ||    val.equals(   "-   "))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	15	1	replace
108	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||  val.trim().equals( "- "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	add	if(val  ==  null  ||  val.trim().equals( "- "))  {	  if(val    ==    null    ||    val.equals(   "-   "))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	15	1	replace
109	[BUG]  [BUGGY]  if(val  ==  null  ||  val.trim().equals( "- "))  {  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  if(val  ==  null  ||  val.trim().equals( "- "))  {  [BUGGY]    return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	if(val  ==  null  ||  val.trim().equals( "- "))  {	  if(val    ==    null    ||    val.equals(   "-   "))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	15	1	replace
110	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  val.toCharArray());  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  val.toCharArray());  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  createNumber(val.toCharArray(),  val.toCharArray());	      Number    val    =    createNumber(val.toCharArray());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
111	[BUG]  [BUGGY]  Number  val  =  getNumber(val,  Integer.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =  getNumber(val,  Integer.MAX_VALUE);  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getNumber(val,  Integer.MAX_VALUE);	      Number    val    =    getNumber(val);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
112	[BUG]  [BUGGY]  Number  val  =  getValue(val.toUpperCase());  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {    [BUGGY]  Number  val  =  getValue(val.toUpperCase());  [BUGGY]    if  (val  ==  null)  {  return  null;  }  if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	139	139	1	replace	Number  val  =  getValue(val.toUpperCase());	      Number    val    =    getValue(val);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
