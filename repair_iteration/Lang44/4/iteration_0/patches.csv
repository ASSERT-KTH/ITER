bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (val.startsWith( "0x ")||  val.startsWith( "-1))  {  [CE]  not  a  statement  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  if  (val.length()  ==  0)  {  throw  new  NumberFormatException( "\ "\ "  is  not  a  valid  number. ");  }  if  (val.startsWith( "-- "))  {      return  null;  }  [BUGGY]  if  (val.startsWith( "0x ")||  val.startsWith( "-1))  {  [BUGGY]  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if  (val.startsWith( "0x ")||  val.startsWith( "-1))  {	if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  	non-compiled	[CE]  not  a  statement	7	None	replace
2	[BUG]  [BUGGY]    [CE]  not  a  statement  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  if  (val.length()  ==  0)  {  throw  new  NumberFormatException( "\ "\ "  is  not  a  valid  number. ");  }  if  (val.startsWith( "-- "))  {      return  null;  }  [BUGGY]    [BUGGY]  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	  	if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  	non-compiled	[CE]  not  a  statement	7	None	replace
3	[BUG]  [BUGGY]    String  val  =  val.substring(0,  val.length()  -  1);  [CE]  not  a  statement  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  if  (val.length()  ==  0)  {  throw  new  NumberFormatException( "\ "\ "  is  not  a  valid  number. ");  }  if  (val.startsWith( "-- "))  {      return  null;  }  [BUGGY]    String  val  =  val.substring(0,  val.length()  -  1);  [BUGGY]  if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	    String  val  =  val.substring(0,  val.length()  -  1);		non-compiled	[CE]  not  a  statement	8	None	add
4	[BUG]  [BUGGY]    val  =  val.substring(0,  val.length()  -  1);  [CE]  not  a  statement  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  if  (val.length()  ==  0)  {  throw  new  NumberFormatException( "\ "\ "  is  not  a  valid  number. ");  }  if  (val.startsWith( "-- "))  {      return  null;  }  [BUGGY]    val  =  val.substring(0,  val.length()  -  1);  [BUGGY]  if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	    val  =  val.substring(0,  val.length()  -  1);		non-compiled	[CE]  not  a  statement	8	None	add
5	[BUG]  [BUGGY]    String  val  =  val.substring(0,  val.length()  -  2);  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException  [CONTEXT]  if  (val.length()  ==  0)  {  throw  new  NumberFormatException( "\ "\ "  is  not  a  valid  number. ");  }  if  (val.startsWith( "-- "))  {      return  null;  }  [BUGGY]    String  val  =  val.substring(0,  val.length()  -  2);  [BUGGY]  if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	    String  val  =  val.substring(0,  val.length()  -  2);		non-compiled	[CE]  not  a  statement	8	None	add
6	[BUG]  [BUGGY]    String  val  =  val.substring(0,  val.length()  -  1,  val.length()  -  1);  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException  [CONTEXT]  if  (val.length()  ==  0)  {  throw  new  NumberFormatException( "\ "\ "  is  not  a  valid  number. ");  }  if  (val.startsWith( "-- "))  {      return  null;  }  [BUGGY]    String  val  =  val.substring(0,  val.length()  -  1,  val.length()  -  1);  [BUGGY]  if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	    String  val  =  val.substring(0,  val.length()  -  1,  val.length()  -  1);		non-compiled	[CE]  not  a  statement	8	None	add
7	[BUG]  [BUGGY]    if(val.length()  ==  0)  {  throw  new  NumberFormatException( " ");  }  [CE]  not  a  statement  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  if  (val.length()  ==  0)  {  throw  new  NumberFormatException( "\ "\ "  is  not  a  valid  number. ");  }  if  (val.startsWith( "-- "))  {      return  null;  }  [BUGGY]    if(val.length()  ==  0)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]  if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	    if(val.length()  ==  0)  {  throw  new  NumberFormatException( " ");  }		non-compiled	[CE]  not  a  statement	8	None	add
8	[BUG]  [BUGGY]  if  (val.startsWith( "0x ")||  val.startsWith( "-0x ")||  val.startsWith( "-0x "))  {  [CE]  not  a  statement  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  if  (val.length()  ==  0)  {  throw  new  NumberFormatException( "\ "\ "  is  not  a  valid  number. ");  }  if  (val.startsWith( "-- "))  {      return  null;  }  [BUGGY]  if  (val.startsWith( "0x ")||  val.startsWith( "-0x ")||  val.startsWith( "-0x "))  {  [BUGGY]  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if  (val.startsWith( "0x ")||  val.startsWith( "-0x ")||  val.startsWith( "-0x "))  {	if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  	non-compiled	[CE]  not  a  statement	7	None	replace
9	[BUG]  [BUGGY]  if(val.startsWith( "-0 ")||  val.startsWith( "-0 "))  {  [CE]  not  a  statement  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  if  (val.length()  ==  0)  {  throw  new  NumberFormatException( "\ "\ "  is  not  a  valid  number. ");  }  if  (val.startsWith( "-- "))  {      return  null;  }  [BUGGY]  if(val.startsWith( "-0 ")||  val.startsWith( "-0 "))  {  [BUGGY]  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.startsWith( "-0 ")||  val.startsWith( "-0 "))  {	if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  	non-compiled	[CE]  not  a  statement	7	None	replace
10	[BUG]  [BUGGY]    if(val.length()  ==  0)  {  return  createBigInteger(val);  }  [CE]  not  a  statement  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  if  (val.length()  ==  0)  {  throw  new  NumberFormatException( "\ "\ "  is  not  a  valid  number. ");  }  if  (val.startsWith( "-- "))  {      return  null;  }  [BUGGY]    if(val.length()  ==  0)  {  return  createBigInteger(val);  }  [BUGGY]  if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	    if(val.length()  ==  0)  {  return  createBigInteger(val);  }		non-compiled	[CE]  not  a  statement	8	None	add
11	[BUG]  [BUGGY]    val  =  val.charAt(0);  [CE]  not  a  statement  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  if  (val.length()  ==  0)  {  throw  new  NumberFormatException( "\ "\ "  is  not  a  valid  number. ");  }  if  (val.startsWith( "-- "))  {      return  null;  }  [BUGGY]    val  =  val.charAt(0);  [BUGGY]  if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	    val  =  val.charAt(0);		non-compiled	[CE]  not  a  statement	8	None	add
