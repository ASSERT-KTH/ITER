bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(val.startsWith( ".0 ")||  val.startsWith( ".0 "))  {  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  if(val.startsWith( ".0 ")||  val.startsWith( ".0 "))  {  [BUGGY]    return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.startsWith( ".0 ")||  val.startsWith( ".0 "))  {	  if(val.startsWith(   "-0   ")||    val.startsWith(   "-0   "))    {    	non-compiled	[CE]  not  a  statement	9	None	replace
2	[BUG]  [BUGGY]  if(val.startsWith( "0   ")||  val.startsWith( "0   "))  {  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  if(val.startsWith( "0   ")||  val.startsWith( "0   "))  {  [BUGGY]    return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.startsWith( "0   ")||  val.startsWith( "0   "))  {	  if(val.startsWith(   "-0   ")||    val.startsWith(   "-0   "))    {    	non-compiled	[CE]  not  a  statement	9	None	replace
3	[BUG]  [BUGGY]  while(val.length()  ==  0)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number.   ");  }  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  while(val.length()  ==  0)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number.   ");  }  [BUGGY]    if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	while(val.length()  ==  0)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number.   ");  }	      if(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
4	[BUG]  [BUGGY]  aughtException( " " "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  aughtException( " " "  is  not  a  valid  number.   ");  [BUGGY]    if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	aughtException( " " "  is  not  a  valid  number.   ");	      if(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
5	[BUG]  [BUGGY]  while(val.length()  ==  0)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number.   ");  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  while(val.length()  ==  0)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number.   ");  [BUGGY]    if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	while(val.length()  ==  0)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number.   ");	      if(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
6	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsUnquotedException( " ");  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  aughtExceptionHandler.throwAsUnquotedException( " ");  [BUGGY]    if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	aughtExceptionHandler.throwAsUnquotedException( " ");	      if(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
7	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length()  -  1,  val.length());  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  String  val  =  val.substring(0,  val.length()  -  1,  val.length());  [BUGGY]    if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	String  val  =  val.substring(0,  val.length()  -  1,  val.length());	      String    val    =    val.substring(0,    val.length()    -    1,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	6	None	replace
8	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length()  +  1,  val.length());  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  String  val  =  val.substring(0,  val.length()  +  1,  val.length());  [BUGGY]    if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	String  val  =  val.substring(0,  val.length()  +  1,  val.length());	      String    val    =    val.substring(0,    val.length()    -    1,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	6	None	replace
9	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length()  +  1,  val.length()  -  1);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  String  val  =  val.substring(0,  val.length()  +  1,  val.length()  -  1);  [BUGGY]    if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	String  val  =  val.substring(0,  val.length()  +  1,  val.length()  -  1);	      String    val    =    val.substring(0,    val.length()    -    1,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	6	None	replace
10	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length());  [CE]  <identifier>  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  String  val  =  val.substring(0,  val.length());  [BUGGY]    if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	String  val  =  val.substring(0,  val.length());	      String    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
11	[BUG]  [BUGGY]  char  val  =  val.substring(0,  val.length()  -  1);  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  char  val  =  val.substring(0,  val.length()  -  1);  [BUGGY]    if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	char  val  =  val.substring(0,  val.length()  -  1);	      String    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	3	None	replace
12	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length()  +  1);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  String  val  =  val.substring(0,  val.length()  +  1);  [BUGGY]    if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	String  val  =  val.substring(0,  val.length()  +  1);	      String    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	3	None	replace
13	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length();  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  String  val  =  val.substring(0,  val.length();  [BUGGY]    if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	String  val  =  val.substring(0,  val.length();	      String    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	3	None	replace
14	[BUG]  [BUGGY]  val  =  val.substring(0,  val.length());  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  val  =  val.substring(0,  val.length());  [BUGGY]    if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	val  =  val.substring(0,  val.length());	      val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	4	None	replace
15	[BUG]  [BUGGY]  val  =  val.substring(0,  val.length()  +  1);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  val  =  val.substring(0,  val.length()  +  1);  [BUGGY]    if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	val  =  val.substring(0,  val.length()  +  1);	      val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	4	None	replace
16	[BUG]  [BUGGY]  if  (val.startsWith( ".0x ")||  val.startsWith( ".-1))  {  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  if  (val.startsWith( ".0x ")||  val.startsWith( ".-1))  {  [BUGGY]    return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if  (val.startsWith( ".0x ")||  val.startsWith( ".-1))  {	  if    (val.startsWith(   "0x   ")||    val.startsWith(   "-1))    {    	non-compiled	[CE]  not  a  statement	1	None	replace
17	[BUG]  [BUGGY]  char  val  =  val.substring(0,  val.length());  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  char  val  =  val.substring(0,  val.length());  [BUGGY]    if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	char  val  =  val.substring(0,  val.length());	      String    val    =    val.substring(0,    val.length()    -    2);    	non-compiled	[CE]  not  a  statement	5	None	replace
18	[BUG]  [BUGGY]  val  =  val.charAt(0,  val.length()  -  1);  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  val  =  val.charAt(0,  val.length()  -  1);  [BUGGY]    if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	val  =  val.charAt(0,  val.length()  -  1);	      val    =    val.charAt(0);    	non-compiled	[CE]  not  a  statement	11	None	replace
19	[BUG]  [BUGGY]  val  =  val.trim();  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  val  =  val.trim();  [BUGGY]    if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	val  =  val.trim();	      val    =    val.charAt(0);    	non-compiled	[CE]  not  a  statement	11	None	replace
20	[BUG]  [BUGGY]  if(val.length()  ==  0)  {  return  createInteger(val);  }  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  if(val.length()  ==  0)  {  return  createInteger(val);  }  [BUGGY]    if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.length()  ==  0)  {  return  createInteger(val);  }	      if(val.length()    ==    0)    {    return    createBigInteger(val);    }    	non-compiled	[CE]  not  a  statement	10	None	replace
21	[BUG]  [BUGGY]  if(val.length()  ==  0)  {  return  createNumber(val);  }  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  if(val.length()  ==  0)  {  return  createNumber(val);  }  [BUGGY]    if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.length()  ==  0)  {  return  createNumber(val);  }	      if(val.length()    ==    0)    {    return    createBigInteger(val);    }    	non-compiled	[CE]  not  a  statement	10	None	replace
22	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length()).trim();  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  String  val  =  val.substring(0,  val.length()).trim();  [BUGGY]    if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	String  val  =  val.substring(0,  val.length()).trim();	      String    val    =    val.substring(0,    val.length()    -    2);    	non-compiled	[CE]  not  a  statement	5	None	replace
23	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length()  +  2);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  String  val  =  val.substring(0,  val.length()  +  2);  [BUGGY]    if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	String  val  =  val.substring(0,  val.length()  +  2);	      String    val    =    val.substring(0,    val.length()    -    2);    	non-compiled	[CE]  not  a  statement	5	None	replace
24	[BUG]  [BUGGY]  if(val.length()  ==  0)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number.   ");  }  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  if(val.length()  ==  0)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number.   ");  }  [BUGGY]    if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.length()  ==  0)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number.   ");  }	      if(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
25	[BUG]  [BUGGY]  if(val.length()  ==  1)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number.   ");  }  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  if(val.length()  ==  1)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number.   ");  }  [BUGGY]    if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.length()  ==  1)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number.   ");  }	      if(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
26	[BUG]  [BUGGY]  if(val.length()!=  0)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number.   ");  }  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  if(val.length()!=  0)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number.   ");  }  [BUGGY]    if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.length()!=  0)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number.   ");  }	      if(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
27	[BUG]  [BUGGY]  if(val.startsWith( "-1   ")||  val.startsWith( "-1   "))  {  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  if(val.startsWith( "-1   ")||  val.startsWith( "-1   "))  {  [BUGGY]    return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.startsWith( "-1   ")||  val.startsWith( "-1   "))  {	  if(val.startsWith(   "-0   ")||    val.startsWith(   "-0   "))    {    	non-compiled	[CE]  not  a  statement	9	None	replace
28	[BUG]  [BUGGY]  val  =  val.charAt(0,  val.length());  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  val  =  val.charAt(0,  val.length());  [BUGGY]    if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	val  =  val.charAt(0,  val.length());	      val    =    val.charAt(0);    	non-compiled	[CE]  not  a  statement	11	None	replace
29	[BUG]  [BUGGY]  if  (val.startsWith( "0x ")||  val.startsWith( "-1x ")||  val.startsWith( "-1x "))  {  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  if  (val.startsWith( "0x ")||  val.startsWith( "-1x ")||  val.startsWith( "-1x "))  {  [BUGGY]    return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if  (val.startsWith( "0x ")||  val.startsWith( "-1x ")||  val.startsWith( "-1x "))  {	  if    (val.startsWith(   "0x   ")||    val.startsWith(   "-0x   ")||    val.startsWith(   "-0x   "))    {    	non-compiled	[CE]  not  a  statement	8	None	replace
30	[BUG]  [BUGGY]  if  (val.startsWith( "0x ")||  val.startsWith( "-1x ")||  val.startsWith( "-1))  {  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  if  (val.startsWith( "0x ")||  val.startsWith( "-1x ")||  val.startsWith( "-1))  {  [BUGGY]    return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if  (val.startsWith( "0x ")||  val.startsWith( "-1x ")||  val.startsWith( "-1))  {	  if    (val.startsWith(   "0x   ")||    val.startsWith(   "-0x   ")||    val.startsWith(   "-0x   "))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
31	[BUG]  [BUGGY]  if  (val.startsWith( ".0x ")||  val.startsWith( "-1))  {  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  if  (val.startsWith( ".0x ")||  val.startsWith( "-1))  {  [BUGGY]    return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if  (val.startsWith( ".0x ")||  val.startsWith( "-1))  {	  if    (val.startsWith(   "0x   ")||    val.startsWith(   "-1))    {    	non-compiled	[CE]  not  a  statement	1	None	replace
32	[BUG]  [BUGGY]  if(val.length()  ==  1)  {  return  createBigInteger(val);  }  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  if(val.length()  ==  1)  {  return  createBigInteger(val);  }  [BUGGY]    if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.length()  ==  1)  {  return  createBigInteger(val);  }	      if(val.length()    ==    0)    {    return    createBigInteger(val);    }    	non-compiled	[CE]  not  a  statement	10	None	replace
33	[BUG]  [BUGGY]  if(val.length()  ==  1)  {  return  createInteger(val);  }  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  if(val.length()  ==  1)  {  return  createInteger(val);  }  [BUGGY]    if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.length()  ==  1)  {  return  createInteger(val);  }	      if(val.length()    ==    0)    {    return    createBigInteger(val);    }    	non-compiled	[CE]  not  a  statement	10	None	replace
34	[BUG]  [BUGGY]  if(val.startsWith( ".0x ")||  val.startsWith( ".0x "))  {  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  if(val.startsWith( ".0x ")||  val.startsWith( ".0x "))  {  [BUGGY]    return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.startsWith( ".0x ")||  val.startsWith( ".0x "))  {	  if    (val.startsWith(   "0x   ")||    val.startsWith(   "-1))    {    	non-compiled	[CE]  not  a  statement	1	None	replace
35	[BUG]  [BUGGY]  int  decPos  =  val.indexOf('.');  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  int  decPos  =  val.indexOf('.');  [BUGGY]    return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	int  decPos  =  val.indexOf('.');	      	non-compiled	[CE]  not  a  statement	2	None	replace
36	[BUG]  [BUGGY]  int  decPos  =  val.indexOf('-');  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  int  decPos  =  val.indexOf('-');  [BUGGY]    return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	int  decPos  =  val.indexOf('-');	      	non-compiled	[CE]  not  a  statement	2	None	replace
37	[BUG]  [BUGGY]  int  decPos  =  val.indexOf('e');  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  int  decPos  =  val.indexOf('e');  [BUGGY]    return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	int  decPos  =  val.indexOf('e');	      	non-compiled	[CE]  not  a  statement	2	None	replace
38	[BUG]  [BUGGY]  val.setLength(0);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  val.setLength(0);  [BUGGY]    return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	val.setLength(0);	      	non-compiled	[CE]  not  a  statement	2	None	replace
39	[BUG]  [BUGGY]  if(val.length()  >  0)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number.   ");  }  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  if(val.length()  >  0)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number.   ");  }  [BUGGY]    if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.length()  >  0)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number.   ");  }	      if(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
40	[BUG]  [BUGGY]  String  val  =  val,  val.substring(0,  val.length());  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  String  val  =  val,  val.substring(0,  val.length());  [BUGGY]    if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	String  val  =  val,  val.substring(0,  val.length());	      String    val    =    val.substring(0,    val.length()    -    2);    	non-compiled	[CE]  not  a  statement	5	None	replace
41	[BUG]  [BUGGY]  if(val.startsWith( ".0x ")||  val.startsWith( ".0x ")||  val.startsWith( ".0x "))  {  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  if(val.startsWith( ".0x ")||  val.startsWith( ".0x ")||  val.startsWith( ".0x "))  {  [BUGGY]    return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.startsWith( ".0x ")||  val.startsWith( ".0x ")||  val.startsWith( ".0x "))  {	  if    (val.startsWith(   "0x   ")||    val.startsWith(   "-0x   ")||    val.startsWith(   "-0x   "))    {    	non-compiled	[CE]  not  a  statement	8	None	replace
42	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length()  *  1,  val.length()  -  1);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  String  val  =  val.substring(0,  val.length()  *  1,  val.length()  -  1);  [BUGGY]    if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	String  val  =  val.substring(0,  val.length()  *  1,  val.length()  -  1);	      String    val    =    val.substring(0,    val.length()    -    1,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	6	None	replace
43	[BUG]  [BUGGY]  if(val.startsWith( "- ")||  val.startsWith( "- "))  {  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  if(val.startsWith( "- ")||  val.startsWith( "- "))  {  [BUGGY]    return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.startsWith( "- ")||  val.startsWith( "- "))  {	  if(val.startsWith(   "-0   ")||    val.startsWith(   "-0   "))    {    	non-compiled	[CE]  not  a  statement	9	None	replace
44	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length())+  1;  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  String  val  =  val.substring(0,  val.length())+  1;  [BUGGY]    if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	String  val  =  val.substring(0,  val.length())+  1;	      String    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	3	None	replace
45	[BUG]  [BUGGY]  if(val.length()  >  0)  {  return  createBigInteger(val);  }  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }    [BUGGY]  if(val.length()  >  0)  {  return  createBigInteger(val);  }  [BUGGY]    if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.length()  >  0)  {  return  createBigInteger(val);  }	      if(val.length()    ==    0)    {    return    createBigInteger(val);    }    	non-compiled	[CE]  not  a  statement	10	None	replace
