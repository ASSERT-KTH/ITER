bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(val.length()  ==  0)  {  return  createNull(val);  }  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(val.length()  ==  0)  {  return  createNull(val);  }  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.length()  ==  0)  {  return  createNull(val);  }	  if(val.length()    ==    0)    {    return    createNumber(val);    }    	non-compiled	[CE]  not  a  statement	21	None	replace
2	[BUG]  [BUGGY]  aughtException( " "  is  not  a  valid  number. ");  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  aughtException( " "  is  not  a  valid  number. ");  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	aughtException( " "  is  not  a  valid  number. ");	  aughtException(   "   "   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  	4	None	replace
3	[BUG]  [BUGGY]  aughtException( " "   "  +  val.toString());  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  aughtException( " "   "  +  val.toString());  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	aughtException( " "   "  +  val.toString());	  aughtException(   "   "   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  	4	None	replace
4	[BUG]  [BUGGY]  while(val.length()!=  0)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number.   ");  }  [CE]  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  while(val.length()!=  0)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number.   ");  }  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	while(val.length()!=  0)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number.   ");  }	  if(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    }    	non-compiled	[CE]  	24	None	replace
5	[BUG]  [BUGGY]  Character  val  =  val.substring(0,  val.length()  -  1);  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  Character  val  =  val.substring(0,  val.length()  -  1);  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	Character  val  =  val.substring(0,  val.length()  -  1);	  char    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  	11	None	replace
6	[BUG]  [BUGGY]  if(val.startsWith( "0 ")||  val.startsWith( ".0 "))  {  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(val.startsWith( "0 ")||  val.startsWith( ".0 "))  {  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.startsWith( "0 ")||  val.startsWith( ".0 "))  {	  if(val.startsWith(   "0       ")||    val.startsWith(   "0       "))    {    	non-compiled	[CE]  	2	None	replace
7	[BUG]  [BUGGY]  if(val.startsWith( ".0 ")||  val.startsWith( "0 "))  {  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(val.startsWith( ".0 ")||  val.startsWith( "0 "))  {  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.startsWith( ".0 ")||  val.startsWith( "0 "))  {	  if(val.startsWith(   "0       ")||    val.startsWith(   "0       "))    {    	non-compiled	[CE]  	2	None	replace
8	[BUG]  [BUGGY]  int  decPos  =  val.indexOf('-')+  1;  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  int  decPos  =  val.indexOf('-')+  1;  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	int  decPos  =  val.indexOf('-')+  1;	  int    decPos    =    val.indexOf('-');    	non-compiled	[CE]  	36	None	replace
9	[BUG]  [BUGGY]  int  decPos  =  val.indexOf('-')+  val.indexOf('.');  [CE]  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  int  decPos  =  val.indexOf('-')+  val.indexOf('.');  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	int  decPos  =  val.indexOf('-')+  val.indexOf('.');	  int    decPos    =    val.indexOf('-');    	non-compiled	[CE]  	36	None	replace
10	[BUG]  [BUGGY]  int  decPos  =  val.indexOf('-'  +  1);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  int  decPos  =  val.indexOf('-'  +  1);  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	int  decPos  =  val.indexOf('-'  +  1);	  int    decPos    =    val.indexOf('-');    	non-compiled	[CE]  not  a  statement	36	None	replace
11	[BUG]  [BUGGY]  String  val  =  val,  val.substring(0,  val.length()  -  1);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  String  val  =  val,  val.substring(0,  val.length()  -  1);  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	String  val  =  val,  val.substring(0,  val.length()  -  1);	  String    val    =    val,    val.substring(0,    val.length());    	non-compiled	[CE]  not  a  statement	40	None	replace
12	[BUG]  [BUGGY]  String  val  =  val,  val.substring(0,  val.length()  -  2);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  String  val  =  val,  val.substring(0,  val.length()  -  2);  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	String  val  =  val,  val.substring(0,  val.length()  -  2);	  String    val    =    val,    val.substring(0,    val.length());    	non-compiled	[CE]  not  a  statement	40	None	replace
13	[BUG]  [BUGGY]  String  val  =  val,  val.substring(0,  val.length()  -  3);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  String  val  =  val,  val.substring(0,  val.length()  -  3);  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	String  val  =  val,  val.substring(0,  val.length()  -  3);	  String    val    =    val,    val.substring(0,    val.length());    	non-compiled	[CE]  not  a  statement	40	None	replace
14	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length()));  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  String  val  =  val.substring(0,  val.length()));  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	String  val  =  val.substring(0,  val.length()));	  String    val    =    val.substring(0,    val.length()    +    2);    	non-compiled	[CE]  not  a  statement	23	None	replace
15	[BUG]  [BUGGY]  int  decPos  =  val.indexOf('e')+  val.indexOf('E');  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  int  decPos  =  val.indexOf('e')+  val.indexOf('E');  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	int  decPos  =  val.indexOf('e')+  val.indexOf('E');	  int    decPos    =    val.indexOf('e');    	non-compiled	[CE]  not  a  statement	37	None	replace
16	[BUG]  [BUGGY]  int  decPos  =  val.indexOf('e')+  val.indexOf('E')+  1;  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  int  decPos  =  val.indexOf('e')+  val.indexOf('E')+  1;  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	int  decPos  =  val.indexOf('e')+  val.indexOf('E')+  1;	  int    decPos    =    val.indexOf('e');    	non-compiled	[CE]  not  a  statement	37	None	replace
17	[BUG]  [BUGGY]  int  decPos  =  val.indexOf('e'  +  val.indexOf('E')+  1);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  int  decPos  =  val.indexOf('e'  +  val.indexOf('E')+  1);  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	int  decPos  =  val.indexOf('e'  +  val.indexOf('E')+  1);	  int    decPos    =    val.indexOf('e');    	non-compiled	[CE]  not  a  statement	37	None	replace
18	[BUG]  [BUGGY]  if(val.startsWith( "0x ")||  val.startsWith( "0x ")||  val.startsWith( "0x "))  {  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(val.startsWith( "0x ")||  val.startsWith( "0x ")||  val.startsWith( "0x "))  {  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.startsWith( "0x ")||  val.startsWith( "0x ")||  val.startsWith( "0x "))  {	  if(val.startsWith(   ".0x   ")||    val.startsWith(   ".0x   ")||    val.startsWith(   ".0x   "))    {    	non-compiled	[CE]  not  a  statement	41	None	replace
19	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length()  -  1)+  1;  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  String  val  =  val.substring(0,  val.length()  -  1)+  1;  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	String  val  =  val.substring(0,  val.length()  -  1)+  1;	  String    val    =    val.substring(0,    val.length())+    1;    	non-compiled	[CE]  not  a  statement	44	None	replace
20	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length()  +  1)+  1;  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  String  val  =  val.substring(0,  val.length()  +  1)+  1;  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	String  val  =  val.substring(0,  val.length()  +  1)+  1;	  String    val    =    val.substring(0,    val.length())+    1;    	non-compiled	[CE]  not  a  statement	44	None	replace
21	[BUG]  [BUGGY]  if(val.length()  ==  1)  {  return  createNumber(val);  }  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(val.length()  ==  1)  {  return  createNumber(val);  }  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.length()  ==  1)  {  return  createNumber(val);  }	  if(val.length()    ==    1)    {    return    createBigInteger(val);    }    	non-compiled	[CE]  not  a  statement	32	None	replace
22	[BUG]  [BUGGY]  if(val.length()  ==  0)  {  aughtExceptionHandler.throwAsUnquotedException( " ");  }  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(val.length()  ==  0)  {  aughtExceptionHandler.throwAsUnquotedException( " ");  }  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.length()  ==  0)  {  aughtExceptionHandler.throwAsUnquotedException( " ");  }	  aughtExceptionHandler.throwAsUnquotedException(   "   ");    	non-compiled	[CE]  not  a  statement	6	None	replace
23	[BUG]  [BUGGY]  if(!allZeros)  {  aughtExceptionHandler.throwAsUnquotedException( " ");  }  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(!allZeros)  {  aughtExceptionHandler.throwAsUnquotedException( " ");  }  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(!allZeros)  {  aughtExceptionHandler.throwAsUnquotedException( " ");  }	  aughtExceptionHandler.throwAsUnquotedException(   "   ");    	non-compiled	[CE]  not  a  statement	6	None	replace
24	[BUG]  [BUGGY]  while(val.length()!=  0)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  while(val.length()!=  0)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	while(val.length()!=  0)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");	  while(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	5	None	replace
25	[BUG]  [BUGGY]  while(val.length()  >=  0)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  while(val.length()  >=  0)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	while(val.length()  >=  0)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");	  while(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	5	None	replace
26	[BUG]  [BUGGY]  if(val.startsWith( ".0 ")||  val.startsWith( "-1 "))  {  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(val.startsWith( ".0 ")||  val.startsWith( "-1 "))  {  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.startsWith( ".0 ")||  val.startsWith( "-1 "))  {	  if(val.startsWith(   "-1       ")||    val.startsWith(   "-1       "))    {    	non-compiled	[CE]  not  a  statement	27	None	replace
27	[BUG]  [BUGGY]  val  =  val.charAt(0,  val.length()  -  2);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  val  =  val.charAt(0,  val.length()  -  2);  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	val  =  val.charAt(0,  val.length()  -  2);	  val    =    val.charAt(0,    val.length());    	non-compiled	[CE]  not  a  statement	28	None	replace
28	[BUG]  [BUGGY]  if(val.startsWith( "0x ")||  val.startsWith( "0x "))  {  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(val.startsWith( "0x ")||  val.startsWith( "0x "))  {  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.startsWith( "0x ")||  val.startsWith( "0x "))  {	  if(val.startsWith(   ".0x   ")||    val.startsWith(   ".0x   "))    {    	non-compiled	[CE]  not  a  statement	34	None	replace
29	[BUG]  [BUGGY]  if(val.startsWith( "0x ")||  val.startsWith( ".0x "))  {  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(val.startsWith( "0x ")||  val.startsWith( ".0x "))  {  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.startsWith( "0x ")||  val.startsWith( ".0x "))  {	  if(val.startsWith(   ".0x   ")||    val.startsWith(   ".0x   "))    {    	non-compiled	[CE]  not  a  statement	34	None	replace
30	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(val);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  Thread.currentThread().setContextClassLoader(val);  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	Thread.currentThread().setContextClassLoader(val);	  if(val.length()    >    0)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    }    	non-compiled	[CE]  not  a  statement	39	None	replace
31	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(null);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  Thread.currentThread().setContextClassLoader(null);  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	Thread.currentThread().setContextClassLoader(null);	  if(val.length()    >    0)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    }    	non-compiled	[CE]  not  a  statement	39	None	replace
32	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  Thread.currentThread().setContextClassLoader(this);  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	Thread.currentThread().setContextClassLoader(this);	  if(val.length()    >    0)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    }    	non-compiled	[CE]  not  a  statement	39	None	replace
33	[BUG]  [BUGGY]  int  decPos  =  val.indexOf('.')+  val.indexOf('e');  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  int  decPos  =  val.indexOf('.')+  val.indexOf('e');  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	int  decPos  =  val.indexOf('.')+  val.indexOf('e');	  int    decPos    =    val.indexOf('.');    	non-compiled	[CE]  not  a  statement	35	None	replace
34	[BUG]  [BUGGY]  int  decPos  =  val.indexOf('.')+  val.indexOf('E')+  1;  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  int  decPos  =  val.indexOf('.')+  val.indexOf('E')+  1;  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	int  decPos  =  val.indexOf('.')+  val.indexOf('E')+  1;	  int    decPos    =    val.indexOf('.');    	non-compiled	[CE]  not  a  statement	35	None	replace
35	[BUG]  [BUGGY]  int  decPos  =  val.indexOf('.')+  val.indexOf('-');  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  int  decPos  =  val.indexOf('.')+  val.indexOf('-');  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	int  decPos  =  val.indexOf('.')+  val.indexOf('-');	  int    decPos    =    val.indexOf('.');    	non-compiled	[CE]  not  a  statement	35	None	replace
36	[BUG]  [BUGGY]  if(val.startsWith( ".java ")||  val.startsWith( ".java "))  {  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(val.startsWith( ".java ")||  val.startsWith( ".java "))  {  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.startsWith( ".java ")||  val.startsWith( ".java "))  {	  if(val.startsWith(   "-   ")||    val.startsWith(   "-   "))    {    	non-compiled	[CE]  not  a  statement	43	None	replace
37	[BUG]  [BUGGY]  if(val.startsWith( "- ")||  val.startsWith( "-))  {  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(val.startsWith( "- ")||  val.startsWith( "-))  {  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.startsWith( "- ")||  val.startsWith( "-))  {	  if(val.startsWith(   "-   ")||    val.startsWith(   "-   "))    {    	non-compiled	[CE]  not  a  statement	43	None	replace
38	[BUG]  [BUGGY]  val  =  val.substring(0,  val.length()  -  2);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  val  =  val.substring(0,  val.length()  -  2);  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	val  =  val.substring(0,  val.length()  -  2);	  val    =    val.substring(0,    val.length());    	non-compiled	[CE]  not  a  statement	14	None	replace
39	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length()  -  1,  val.length()  +  1);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  String  val  =  val.substring(0,  val.length()  -  1,  val.length()  +  1);  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	String  val  =  val.substring(0,  val.length()  -  1,  val.length()  +  1);	  String    val    =    val.substring(0,    val.length()    -    1,    val.length());    	non-compiled	[CE]  not  a  statement	7	None	replace
40	[BUG]  [BUGGY]  char  val  =  val.substring(0,  val.length()  -  2);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  char  val  =  val.substring(0,  val.length()  -  2);  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	char  val  =  val.substring(0,  val.length()  -  2);	  char    val    =    val.substring(0,    val.length());    	non-compiled	[CE]  not  a  statement	17	None	replace
41	[BUG]  [BUGGY]  if(val.length()  ==  1)  {  return  createNull(val);  }  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(val.length()  ==  1)  {  return  createNull(val);  }  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.length()  ==  1)  {  return  createNull(val);  }	  if(val.length()    ==    1)    {    return    createInteger(val);    }    	non-compiled	[CE]  not  a  statement	33	None	replace
42	[BUG]  [BUGGY]  if(val.length()  <  =  0)  {  return  createBigInteger(val);  }  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(val.length()  <  =  0)  {  return  createBigInteger(val);  }  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.length()  <  =  0)  {  return  createBigInteger(val);  }	  if(val.length()    >    0)    {    return    createBigInteger(val);    }    	non-compiled	[CE]  not  a  statement	45	None	replace
43	[BUG]  [BUGGY]  if(val.length()  ==  0)  {  return  createBigDecimal(val);  }  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(val.length()  ==  0)  {  return  createBigDecimal(val);  }  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.length()  ==  0)  {  return  createBigDecimal(val);  }	  if(val.length()    >    0)    {    return    createBigInteger(val);    }    	non-compiled	[CE]  not  a  statement	45	None	replace
44	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length()  -  1).trim();  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  String  val  =  val.substring(0,  val.length()  -  1).trim();  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	String  val  =  val.substring(0,  val.length()  -  1).trim();	  String    val    =    val.substring(0,    val.length()).trim();    	non-compiled	[CE]  not  a  statement	22	None	replace
45	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length()  -  2).trim();  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  String  val  =  val.substring(0,  val.length()  -  2).trim();  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	String  val  =  val.substring(0,  val.length()  -  2).trim();	  String    val    =    val.substring(0,    val.length()).trim();    	non-compiled	[CE]  not  a  statement	22	None	replace
46	[BUG]  [BUGGY]  char  val  =  val.substring(0,  val.length()  +  1,  val.length()  -  1);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  char  val  =  val.substring(0,  val.length()  +  1,  val.length()  -  1);  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	char  val  =  val.substring(0,  val.length()  +  1,  val.length()  -  1);	  String    val    =    val.substring(0,    val.length()    +    1,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	9	None	replace
47	[BUG]  [BUGGY]  val  =  val.substring(0,  val.length()  +  1,  val.length());  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  val  =  val.substring(0,  val.length()  +  1,  val.length());  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	val  =  val.substring(0,  val.length()  +  1,  val.length());	  String    val    =    val.substring(0,    val.length()    +    1,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	9	None	replace
48	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length()  *  1,  val.length());  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  String  val  =  val.substring(0,  val.length()  *  1,  val.length());  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	String  val  =  val.substring(0,  val.length()  *  1,  val.length());	  String    val    =    val.substring(0,    val.length()    *    1,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	42	None	replace
49	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length()  /  1,  val.length()  -  1);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  String  val  =  val.substring(0,  val.length()  /  1,  val.length()  -  1);  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	String  val  =  val.substring(0,  val.length()  /  1,  val.length()  -  1);	  String    val    =    val.substring(0,    val.length()    *    1,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	42	None	replace
50	[BUG]  [BUGGY]  val.setLength(1);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  val.setLength(1);  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	val.setLength(1);	  val.setLength(0);    	non-compiled	[CE]  not  a  statement	38	None	replace
51	[BUG]  [BUGGY]  val.setLength(0L);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  val.setLength(0L);  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	val.setLength(0L);	  val.setLength(0);    	non-compiled	[CE]  not  a  statement	38	None	replace
52	[BUG]  [BUGGY]  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");	  if(val.length()    ==    1)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    }    	non-compiled	[CE]  not  a  statement	25	None	replace
53	[BUG]  [BUGGY]  while(val.length()  ==  1)  {  throw  new  NumberFormatException( " "  is  not  a  valid  number. ");  }  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  while(val.length()  ==  1)  {  throw  new  NumberFormatException( " "  is  not  a  valid  number. ");  }  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	while(val.length()  ==  1)  {  throw  new  NumberFormatException( " "  is  not  a  valid  number. ");  }	  if(val.length()    ==    1)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    }    	non-compiled	[CE]  not  a  statement	25	None	replace
54	[BUG]  [BUGGY]  while(val.length()!=  1)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  while(val.length()!=  1)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	while(val.length()!=  1)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");	  while(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	5	None	replace
55	[BUG]  [BUGGY]  while(val.length()  >=  1)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  while(val.length()  >=  1)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	while(val.length()  >=  1)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");	  while(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	5	None	replace
56	[BUG]  [BUGGY]  while(val.length()  ==  1)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  while(val.length()  ==  1)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	while(val.length()  ==  1)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");	  while(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	5	None	replace
57	[BUG]  [BUGGY]  while(val.length()!=  1)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");  }  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  while(val.length()!=  1)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");  }  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	while(val.length()!=  1)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");  }	  while(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    }    	non-compiled	[CE]  not  a  statement	3	None	replace
58	[BUG]  [BUGGY]  while(val.length()  >=  1)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");  }  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  while(val.length()  >=  1)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");  }  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	while(val.length()  >=  1)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");  }	  while(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    }    	non-compiled	[CE]  not  a  statement	3	None	replace
59	[BUG]  [BUGGY]  Number  val  =  val.substring(0,  val.length()  -  1);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  Number  val  =  val.substring(0,  val.length()  -  1);  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	Number  val  =  val.substring(0,  val.length()  -  1);	  if(val.length()    >    0)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    }    	non-compiled	[CE]  not  a  statement	39	None	replace
60	[BUG]  [BUGGY]  nisip  =  val.charAt(val.length()  -  1);  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  nisip  =  val.charAt(val.length()  -  1);  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	nisip  =  val.charAt(val.length()  -  1);	  if(val.length()    >    0)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
61	[BUG]  [BUGGY]  MutableFormatException.println(val.length()  -  1);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  MutableFormatException.println(val.length()  -  1);  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	MutableFormatException.println(val.length()  -  1);	  if(val.length()    >    0)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    }    	non-compiled	[CE]  not  a  statement	39	None	replace
62	[BUG]  [BUGGY]  Number  val  =  val.getValue();  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  Number  val  =  val.getValue();  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	Number  val  =  val.getValue();	  if(val.length()    >    0)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    }    	non-compiled	[CE]  not  a  statement	39	None	replace
63	[BUG]  [BUGGY]  if(val.startsWith( "-1 ")||  val.startsWith( "-1))  {  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(val.startsWith( "-1 ")||  val.startsWith( "-1))  {  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.startsWith( "-1 ")||  val.startsWith( "-1))  {	  if(val.startsWith(   "-1       ")||    val.startsWith(   "-1       "))    {    	non-compiled	[CE]  not  a  statement	27	None	replace
64	[BUG]  [BUGGY]  if(val.startsWith( ".-1 ")||  val.startsWith( ".-1 "))  {  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(val.startsWith( ".-1 ")||  val.startsWith( ".-1 "))  {  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.startsWith( ".-1 ")||  val.startsWith( ".-1 "))  {	  if(val.startsWith(   "-1       ")||    val.startsWith(   "-1       "))    {    	non-compiled	[CE]  not  a  statement	27	None	replace
65	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length()  -  3);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  String  val  =  val.substring(0,  val.length()  -  3);  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	String  val  =  val.substring(0,  val.length()  -  3);	  String    val    =    val.substring(0,    val.length();    	non-compiled	[CE]  not  a  statement	13	None	replace
66	[BUG]  [BUGGY]  if(val.length()  ==  1)  {  return  createInteger(0);  }  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(val.length()  ==  1)  {  return  createInteger(0);  }  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.length()  ==  1)  {  return  createInteger(0);  }	  if(val.length()    ==    1)    {    return    createInteger(val);    }    	non-compiled	[CE]  not  a  statement	33	None	replace
67	[BUG]  [BUGGY]  val  =  val.charAt(0,  val.length()  +  1);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  val  =  val.charAt(0,  val.length()  +  1);  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	val  =  val.charAt(0,  val.length()  +  1);	  val    =    val.charAt(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	18	None	replace
68	[BUG]  [BUGGY]  if(val.length()  ==  1)  {  return  createBigDecimal(val);  }  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(val.length()  ==  1)  {  return  createBigDecimal(val);  }  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.length()  ==  1)  {  return  createBigDecimal(val);  }	  if(val.length()    ==    1)    {    return    createBigInteger(val);    }    	non-compiled	[CE]  not  a  statement	32	None	replace
69	[BUG]  [BUGGY]  int  decPos  =  val.indexOf('e')+  1;  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  int  decPos  =  val.indexOf('e')+  1;  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	int  decPos  =  val.indexOf('e')+  1;	  int    decPos    =    val.indexOf('e');    	non-compiled	[CE]  not  a  statement	37	None	replace
70	[BUG]  [BUGGY]  int  decPos  =  val.indexOf('e')+  val.indexOf('e');  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  int  decPos  =  val.indexOf('e')+  val.indexOf('e');  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	int  decPos  =  val.indexOf('e')+  val.indexOf('e');	  int    decPos    =    val.indexOf('e');    	non-compiled	[CE]  not  a  statement	37	None	replace
71	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length()  -  1,  val.length()  -  2);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  String  val  =  val.substring(0,  val.length()  -  1,  val.length()  -  2);  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	String  val  =  val.substring(0,  val.length()  -  1,  val.length()  -  2);	  String    val    =    val.substring(0,    val.length()    -    1,    val.length());    	non-compiled	[CE]  not  a  statement	7	None	replace
72	[BUG]  [BUGGY]  int  decPos  =  val.indexOf('-')+  val.indexOf('-');  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  int  decPos  =  val.indexOf('-')+  val.indexOf('-');  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	int  decPos  =  val.indexOf('-')+  val.indexOf('-');	  int    decPos    =    val.indexOf('-');    	non-compiled	[CE]  not  a  statement	36	None	replace
73	[BUG]  [BUGGY]  if  (val.startsWith( ".0x ")||  val.startsWith( ".-1x ")||  val.startsWith( ".-1))  {  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if  (val.startsWith( ".0x ")||  val.startsWith( ".-1x ")||  val.startsWith( ".-1))  {  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if  (val.startsWith( ".0x ")||  val.startsWith( ".-1x ")||  val.startsWith( ".-1))  {	  if    (val.startsWith(   "0x   ")||    val.startsWith(   "-1x   ")||    val.startsWith(   "-1))    {    	non-compiled	[CE]  not  a  statement	30	None	replace
74	[BUG]  [BUGGY]  if  (val.startsWith( ".0x ")||  val.startsWith( ".-1x ")||  val.startsWith( "-1))  {  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if  (val.startsWith( ".0x ")||  val.startsWith( ".-1x ")||  val.startsWith( "-1))  {  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if  (val.startsWith( ".0x ")||  val.startsWith( ".-1x ")||  val.startsWith( "-1))  {	  if    (val.startsWith(   "0x   ")||    val.startsWith(   "-1x   ")||    val.startsWith(   "-1))    {    	non-compiled	[CE]  not  a  statement	30	None	replace
75	[BUG]  [BUGGY]  val.add(val.substring(1));  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  val.add(val.substring(1));  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	val.add(val.substring(1));	  val.setLength(0);    	non-compiled	[CE]  not  a  statement	38	None	replace
76	[BUG]  [BUGGY]  if(val.length()  ==  1)  {  throw  new  NumberFormatException( " ", "  is  not  a  valid  number. ");  }  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(val.length()  ==  1)  {  throw  new  NumberFormatException( " ", "  is  not  a  valid  number. ");  }  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.length()  ==  1)  {  throw  new  NumberFormatException( " ", "  is  not  a  valid  number. ");  }	  if(val.length()    ==    1)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    }    	non-compiled	[CE]  not  a  statement	25	None	replace
77	[BUG]  [BUGGY]  if(val.length()  ==  1)  {  throw  new  NumberFormatException( " "'  is  not  a  valid  number. ");  }  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(val.length()  ==  1)  {  throw  new  NumberFormatException( " "'  is  not  a  valid  number. ");  }  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.length()  ==  1)  {  throw  new  NumberFormatException( " "'  is  not  a  valid  number. ");  }	  if(val.length()    ==    1)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    }    	non-compiled	[CE]  not  a  statement	25	None	replace
78	[BUG]  [BUGGY]  val  =  val.substring(0,  val.length()));  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  val  =  val.substring(0,  val.length()));  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	val  =  val.substring(0,  val.length()));	  val    =    val.substring(0,    val.length()    +    1);    	non-compiled	[CE]  not  a  statement	15	None	replace
79	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length()  -  4);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  String  val  =  val.substring(0,  val.length()  -  4);  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	String  val  =  val.substring(0,  val.length()  -  4);	  String    val    =    val.substring(0,    val.length());    	non-compiled	[CE]  not  a  statement	10	None	replace
80	[BUG]  [BUGGY]  if(val.length()  >  0)  {  return  createInteger(val);  }  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(val.length()  >  0)  {  return  createInteger(val);  }  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.length()  >  0)  {  return  createInteger(val);  }	  if(val.length()    >    0)    {    return    createBigInteger(val);    }    	non-compiled	[CE]  not  a  statement	45	None	replace
81	[BUG]  [BUGGY]  if(val.startsWith( "- ")||  val.startsWith( "-- "))  {  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(val.startsWith( "- ")||  val.startsWith( "-- "))  {  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.startsWith( "- ")||  val.startsWith( "-- "))  {	  if(val.startsWith(   "-   ")||    val.startsWith(   "-   "))    {    	non-compiled	[CE]  not  a  statement	43	None	replace
82	[BUG]  [BUGGY]  if(val.startsWith( "- ")||  val.startsWith( "-+ "))  {  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(val.startsWith( "- ")||  val.startsWith( "-+ "))  {  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.startsWith( "- ")||  val.startsWith( "-+ "))  {	  if(val.startsWith(   "-   ")||    val.startsWith(   "-   "))    {    	non-compiled	[CE]  not  a  statement	43	None	replace
83	[BUG]  [BUGGY]  if(val.startsWith( "- ")||  val.startsWith( ".- "))  {  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(val.startsWith( "- ")||  val.startsWith( ".- "))  {  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.startsWith( "- ")||  val.startsWith( ".- "))  {	  if(val.startsWith(   "-   ")||    val.startsWith(   "-   "))    {    	non-compiled	[CE]  not  a  statement	43	None	replace
84	[BUG]  [BUGGY]  if  (val.startsWith( ".0x ")||  val.startsWith( ".-1x ")||  val.startsWith( ".-1x "))  {  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if  (val.startsWith( ".0x ")||  val.startsWith( ".-1x ")||  val.startsWith( ".-1x "))  {  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if  (val.startsWith( ".0x ")||  val.startsWith( ".-1x ")||  val.startsWith( ".-1x "))  {	  if    (val.startsWith(   "0x   ")||    val.startsWith(   "-1x   ")||    val.startsWith(   "-1x   "))    {    	non-compiled	[CE]  not  a  statement	29	None	replace
85	[BUG]  [BUGGY]  int  decPos  =  val.indexOf('.')+  1;  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  int  decPos  =  val.indexOf('.')+  1;  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	int  decPos  =  val.indexOf('.')+  1;	  int    decPos    =    val.indexOf('.');    	non-compiled	[CE]  not  a  statement	35	None	replace
86	[BUG]  [BUGGY]  int  decPos  =  val.indexOf('.'  +  1);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  int  decPos  =  val.indexOf('.'  +  1);  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	int  decPos  =  val.indexOf('.'  +  1);	  int    decPos    =    val.indexOf('.');    	non-compiled	[CE]  not  a  statement	35	None	replace
87	[BUG]  [BUGGY]  if(val.startsWith( "0x ")||  val.startsWith( ".0x ")||  val.startsWith( ".0x "))  {  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(val.startsWith( "0x ")||  val.startsWith( ".0x ")||  val.startsWith( ".0x "))  {  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.startsWith( "0x ")||  val.startsWith( ".0x ")||  val.startsWith( ".0x "))  {	  if(val.startsWith(   ".0x   ")||    val.startsWith(   ".0x   ")||    val.startsWith(   ".0x   "))    {    	non-compiled	[CE]  not  a  statement	41	None	replace
88	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsUnquotedException( " ");  }  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsUnquotedException( " ");  }  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsUnquotedException( " ");  }	  aughtExceptionHandler.throwAsUnquotedException(   "   ");    	non-compiled	[CE]  not  a  statement	6	None	replace
89	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsUnquotedException( " ",  val);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  aughtExceptionHandler.throwAsUnquotedException( " ",  val);  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	aughtExceptionHandler.throwAsUnquotedException( " ",  val);	  aughtExceptionHandler.throwAsUnquotedException(   "   ");    	non-compiled	[CE]  not  a  statement	6	None	replace
90	[BUG]  [BUGGY]  aughtException( " " "  +  val.toString()  + "  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  aughtException( " " "  +  val.toString()  + "  is  not  a  valid  number. ");  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	aughtException( " " "  +  val.toString()  + "  is  not  a  valid  number. ");	  aughtException(   "   "   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	4	None	replace
91	[BUG]  [BUGGY]  if(val.length()  ==  0)  {  throw  new  NumberFormatException( " " ");  }  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(val.length()  ==  0)  {  throw  new  NumberFormatException( " " ");  }  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.length()  ==  0)  {  throw  new  NumberFormatException( " " ");  }	  aughtException(   "   "   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	4	None	replace
92	[BUG]  [BUGGY]  if(val.length()  <  1)  {  return  createInteger(val);  }  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(val.length()  <  1)  {  return  createInteger(val);  }  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.length()  <  1)  {  return  createInteger(val);  }	  if(val.length()    ==    1)    {    return    createInteger(val);    }    	non-compiled	[CE]  not  a  statement	33	None	replace
93	[BUG]  [BUGGY]  val  =  val.substring(0,  val.length())+  1;  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  val  =  val.substring(0,  val.length())+  1;  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	val  =  val.substring(0,  val.length())+  1;	  val    =    val.substring(0,    val.length()    +    1);    	non-compiled	[CE]  not  a  statement	15	None	replace
94	[BUG]  [BUGGY]  if(val.startsWith( "-0x ")||  val.startsWith( "-0x "))  {  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(val.startsWith( "-0x ")||  val.startsWith( "-0x "))  {  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.startsWith( "-0x ")||  val.startsWith( "-0x "))  {	  if(val.startsWith(   ".0x   ")||    val.startsWith(   ".0x   "))    {    	non-compiled	[CE]  not  a  statement	34	None	replace
95	[BUG]  [BUGGY]  while(val.length()  <  1)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");  }  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  while(val.length()  <  1)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");  }  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	while(val.length()  <  1)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");  }	  if(val.length()    ==    1)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    }    	non-compiled	[CE]  not  a  statement	25	None	replace
96	[BUG]  [BUGGY]  if(val.length()  ==  1)  {  throw  new  NumberFormatException( " "  +  val.toString()  + "  is  not  a  valid  number. ");  }  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(val.length()  ==  1)  {  throw  new  NumberFormatException( " "  +  val.toString()  + "  is  not  a  valid  number. ");  }  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.length()  ==  1)  {  throw  new  NumberFormatException( " "  +  val.toString()  + "  is  not  a  valid  number. ");  }	  if(val.length()    ==    1)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    }    	non-compiled	[CE]  not  a  statement	25	None	replace
97	[BUG]  [BUGGY]  val.setLength(128);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  val.setLength(128);  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	val.setLength(128);	  val.setLength(0);    	non-compiled	[CE]  not  a  statement	38	None	replace
98	[BUG]  [BUGGY]  Char  val  =  val.substring(0,  val.length());  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  Char  val  =  val.substring(0,  val.length());  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	Char  val  =  val.substring(0,  val.length());	  char    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	11	None	replace
99	[BUG]  [BUGGY]  if(val.length()!=  1)  {  return  createInteger(val);  }  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(val.length()!=  1)  {  return  createInteger(val);  }  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.length()!=  1)  {  return  createInteger(val);  }	  if(val.length()    ==    0)    {    return    createInteger(val);    }    	non-compiled	[CE]  not  a  statement	20	None	replace
100	[BUG]  [BUGGY]  int  decPos  =  val.indexOf('.',  decPos);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  int  decPos  =  val.indexOf('.',  decPos);  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	int  decPos  =  val.indexOf('.',  decPos);	  int    decPos    =    val.indexOf('.');    	non-compiled	[CE]  not  a  statement	35	None	replace
101	[BUG]  [BUGGY]  if(val.length()  >=  0)  {  return  createBigInteger(val);  }  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(val.length()  >=  0)  {  return  createBigInteger(val);  }  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.length()  >=  0)  {  return  createBigInteger(val);  }	  if(val.length()    >    0)    {    return    createBigInteger(val);    }    	non-compiled	[CE]  not  a  statement	45	None	replace
102	[BUG]  [BUGGY]  if(val.startsWith( ".0 ")||  val.startsWith( ".-1 ")||  val.startsWith( ".-1 "))  {  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(val.startsWith( ".0 ")||  val.startsWith( ".-1 ")||  val.startsWith( ".-1 "))  {  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.startsWith( ".0 ")||  val.startsWith( ".-1 ")||  val.startsWith( ".-1 "))  {	  if    (val.startsWith(   "0x   ")||    val.startsWith(   "-1x   ")||    val.startsWith(   "-1))    {    	non-compiled	[CE]  not  a  statement	30	None	replace
103	[BUG]  [BUGGY]  if(val.startsWith( ".0 ")||  val.startsWith( ".0 ")||  val.startsWith( ".0 "))  {  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(val.startsWith( ".0 ")||  val.startsWith( ".0 ")||  val.startsWith( ".0 "))  {  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.startsWith( ".0 ")||  val.startsWith( ".0 ")||  val.startsWith( ".0 "))  {	  if(val.startsWith(   ".0x   ")||    val.startsWith(   ".0x   ")||    val.startsWith(   ".0x   "))    {    	non-compiled	[CE]  not  a  statement	41	None	replace
104	[BUG]  [BUGGY]  val  =  val.substring(0,  val.length()  -  3);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  val  =  val.substring(0,  val.length()  -  3);  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	val  =  val.substring(0,  val.length()  -  3);	  val    =    val.substring(0,    val.length());    	non-compiled	[CE]  not  a  statement	14	None	replace
105	[BUG]  [BUGGY]  if(val.length()  >  0)  {  return  createNumber(val);  }  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(val.length()  >  0)  {  return  createNumber(val);  }  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.length()  >  0)  {  return  createNumber(val);  }	  if(val.length()    ==    0)    {    return    createNumber(val);    }    	non-compiled	[CE]  not  a  statement	21	None	replace
106	[BUG]  [BUGGY]  if(val.length()  ==  0)  {  throw  new  NumberFormatException( " "  is  not  a  valid  number. ");  }  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(val.length()  ==  0)  {  throw  new  NumberFormatException( " "  is  not  a  valid  number. ");  }  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.length()  ==  0)  {  throw  new  NumberFormatException( " "  is  not  a  valid  number. ");  }	  aughtException(   "   "   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	4	None	replace
107	[BUG]  [BUGGY]  if(val.length()  ==  0)  {  throw  new  NumberFormatException( " " "  +  val.substring(0,  val.length()  -  1);  }  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(val.length()  ==  0)  {  throw  new  NumberFormatException( " " "  +  val.substring(0,  val.length()  -  1);  }  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.length()  ==  0)  {  throw  new  NumberFormatException( " " "  +  val.substring(0,  val.length()  -  1);  }	  aughtException(   "   "   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	4	None	replace
108	[BUG]  [BUGGY]  int  decPos  =  val.indexOf('-',  DEC_PREFIX);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  int  decPos  =  val.indexOf('-',  DEC_PREFIX);  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	int  decPos  =  val.indexOf('-',  DEC_PREFIX);	  int    decPos    =    val.indexOf('-');    	non-compiled	[CE]  not  a  statement	36	None	replace
109	[BUG]  [BUGGY]  while(val.length()  >  0)  {  throw  new  NumberFormatException( " " "  +  val.substring(0,  val.length()  -  1));  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  while(val.length()  >  0)  {  throw  new  NumberFormatException( " " "  +  val.substring(0,  val.length()  -  1));  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	while(val.length()  >  0)  {  throw  new  NumberFormatException( " " "  +  val.substring(0,  val.length()  -  1));	  while(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	5	None	replace
110	[BUG]  [BUGGY]  while(val.length()  <  2)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  while(val.length()  <  2)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	while(val.length()  <  2)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");	  while(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	5	None	replace
111	[BUG]  [BUGGY]  while(val.length()  >  0)  {  throw  new  NumberFormatException( " " "  +  val.toString());  }  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  while(val.length()  >  0)  {  throw  new  NumberFormatException( " " "  +  val.toString());  }  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	while(val.length()  >  0)  {  throw  new  NumberFormatException( " " "  +  val.toString());  }	  while(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	5	None	replace
112	[BUG]  [BUGGY]  while(val.length()  >  0)  {  throw  new  NumberFormatException( " " "  +  val.substring(0,  val.length()  -  1));  }  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  while(val.length()  >  0)  {  throw  new  NumberFormatException( " " "  +  val.substring(0,  val.length()  -  1));  }  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	while(val.length()  >  0)  {  throw  new  NumberFormatException( " " "  +  val.substring(0,  val.length()  -  1));  }	  while(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	5	None	replace
113	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length()  -  1,  val.length()).trim();  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  String  val  =  val.substring(0,  val.length()  -  1,  val.length()).trim();  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	String  val  =  val.substring(0,  val.length()  -  1,  val.length()).trim();	  String    val    =    val.substring(0,    val.length()).trim();    	non-compiled	[CE]  not  a  statement	22	None	replace
114	[BUG]  [BUGGY]  val  =  val.toLowerCase();  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  val  =  val.toLowerCase();  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	val  =  val.toLowerCase();	  val    =    val.trim();    	non-compiled	[CE]  not  a  statement	19	None	replace
115	[BUG]  [BUGGY]  while(val.length()  <  =  0)  {  throw  new  NumberFormatException( " " ", "  is  not  a  valid  number. ");  }  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  while(val.length()  <  =  0)  {  throw  new  NumberFormatException( " " ", "  is  not  a  valid  number. ");  }  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	while(val.length()  <  =  0)  {  throw  new  NumberFormatException( " " ", "  is  not  a  valid  number. ");  }	  while(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    }    	non-compiled	[CE]  not  a  statement	3	None	replace
116	[BUG]  [BUGGY]  while(val.length()  <  2)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");  }  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  while(val.length()  <  2)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");  }  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	while(val.length()  <  2)  {  throw  new  NumberFormatException( " " "  is  not  a  valid  number. ");  }	  while(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    }    	non-compiled	[CE]  not  a  statement	3	None	replace
117	[BUG]  [BUGGY]  if(allZeros)  {  aughtExceptionHandler.throwAsUnquotedException( " ");  }  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(allZeros)  {  aughtExceptionHandler.throwAsUnquotedException( " ");  }  [BUGGY]      if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(allZeros)  {  aughtExceptionHandler.throwAsUnquotedException( " ");  }	  aughtExceptionHandler.throwAsUnquotedException(   "   ");    	non-compiled	[CE]  not  a  statement	6	None	replace
118	[BUG]  [BUGGY]  if(val.startsWith( ". ")||  val.startsWith( ". "))  {  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(val.startsWith( ". ")||  val.startsWith( ". "))  {  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.startsWith( ". ")||  val.startsWith( ". "))  {	  if(val.startsWith(   "-   ")||    val.startsWith(   "-   "))    {    	non-compiled	[CE]  not  a  statement	43	None	replace
119	[BUG]  [BUGGY]  if(val.startsWith( ". ")||  val.startsWith( ".- "))  {  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }      [BUGGY]  if(val.startsWith( ". ")||  val.startsWith( ".- "))  {  [BUGGY]      return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	152	152	1	replace	if(val.startsWith( ". ")||  val.startsWith( ".- "))  {	  if(val.startsWith(   "-   ")||    val.startsWith(   "-   "))    {    	non-compiled	[CE]  not  a  statement	43	None	replace
