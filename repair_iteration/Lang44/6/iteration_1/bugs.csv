bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  decPos  =  val.indexOf('.')+  val.indexOf('E')+  1;  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException  [CONTEXT]    return  null;  }  if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  [BUGGY]  int  decPos  =  val.indexOf('.')+  val.indexOf('E')+  1;  [BUGGY]  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +   "  is  not  a  valid  number. ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	159	159	1	replace	int  decPos  =  val.indexOf('.')+  val.indexOf('E')+  1;	int  decPos  =  val.indexOf('.');  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
2	[BUG]  [BUGGY]  int  decPos  =  val.indexOf('.',  lastChar);  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException  [CONTEXT]    return  null;  }  if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  [BUGGY]  int  decPos  =  val.indexOf('.',  lastChar);  [BUGGY]  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +   "  is  not  a  valid  number. ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	159	159	1	replace	int  decPos  =  val.indexOf('.',  lastChar);	int  decPos  =  val.indexOf('.');  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
3	[BUG]  [BUGGY]  int  decPos  =  val.indexOf('.'  +  lastChar);  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException  [CONTEXT]    return  null;  }  if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  [BUGGY]  int  decPos  =  val.indexOf('.'  +  lastChar);  [BUGGY]  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +   "  is  not  a  valid  number. ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	159	159	1	replace	int  decPos  =  val.indexOf('.'  +  lastChar);	int  decPos  =  val.indexOf('.');  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
4	[BUG]  [BUGGY]  int  decPos  =  val.indexOf('.')+  val.indexOf('e')+  1;  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException  [CONTEXT]    return  null;  }  if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  [BUGGY]  int  decPos  =  val.indexOf('.')+  val.indexOf('e')+  1;  [BUGGY]  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +   "  is  not  a  valid  number. ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	159	159	1	replace	int  decPos  =  val.indexOf('.')+  val.indexOf('e')+  1;	int  decPos  =  val.indexOf('.');  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException  [CONTEXT]    return  null;  }  if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  [BUGGY]    [BUGGY]  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +   "  is  not  a  valid  number. ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	159	159	1	replace	  	int  decPos  =  val.indexOf('.');  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
6	[BUG]  [BUGGY]    val  =  val.substring(0,  val.length()  -  1);  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException  [CONTEXT]    return  null;  }  if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  [BUGGY]    val  =  val.substring(0,  val.length()  -  1);  [BUGGY]  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +   "  is  not  a  valid  number. ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	159	159	1	replace	    val  =  val.substring(0,  val.length()  -  1);		non-compiled	[CE]  illegal  start  of  expression	12	None	add
7	[BUG]  [BUGGY]  int  decPos  =  val.indexOf('.')+  1;  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException  [CONTEXT]    return  null;  }  if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  [BUGGY]  int  decPos  =  val.indexOf('.')+  1;  [BUGGY]  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +   "  is  not  a  valid  number. ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	159	159	1	replace	int  decPos  =  val.indexOf('.')+  1;	int  decPos  =  val.indexOf('.');  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
8	[BUG]  [BUGGY]  int  decPos  =  val.lastIndexOf('.');  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException  [CONTEXT]    return  null;  }  if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  [BUGGY]  int  decPos  =  val.lastIndexOf('.');  [BUGGY]  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +   "  is  not  a  valid  number. ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	159	159	1	replace	int  decPos  =  val.lastIndexOf('.');	int  decPos  =  val.indexOf('.');  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
9	[BUG]  [BUGGY]    int  decPos  =  val.indexOf('e')+  val.indexOf('E')+  1;  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException  [CONTEXT]    return  null;  }  if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  [BUGGY]    int  decPos  =  val.indexOf('e')+  val.indexOf('E')+  1;  [BUGGY]  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +   "  is  not  a  valid  number. ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	159	159	1	replace	    int  decPos  =  val.indexOf('e')+  val.indexOf('E')+  1;		non-compiled	[CE]  illegal  start  of  expression	12	None	add
10	[BUG]  [BUGGY]    int  decPos  =  val.indexOf('-');  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException  [CONTEXT]    return  null;  }  if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  [BUGGY]    int  decPos  =  val.indexOf('-');  [BUGGY]  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +   "  is  not  a  valid  number. ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	159	159	1	replace	    int  decPos  =  val.indexOf('-');		non-compiled	[CE]  illegal  start  of  expression	12	None	add
11	[BUG]  [BUGGY]    int  expPos  =  val.indexOf('.');  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException  [CONTEXT]    return  null;  }  if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  [BUGGY]    int  expPos  =  val.indexOf('.');  [BUGGY]  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +   "  is  not  a  valid  number. ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	159	159	1	replace	    int  expPos  =  val.indexOf('.');		non-compiled	[CE]  illegal  start  of  expression	12	None	add
12	[BUG]  [BUGGY]    if(!allZeros)  {  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')+  val.indexOf('E')+  1;  if(expPos  >  -1)  {  throw  new  NumberFormatException( "  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException  [CONTEXT]    return  null;  }  if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  [BUGGY]    if(!allZeros)  {  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')+  val.indexOf('E')+  1;  if(expPos  >  -1)  {  throw  new  NumberFormatException( "  [BUGGY]  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +   "  is  not  a  valid  number. ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	159	159	1	replace	    if(!allZeros)  {  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')+  val.indexOf('E')+  1;  if(expPos  >  -1)  {  throw  new  NumberFormatException( "		non-compiled	[CE]  illegal  start  of  expression	12	None	add
13	[BUG]  [BUGGY]    if(!allZeros)  {  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('E')+  val.indexOf('E')+  1;  if(expPos  >  -1)  {  throw  new  NumberFormatException( "  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException  [CONTEXT]    return  null;  }  if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  [BUGGY]    if(!allZeros)  {  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('E')+  val.indexOf('E')+  1;  if(expPos  >  -1)  {  throw  new  NumberFormatException( "  [BUGGY]  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +   "  is  not  a  valid  number. ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	159	159	1	replace	    if(!allZeros)  {  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('E')+  val.indexOf('E')+  1;  if(expPos  >  -1)  {  throw  new  NumberFormatException( "		non-compiled	[CE]  illegal  start  of  expression	12	None	add
14	[BUG]  [BUGGY]    if(!allZeros)  {  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')+  val.indexOf('E')+  1;  if(expPos  >  -1)  {  throw  new  NumberFormatException(  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException  [CONTEXT]    return  null;  }  if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  [BUGGY]    if(!allZeros)  {  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')+  val.indexOf('E')+  1;  if(expPos  >  -1)  {  throw  new  NumberFormatException(  [BUGGY]  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +   "  is  not  a  valid  number. ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	159	159	1	replace	    if(!allZeros)  {  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')+  val.indexOf('E')+  1;  if(expPos  >  -1)  {  throw  new  NumberFormatException(		non-compiled	[CE]  illegal  start  of  expression	12	None	add
