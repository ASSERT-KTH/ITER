bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    int  expPos  =  val.length();  [CE]  illegal  start  of  type  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  [BUGGY]    int  expPos  =  val.length();  [BUGGY]  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	    int  expPos  =  val.length();		non-compiled	[CE]  illegal  start  of  type	26	None	add
2	[BUG]  [BUGGY]    String  expPos  =  val.substring(0,  decPos);  [CE]  unclosed  string  literal  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  [BUGGY]    String  expPos  =  val.substring(0,  decPos);  [BUGGY]  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	    String  expPos  =  val.substring(0,  decPos);		non-compiled	[CE]  unclosed  string  literal	26	None	add
3	[BUG]  [BUGGY]    String  expPos  =  val.substring(0,  val.length()  -  1);  [CE]  unclosed  string  literal  [FE]        StringIndexOutOfBoundsException  [CONTEXT]  mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  [BUGGY]    String  expPos  =  val.substring(0,  val.length()  -  1);  [BUGGY]  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	    String  expPos  =  val.substring(0,  val.length()  -  1);		non-compiled	[CE]  unclosed  string  literal	26	None	add
4	[BUG]  [BUGGY]    Integer  expPos  =  val.substring(decPos);  [CE]  unclosed  string  literal  [FE]          StringIndexOutOfBoundsException  [CONTEXT]  mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  [BUGGY]    Integer  expPos  =  val.substring(decPos);  [BUGGY]  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	    Integer  expPos  =  val.substring(decPos);		non-compiled	[CE]  unclosed  string  literal	26	None	add
5	[BUG]  [BUGGY]    String  expPos  =  val.substring(decPos  +  1);  [CE]  unclosed  string  literal  [FE]            StringIndexOutOfBoundsException  [CONTEXT]  mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  [BUGGY]    String  expPos  =  val.substring(decPos  +  1);  [BUGGY]  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	    String  expPos  =  val.substring(decPos  +  1);		non-compiled	[CE]  unclosed  string  literal	26	None	add
6	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  val.length())  {  [CE]  unclosed  string  literal  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  [BUGGY]  if(expPos  >  -1  &&  expPos  <  val.length())  {  [BUGGY]  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	if(expPos  >  -1  &&  expPos  <  val.length())  {	if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  	non-compiled	[CE]  unclosed  string  literal	25	None	replace
7	[BUG]  [BUGGY]    Double  expPos  =  val.substring(decPos  +  1);  [CE]  unclosed  string  literal  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  [BUGGY]    Double  expPos  =  val.substring(decPos  +  1);  [BUGGY]  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	    Double  expPos  =  val.substring(decPos  +  1);		non-compiled	[CE]  unclosed  string  literal	26	None	add
8	[BUG]  [BUGGY]    int  expPos  =  dec.length();  [CE]  unclosed  string  literal  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  [BUGGY]    int  expPos  =  dec.length();  [BUGGY]  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	    int  expPos  =  dec.length();		non-compiled	[CE]  unclosed  string  literal	26	None	add
9	[BUG]  [BUGGY]    Integer  expPos  =  val.indexOf('-');  [CE]  unclosed  string  literal  [FE]        StringIndexOutOfBoundsException  [CONTEXT]  mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  [BUGGY]    Integer  expPos  =  val.indexOf('-');  [BUGGY]  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	    Integer  expPos  =  val.indexOf('-');		non-compiled	[CE]  unclosed  string  literal	26	None	add
10	[BUG]  [BUGGY]  if(decPos  >  -1  &&  expPos  <  val.length()  -  1)  {  [CE]  unclosed  string  literal  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  [BUGGY]  if(decPos  >  -1  &&  expPos  <  val.length()  -  1)  {  [BUGGY]  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	if(decPos  >  -1  &&  expPos  <  val.length()  -  1)  {	if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  	non-compiled	[CE]  unclosed  string  literal	25	None	replace
11	[BUG]  [BUGGY]    String  expPos  =  val.substring(decPos  +  1,  val.length()  -  1);  [CE]  unclosed  string  literal  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  [BUGGY]    String  expPos  =  val.substring(decPos  +  1,  val.length()  -  1);  [BUGGY]  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	    String  expPos  =  val.substring(decPos  +  1,  val.length()  -  1);		non-compiled	[CE]  unclosed  string  literal	26	None	add
12	[BUG]  [BUGGY]    int  expPos  =  val.lastIndexOf('.');  [CE]  unclosed  string  literal  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  [BUGGY]    int  expPos  =  val.lastIndexOf('.');  [BUGGY]  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	    int  expPos  =  val.lastIndexOf('.');		non-compiled	[CE]  unclosed  string  literal	26	None	add
13	[BUG]  [BUGGY]    Integer  expPos  =  val.indexOf('.');  [CE]  unclosed  string  literal  [FE]        StringIndexOutOfBoundsException  [CONTEXT]  mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  [BUGGY]    Integer  expPos  =  val.indexOf('.');  [BUGGY]  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	    Integer  expPos  =  val.indexOf('.');		non-compiled	[CE]  unclosed  string  literal	26	None	add
