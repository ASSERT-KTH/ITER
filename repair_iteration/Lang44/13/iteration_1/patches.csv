bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  expPos  =  val.substring(0,  decPos);  [CE]  unclosed  string  literal  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  Integer  expPos  =  val.substring(0,  decPos);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.substring(0,  decPos);	      Integer    expPos    =    val.substring(decPos);    	non-compiled	[CE]  unclosed  string  literal	4	None	replace
2	[BUG]  [BUGGY]  Integer  expPos  =  val.substring(decPos  +  1);  [CE]  unclosed  string  literal  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  Integer  expPos  =  val.substring(decPos  +  1);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.substring(decPos  +  1);	      Integer    expPos    =    val.substring(decPos);    	non-compiled	[CE]  unclosed  string  literal	4	None	replace
3	[BUG]  [BUGGY]  Integer  expPos  =  val.length();  [CE]  unclosed  string  literal  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  Integer  expPos  =  val.length();  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.length();	      Integer    expPos    =    val.substring(decPos);    	non-compiled	[CE]  unclosed  string  literal	4	None	replace
4	[BUG]  [BUGGY]  Integer  expPos  =  val.substring(0,  DEC_POP);  [CE]  unclosed  string  literal  [FE]                    StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  Integer  expPos  =  val.substring(0,  DEC_POP);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.substring(0,  DEC_POP);	      Integer    expPos    =    val.substring(decPos);    	non-compiled	[CE]  unclosed  string  literal	4	None	replace
5	[BUG]  [BUGGY]  if(expPos  >  -1  ||  expPos  <  val.length())  {  [CE]  unclosed  string  literal  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  if(expPos  >  -1  ||  expPos  <  val.length())  {  [BUGGY]    exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	if(expPos  >  -1  ||  expPos  <  val.length())  {	  if(expPos    >    -1    &&    expPos    <    val.length())    {    	non-compiled	[CE]  unclosed  string  literal	6	None	replace
6	[BUG]  [BUGGY]  if(decPos  >  -1  &&  expPos  <  val.length())  {  [CE]  unclosed  string  literal  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  if(decPos  >  -1  &&  expPos  <  val.length())  {  [BUGGY]    exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	if(decPos  >  -1  &&  expPos  <  val.length())  {	  if(expPos    >    -1    &&    expPos    <    val.length())    {    	non-compiled	[CE]  unclosed  string  literal	6	None	replace
7	[BUG]  [BUGGY]  int  expPos  =  val.length()  -  1;  [CE]  unclosed  string  literal  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  int  expPos  =  val.length()  -  1;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  val.length()  -  1;	      int    expPos    =    val.length();    	non-compiled	[CE]  unclosed  string  literal	1	None	replace
8	[BUG]  [BUGGY]  int  expPos  =  val.length()  +  1;  [CE]  unclosed  string  literal  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  int  expPos  =  val.length()  +  1;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  val.length()  +  1;	      int    expPos    =    val.length();    	non-compiled	[CE]  unclosed  string  literal	1	None	replace
9	[BUG]  [BUGGY]  char  expPos  =  val.length();  [CE]  unclosed  string  literal  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  char  expPos  =  val.length();  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	char  expPos  =  val.length();	      int    expPos    =    val.length();    	non-compiled	[CE]  unclosed  string  literal	1	None	replace
10	[BUG]  [BUGGY]  int  expPos  =  val.lastIndexOf('.',  dec);  [CE]  unclosed  string  literal  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  int  expPos  =  val.lastIndexOf('.',  dec);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  val.lastIndexOf('.',  dec);	      int    expPos    =    val.lastIndexOf('.');    	non-compiled	[CE]  unclosed  string  literal	12	None	replace
11	[BUG]  [BUGGY]  int  expPos  =  val.lastIndexOf('.',  decPos);  [CE]  unclosed  string  literal  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  int  expPos  =  val.lastIndexOf('.',  decPos);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  val.lastIndexOf('.',  decPos);	      int    expPos    =    val.lastIndexOf('.');    	non-compiled	[CE]  unclosed  string  literal	12	None	replace
12	[BUG]  [BUGGY]  int  expPos  =  val.indexOf('.');  [CE]  unclosed  string  literal  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  int  expPos  =  val.indexOf('.');  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  val.indexOf('.');	      int    expPos    =    val.lastIndexOf('.');    	non-compiled	[CE]  unclosed  string  literal	12	None	replace
13	[BUG]  [BUGGY]  int  expPos  =  val.lastIndexOf('.',  1);  [CE]  unclosed  string  literal  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  int  expPos  =  val.lastIndexOf('.',  1);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  val.lastIndexOf('.',  1);	      int    expPos    =    val.lastIndexOf('.');    	non-compiled	[CE]  unclosed  string  literal	12	None	replace
14	[BUG]  [BUGGY]  String  expPos  =  val.substring(0,  decPos  +  1);  [CE]  unclosed  string  literal  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  String  expPos  =  val.substring(0,  decPos  +  1);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(0,  decPos  +  1);	      String    expPos    =    val.substring(0,    decPos);    	non-compiled	[CE]  unclosed  string  literal	2	None	replace
15	[BUG]  [BUGGY]  String  expPos  =  val.substring(0,  1);  [CE]  unclosed  string  literal  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  String  expPos  =  val.substring(0,  1);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(0,  1);	      String    expPos    =    val.substring(0,    decPos);    	non-compiled	[CE]  unclosed  string  literal	2	None	replace
16	[BUG]  [BUGGY]  String  expPos  =  val.substring(0,  4);  [CE]  unclosed  string  literal  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  String  expPos  =  val.substring(0,  4);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(0,  4);	      String    expPos    =    val.substring(0,    decPos);    	non-compiled	[CE]  unclosed  string  literal	2	None	replace
17	[BUG]  [BUGGY]  String  expPos  =  val.substring(0,  val.length());  [CE]  unclosed  string  literal  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  String  expPos  =  val.substring(0,  val.length());  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(0,  val.length());	      String    expPos    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  unclosed  string  literal	3	None	replace
18	[BUG]  [BUGGY]  String  expPos  =  val.substring(0,  val.length()  +  1);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  String  expPos  =  val.substring(0,  val.length()  +  1);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(0,  val.length()  +  1);	      String    expPos    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
19	[BUG]  [BUGGY]  String  expPos  =  val.substring(0,  val.length())+  1;  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  String  expPos  =  val.substring(0,  val.length())+  1;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(0,  val.length())+  1;	      String    expPos    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
20	[BUG]  [BUGGY]  String  expPos  =  val.substring(0,  val.length();  [CE]  unclosed  string  literal  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  String  expPos  =  val.substring(0,  val.length();  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(0,  val.length();	      String    expPos    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  unclosed  string  literal	3	None	replace
21	[BUG]  [BUGGY]  if(expPos  >  -1  ||  expPos  <  val.length()  -  1)  {  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  if(expPos  >  -1  ||  expPos  <  val.length()  -  1)  {  [BUGGY]    exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	if(expPos  >  -1  ||  expPos  <  val.length()  -  1)  {	  if(decPos    >    -1    &&    expPos    <    val.length()    -    1)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
22	[BUG]  [BUGGY]  Integer  expPos  =  val.indexOf('-',  dec);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  Integer  expPos  =  val.indexOf('-',  dec);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.indexOf('-',  dec);	      Integer    expPos    =    val.indexOf('-');    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
23	[BUG]  [BUGGY]  Integer  expPos  =  val.indexOf('-',  decPos);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  Integer  expPos  =  val.indexOf('-',  decPos);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.indexOf('-',  decPos);	      Integer    expPos    =    val.indexOf('-');    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
24	[BUG]  [BUGGY]  Integer  expPos  =  val.lastIndexOf('-');  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  Integer  expPos  =  val.lastIndexOf('-');  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.lastIndexOf('-');	      Integer    expPos    =    val.indexOf('-');    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
25	[BUG]  [BUGGY]  Integer  expPos  =  val.indexOf('-',  1);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  Integer  expPos  =  val.indexOf('-',  1);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.indexOf('-',  1);	      Integer    expPos    =    val.indexOf('-');    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
26	[BUG]  [BUGGY]  Double  expPos  =  val.substring(decPos  +  1,  val.length()  -  1);  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  Double  expPos  =  val.substring(decPos  +  1,  val.length()  -  1);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Double  expPos  =  val.substring(decPos  +  1,  val.length()  -  1);	      Double    expPos    =    val.substring(decPos    +    1);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
27	[BUG]  [BUGGY]  Double  expPos  =  val.substring(decPos  +  1,  val.length());  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  Double  expPos  =  val.substring(decPos  +  1,  val.length());  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Double  expPos  =  val.substring(decPos  +  1,  val.length());	      Double    expPos    =    val.substring(decPos    +    1);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
28	[BUG]  [BUGGY]  Double  expPos  =  val.substring(0,  decPos  +  1);  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  Double  expPos  =  val.substring(0,  decPos  +  1);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Double  expPos  =  val.substring(0,  decPos  +  1);	      Double    expPos    =    val.substring(decPos    +    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
29	[BUG]  [BUGGY]  Integer  expPos  =  val.indexOf('.',  dec);  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  Integer  expPos  =  val.indexOf('.',  dec);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.indexOf('.',  dec);	      Integer    expPos    =    val.indexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
30	[BUG]  [BUGGY]  Integer  expPos  =  val.lastIndexOf('.');  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  Integer  expPos  =  val.lastIndexOf('.');  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.lastIndexOf('.');	      Integer    expPos    =    val.indexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
31	[BUG]  [BUGGY]  Integer  expPos  =  val.indexOf('.',  decPos);  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  Integer  expPos  =  val.indexOf('.',  decPos);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.indexOf('.',  decPos);	      Integer    expPos    =    val.indexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
32	[BUG]  [BUGGY]  Integer  expPos  =  val.indexOf('.',  1);  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  Integer  expPos  =  val.indexOf('.',  1);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.indexOf('.',  1);	      Integer    expPos    =    val.indexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
33	[BUG]  [BUGGY]  String  expPos  =  val.substring(decPos  +  1,  val.length());  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  String  expPos  =  val.substring(decPos  +  1,  val.length());  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(decPos  +  1,  val.length());	      String    expPos    =    val.substring(decPos    +    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
34	[BUG]  [BUGGY]  int  expPos  =  dec.length()  -  1;  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  int  expPos  =  dec.length()  -  1;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  dec.length()  -  1;	      int    expPos    =    dec.length();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
35	[BUG]  [BUGGY]  int  expPos  =  mant.length();  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  int  expPos  =  mant.length();  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  mant.length();	      int    expPos    =    dec.length();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
36	[BUG]  [BUGGY]  char  expPos  =  dec.length();  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  char  expPos  =  dec.length();  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	char  expPos  =  dec.length();	      int    expPos    =    dec.length();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
37	[BUG]  [BUGGY]  String  expPos  =  val.substring(expPos  +  1,  val.length());  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  String  expPos  =  val.substring(expPos  +  1,  val.length());  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(expPos  +  1,  val.length());	      String    expPos    =    val.substring(decPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
38	[BUG]  [BUGGY]  String  expPos  =  mant.substring(decPos  +  1,  val.length()  -  1);  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  String  expPos  =  mant.substring(decPos  +  1,  val.length()  -  1);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  mant.substring(decPos  +  1,  val.length()  -  1);	      String    expPos    =    val.substring(decPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
39	[BUG]  [BUGGY]  String  decPos  =  val.substring(decPos  +  1,  val.length());  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  String  decPos  =  val.substring(decPos  +  1,  val.length());  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  decPos  =  val.substring(decPos  +  1,  val.length());	      String    expPos    =    val.substring(decPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
40	[BUG]  [BUGGY]  Integer  expPos  =  val.substring(expPos  +  1);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  Integer  expPos  =  val.substring(expPos  +  1);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.substring(expPos  +  1);	      Integer    expPos    =    val.substring(decPos);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
41	[BUG]  [BUGGY]  Integer  expPos  =  val.substring(expPos);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  Integer  expPos  =  val.substring(expPos);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.substring(expPos);	      Integer    expPos    =    val.substring(decPos);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
42	[BUG]  [BUGGY]  Integer  expPos  =  val.indexOf('.')+  1;  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  Integer  expPos  =  val.indexOf('.')+  1;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.indexOf('.')+  1;	      Integer    expPos    =    val.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
43	[BUG]  [BUGGY]  Double  expPos  =  val.substring(decPos  +  1,  decPos);  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  Double  expPos  =  val.substring(decPos  +  1,  decPos);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Double  expPos  =  val.substring(decPos  +  1,  decPos);	      Double    expPos    =    val.substring(decPos    +    1);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
44	[BUG]  [BUGGY]  String  expPos  =  val.substring(decPos  +  1,  decPos);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  String  expPos  =  val.substring(decPos  +  1,  decPos);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(decPos  +  1,  decPos);	      String    expPos    =    val.substring(decPos    +    1);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
45	[BUG]  [BUGGY]  String  expPos  =  val.substring(decPos  +  1,  expPos);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  String  expPos  =  val.substring(decPos  +  1,  expPos);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(decPos  +  1,  expPos);	      String    expPos    =    val.substring(decPos    +    1);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
46	[BUG]  [BUGGY]  int  expPos  =  val.lastIndexOf('.',  DEC_POP);  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  int  expPos  =  val.lastIndexOf('.',  DEC_POP);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  val.lastIndexOf('.',  DEC_POP);	      int    expPos    =    val.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
47	[BUG]  [BUGGY]  int  expPos  =  str.length();  [CE]  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  int  expPos  =  str.length();  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  str.length();	      int    expPos    =    dec.length();    	non-compiled	[CE]  	8	None	replace
48	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  >=  val.length()  -  1)  {  [CE]  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  if(expPos  >  -1  &&  expPos  >=  val.length()  -  1)  {  [BUGGY]    exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	if(expPos  >  -1  &&  expPos  >=  val.length()  -  1)  {	  if(expPos    >    -1    &&    expPos    <    val.length())    {    	non-compiled	[CE]  	6	None	replace
49	[BUG]  [BUGGY]  String  expPos  =  val.substring(0,  DEC_POP);  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  String  expPos  =  val.substring(0,  DEC_POP);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(0,  DEC_POP);	      String    expPos    =    val.substring(0,    decPos);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
50	[BUG]  [BUGGY]  String  expPos  =  val.substring(1,  decPos);  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  String  expPos  =  val.substring(1,  decPos);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(1,  decPos);	      String    expPos    =    val.substring(0,    decPos);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
51	[BUG]  [BUGGY]  Integer  expPos  =  val.indexOf('-')+  1;  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  Integer  expPos  =  val.indexOf('-')+  1;  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.indexOf('-')+  1;	      Integer    expPos    =    val.indexOf('-');    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
52	[BUG]  [BUGGY]  int  expPos  =  val.indexOf('-',  dec);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  int  expPos  =  val.indexOf('-',  dec);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  val.indexOf('-',  dec);	      Integer    expPos    =    val.indexOf('-');    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
53	[BUG]  [BUGGY]  int  expPos  =  decPos  +  val.length();  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  int  expPos  =  decPos  +  val.length();  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  decPos  +  val.length();	      int    expPos    =    val.length();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
54	[BUG]  [BUGGY]  int  expPos  =  val.lastIndexOf('.',  DEC_PREFIX);  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  int  expPos  =  val.lastIndexOf('.',  DEC_PREFIX);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  val.lastIndexOf('.',  DEC_PREFIX);	      int    expPos    =    val.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
55	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  decPos)  {  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  if(expPos  >  -1  &&  expPos  <  decPos)  {  [BUGGY]    exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	if(expPos  >  -1  &&  expPos  <  decPos)  {	  if(expPos    >    -1    &&    expPos    <    val.length())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
56	[BUG]  [BUGGY]  Double  expPos  =  val.substring(decPos  +  1,  expPos);  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  Double  expPos  =  val.substring(decPos  +  1,  expPos);  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Double  expPos  =  val.substring(decPos  +  1,  expPos);	      Double    expPos    =    val.substring(decPos    +    1);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
57	[BUG]  [BUGGY]  String  expPos  =  val.substring(decPos  +  1,  val.charAt(0));  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  String  expPos  =  val.substring(decPos  +  1,  val.charAt(0));  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(decPos  +  1,  val.charAt(0));	      String    expPos    =    val.substring(decPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
58	[BUG]  [BUGGY]  String  expPos  =  val.substring(decPos  +  1,  val.length();  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {    [BUGGY]  String  expPos  =  val.substring(decPos  +  1,  val.length();  [BUGGY]    if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(decPos  +  1,  val.length();	      String    expPos    =    val.substring(decPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
