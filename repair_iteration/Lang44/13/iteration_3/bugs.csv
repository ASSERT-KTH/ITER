bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  expPos  =  val.length()  +  decPos;  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  int  expPos  =  val.length()  +  decPos;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  val.length()  +  decPos;	  int    expPos    =    decPos    +    val.length();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
2	[BUG]  [BUGGY]  int  expPos  =  mant  +  val.length();  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  int  expPos  =  mant  +  val.length();  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  mant  +  val.length();	  int    expPos    =    decPos    +    val.length();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
3	[BUG]  [BUGGY]  int  expPos  =  expPos  +  val.length();  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  int  expPos  =  expPos  +  val.length();  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  expPos  +  val.length();	  int    expPos    =    decPos    +    val.length();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
4	[BUG]  [BUGGY]  Integer  expPos  =  val.length()  -  1;  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.length()  -  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.length()  -  1;	  Integer    expPos    =    val.length();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]  Integer  expPos  =  val.length()  +  1;  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.length()  +  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.length()  +  1;	  Integer    expPos    =    val.length();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
6	[BUG]  [BUGGY]  Integer  expPos  =  dec.length();  [CE]  illegal  start  of  type  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  dec.length();  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  dec.length();	  Integer    expPos    =    val.length();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
7	[BUG]  [BUGGY]  String  expPos  =  val.substring(decPos  +  1,  expPos  +  1);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  String  expPos  =  val.substring(decPos  +  1,  expPos  +  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(decPos  +  1,  expPos  +  1);	  String    expPos    =    val.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
8	[BUG]  [BUGGY]  String  expPos  =  val.substring(expPos  +  1,  decPos);  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  String  expPos  =  val.substring(expPos  +  1,  decPos);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(expPos  +  1,  decPos);	  String    expPos    =    val.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
9	[BUG]  [BUGGY]  char  expPos  =  val.substring(decPos  +  1,  expPos);  [CE]  illegal  start  of  type  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  char  expPos  =  val.substring(decPos  +  1,  expPos);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	char  expPos  =  val.substring(decPos  +  1,  expPos);	  String    expPos    =    val.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
10	[BUG]  [BUGGY]  String  expPos  =  val.substring(0,  decPos  +  1,  expPos);  [CE]  illegal  start  of  type  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  String  expPos  =  val.substring(0,  decPos  +  1,  expPos);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(0,  decPos  +  1,  expPos);	  String    expPos    =    val.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
11	[BUG]  [BUGGY]  String  expPos  =  mant.substring(decPos  +  1,  val.length());  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  String  expPos  =  mant.substring(decPos  +  1,  val.length());  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  mant.substring(decPos  +  1,  val.length());	  String    expPos    =    mant.substring(decPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
12	[BUG]  [BUGGY]  char  expPos  =  val.substring(decPos  +  1,  val.length()  -  1);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  char  expPos  =  val.substring(decPos  +  1,  val.length()  -  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	char  expPos  =  val.substring(decPos  +  1,  val.length()  -  1);	  String    expPos    =    mant.substring(decPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
13	[BUG]  [BUGGY]  int  expPos  =  val.lastIndexOf('.',  decPos  +  1);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  int  expPos  =  val.lastIndexOf('.',  decPos  +  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  val.lastIndexOf('.',  decPos  +  1);	  int    expPos    =    val.lastIndexOf('.',    decPos);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
14	[BUG]  [BUGGY]  int  expPos  =  val.indexOf('.',  decPos);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  int  expPos  =  val.indexOf('.',  decPos);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  val.indexOf('.',  decPos);	  int    expPos    =    val.lastIndexOf('.',    decPos);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
15	[BUG]  [BUGGY]  char  expPos  =  val.substring(decPos  +  1,  decPos);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  char  expPos  =  val.substring(decPos  +  1,  decPos);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	char  expPos  =  val.substring(decPos  +  1,  decPos);	  String    expPos    =    val.substring(decPos    +    1,    decPos);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
16	[BUG]  [BUGGY]  Integer  expPos  =  val.substring(0,  DEC_POP  +  1);  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.substring(0,  DEC_POP  +  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.substring(0,  DEC_POP  +  1);	  Integer    expPos    =    val.substring(0,    DEC_POP);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
17	[BUG]  [BUGGY]  Integer  expPos  =  val.substring(0,  1);  [CE]  illegal  start  of  type  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.substring(0,  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.substring(0,  1);	  Integer    expPos    =    val.substring(0,    DEC_POP);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
18	[BUG]  [BUGGY]  int  expPos  =  val.indexOf('.',  dec);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  int  expPos  =  val.indexOf('.',  dec);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  val.indexOf('.',  dec);	  int    expPos    =    val.lastIndexOf('.',    dec);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
19	[BUG]  [BUGGY]  int  expPos  =  str.length()  -  1;  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  int  expPos  =  str.length()  -  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  str.length()  -  1;	  int    expPos    =    str.length();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
20	[BUG]  [BUGGY]  int  expPos  =  decPos  +  str.length();  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  int  expPos  =  decPos  +  str.length();  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  decPos  +  str.length();	  int    expPos    =    str.length();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
21	[BUG]  [BUGGY]  Double  expPos  =  val.substring(decPos  +  1,  expPos  +  1);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Double  expPos  =  val.substring(decPos  +  1,  expPos  +  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Double  expPos  =  val.substring(decPos  +  1,  expPos  +  1);	  Double    expPos    =    val.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
22	[BUG]  [BUGGY]  Double  expPos  =  val.substring(expPos  +  1,  decPos);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Double  expPos  =  val.substring(expPos  +  1,  decPos);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Double  expPos  =  val.substring(expPos  +  1,  decPos);	  Double    expPos    =    val.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
23	[BUG]  [BUGGY]  Double  expPos  =  val.substring(0,  expPos);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Double  expPos  =  val.substring(0,  expPos);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Double  expPos  =  val.substring(0,  expPos);	  Double    expPos    =    val.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
24	[BUG]  [BUGGY]  String  expPos  =  val.substring(0,  val.length()  -  2);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  String  expPos  =  val.substring(0,  val.length()  -  2);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(0,  val.length()  -  2);	  String    expPos    =    val.substring(0,    val.length();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
25	[BUG]  [BUGGY]  int  expPos  =  val.indexOf('.',  1);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  int  expPos  =  val.indexOf('.',  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  val.indexOf('.',  1);	  int    expPos    =    val.lastIndexOf('.',    1);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
26	[BUG]  [BUGGY]  int  expPos  =  val.lastIndexOf('.',  2);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  int  expPos  =  val.lastIndexOf('.',  2);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  val.lastIndexOf('.',  2);	  int    expPos    =    val.lastIndexOf('.',    1);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
27	[BUG]  [BUGGY]  Integer  expPos  =  val.substring(0,  decPos  +  1);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.substring(0,  decPos  +  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.substring(0,  decPos  +  1);	  Integer    expPos    =    val.substring(0,    decPos);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
28	[BUG]  [BUGGY]  Integer  expPos  =  val.substring(0,  val.length()  -  1);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.substring(0,  val.length()  -  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.substring(0,  val.length()  -  1);	  Integer    expPos    =    val.substring(0,    decPos);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
29	[BUG]  [BUGGY]  Integer  expPos  =  val.substring(0,  val.length());  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.substring(0,  val.length());  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.substring(0,  val.length());	  Integer    expPos    =    val.substring(0,    decPos);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
30	[BUG]  [BUGGY]  Double  expPos  =  val.substring(expPos  +  1,  val.length());  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Double  expPos  =  val.substring(expPos  +  1,  val.length());  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Double  expPos  =  val.substring(expPos  +  1,  val.length());	  Double    expPos    =    val.substring(decPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
31	[BUG]  [BUGGY]  Double  expPos  =  val.substring(expPos  +  1,  val.length()  -  1);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Double  expPos  =  val.substring(expPos  +  1,  val.length()  -  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Double  expPos  =  val.substring(expPos  +  1,  val.length()  -  1);	  Double    expPos    =    val.substring(decPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
32	[BUG]  [BUGGY]  Double  expPos  =  val.substring(0,  val.length()  -  1);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Double  expPos  =  val.substring(0,  val.length()  -  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Double  expPos  =  val.substring(0,  val.length()  -  1);	  Double    expPos    =    val.substring(decPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
33	[BUG]  [BUGGY]  int  expPos  =  val.indexOf('.')+  1;  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  int  expPos  =  val.indexOf('.')+  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  val.indexOf('.')+  1;	  int    expPos    =    val.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
34	[BUG]  [BUGGY]  String  expPos  =  val.substring(expPos  +  1,  val.length()  -  1);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  String  expPos  =  val.substring(expPos  +  1,  val.length()  -  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(expPos  +  1,  val.length()  -  1);	  String    expPos    =    val.substring(expPos    +    1,    val.length());    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
35	[BUG]  [BUGGY]  String  expPos  =  val.substring(expPos  +  1,  val.length()  -  2);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  String  expPos  =  val.substring(expPos  +  1,  val.length()  -  2);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(expPos  +  1,  val.length()  -  2);	  String    expPos    =    val.substring(expPos    +    1,    val.length());    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
36	[BUG]  [BUGGY]  Integer  expPos  =  val.lastIndexOf('.',  1);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.lastIndexOf('.',  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.lastIndexOf('.',  1);	  Integer    expPos    =    val.indexOf('.',    1);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
37	[BUG]  [BUGGY]  String  expPos  =  val.substring(decPos  +  1,  val.length()  -  2);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  String  expPos  =  val.substring(decPos  +  1,  val.length()  -  2);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(decPos  +  1,  val.length()  -  2);	  String    expPos    =    val.substring(decPos    +    1,    val.length();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
38	[BUG]  [BUGGY]  char  expPos  =  val.substring(decPos  +  1,  val.length();  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  char  expPos  =  val.substring(decPos  +  1,  val.length();  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	char  expPos  =  val.substring(decPos  +  1,  val.length();	  String    expPos    =    val.substring(decPos    +    1,    val.length();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
39	[BUG]  [BUGGY]  Integer  expPos  =  val.substring(decPos  +  1,  expPos);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.substring(decPos  +  1,  expPos);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.substring(decPos  +  1,  expPos);	  Integer    expPos    =    val.substring(decPos    +    1);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
40	[BUG]  [BUGGY]  String  expPos  =  val.substring(0,  val.length()));  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  String  expPos  =  val.substring(0,  val.length()));  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(0,  val.length()));	  String    expPos    =    val.substring(0,    val.length()    +    1);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
41	[BUG]  [BUGGY]  Integer  expPos  =  dec.indexOf('-',  val);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  dec.indexOf('-',  val);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  dec.indexOf('-',  val);	  Integer    expPos    =    val.indexOf('-',    dec);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
42	[BUG]  [BUGGY]  Integer  expPos  =  val.indexOf('-',  dec  +  1);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.indexOf('-',  dec  +  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.indexOf('-',  dec  +  1);	  Integer    expPos    =    val.indexOf('-',    dec);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
43	[BUG]  [BUGGY]  Integer  expPos  =  val.lastIndexOf('.',  dec);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.lastIndexOf('.',  dec);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.lastIndexOf('.',  dec);	  Integer    expPos    =    val.indexOf('.',    dec);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
44	[BUG]  [BUGGY]  Integer  expPos  =  val.indexOf('.',  decPos  +  1);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.indexOf('.',  decPos  +  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.indexOf('.',  decPos  +  1);	  Integer    expPos    =    val.indexOf('.',    dec);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
45	[BUG]  [BUGGY]  String  expPos  =  val.length();  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  String  expPos  =  val.length();  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.length();	  char    expPos    =    val.length();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
46	[BUG]  [BUGGY]  char  expPos  =  val.charAt(val.length()  -  1);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  char  expPos  =  val.charAt(val.length()  -  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	char  expPos  =  val.charAt(val.length()  -  1);	  char    expPos    =    val.length();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
47	[BUG]  [BUGGY]  char  expPos  =  val.charAt(decPos);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  char  expPos  =  val.charAt(decPos);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	char  expPos  =  val.charAt(decPos);	  char    expPos    =    val.length();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
48	[BUG]  [BUGGY]  char  expPos  =  val.length()  -  1;  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  char  expPos  =  val.length()  -  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	char  expPos  =  val.length()  -  1;	  char    expPos    =    val.length();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
49	[BUG]  [BUGGY]  String  expPos  =  dec.length();  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  String  expPos  =  dec.length();  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  dec.length();	  char    expPos    =    dec.length();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
50	[BUG]  [BUGGY]  Character  expPos  =  dec.length();  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Character  expPos  =  dec.length();  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Character  expPos  =  dec.length();	  char    expPos    =    dec.length();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
51	[BUG]  [BUGGY]  Integer  expPos  =  val.substring(0,  expPos);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.substring(0,  expPos);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.substring(0,  expPos);	  Integer    expPos    =    val.substring(expPos);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
52	[BUG]  [BUGGY]  Integer  expPos  =  val.substring(decPos,  expPos);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.substring(decPos,  expPos);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.substring(decPos,  expPos);	  Integer    expPos    =    val.substring(expPos);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
53	[BUG]  [BUGGY]  if(decPos  >  -1  ||  expPos  <  val.length()  -  1)  {  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  if(decPos  >  -1  ||  expPos  <  val.length()  -  1)  {  [BUGGY]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	if(decPos  >  -1  ||  expPos  <  val.length()  -  1)  {	  if(expPos    >    -1    ||    expPos    <    val.length()    -    1)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
54	[BUG]  [BUGGY]  int  expPos  =  val.lastIndexOf('.',  DEC_PREFIX  +  1);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  int  expPos  =  val.lastIndexOf('.',  DEC_PREFIX  +  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  val.lastIndexOf('.',  DEC_PREFIX  +  1);	  int    expPos    =    val.lastIndexOf('.',    DEC_PREFIX);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
55	[BUG]  [BUGGY]  int  expPos  =  val.indexOf('.',  DEC_PREFIX);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  int  expPos  =  val.indexOf('.',  DEC_PREFIX);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  val.indexOf('.',  DEC_PREFIX);	  int    expPos    =    val.lastIndexOf('.',    DEC_PREFIX);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
56	[BUG]  [BUGGY]  String  expPos  =  val.substring(0,  3);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  String  expPos  =  val.substring(0,  3);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(0,  3);	  String    expPos    =    val.substring(0,    1);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
57	[BUG]  [BUGGY]  String  expPos  =  val.substring(0,  2);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  String  expPos  =  val.substring(0,  2);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(0,  2);	  String    expPos    =    val.substring(0,    1);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
58	[BUG]  [BUGGY]  Double  expPos  =  val.substring(decPos  +  1,  val.length()  -  2);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Double  expPos  =  val.substring(decPos  +  1,  val.length()  -  2);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Double  expPos  =  val.substring(decPos  +  1,  val.length()  -  2);	  Double    expPos    =    val.substring(decPos    +    1,    val.length());    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
59	[BUG]  [BUGGY]  Double  expPos  =  val.substring(0,  val.length());  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Double  expPos  =  val.substring(0,  val.length());  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Double  expPos  =  val.substring(0,  val.length());	  Double    expPos    =    val.substring(decPos    +    1,    val.length());    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
60	[BUG]  [BUGGY]  String  expPos  =  val.substring(0,  decPos  +  2);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  String  expPos  =  val.substring(0,  decPos  +  2);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(0,  decPos  +  2);	  String    expPos    =    val.substring(0,    decPos    +    1);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
61	[BUG]  [BUGGY]  String  expPos  =  val.substring(0,  decPos  +  1,  val.length()  -  1);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  String  expPos  =  val.substring(0,  decPos  +  1,  val.length()  -  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(0,  decPos  +  1,  val.length()  -  1);	  String    expPos    =    val.substring(0,    decPos    +    1);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
62	[BUG]  [BUGGY]  Double  expPos  =  val.substring(0,  decPos  +  2);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Double  expPos  =  val.substring(0,  decPos  +  2);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Double  expPos  =  val.substring(0,  decPos  +  2);	  Double    expPos    =    val.substring(0,    decPos    +    1);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
63	[BUG]  [BUGGY]  Double  expPos  =  val.substring(0,  expPos  +  1);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Double  expPos  =  val.substring(0,  expPos  +  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Double  expPos  =  val.substring(0,  expPos  +  1);	  Double    expPos    =    val.substring(0,    decPos    +    1);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
64	[BUG]  [BUGGY]  if(expPos  >  -1  ||  expPos  >=  val.length()  -  1)  {  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  if(expPos  >  -1  ||  expPos  >=  val.length()  -  1)  {  [BUGGY]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	if(expPos  >  -1  ||  expPos  >=  val.length()  -  1)  {	  if(expPos    >    -1    &&    expPos    >=    val.length()    -    1)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
65	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  >=  val.length())  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  if(expPos  >  -1  &&  expPos  >=  val.length())  {  [BUGGY]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	if(expPos  >  -1  &&  expPos  >=  val.length())  {	  if(expPos    >    -1    &&    expPos    >=    val.length()    -    1)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
66	[BUG]  [BUGGY]  Integer  expPos  =  val.lastIndexOf('.',  decPos);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.lastIndexOf('.',  decPos);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.lastIndexOf('.',  decPos);	  Integer    expPos    =    val.indexOf('.',    decPos);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
67	[BUG]  [BUGGY]  Integer  expPos  =  val.indexOf('.',  DEC_POP);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.indexOf('.',  DEC_POP);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.indexOf('.',  DEC_POP);	  Integer    expPos    =    val.indexOf('.',    decPos);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
68	[BUG]  [BUGGY]  if(decPos  >  -1  &&  expPos  <  expPos)  {  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  if(decPos  >  -1  &&  expPos  <  expPos)  {  [BUGGY]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	if(decPos  >  -1  &&  expPos  <  expPos)  {	  if(expPos    >    -1    &&    expPos    <    decPos)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
69	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  =  decPos)  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  if(expPos  >  -1  &&  expPos  <  =  decPos)  {  [BUGGY]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	if(expPos  >  -1  &&  expPos  <  =  decPos)  {	  if(expPos    >    -1    &&    expPos    <    decPos)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
70	[BUG]  [BUGGY]  if(expPos  >  -1  ||  expPos  <  decPos)  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  if(expPos  >  -1  ||  expPos  <  decPos)  {  [BUGGY]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	if(expPos  >  -1  ||  expPos  <  decPos)  {	  if(expPos    >    -1    &&    expPos    <    decPos)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
71	[BUG]  [BUGGY]  Integer  expPos  =  val.lastIndexOf('-',  dec);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.lastIndexOf('-',  dec);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.lastIndexOf('-',  dec);	  Integer    expPos    =    val.lastIndexOf('-');    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
72	[BUG]  [BUGGY]  Integer  expPos  =  val.lastIndexOf('-',  decPos);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.lastIndexOf('-',  decPos);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.lastIndexOf('-',  decPos);	  Integer    expPos    =    val.lastIndexOf('-');    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
73	[BUG]  [BUGGY]  Integer  expPos  =  val.lastIndexOf('-',  1);  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.lastIndexOf('-',  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.lastIndexOf('-',  1);	  Integer    expPos    =    val.lastIndexOf('-');    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
74	[BUG]  [BUGGY]  int  expPos  =  val.indexOf('-',  decPos);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  int  expPos  =  val.indexOf('-',  decPos);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  val.indexOf('-',  decPos);	  int    expPos    =    val.indexOf('-',    dec);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
75	[BUG]  [BUGGY]  int  expPos  =  val.indexOf('-',  dec  +  1);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  int  expPos  =  val.indexOf('-',  dec  +  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  val.indexOf('-',  dec  +  1);	  int    expPos    =    val.indexOf('-',    dec);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
76	[BUG]  [BUGGY]  int  expPos  =  val.lastIndexOf('-',  dec);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  int  expPos  =  val.lastIndexOf('-',  dec);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  val.lastIndexOf('-',  dec);	  int    expPos    =    val.indexOf('-',    dec);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
77	[BUG]  [BUGGY]  String  expPos  =  val.substring(0,  DEC_POP  +  1);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  String  expPos  =  val.substring(0,  DEC_POP  +  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(0,  DEC_POP  +  1);	  String    expPos    =    val.substring(0,    DEC_POP);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
78	[BUG]  [BUGGY]  if(decPos  >  -1  ||  expPos  <  val.length())  {  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  if(decPos  >  -1  ||  expPos  <  val.length())  {  [BUGGY]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	if(decPos  >  -1  ||  expPos  <  val.length())  {	  if(expPos    >    -1    ||    expPos    <    val.length())    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
79	[BUG]  [BUGGY]  Integer  expPos  =  val.indexOf('-',  decPos  +  1);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.indexOf('-',  decPos  +  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.indexOf('-',  decPos  +  1);	  Integer    expPos    =    val.indexOf('-',    decPos);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
80	[BUG]  [BUGGY]  Integer  expPos  =  val.indexOf('-',  DEC_POP);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.indexOf('-',  DEC_POP);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.indexOf('-',  DEC_POP);	  Integer    expPos    =    val.indexOf('-',    decPos);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
81	[BUG]  [BUGGY]  Integer  expPos  =  val.indexOf('-',  expPos);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.indexOf('-',  expPos);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.indexOf('-',  expPos);	  Integer    expPos    =    val.indexOf('-',    decPos);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
82	[BUG]  [BUGGY]  Integer  expPos  =  val.indexOf('.')+  2;  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.indexOf('.')+  2;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.indexOf('.')+  2;	  Integer    expPos    =    val.indexOf('.')+    1;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
83	[BUG]  [BUGGY]  Integer  expPos  =  val.lastIndexOf('.')+  1;  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.lastIndexOf('.')+  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.lastIndexOf('.')+  1;	  Integer    expPos    =    val.indexOf('.')+    1;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
84	[BUG]  [BUGGY]  Integer  expPos  =  val.indexOf('.')/  1;  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.indexOf('.')/  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.indexOf('.')/  1;	  Integer    expPos    =    val.indexOf('.')+    1;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
85	[BUG]  [BUGGY]  Integer  expPos  =  val.substring(expPos  +  1,  val.length());  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.substring(expPos  +  1,  val.length());  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.substring(expPos  +  1,  val.length());	  Integer    expPos    =    val.substring(expPos    +    1);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
86	[BUG]  [BUGGY]  Integer  expPos  =  val.substring(expPos  +  1,  decPos);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.substring(expPos  +  1,  decPos);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.substring(expPos  +  1,  decPos);	  Integer    expPos    =    val.substring(expPos    +    1);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
87	[BUG]  [BUGGY]  Integer  expPos  =  val.substring(expPos  +  1,  val.length()  -  1);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.substring(expPos  +  1,  val.length()  -  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.substring(expPos  +  1,  val.length()  -  1);	  Integer    expPos    =    val.substring(expPos    +    1);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
88	[BUG]  [BUGGY]  String  decPos  =  val.substring(decPos  +  1,  val.length()  -  1);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  String  decPos  =  val.substring(decPos  +  1,  val.length()  -  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  decPos  =  val.substring(decPos  +  1,  val.length()  -  1);	  String    decPos    =    val.substring(decPos    +    1,    val.length());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
89	[BUG]  [BUGGY]  String  decPos  =  val.substring(decPos  +  1,  val.length()  -  2);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  String  decPos  =  val.substring(decPos  +  1,  val.length()  -  2);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  decPos  =  val.substring(decPos  +  1,  val.length()  -  2);	  String    decPos    =    val.substring(decPos    +    1,    val.length());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
90	[BUG]  [BUGGY]  char  decPos  =  val.substring(decPos  +  1,  val.length());  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  char  decPos  =  val.substring(decPos  +  1,  val.length());  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	char  decPos  =  val.substring(decPos  +  1,  val.length());	  String    decPos    =    val.substring(decPos    +    1,    val.length());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
91	[BUG]  [BUGGY]  Integer  expPos  =  val.indexOf('-',  2);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.indexOf('-',  2);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.indexOf('-',  2);	  Integer    expPos    =    val.indexOf('-',    1);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
92	[BUG]  [BUGGY]  Integer  expPos  =  val.indexOf('-',  4);  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.indexOf('-',  4);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.indexOf('-',  4);	  Integer    expPos    =    val.indexOf('-',    1);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
93	[BUG]  [BUGGY]  String  expPos  =  val.substring(0,  val.length()  -  1)+  1;  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  String  expPos  =  val.substring(0,  val.length()  -  1)+  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(0,  val.length()  -  1)+  1;	  String    expPos    =    val.substring(0,    val.length())+    1;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
94	[BUG]  [BUGGY]  String  expPos  =  val.substring(0,  val.length()  +  1)+  1;  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  String  expPos  =  val.substring(0,  val.length()  +  1)+  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(0,  val.length()  +  1)+  1;	  String    expPos    =    val.substring(0,    val.length())+    1;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
95	[BUG]  [BUGGY]  char  expPos  =  val.substring(0,  val.length())+  1;  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  char  expPos  =  val.substring(0,  val.length())+  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	char  expPos  =  val.substring(0,  val.length())+  1;	  String    expPos    =    val.substring(0,    val.length())+    1;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
96	[BUG]  [BUGGY]  char  expPos  =  val.substring(decPos  +  1,  val.charAt(0));  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  char  expPos  =  val.substring(decPos  +  1,  val.charAt(0));  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	char  expPos  =  val.substring(decPos  +  1,  val.charAt(0));	  String    expPos    =    val.substring(decPos    +    1,    val.charAt(0));    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
97	[BUG]  [BUGGY]  String  expPos  =  val.substring(0,  val.charAt(0));  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  String  expPos  =  val.substring(0,  val.charAt(0));  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(0,  val.charAt(0));	  String    expPos    =    val.substring(decPos    +    1,    val.charAt(0));    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
98	[BUG]  [BUGGY]  int  expPos  =  decPos  +  1;  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  int  expPos  =  decPos  +  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  decPos  +  1;	  int    expPos    =    mant.length();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
99	[BUG]  [BUGGY]  char  expPos  =  mant.length();  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  char  expPos  =  mant.length();  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	char  expPos  =  mant.length();	  int    expPos    =    mant.length();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
100	[BUG]  [BUGGY]  int  expPos  =  decPos;  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  int  expPos  =  decPos;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  decPos;	  int    expPos    =    mant.length();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
101	[BUG]  [BUGGY]  Double  expPos  =  val.substring(0,  decPos);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Double  expPos  =  val.substring(0,  decPos);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Double  expPos  =  val.substring(0,  decPos);	  Double    expPos    =    val.substring(decPos    +    1,    decPos);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
102	[BUG]  [BUGGY]  Integer  expPos  =  val.indexOf('-')+  2;  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.indexOf('-')+  2;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.indexOf('-')+  2;	  Integer    expPos    =    val.indexOf('-')+    1;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
103	[BUG]  [BUGGY]  Integer  expPos  =  val.indexOf('-')/  1;  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.indexOf('-')/  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.indexOf('-')/  1;	  Integer    expPos    =    val.indexOf('-')+    1;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
104	[BUG]  [BUGGY]  Integer  expPos  =  val.lastIndexOf('-')+  1;  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.lastIndexOf('-')+  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.lastIndexOf('-')+  1;	  Integer    expPos    =    val.indexOf('-')+    1;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
105	[BUG]  [BUGGY]  String  expPos  =  val.substring(1,  decPos  +  1);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  String  expPos  =  val.substring(1,  decPos  +  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(1,  decPos  +  1);	  String    expPos    =    val.substring(1,    decPos);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
106	[BUG]  [BUGGY]  char  expPos  =  val.substring(1,  decPos);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  char  expPos  =  val.substring(1,  decPos);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	char  expPos  =  val.substring(1,  decPos);	  String    expPos    =    val.substring(1,    decPos);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
107	[BUG]  [BUGGY]  String  expPos  =  val.substring(1,  DEC_POP);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  String  expPos  =  val.substring(1,  DEC_POP);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(1,  DEC_POP);	  String    expPos    =    val.substring(1,    decPos);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
108	[BUG]  [BUGGY]  int  expPos  =  val.lastIndexOf('.',  DEC_POP  +  1);  [CE]  orphaned  case  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  int  expPos  =  val.lastIndexOf('.',  DEC_POP  +  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  val.lastIndexOf('.',  DEC_POP  +  1);	  int    expPos    =    val.lastIndexOf('.',    DEC_POP);    	non-compiled	[CE]  orphaned  case	46	None	replace
109	[BUG]  [BUGGY]  int  expPos  =  val.indexOf('.',  DEC_POP);  [CE]  orphaned  case  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  int  expPos  =  val.indexOf('.',  DEC_POP);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  val.indexOf('.',  DEC_POP);	  int    expPos    =    val.lastIndexOf('.',    DEC_POP);    	non-compiled	[CE]  orphaned  case	46	None	replace
110	[BUG]  [BUGGY]  char  expPos  =  dec.length()  -  1;  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  char  expPos  =  dec.length()  -  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	char  expPos  =  dec.length()  -  1;	  int    expPos    =    dec.length()    -    1;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
111	[BUG]  [BUGGY]  double  expPos  =  dec.length()  -  1;  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  double  expPos  =  dec.length()  -  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	double  expPos  =  dec.length()  -  1;	  int    expPos    =    dec.length()    -    1;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
112	[BUG]  [BUGGY]  int  expPos  =  val.indexOf('-',  1);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  int  expPos  =  val.indexOf('-',  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  val.indexOf('-',  1);	  int    expPos    =    val.indexOf('-',    dec);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
113	[BUG]  [BUGGY]  int  expPos  =  val.indexOf('-',  DEC_POP);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  int  expPos  =  val.indexOf('-',  DEC_POP);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  val.indexOf('-',  DEC_POP);	  int    expPos    =    val.indexOf('-',    dec);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
114	[BUG]  [BUGGY]  String  expPos  =  val.substring(decPos  +  1,  prefix);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  String  expPos  =  val.substring(decPos  +  1,  prefix);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(decPos  +  1,  prefix);	  String    expPos    =    val.substring(decPos    +    1,    decPos);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
115	[BUG]  [BUGGY]  if(expPos  >  1  &&  expPos  <  val.length()  -  1)  {  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  if(expPos  >  1  &&  expPos  <  val.length()  -  1)  {  [BUGGY]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	if(expPos  >  1  &&  expPos  <  val.length()  -  1)  {	  if(expPos    >    -1    ||    expPos    <    val.length()    -    1)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
116	[BUG]  [BUGGY]  String  expPos  =  val.substring(decPos  +  1,  val.length()  -  1;  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  String  expPos  =  val.substring(decPos  +  1,  val.length()  -  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(decPos  +  1,  val.length()  -  1;	  String    expPos    =    val.substring(decPos    +    1,    val.length();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
117	[BUG]  [BUGGY]  String  expPos  =  val.substring(1,  val.length());  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  String  expPos  =  val.substring(1,  val.length());  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(1,  val.length());	  String    expPos    =    val.substring(1,    decPos);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
118	[BUG]  [BUGGY]  String  expPos  =  val.substring(1,  val.length()  -  1);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  String  expPos  =  val.substring(1,  val.length()  -  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(1,  val.length()  -  1);	  String    expPos    =    val.substring(0,    val.length();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
119	[BUG]  [BUGGY]  String  expPos  =  dec.substring(decPos  +  1,  val.length());  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  String  expPos  =  dec.substring(decPos  +  1,  val.length());  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  dec.substring(decPos  +  1,  val.length());	  String    expPos    =    mant.substring(decPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
120	[BUG]  [BUGGY]  Integer  expPos  =  val.lastIndexOf('-',  expPos);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.lastIndexOf('-',  expPos);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.lastIndexOf('-',  expPos);	  Integer    expPos    =    val.lastIndexOf('-');    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
121	[BUG]  [BUGGY]  Integer  expPos  =  val.substring(decPos  +  1,  val.length()  -  1);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.substring(decPos  +  1,  val.length()  -  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.substring(decPos  +  1,  val.length()  -  1);	  Integer    expPos    =    val.substring(decPos    +    1);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
122	[BUG]  [BUGGY]  Integer  expPos  =  val.substring(decPos  +  1,  val.length());  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.substring(decPos  +  1,  val.length());  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.substring(decPos  +  1,  val.length());	  Integer    expPos    =    val.substring(decPos    +    1);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
123	[BUG]  [BUGGY]  Integer  expPos  =  val.substring(0,  prefix);  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.substring(0,  prefix);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.substring(0,  prefix);	  Integer    expPos    =    val.substring(0,    DEC_POP);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
124	[BUG]  [BUGGY]  if(decPos  >  -1  &&  expPos  <  decPos)  {  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  if(decPos  >  -1  &&  expPos  <  decPos)  {  [BUGGY]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	if(decPos  >  -1  &&  expPos  <  decPos)  {	  if(expPos    >    -1    &&    expPos    <    decPos)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
125	[BUG]  [BUGGY]  Integer  expPos  =  val.indexOf('-',  decPos)+  1;  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.indexOf('-',  decPos)+  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.indexOf('-',  decPos)+  1;	  Integer    expPos    =    val.indexOf('-')+    1;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
126	[BUG]  [BUGGY]  Integer  expPos  =  val.indexOf('.',  decPos)+  1;  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.indexOf('.',  decPos)+  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.indexOf('.',  decPos)+  1;	  Integer    expPos    =    val.indexOf('.')+    1;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
127	[BUG]  [BUGGY]  double  expPos  =  val.substring(decPos  +  1,  val.length());  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  double  expPos  =  val.substring(decPos  +  1,  val.length());  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	double  expPos  =  val.substring(decPos  +  1,  val.length());	  Double    expPos    =    val.substring(decPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
128	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.');  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.');  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  str.lastIndexOf('.');	  int    expPos    =    str.length();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
129	[BUG]  [BUGGY]  String  expPos  =  val.substring(0,  DEC_POP).trim();  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  String  expPos  =  val.substring(0,  DEC_POP).trim();  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(0,  DEC_POP).trim();	  String    expPos    =    val.substring(0,    DEC_POP);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
130	[BUG]  [BUGGY]  Double  expPos  =  val.substring(decPos  +  1,  prefix);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Double  expPos  =  val.substring(decPos  +  1,  prefix);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Double  expPos  =  val.substring(decPos  +  1,  prefix);	  Double    expPos    =    val.substring(decPos    +    1,    decPos);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
131	[BUG]  [BUGGY]  Double  expPos  =  val.substring(0,  decPos  +  1,  val.length()  -  1);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Double  expPos  =  val.substring(0,  decPos  +  1,  val.length()  -  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Double  expPos  =  val.substring(0,  decPos  +  1,  val.length()  -  1);	  Double    expPos    =    val.substring(0,    decPos    +    1);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
132	[BUG]  [BUGGY]  int  expPos  =  decPos  +.length();  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  int  expPos  =  decPos  +.length();  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  decPos  +.length();	  int    expPos    =    mant.length();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
133	[BUG]  [BUGGY]  int  expPos  =  val.substring(decPos  +  1,  val.charAt(0));  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  int  expPos  =  val.substring(decPos  +  1,  val.charAt(0));  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  val.substring(decPos  +  1,  val.charAt(0));	  String    expPos    =    val.substring(decPos    +    1,    val.charAt(0));    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
134	[BUG]  [BUGGY]  Integer  expPos  =  val.indexOf('.',  expPos);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.indexOf('.',  expPos);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.indexOf('.',  expPos);	  Integer    expPos    =    val.indexOf('.',    decPos);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
135	[BUG]  [BUGGY]  if(expPos  >  1  &&  expPos  <  val.length())  {  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  if(expPos  >  1  &&  expPos  <  val.length())  {  [BUGGY]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	if(expPos  >  1  &&  expPos  <  val.length())  {	  if(expPos    >    -1    ||    expPos    <    val.length())    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
136	[BUG]  [BUGGY]  int  decPos  =  val.substring(decPos  +  1,  val.length());  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  int  decPos  =  val.substring(decPos  +  1,  val.length());  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  decPos  =  val.substring(decPos  +  1,  val.length());	  String    decPos    =    val.substring(decPos    +    1,    val.length());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
137	[BUG]  [BUGGY]  int  expPos  =  val.indexOf('-',  DEC);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  int  expPos  =  val.indexOf('-',  DEC);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  val.indexOf('-',  DEC);	  int    expPos    =    val.indexOf('-',    dec);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
138	[BUG]  [BUGGY]  Integer  expPos  =  val.indexOf(decPos);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.indexOf(decPos);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.indexOf(decPos);	  Integer    expPos    =    val.substring(expPos);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
139	[BUG]  [BUGGY]  Double  expPos  =  val.substring(decPos  +  1,  val.charAt(0));  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Double  expPos  =  val.substring(decPos  +  1,  val.charAt(0));  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Double  expPos  =  val.substring(decPos  +  1,  val.charAt(0));	  Double    expPos    =    val.substring(decPos    +    1,    val.length());    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
140	[BUG]  [BUGGY]  Integer  expPos  =  val.lastIndexOf('-',  DEC_POP);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.lastIndexOf('-',  DEC_POP);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.lastIndexOf('-',  DEC_POP);	  Integer    expPos    =    val.lastIndexOf('-');    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
141	[BUG]  [BUGGY]  Integer  expPos  =  val.indexOf('-',  DEC);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.indexOf('-',  DEC);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.indexOf('-',  DEC);	  Integer    expPos    =    val.indexOf('-',    dec);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
142	[BUG]  [BUGGY]  Integer  expPos  =  val.indexOf('-',  dec)-  1;  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.indexOf('-',  dec)-  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.indexOf('-',  dec)-  1;	  Integer    expPos    =    val.indexOf('-',    dec);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
143	[BUG]  [BUGGY]  Double  expPos  =  val.substring(0,  decPos  +  1,  expPos);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Double  expPos  =  val.substring(0,  decPos  +  1,  expPos);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Double  expPos  =  val.substring(0,  decPos  +  1,  expPos);	  Double    expPos    =    val.substring(0,    decPos    +    1);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
144	[BUG]  [BUGGY]  Integer  expPos  =  val.substring(1,  decPos);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.substring(1,  decPos);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.substring(1,  decPos);	  Integer    expPos    =    val.substring(0,    decPos);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
145	[BUG]  [BUGGY]  String  expPos  =  val.substring(0,  decPos)+  1;  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  String  expPos  =  val.substring(0,  decPos)+  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	String  expPos  =  val.substring(0,  decPos)+  1;	  String    expPos    =    val.substring(0,    val.length())+    1;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
146	[BUG]  [BUGGY]  Integer  expPos  =  val.indexOf('.',  dec  +  1);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.indexOf('.',  dec  +  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.indexOf('.',  dec  +  1);	  Integer    expPos    =    val.indexOf('.',    dec);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
147	[BUG]  [BUGGY]  int  expPos  =  decPos  +  mant.length();  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  int  expPos  =  decPos  +  mant.length();  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  decPos  +  mant.length();	  int    expPos    =    mant.length();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
148	[BUG]  [BUGGY]  char  expPos  =  val.charAt(0);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  char  expPos  =  val.charAt(0);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	char  expPos  =  val.charAt(0);	  char    expPos    =    val.length();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
149	[BUG]  [BUGGY]  char  expPos  =  val.substring(0,  DEC_POP);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  char  expPos  =  val.substring(0,  DEC_POP);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	char  expPos  =  val.substring(0,  DEC_POP);	  String    expPos    =    val.substring(0,    DEC_POP);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
150	[BUG]  [BUGGY]  double  expPos  =  val.substring(decPos  +  1,  expPos);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  double  expPos  =  val.substring(decPos  +  1,  expPos);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	double  expPos  =  val.substring(decPos  +  1,  expPos);	  Double    expPos    =    val.substring(decPos    +    1,    decPos);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
151	[BUG]  [BUGGY]  Double  expPos  =  mant.substring(decPos  +  1,  val.length()  -  1);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Double  expPos  =  mant.substring(decPos  +  1,  val.length()  -  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Double  expPos  =  mant.substring(decPos  +  1,  val.length()  -  1);	  Double    expPos    =    val.substring(decPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
152	[BUG]  [BUGGY]  int  expPos  =  val.indexOf('-')+  1;  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  int  expPos  =  val.indexOf('-')+  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  val.indexOf('-')+  1;	  Integer    expPos    =    val.indexOf('-')+    1;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
153	[BUG]  [BUGGY]  char  expPos  =  val.substring(expPos  +  1,  val.length());  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  char  expPos  =  val.substring(expPos  +  1,  val.length());  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	char  expPos  =  val.substring(expPos  +  1,  val.length());	  String    expPos    =    val.substring(expPos    +    1,    val.length());    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
154	[BUG]  [BUGGY]  int  expPos  =  val.substring(decPos  +  1,  val.length();  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  int  expPos  =  val.substring(decPos  +  1,  val.length();  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  val.substring(decPos  +  1,  val.length();	  String    expPos    =    val.substring(decPos    +    1,    val.length();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
155	[BUG]  [BUGGY]  Integer  expPos  =  val.substring(decPos  +  1,  decPos);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.substring(decPos  +  1,  decPos);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.substring(decPos  +  1,  decPos);	  Integer    expPos    =    val.substring(decPos    +    1);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
156	[BUG]  [BUGGY]  Integer  expPos  =  val.indexOf('n',  DEC_POP);  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.indexOf('n',  DEC_POP);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.indexOf('n',  DEC_POP);	  Integer    expPos    =    val.substring(0,    DEC_POP);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
157	[BUG]  [BUGGY]  int  expPos  =  val.substring(decPos  +  1,  expPos);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  int  expPos  =  val.substring(decPos  +  1,  expPos);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  val.substring(decPos  +  1,  expPos);	  String    expPos    =    val.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
158	[BUG]  [BUGGY]  if(expPos  >  -1  ||  expPos  >  -1  &&  val.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  if(expPos  >  -1  ||  expPos  >  -1  &&  val.length()  >  0)  {  [BUGGY]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	if(expPos  >  -1  ||  expPos  >  -1  &&  val.length()  >  0)  {	  if(expPos    >    -1    ||    expPos    <    val.length())    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
159	[BUG]  [BUGGY]  char  expPos  =  val.substring(decPos  +  1,  val.length());  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  char  expPos  =  val.substring(decPos  +  1,  val.length());  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	char  expPos  =  val.substring(decPos  +  1,  val.length());	  String    expPos    =    val.substring(decPos    +    1,    val.length());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
160	[BUG]  [BUGGY]  int  expPos  =  1  +  val.length();  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  int  expPos  =  1  +  val.length();  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  1  +  val.length();	  int    expPos    =    decPos    +    val.length();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
161	[BUG]  [BUGGY]  Integer  expPos  =  val.substring(expPos  +  1,  expPos);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Integer  expPos  =  val.substring(expPos  +  1,  expPos);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Integer  expPos  =  val.substring(expPos  +  1,  expPos);	  Integer    expPos    =    val.substring(expPos    +    1);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
162	[BUG]  [BUGGY]  if(decPos  >  -1  &&  expPos  >=  val.length()  -  1)  {  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  if(decPos  >  -1  &&  expPos  >=  val.length()  -  1)  {  [BUGGY]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	if(decPos  >  -1  &&  expPos  >=  val.length()  -  1)  {	  if(expPos    >    -1    &&    expPos    >=    val.length()    -    1)    {    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
163	[BUG]  [BUGGY]  int  expPos  =  val.lastIndexOf('.',  dec  +  1);  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  int  expPos  =  val.lastIndexOf('.',  dec  +  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  val.lastIndexOf('.',  dec  +  1);	  int    expPos    =    val.lastIndexOf('.',    dec);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
164	[BUG]  [BUGGY]  Char  expPos  =  dec.charAt(decPos);  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Char  expPos  =  dec.charAt(decPos);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Char  expPos  =  dec.charAt(decPos);	  char    expPos    =    dec.length();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
165	[BUG]  [BUGGY]  Char  expPos  =  dec.charAt(decPos  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Char  expPos  =  dec.charAt(decPos  -  1);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Char  expPos  =  dec.charAt(decPos  -  1);	  char    expPos    =    dec.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	36	None	replace
166	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  decPos  -  1)  {  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  if(expPos  >  -1  &&  expPos  <  decPos  -  1)  {  [BUGGY]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	if(expPos  >  -1  &&  expPos  <  decPos  -  1)  {	  if(expPos    >    -1    &&    expPos    <    decPos)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
167	[BUG]  [BUGGY]  int  expPos  =  val.lastIndexOf('.')-  1;  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  int  expPos  =  val.lastIndexOf('.')-  1;  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  val.lastIndexOf('.')-  1;	  int    expPos    =    val.length()    -    1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
168	[BUG]  [BUGGY]  int  expPos  =  val.substring(decPos  +  1,  decPos);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  int  expPos  =  val.substring(decPos  +  1,  decPos);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	int  expPos  =  val.substring(decPos  +  1,  decPos);	  String    expPos    =    val.substring(decPos    +    1,    decPos);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
169	[BUG]  [BUGGY]  Double  expPos  =  val.substring(decPos  +  1,  expPos,  expPos);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {      [BUGGY]  Double  expPos  =  val.substring(decPos  +  1,  expPos,  expPos);  [BUGGY]      if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	182	182	1	replace	Double  expPos  =  val.substring(decPos  +  1,  expPos,  expPos);	  Double    expPos    =    val.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
