bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(allZeros  ==  false)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric);  }  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  if(allZeros  ==  false)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric);  }  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	if(allZeros  ==  false)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric);  }	  if(allZeros)    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    return    createBigInteger(numeric);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
2	[BUG]  [BUGGY]  if(allZeros)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  return  createLong(numeric);  }  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  if(allZeros)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  return  createLong(numeric);  }  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	if(allZeros)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  return  createLong(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    isDigits(numeric.substring(2)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
3	[BUG]  [BUGGY]  if(!allZeros)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  return  createLong(numeric);  }  [CE]  illegal  start  of  expression  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  if(!allZeros)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  return  createLong(numeric);  }  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	if(!allZeros)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  return  createLong(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    isDigits(numeric.substring(2)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
4	[BUG]  [BUGGY]  if(allZeros)  {  if(exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createBigInteger(numeric);  }  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  if(allZeros)  {  if(exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createBigInteger(numeric);  }  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	if(allZeros)  {  if(exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createBigInteger(numeric);  }	  if(allZeros)    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))||    isDigits(numeric.substring(1)))    {    return    createBigInteger(numeric);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
5	[BUG]  [BUGGY]  switch(val.charAt(0))  {  [CE]  case,  default,  or  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  switch(val.charAt(0))  {  [BUGGY]      case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	switch(val.charAt(0))  {	  switch(allZeros.charAt(0))    {    	non-compiled	[CE]  case,  default,  or  	3	None	replace
6	[BUG]  [BUGGY]  if(allZeros  ==  false)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createBigInteger(numeric);  }  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  if(allZeros  ==  false)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createBigInteger(numeric);  }  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	if(allZeros  ==  false)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createBigInteger(numeric);  }	  if(!allZeros)    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(1)))    {    return    createBigInteger(numeric);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
7	[BUG]  [BUGGY]  if(allZeros)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {  return  createLong(numeric);  }  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  if(allZeros)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {  return  createLong(numeric);  }  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	if(allZeros)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {  return  createLong(numeric);  }	  if(allZeros)    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))||    isDigits(numeric.substring(1)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
8	[BUG]  [BUGGY]  case  'l'  :  case  'L'  :  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  [CE]  orphaned  case  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  case  'l'  :  case  'L'  :  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  [BUGGY]      case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	case  'l'  :  case  'L'  :  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':	  case    'e':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    	non-compiled	[CE]  orphaned  case	26	None	replace
9	[BUG]  [BUGGY]  case  'l'  :  case  'L'  :  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  [CE]  orphaned  case  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  case  'l'  :  case  'L'  :  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  [BUGGY]      case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	case  'l'  :  case  'L'  :  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':	  case    'e':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    	non-compiled	[CE]  orphaned  case	26	None	replace
10	[BUG]  [BUGGY]  case  'l'  :  case  'L'  :  case  'e':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  [CE]  orphaned  case  [FE]                              StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  case  'l'  :  case  'L'  :  case  'e':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  [BUGGY]      case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	case  'l'  :  case  'L'  :  case  'e':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':	  case    'e':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    	non-compiled	[CE]  orphaned  case	26	None	replace
11	[BUG]  [BUGGY]  case  'l'  :  case  'L'  :  case  'E':  case  'E':  case  'E':  case  'E':  [CE]  orphaned  case  [FE]                                StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  case  'l'  :  case  'L'  :  case  'E':  case  'E':  case  'E':  case  'E':  [BUGGY]      case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	case  'l'  :  case  'L'  :  case  'E':  case  'E':  case  'E':  case  'E':	  case    'e':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    	non-compiled	[CE]  orphaned  case	26	None	replace
12	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(all)&&  isAllZeros(mant);  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  boolean  allZeros  =  isAllZeros(all)&&  isAllZeros(mant);  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	boolean  allZeros  =  isAllZeros(all)&&  isAllZeros(mant);	  boolean    allZeros    =    isAllZeros(all)&&    isAllZeros(numeric);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
13	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(all)&&  isAllZeros(null);  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  boolean  allZeros  =  isAllZeros(all)&&  isAllZeros(null);  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	boolean  allZeros  =  isAllZeros(all)&&  isAllZeros(null);	  boolean    allZeros    =    isAllZeros(all)&&    isAllZeros(allZeros);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
14	[BUG]  [BUGGY]  case  'e':  case  'E':  case  'E':  case  'E':  case  'E':  [CE]  orphaned  case  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  case  'e':  case  'E':  case  'E':  case  'E':  case  'E':  [BUGGY]      case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	case  'e':  case  'E':  case  'E':  case  'E':  case  'E':	  case    'e':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E'    break;    	non-compiled	[CE]  orphaned  case	32	None	replace
15	[BUG]  [BUGGY]  case  'e':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  [CE]  orphaned  case  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  case  'e':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  [BUGGY]      case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	case  'e':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':	  case    'e':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E'    break;    	non-compiled	[CE]  orphaned  case	32	None	replace
16	[BUG]  [BUGGY]  case  'e':  case  'E':  case  'E':  case  'E':  [CE]  orphaned  case  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  case  'e':  case  'E':  case  'E':  case  'E':  [BUGGY]      case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	case  'e':  case  'E':  case  'E':  case  'E':	  case    'e':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E'    break;    	non-compiled	[CE]  orphaned  case	32	None	replace
17	[BUG]  [BUGGY]  case  'e':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  [CE]  orphaned  case  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  case  'e':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  [BUGGY]      case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	case  'e':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':	  case    'e':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E'    break;    	non-compiled	[CE]  orphaned  case	32	None	replace
18	[BUG]  [BUGGY]  switch(numeric.length()  -  1)  {  [CE]  case,  default,  or  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  switch(numeric.length()  -  1)  {  [BUGGY]      case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	switch(numeric.length()  -  1)  {	  switch(numeric.length())    {    	non-compiled	[CE]  case,  default,  or  	4	None	replace
19	[BUG]  [BUGGY]  switch(val.length())  {  [CE]  case,  default,  or  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  switch(val.length())  {  [BUGGY]      case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	switch(val.length())  {	  switch(numeric.length())    {    	non-compiled	[CE]  case,  default,  or  	4	None	replace
20	[BUG]  [BUGGY]  if(allZeros!=  false)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric);  }  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  if(allZeros!=  false)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric);  }  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	if(allZeros!=  false)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric);  }	  if(!allZeros)    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    return    createBigInteger(numeric);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
21	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(exp);  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  boolean  allZeros  =  isAllZeros(exp);  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	boolean  allZeros  =  isAllZeros(exp);	  boolean    allZeros    =    isAllZeros(mant);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
22	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(numeric);  [CE]  illegal  start  of  expression  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  boolean  allZeros  =  isAllZeros(numeric);  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	boolean  allZeros  =  isAllZeros(numeric);	  boolean    allZeros    =    isAllZeros(mant);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
23	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(dec);  [CE]  illegal  start  of  expression  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  boolean  allZeros  =  isAllZeros(dec);  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	boolean  allZeros  =  isAllZeros(dec);	  boolean    allZeros    =    isAllZeros(mant);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
24	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(lastChar)&&  isAllZeros(exp);  break;  [CE]  illegal  start  of  expression  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  boolean  allZeros  =  isAllZeros(lastChar)&&  isAllZeros(exp);  break;  [BUGGY]      case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	boolean  allZeros  =  isAllZeros(lastChar)&&  isAllZeros(exp);  break;	  boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(exp);    break;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
25	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(dec)&&  isAllZeros(exp);  break;  [CE]  illegal  start  of  expression  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  boolean  allZeros  =  isAllZeros(dec)&&  isAllZeros(exp);  break;  [BUGGY]      case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	boolean  allZeros  =  isAllZeros(dec)&&  isAllZeros(exp);  break;	  boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(exp);    break;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
26	[BUG]  [BUGGY]  if(allZeros  ==  false)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createLong(numeric);  }  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  if(allZeros  ==  false)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createLong(numeric);  }  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	if(allZeros  ==  false)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createLong(numeric);  }	  if(!allZeros)    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
27	[BUG]  [BUGGY]  if(allZeros  ==  false)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createLong(numeric);  }  [CE]  illegal  start  of  expression  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  if(allZeros  ==  false)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createLong(numeric);  }  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	if(allZeros  ==  false)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createLong(numeric);  }	  if(!allZeros)    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(1)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
28	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(all)&&  isAllZeros(exp);  break;  [CE]  illegal  start  of  expression  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  boolean  allZeros  =  isAllZeros(all)&&  isAllZeros(exp);  break;  [BUGGY]      case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	boolean  allZeros  =  isAllZeros(all)&&  isAllZeros(exp);  break;	  boolean    allZeros    =    isAllZeros(allZeros)&&    isAllZeros(exp);    break;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
29	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(allZeros)&&  isAllZeros(mant);  break;  [CE]  illegal  start  of  expression  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  boolean  allZeros  =  isAllZeros(allZeros)&&  isAllZeros(mant);  break;  [BUGGY]      case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	boolean  allZeros  =  isAllZeros(allZeros)&&  isAllZeros(mant);  break;	  boolean    allZeros    =    isAllZeros(allZeros)&&    isAllZeros(exp);    break;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
30	[BUG]  [BUGGY]  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createLong(nu  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createLong(nu  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	&&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createLong(nu	  if(!Character.isDigit(lastChar))    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    return    createLong(nu    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
31	[BUG]  [BUGGY]  &&(numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(1))  ||  isDigits(numeric.charAt(2)))  {  return  createLong(nu  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  &&(numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(1))  ||  isDigits(numeric.charAt(2)))  {  return  createLong(nu  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	&&(numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(1))  ||  isDigits(numeric.charAt(2)))  {  return  createLong(nu	  if(!Character.isDigit(lastChar))    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    return    createLong(nu    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
32	[BUG]  [BUGGY]  &&(numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(1))  ||  isDigits(numeric.charAt(2)))  {  return  createLong  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  &&(numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(1))  ||  isDigits(numeric.charAt(2)))  {  return  createLong  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	&&(numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(1))  ||  isDigits(numeric.charAt(2)))  {  return  createLong	  if(!Character.isDigit(lastChar))    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    return    createLong(nu    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
33	[BUG]  [BUGGY]  &&  isDigits(numeric.charAt(0)))  {  return  createLong(numeric  [CE]  illegal  start  of  expression  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  &&  isDigits(numeric.charAt(0)))  {  return  createLong(numeric  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	&&  isDigits(numeric.charAt(0)))  {  return  createLong(numeric	  if(!Character.isDigit(lastChar))    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    return    createLong(nu    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
34	[BUG]  [BUGGY]  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createBigInteger(nu  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createBigInteger(nu  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	&&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createBigInteger(nu	  if(!Character.isDigit(lastChar))    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    return    createBigInteger(nu    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
35	[BUG]  [BUGGY]  &&(numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(1))  ||  isDigits(numeric.charAt(2)))  {  return  createBigInteger(nu  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  &&(numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(1))  ||  isDigits(numeric.charAt(2)))  {  return  createBigInteger(nu  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	&&(numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(1))  ||  isDigits(numeric.charAt(2)))  {  return  createBigInteger(nu	  if(!Character.isDigit(lastChar))    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    return    createBigInteger(nu    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
36	[BUG]  [BUGGY]  &&  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  &&  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	&&  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric	  if(!Character.isDigit(lastChar))    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    return    createBigInteger(nu    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
37	[BUG]  [BUGGY]  ||  isDigits(numeric.substring(1)))  {  return  createBigInteger(numeric  [CE]  illegal  start  of  expression  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  ||  isDigits(numeric.substring(1)))  {  return  createBigInteger(numeric  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	||  isDigits(numeric.substring(1)))  {  return  createBigInteger(numeric	  if(!Character.isDigit(lastChar))    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    return    createBigInteger(nu    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
38	[BUG]  [BUGGY]  switch(numeric.toCharArray(),  allZeros)  {  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  switch(numeric.toCharArray(),  allZeros)  {  [BUGGY]      case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	switch(numeric.toCharArray(),  allZeros)  {	  switch(numeric.toCharArray())    {    	non-compiled	[CE]  	33	None	replace
39	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(dec)&&  isAllZeros(mant);  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  boolean  allZeros  =  isAllZeros(dec)&&  isAllZeros(mant);  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	boolean  allZeros  =  isAllZeros(dec)&&  isAllZeros(mant);	  boolean    allZeros    =    isAllZeros(dec)&&    isAllZeros(exp);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
40	[BUG]  [BUGGY]  ||  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  ||  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	||  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric	  if(!Character.isDigit(lastChar))    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(1)))    {    return    createBigInteger(nu    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
41	[BUG]  [BUGGY]  &&  isDigits(numeric.charAt(0)))  {  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  &&  isDigits(numeric.charAt(0)))  {  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	&&  isDigits(numeric.charAt(0)))  {	  if(!Character.isDigit(lastChar))    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(1)))    {    return    createBigInteger(nu    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
42	[BUG]  [BUGGY]  if(allZeros)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric);  }  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  if(allZeros)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric);  }  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	if(allZeros)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    isDigits(numeric.substring(2)))    {    return    createBigInteger(numeric);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
43	[BUG]  [BUGGY]  if(!allZeros)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric);  }  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  if(!allZeros)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric);  }  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	if(!allZeros)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    isDigits(numeric.substring(2)))    {    return    createBigInteger(numeric);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
44	[BUG]  [BUGGY]  case  'l'  :  case  'L'  :  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  [CE]  orphaned  case  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  case  'l'  :  case  'L'  :  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  [BUGGY]      case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	case  'l'  :  case  'L'  :  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':	  case    'e':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E'    	non-compiled	[CE]  orphaned  case	23	None	replace
45	[BUG]  [BUGGY]  case  'l':  case  'L':  case  'L':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  [CE]  orphaned  case  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  case  'l':  case  'L':  case  'L':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  [BUGGY]      case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	case  'l':  case  'L':  case  'L':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':	  case    'e':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    	non-compiled	[CE]  orphaned  case	26	None	replace
46	[BUG]  [BUGGY]  &&(numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  &&(numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	&&(numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {	  if(!Character.isDigit(lastChar))    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    return    createLong(nu    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
47	[BUG]  [BUGGY]  &&(numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(numeric  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  &&(numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(numeric  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	&&(numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(numeric	  if(!Character.isDigit(lastChar))    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    return    createLong(nu    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
48	[BUG]  [BUGGY]  &&(numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  &&(numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	&&(numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits	  if(!Character.isDigit(lastChar))    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    return    createLong(nu    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
49	[BUG]  [BUGGY]  if(!allZeros)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createBigInteger(nu  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  if(!allZeros)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createBigInteger(nu  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	if(!allZeros)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createBigInteger(nu	  if(!allZeros)    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    return    createBigInteger(numeric);    }    	non-compiled	[CE]  	14	None	replace
50	[BUG]  [BUGGY]  if(!allZeros)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createInt(numeric);  }  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  if(!allZeros)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createInt(numeric);  }  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	if(!allZeros)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createInt(numeric);  }	  if(!allZeros)    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
51	[BUG]  [BUGGY]  if(!allZeros)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {  return  createBigInteger(numeric);  }  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  if(!allZeros)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {  return  createBigInteger(numeric);  }  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	if(!allZeros)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {  return  createBigInteger(numeric);  }	  if(!allZeros)    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(1)))    {    return    createBigInteger(numeric);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
52	[BUG]  [BUGGY]  &&  exp  ==  null  &&  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  &&  exp  ==  null  &&  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	&&  exp  ==  null  &&  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric	  if(!Character.isDigit(lastChar))    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(1)))    {    return    createBigInteger(nu    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
53	[BUG]  [BUGGY]  if(!allZeros)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createInt(numeric);  }  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  if(!allZeros)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createInt(numeric);  }  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	if(!allZeros)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createInt(numeric);  }	  if(allZeros)    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))||    isDigits(numeric.substring(1)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
54	[BUG]  [BUGGY]  if(!allZeros)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {  return  createLong(numeric);  }  [CE]  illegal  start  of  expression  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  if(!allZeros)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {  return  createLong(numeric);  }  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	if(!allZeros)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {  return  createLong(numeric);  }	  if(allZeros)    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))||    isDigits(numeric.substring(1)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
55	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(dec);  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(dec);  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(dec);	  boolean    allZeros    =    isAllZeros(numeric)&&    isAllZeros(mant);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
56	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(numeric);  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(numeric);  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(numeric);	  boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(numeric);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
57	[BUG]  [BUGGY]  case  'l'  :  case  'L'  :  case  'L'  :  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  [CE]  orphaned  case  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  case  'l'  :  case  'L'  :  case  'L'  :  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  [BUGGY]      case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	case  'l'  :  case  'L'  :  case  'L'  :  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':	  case    'e':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    	non-compiled	[CE]  orphaned  case	25	None	replace
58	[BUG]  [BUGGY]  case  'l'  :  case  'L'  :  case  'L'  :  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  [CE]  orphaned  case  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  case  'l'  :  case  'L'  :  case  'L'  :  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  [BUGGY]      case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	case  'l'  :  case  'L'  :  case  'L'  :  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':	  case    'e':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    	non-compiled	[CE]  orphaned  case	25	None	replace
59	[BUG]  [BUGGY]  case  'l'  :  case  'L'  :  case  'L'  :  case  'L'  :  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  [CE]  orphaned  case  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  case  'l'  :  case  'L'  :  case  'L'  :  case  'L'  :  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  [BUGGY]      case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	case  'l'  :  case  'L'  :  case  'L'  :  case  'L'  :  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':	  case    'e':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    	non-compiled	[CE]  orphaned  case	25	None	replace
60	[BUG]  [BUGGY]  if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createBigInteger  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createBigInteger  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createBigInteger	  if(allZeros)    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))||    isDigits(numeric.substring(1)))    {    return    createBigInteger(numeric);    }    	non-compiled	[CE]  	21	None	replace
61	[BUG]  [BUGGY]  if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createBigInteger(n  [CE]  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createBigInteger(n  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createBigInteger(n	  if(allZeros)    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))||    isDigits(numeric.substring(1)))    {    return    createBigInteger(numeric);    }    	non-compiled	[CE]  	21	None	replace
62	[BUG]  [BUGGY]  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	&&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric	  if(!Character.isDigit(lastChar))    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    return    createBigInteger(nu    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
63	[BUG]  [BUGGY]  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  [CE]  orphaned  case  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  [BUGGY]      case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :	  case    'e':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    	non-compiled	[CE]  orphaned  case	24	None	replace
64	[BUG]  [BUGGY]  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  [CE]  orphaned  case  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  [BUGGY]      case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :	  case    'e':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    	non-compiled	[CE]  orphaned  case	24	None	replace
65	[BUG]  [BUGGY]  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  [CE]  orphaned  case  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  [BUGGY]      case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'  :  case  'l'	  case    'e':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    	non-compiled	[CE]  orphaned  case	24	None	replace
66	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(all);  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(all);  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(all);	  boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(allZeros);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
67	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(all)&&  isAllZeros(all);  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  boolean  allZeros  =  isAllZeros(all)&&  isAllZeros(all);  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	boolean  allZeros  =  isAllZeros(all)&&  isAllZeros(all);	  boolean    allZeros    =    isAllZeros(all)&&    isAllZeros(allZeros);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
68	[BUG]  [BUGGY]  if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createLong  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createLong  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createLong	  if(allZeros)    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  	5	None	replace
69	[BUG]  [BUGGY]  if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createInt  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createInt  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createInt	  if(allZeros)    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  	5	None	replace
70	[BUG]  [BUGGY]  case  'e':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  [CE]  orphaned  case  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  case  'e':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  [BUGGY]      case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	case  'e':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':	  case    'e':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E'    break;    	non-compiled	[CE]  orphaned  case	32	None	replace
71	[BUG]  [BUGGY]  &&(numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createBigInteger(numeric);  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  &&(numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createBigInteger(numeric);  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	&&(numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createBigInteger(numeric);	  if(!Character.isDigit(lastChar))    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(1)))    {    return    createBigInteger(nu    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
72	[BUG]  [BUGGY]  &&  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric);  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  &&  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric);  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	&&  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric);	  if(!Character.isDigit(lastChar))    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(1)))    {    return    createBigInteger(nu    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
73	[BUG]  [BUGGY]  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  return  createBigInteger(numeric  [CE]  illegal  start  of  expression  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  return  createBigInteger(numeric  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	&&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  return  createBigInteger(numeric	  if(!Character.isDigit(lastChar))    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(1)))    {    return    createBigInteger(nu    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
74	[BUG]  [BUGGY]  if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  return  createBigInteger(nu  [CE]  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  return  createBigInteger(nu  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  return  createBigInteger(nu	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    isDigits(numeric.substring(2)))    {    return    createBigInteger(numeric);    }    	non-compiled	[CE]  	29	None	replace
75	[BUG]  [BUGGY]  if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createLong  [CE]  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createLong  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createLong	  if(allZeros)    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))||    isDigits(numeric.substring(1)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  	19	None	replace
76	[BUG]  [BUGGY]  if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createLong(nu  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createLong(nu  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createLong(nu	  if(allZeros)    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))||    isDigits(numeric.substring(1)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  	19	None	replace
77	[BUG]  [BUGGY]  if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createInt  [CE]  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createInt  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createInt	  if(allZeros)    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))||    isDigits(numeric.substring(1)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  	19	None	replace
78	[BUG]  [BUGGY]  case  'l'  :  case  'L'  :  case  'e':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  [CE]  orphaned  case  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  case  'l'  :  case  'L'  :  case  'e':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  [BUGGY]      case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	case  'l'  :  case  'L'  :  case  'e':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':	  case    'e':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    	non-compiled	[CE]  orphaned  case	26	None	replace
79	[BUG]  [BUGGY]  switch(numeric.charAt(2))  {  [CE]  case,  default,  or  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  switch(numeric.charAt(2))  {  [BUGGY]      case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	switch(numeric.charAt(2))  {	  switch(allZeros.charAt(0))    {    	non-compiled	[CE]  case,  default,  or  	3	None	replace
80	[BUG]  [BUGGY]  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric);  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric);  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	&&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric);	  if(!Character.isDigit(lastChar))    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    return    createBigInteger(nu    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
81	[BUG]  [BUGGY]  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  return  createLong(numeric  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  return  createLong(numeric  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	&&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  return  createLong(numeric	  if(!Character.isDigit(lastChar))    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    return    createLong(nu    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
82	[BUG]  [BUGGY]  &&(numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(numeric);  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  &&(numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(numeric);  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	&&(numeric.charAt(0)  ==  '-'  ||  Character.isDigit(numeric.charAt(0))))  {  return  createLong(numeric);	  if(!Character.isDigit(lastChar))    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    return    createLong(nu    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
83	[BUG]  [BUGGY]  case  'l'  :  case  'L'  :  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1))  [CE]  orphaned  case  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  case  'l'  :  case  'L'  :  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1))  [BUGGY]      case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	case  'l'  :  case  'L'  :  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1))	  case    'e':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    	non-compiled	[CE]  orphaned  case	25	None	replace
84	[BUG]  [BUGGY]  case  'l'  :  case  'L'  :  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2))  [CE]  orphaned  case  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  case  'l'  :  case  'L'  :  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2))  [BUGGY]      case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	case  'l'  :  case  'L'  :  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2))	  case    'e':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    	non-compiled	[CE]  orphaned  case	25	None	replace
85	[BUG]  [BUGGY]  case  'l'  :  case  'L'  :  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createLong(nu  [CE]  orphaned  case  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  case  'l'  :  case  'L'  :  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createLong(nu  [BUGGY]      case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	case  'l'  :  case  'L'  :  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createLong(nu	  case    'e':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    	non-compiled	[CE]  orphaned  case	25	None	replace
86	[BUG]  [BUGGY]  case  'l'  :  case  'L'  :  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)  [CE]  orphaned  case  [FE]                              StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  case  'l'  :  case  'L'  :  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)  [BUGGY]      case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	case  'l'  :  case  'L'  :  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)	  case    'e':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    	non-compiled	[CE]  orphaned  case	25	None	replace
87	[BUG]  [BUGGY]  if(!allZeros)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(2)))  {  return  createLong(numeric);  }  [CE]  illegal  start  of  expression  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  if(!allZeros)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(2)))  {  return  createLong(numeric);  }  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	if(!allZeros)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(2)))  {  return  createLong(numeric);  }	  if(!allZeros)    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(1)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
88	[BUG]  [BUGGY]  if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  return  createLong  [CE]  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  return  createLong  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  return  createLong	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    isDigits(numeric.substring(2)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  	34	None	replace
89	[BUG]  [BUGGY]  if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createBigInteger(n  [CE]  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createBigInteger(n  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createBigInteger(n	  if(allZeros)    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    return    createBigInteger(numeric);    }    	non-compiled	[CE]  	13	None	replace
90	[BUG]  [BUGGY]  if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createBigInteger  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createBigInteger  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createBigInteger	  if(allZeros)    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    return    createBigInteger(numeric);    }    	non-compiled	[CE]  	13	None	replace
91	[BUG]  [BUGGY]  case  'l'  :  case  'L'  :  case  'L';  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  [CE]  orphaned  case  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  case  'l'  :  case  'L'  :  case  'L';  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  [BUGGY]      case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	case  'l'  :  case  'L'  :  case  'L';  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':	  case    'e':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    	non-compiled	[CE]  orphaned  case	24	None	replace
92	[BUG]  [BUGGY]  case  'l'  :  case  'L'  :  case  'L';  case  'e':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  [CE]  orphaned  case  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  case  'l'  :  case  'L'  :  case  'L';  case  'e':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  [BUGGY]      case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	case  'l'  :  case  'L'  :  case  'L';  case  'e':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':  case  'E':	  case    'e':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    case    'E':    	non-compiled	[CE]  orphaned  case	24	None	replace
93	[BUG]  [BUGGY]  switch(numeric.toString())  {  [CE]  case,  default,  or  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);      [BUGGY]  switch(numeric.toString())  {  [BUGGY]      case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	190	190	1	replace	switch(numeric.toString())  {	  switch(numeric.toCharArray())    {    	non-compiled	[CE]  case,  default,  or  	33	None	replace
