bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  dec  =  val;  [CE]  illegal  start  of  type  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  [BUGGY]  dec  =  val;  [BUGGY]  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	179	179	1	replace	dec  =  val;	dec  =  null;  	non-compiled	[CE]  illegal  start  of  type	21	None	replace
2	[BUG]  [BUGGY]  dec  =  val.substring(decPos  +  1);  [CE]  illegal  start  of  type  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  [BUGGY]  dec  =  val.substring(decPos  +  1);  [BUGGY]  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	179	179	1	replace	dec  =  val.substring(decPos  +  1);	dec  =  null;  	non-compiled	[CE]  illegal  start  of  type	21	None	replace
3	[BUG]  [BUGGY]  dec  =  val.substring(decPos  +  1,  expPos);  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException  [CONTEXT]  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  [BUGGY]  dec  =  val.substring(decPos  +  1,  expPos);  [BUGGY]  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	179	179	1	replace	dec  =  val.substring(decPos  +  1,  expPos);	dec  =  null;  	non-compiled	[CE]  illegal  start  of  type	21	None	replace
4	[BUG]  [BUGGY]  dec  =  new  String(decPos  +  1);  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException  [CONTEXT]  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  [BUGGY]  dec  =  new  String(decPos  +  1);  [BUGGY]  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	179	179	1	replace	dec  =  new  String(decPos  +  1);	dec  =  null;  	non-compiled	[CE]  illegal  start  of  type	21	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException  [CONTEXT]  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  [BUGGY]    [BUGGY]  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	179	179	1	replace	  	dec  =  null;  	non-compiled	[CE]  illegal  start  of  type	21	None	replace
6	[BUG]  [BUGGY]    if(expPos  >  -1)  {  dec  =  val.substring(decPos  +  1);  }  else  {  dec  =  null;  }  [CE]  illegal  start  of  type  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  [BUGGY]    if(expPos  >  -1)  {  dec  =  val.substring(decPos  +  1);  }  else  {  dec  =  null;  }  [BUGGY]  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	179	179	1	replace	    if(expPos  >  -1)  {  dec  =  val.substring(decPos  +  1);  }  else  {  dec  =  null;  }		non-compiled	[CE]  illegal  start  of  type	22	None	add
7	[BUG]  [BUGGY]    if(expPos  >  -1)  {  dec  =  val.substring(decPos  +  1);  }  [CE]  illegal  start  of  type  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  [BUGGY]    if(expPos  >  -1)  {  dec  =  val.substring(decPos  +  1);  }  [BUGGY]  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	179	179	1	replace	    if(expPos  >  -1)  {  dec  =  val.substring(decPos  +  1);  }		non-compiled	[CE]  illegal  start  of  type	22	None	add
8	[BUG]  [BUGGY]    if(expPos  >  -1)  {  dec  =  val.substring(decPos  +  1);  }  else  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException  [CONTEXT]  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  [BUGGY]    if(expPos  >  -1)  {  dec  =  val.substring(decPos  +  1);  }  else  {  throw  new  NumberFormatException( " ");  }  [BUGGY]  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	179	179	1	replace	    if(expPos  >  -1)  {  dec  =  val.substring(decPos  +  1);  }  else  {  throw  new  NumberFormatException( " ");  }		non-compiled	[CE]  illegal  start  of  type	22	None	add
9	[BUG]  [BUGGY]    if(expPos  >  -1)  {  dec  =  val.substring(decPos  +  1);  }  else  {  dec  =  val;  }  [CE]  illegal  start  of  type  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  [BUGGY]    if(expPos  >  -1)  {  dec  =  val.substring(decPos  +  1);  }  else  {  dec  =  val;  }  [BUGGY]  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	179	179	1	replace	    if(expPos  >  -1)  {  dec  =  val.substring(decPos  +  1);  }  else  {  dec  =  val;  }		non-compiled	[CE]  illegal  start  of  type	22	None	add
10	[BUG]  [BUGGY]    if(expPos  >  -1)  {  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  null;  }  [CE]  illegal  start  of  type  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  [BUGGY]    if(expPos  >  -1)  {  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  null;  }  [BUGGY]  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	179	179	1	replace	    if(expPos  >  -1)  {  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  null;  }		non-compiled	[CE]  illegal  start  of  type	22	None	add
11	[BUG]  [BUGGY]    if(expPos  >  -1)  {  dec  =  val.substring(decPos  +  1);  }  else  {  dec  =  val.substring(decPos  +  1);  }  [CE]  illegal  start  of  type  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  [BUGGY]    if(expPos  >  -1)  {  dec  =  val.substring(decPos  +  1);  }  else  {  dec  =  val.substring(decPos  +  1);  }  [BUGGY]  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	179	179	1	replace	    if(expPos  >  -1)  {  dec  =  val.substring(decPos  +  1);  }  else  {  dec  =  val.substring(decPos  +  1);  }		non-compiled	[CE]  illegal  start  of  type	22	None	add
