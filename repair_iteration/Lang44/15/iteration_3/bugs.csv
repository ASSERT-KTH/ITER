bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  decPos  =  expPos  +  val.length()  -  1;  [CE]  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  int  decPos  =  expPos  +  val.length()  -  1;  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	int  decPos  =  expPos  +  val.length()  -  1;	  int    decPos    =    expPos    +    val.length();    	non-compiled	[CE]  	37	None	replace
2	[BUG]  [BUGGY]  int  decPos  =  valPos  +  expPos.length();  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  int  decPos  =  valPos  +  expPos.length();  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	int  decPos  =  valPos  +  expPos.length();	  int    decPos    =    expPos    +    val.length();    	non-compiled	[CE]  	37	None	replace
3	[BUG]  [BUGGY]  int  decPos  =  val.length()  +  expPos;  [CE]  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  int  decPos  =  val.length()  +  expPos;  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	int  decPos  =  val.length()  +  expPos;	  int    decPos    =    expPos    +    val.length();    	non-compiled	[CE]  	37	None	replace
4	[BUG]  [BUGGY]  Dec  val  =  dec.substring(0,  expPos);  [CE]  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  Dec  val  =  dec.substring(0,  expPos);  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	Dec  val  =  dec.substring(0,  expPos);	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    expPos))    ||    isDigits(numeric.charAt(0)))    {    exp    =    val.substring(expPos    +    1,    val.length()    -    1);    }    	non-compiled	[CE]  	27	None	replace
5	[BUG]  [BUGGY]  State  state  =  val.substring(0,  val.length()  -  1);  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  State  state  =  val.substring(0,  val.length()  -  1);  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	State  state  =  val.substring(0,  val.length()  -  1);	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(2)))    {    exp    =    val.substring(0,    val.length()    -    1);    }    	non-compiled	[CE]  	23	None	replace
6	[BUG]  [BUGGY]  exp  = " "  +  val.substring(expPos  +  1,  val.length());  [CE]  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  exp  = " "  +  val.substring(expPos  +  1,  val.length());  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	exp  = " "  +  val.substring(expPos  +  1,  val.length());	  exp    =    val.substring(expPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  	17	None	replace
7	[BUG]  [BUGGY]  Expr  exp  =  val.substring(expPos  +  1,  val.length());  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  Expr  exp  =  val.substring(expPos  +  1,  val.length());  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	Expr  exp  =  val.substring(expPos  +  1,  val.length());	  exp    =    val.substring(expPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  	17	None	replace
8	[BUG]  [BUGGY]  String  val  =  val.substring(0,  expPos.length());  [CE]  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  String  val  =  val.substring(0,  expPos.length());  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  val  =  val.substring(0,  expPos.length());	  String    val    =    val.substring(0,    expPos.length()    -    1);    	non-compiled	[CE]  	7	None	replace
9	[BUG]  [BUGGY]  String  numeric  =  new  String(val.substring(0,  val.length()));  [CE]  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  String  numeric  =  new  String(val.substring(0,  val.length()));  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  numeric  =  new  String(val.substring(0,  val.length()));	  String    numeric    =    val.substring(0,    val.length()    -    3);    	non-compiled	[CE]  	24	None	replace
10	[BUG]  [BUGGY]  String  nomeric  =  val.substring(0,  val.length());  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  String  nomeric  =  val.substring(0,  val.length());  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  nomeric  =  val.substring(0,  val.length());	  String    numeric    =    val.substring(0,    val.length()    -    3);    	non-compiled	[CE]  	24	None	replace
11	[BUG]  [BUGGY]  char  val  =  val.substring(0,  val.length());  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  char  val  =  val.substring(0,  val.length());  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	char  val  =  val.substring(0,  val.length());	  char    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  	6	None	replace
12	[BUG]  [BUGGY]  Character  val  =  val.substring(0,  val.length()  -  1);  [CE]  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  Character  val  =  val.substring(0,  val.length()  -  1);  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	Character  val  =  val.substring(0,  val.length()  -  1);	  char    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  	6	None	replace
13	[BUG]  [BUGGY]  Dec  <  String>  exp  =  val.substring(0,  val.length()  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  Dec  <  String>  exp  =  val.substring(0,  val.length()  -  1);  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	Dec  <  String>  exp  =  val.substring(0,  val.length()  -  1);	  if(!Character.isDigit(lastChar))    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    expPos)))    {    exp    =    val.substring(expPos    +    1,    val.length()    -    1);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
14	[BUG]  [BUGGY]  Dec  <?>  dec  =  val.substring(decPos  +  1,  val.length()  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  Dec  <?>  dec  =  val.substring(decPos  +  1,  val.length()  -  1);  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	Dec  <?>  dec  =  val.substring(decPos  +  1,  val.length()  -  1);	  if(!Character.isDigit(lastChar))    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    expPos)))    {    exp    =    val.substring(expPos    +    1,    val.length()    -    1);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
15	[BUG]  [BUGGY]  Dec  <?>  dec  =  val.substring(0,  decPos);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  Dec  <?>  dec  =  val.substring(0,  decPos);  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	Dec  <?>  dec  =  val.substring(0,  decPos);	  if(!Character.isDigit(lastChar))    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    expPos)))    {    exp    =    val.substring(expPos    +    1,    val.length()    -    1);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
16	[BUG]  [BUGGY]  State  state  =  val.getCurrentState();  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  State  state  =  val.getCurrentState();  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	State  state  =  val.getCurrentState();	  State    state    =    val.getState();    	non-compiled	[CE]  	11	None	replace
17	[BUG]  [BUGGY]  State  state  =  lastChar.getState();  [CE]  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  State  state  =  lastChar.getState();  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	State  state  =  lastChar.getState();	  State    state    =    val.getState();    	non-compiled	[CE]  	11	None	replace
18	[BUG]  [BUGGY]  State  state  =  val.getLastChild();  [CE]  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  State  state  =  val.getLastChild();  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	State  state  =  val.getLastChild();	  State    state    =    val.getState();    	non-compiled	[CE]  	11	None	replace
19	[BUG]  [BUGGY]  if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(val.substring(0,  expPos)))  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(val.substring(0,  expPos)))  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(val.substring(0,  expPos)))  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    expPos)))    {    exp    =    val.substring(expPos    +    1,    val.length());    }    	non-compiled	[CE]  	34	None	replace
20	[BUG]  [BUGGY]  if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(val.substring(0,  expPos)))  {  exp  =  val.substring(expPos  +  1,  val.length());  }  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(val.substring(0,  expPos)))  {  exp  =  val.substring(expPos  +  1,  val.length());  }  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(val.substring(0,  expPos)))  {  exp  =  val.substring(expPos  +  1,  val.length());  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    expPos)))    {    exp    =    val.substring(expPos    +    1,    val.length());    }    	non-compiled	[CE]  	34	None	replace
21	[BUG]  [BUGGY]  String  numeric  =  val.substring(1,  val.length());  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  String  numeric  =  val.substring(1,  val.length());  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  numeric  =  val.substring(1,  val.length());	  Numeric    mant    =    val.substring(1,    val.length()    -    1);    	non-compiled	[CE]  	30	None	replace
22	[BUG]  [BUGGY]  Numeric  mant  =  val.substring(0,  val.length()  -  2);  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  Numeric  mant  =  val.substring(0,  val.length()  -  2);  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	Numeric  mant  =  val.substring(0,  val.length()  -  2);	  Numeric    mant    =    val.substring(1,    val.length());    	non-compiled	[CE]  	36	None	replace
23	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length()  -  2);  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  String  val  =  val.substring(0,  val.length()  -  2);  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  val  =  val.substring(0,  val.length()  -  2);	  String    val    =    val.substring(0,    val.length());    	non-compiled	[CE]  	5	None	replace
24	[BUG]  [BUGGY]  String  val  =  val.substring(1,  val.length()  -  1);  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  String  val  =  val.substring(1,  val.length()  -  1);  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  val  =  val.substring(1,  val.length()  -  1);	  String    val    =    val.substring(0,    val.length());    	non-compiled	[CE]  	5	None	replace
25	[BUG]  [BUGGY]  String  mant  =  val.substring(0,  val.length());  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  String  mant  =  val.substring(0,  val.length());  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  mant  =  val.substring(0,  val.length());	  String    mant    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  	16	None	replace
26	[BUG]  [BUGGY]  String  mant  =  val.substring(0,  val.length()  +  1);  [CE]  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  String  mant  =  val.substring(0,  val.length()  +  1);  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  mant  =  val.substring(0,  val.length()  +  1);	  String    mant    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  	16	None	replace
27	[BUG]  [BUGGY]  String  mant  =  val.substring(1,  val.length());  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  String  mant  =  val.substring(1,  val.length());  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  mant  =  val.substring(1,  val.length());	  String    mant    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  	16	None	replace
28	[BUG]  [BUGGY]  String  mant  =  val.substring(0,  val.length();  [CE]  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  String  mant  =  val.substring(0,  val.length();  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  mant  =  val.substring(0,  val.length();	  String    mant    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  	16	None	replace
29	[BUG]  [BUGGY]  Numeric  numeric  =  val.substring(0,  val.length()  -  1);  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  Numeric  numeric  =  val.substring(0,  val.length()  -  1);  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	Numeric  numeric  =  val.substring(0,  val.length()  -  1);	  Numeric    numeric    =    val.substring(0,    val.length());    	non-compiled	[CE]  	31	None	replace
30	[BUG]  [BUGGY]  Numeric  numeric  =  val.substring(0,  val.length()  -  2);  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  Numeric  numeric  =  val.substring(0,  val.length()  -  2);  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	Numeric  numeric  =  val.substring(0,  val.length()  -  2);	  Numeric    numeric    =    val.substring(0,    val.length());    	non-compiled	[CE]  	31	None	replace
31	[BUG]  [BUGGY]  Numeric  numeric  =  val.substring(0,  val.length()  +  1);  [CE]  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  Numeric  numeric  =  val.substring(0,  val.length()  +  1);  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	Numeric  numeric  =  val.substring(0,  val.length()  +  1);	  Numeric    numeric    =    val.substring(0,    val.length());    	non-compiled	[CE]  	31	None	replace
32	[BUG]  [BUGGY]  val  =  val.substring(0,  val.length()  -  2);  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  val  =  val.substring(0,  val.length()  -  2);  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	val  =  val.substring(0,  val.length()  -  2);	  val    =    val.substring(0,    val.length());    	non-compiled	[CE]  	1	None	replace
33	[BUG]  [BUGGY]  val  =  val.substring(1,  val.length()  -  1);  [CE]  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  val  =  val.substring(1,  val.length()  -  1);  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	val  =  val.substring(1,  val.length()  -  1);	  val    =    val.substring(0,    val.length());    	non-compiled	[CE]  	1	None	replace
34	[BUG]  [BUGGY]  Integer  decPos  =  val.length();  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  Integer  decPos  =  val.length();  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	Integer  decPos  =  val.length();	  int    decPos    =    val.length()    +    1;    	non-compiled	[CE]  	20	None	replace
35	[BUG]  [BUGGY]  Dec  <  String>  dec  =  val.substring(0,  val.length()  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  Dec  <  String>  dec  =  val.substring(0,  val.length()  -  1);  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	Dec  <  String>  dec  =  val.substring(0,  val.length()  -  1);	  if(!Character.isDigit(lastChar))    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    expPos)))    {    exp    =    val.substring(expPos    +    1,    val.length());    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
36	[BUG]  [BUGGY]  Dec  <  String>  exp  =  val.substring(decPos  +  1,  val.length()  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  Dec  <  String>  exp  =  val.substring(decPos  +  1,  val.length()  -  1);  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	Dec  <  String>  exp  =  val.substring(decPos  +  1,  val.length()  -  1);	  if(!Character.isDigit(lastChar))    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    expPos)))    {    exp    =    val.substring(expPos    +    1,    val.length());    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
37	[BUG]  [BUGGY]  Context.codeBug();  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  Context.codeBug();  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	Context.codeBug();	  if(!Character.isDigit(lastChar))    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    expPos)))    {    exp    =    val.substring(expPos    +    1,    val.length());    }    	non-compiled	[CE]  	35	None	replace
38	[BUG]  [BUGGY]  exp  =  val.substring(expPos  +  1,  val.length()  -  2);  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  exp  =  val.substring(expPos  +  1,  val.length()  -  2);  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	exp  =  val.substring(expPos  +  1,  val.length()  -  2);	  exp    =    val.substring(expPos    +    1,    val.length());    	non-compiled	[CE]  	18	None	replace
39	[BUG]  [BUGGY]  exp  =  val.substring(expPos  +  1,  val.length()  -  3);  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  exp  =  val.substring(expPos  +  1,  val.length()  -  3);  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	exp  =  val.substring(expPos  +  1,  val.length()  -  3);	  exp    =    val.substring(expPos    +    1,    val.length());    	non-compiled	[CE]  	18	None	replace
40	[BUG]  [BUGGY]  if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1)))    {    exp    =    val.substring(expPos    +    1,    val.length()    -    1);    }    	non-compiled	[CE]  	28	None	replace
41	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  if(expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	if(expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1)))    {    exp    =    val.substring(expPos    +    1,    val.length()    -    1);    }    	non-compiled	[CE]  	28	None	replace
42	[BUG]  [BUGGY]  Numeric  mant  =  val.substring(expPos  +  1,  val.length());  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  Numeric  mant  =  val.substring(expPos  +  1,  val.length());  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	Numeric  mant  =  val.substring(expPos  +  1,  val.length());	  Numeric    mant    =    val.substring(expPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  	29	None	replace
43	[BUG]  [BUGGY]  String  numeric  =  val.substring(expPos  +  1,  val.length());  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  String  numeric  =  val.substring(expPos  +  1,  val.length());  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  numeric  =  val.substring(expPos  +  1,  val.length());	  Numeric    mant    =    val.substring(expPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  	29	None	replace
44	[BUG]  [BUGGY]  exp  =  val.substring(0,  val.length());  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  exp  =  val.substring(0,  val.length());  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	exp  =  val.substring(0,  val.length());	  exp    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  	9	None	replace
45	[BUG]  [BUGGY]  exp  =  val.substring(0,  val.length()  +  1);  [CE]  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  exp  =  val.substring(0,  val.length()  +  1);  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	exp  =  val.substring(0,  val.length()  +  1);	  exp    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  	9	None	replace
46	[BUG]  [BUGGY]  exp  =  val.substring(1,  val.length());  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  exp  =  val.substring(1,  val.length());  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	exp  =  val.substring(1,  val.length());	  exp    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  	9	None	replace
47	[BUG]  [BUGGY]  String  numeric  =  val.substring(1,  val.length()  +  1);  [CE]  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  String  numeric  =  val.substring(1,  val.length()  +  1);  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  numeric  =  val.substring(1,  val.length()  +  1);	  String    numeric    =    val.substring(1,    val.length()    -    1);    	non-compiled	[CE]  	10	None	replace
48	[BUG]  [BUGGY]  String  numeric  =  val.substring(1,  val.length())+  1;  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  String  numeric  =  val.substring(1,  val.length())+  1;  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  numeric  =  val.substring(1,  val.length())+  1;	  String    numeric    =    val.substring(1,    val.length()    -    1);    	non-compiled	[CE]  	10	None	replace
49	[BUG]  [BUGGY]  int  decPos  =  exp.length()  -  1;  [CE]  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  int  decPos  =  exp.length()  -  1;  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	int  decPos  =  exp.length()  -  1;	  int    decPos    =    exp.length();    	non-compiled	[CE]  	22	None	replace
50	[BUG]  [BUGGY]  int  decPos  =  exp.length()  +  1;  [CE]  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  int  decPos  =  exp.length()  +  1;  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	int  decPos  =  exp.length()  +  1;	  int    decPos    =    exp.length();    	non-compiled	[CE]  	22	None	replace
51	[BUG]  [BUGGY]  int  decPos  =  expPos  +  1;  [CE]  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  int  decPos  =  expPos  +  1;  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	int  decPos  =  expPos  +  1;	  int    decPos    =    exp.length();    	non-compiled	[CE]  	22	None	replace
52	[BUG]  [BUGGY]  String  decPos  =  val.length();  [CE]  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  String  decPos  =  val.length();  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  decPos  =  val.length();	  char    decPos    =    val.length();    	non-compiled	[CE]  	21	None	replace
53	[BUG]  [BUGGY]  char  decPos  =  val.charAt(0);  [CE]  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  char  decPos  =  val.charAt(0);  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	char  decPos  =  val.charAt(0);	  char    decPos    =    val.length();    	non-compiled	[CE]  	21	None	replace
54	[BUG]  [BUGGY]  char  decPos  =  val.charAt(decPos);  [CE]  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  char  decPos  =  val.charAt(decPos);  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	char  decPos  =  val.charAt(decPos);	  char    decPos    =    val.length();    	non-compiled	[CE]  	21	None	replace
55	[BUG]  [BUGGY]  char  decPos  =  val.length()  -  1;  [CE]  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  char  decPos  =  val.length()  -  1;  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	char  decPos  =  val.length()  -  1;	  char    decPos    =    val.length();    	non-compiled	[CE]  	21	None	replace
56	[BUG]  [BUGGY]  String  numeric  =  val.substring(0,  val.length()  1)+  1;  [CE]  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  String  numeric  =  val.substring(0,  val.length()  1)+  1;  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  numeric  =  val.substring(0,  val.length()  1)+  1;	  String    numeric    =    val.substring(0,    val.length()    +    1)+    1;    	non-compiled	[CE]  	3	None	replace
57	[BUG]  [BUGGY]  String  numeric  =  val.substring(0,  val.length()  +  1)/  1;  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  String  numeric  =  val.substring(0,  val.length()  +  1)/  1;  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  numeric  =  val.substring(0,  val.length()  +  1)/  1;	  String    numeric    =    val.substring(0,    val.length()    +    1)+    1;    	non-compiled	[CE]  	3	None	replace
58	[BUG]  [BUGGY]  String  numeric  =  val.substring(0,  expPos  +  1)+  1;  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  String  numeric  =  val.substring(0,  expPos  +  1)+  1;  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  numeric  =  val.substring(0,  expPos  +  1)+  1;	  String    numeric    =    val.substring(0,    expPos)+    1;    	non-compiled	[CE]  	42	None	replace
59	[BUG]  [BUGGY]  String  numeric  =  val.substring(0,  expPos)+  2;  [CE]  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  String  numeric  =  val.substring(0,  expPos)+  2;  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  numeric  =  val.substring(0,  expPos)+  2;	  String    numeric    =    val.substring(0,    expPos)+    1;    	non-compiled	[CE]  	42	None	replace
60	[BUG]  [BUGGY]  String  numeric  =  val.substring(0,  expPos)+  1,  val.length();  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  String  numeric  =  val.substring(0,  expPos)+  1,  val.length();  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  numeric  =  val.substring(0,  expPos)+  1,  val.length();	  String    numeric    =    val.substring(0,    expPos)+    1;    	non-compiled	[CE]  	42	None	replace
61	[BUG]  [BUGGY]  char  numeric  =  val.substring(0,  val.length()  +  1);  [CE]  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  char  numeric  =  val.substring(0,  val.length()  +  1);  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	char  numeric  =  val.substring(0,  val.length()  +  1);	  char    numeric    =    val.substring(0,    val.length());    	non-compiled	[CE]  	32	None	replace
62	[BUG]  [BUGGY]  String  numeric  =  val.substring(0,  val.length()  -  1));  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  String  numeric  =  val.substring(0,  val.length()  -  1));  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  numeric  =  val.substring(0,  val.length()  -  1));	  String    numeric    =    val.substring(0,    val.length()));    	non-compiled	[CE]  	12	None	replace
63	[BUG]  [BUGGY]  String  numeric  =  val.substring(0,  val.length()  -  2));  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  String  numeric  =  val.substring(0,  val.length()  -  2));  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  numeric  =  val.substring(0,  val.length()  -  2));	  String    numeric    =    val.substring(0,    val.length()));    	non-compiled	[CE]  	12	None	replace
64	[BUG]  [BUGGY]  String  numeric  =  val.substring(0,  val.length()  +  1));  [CE]  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  String  numeric  =  val.substring(0,  val.length()  +  1));  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  numeric  =  val.substring(0,  val.length()  +  1));	  String    numeric    =    val.substring(0,    val.length()));    	non-compiled	[CE]  	12	None	replace
65	[BUG]  [BUGGY]  char  numeric  =  val.substring(0,  val.length()  -  1)+  1;  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  char  numeric  =  val.substring(0,  val.length()  -  1)+  1;  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	char  numeric  =  val.substring(0,  val.length()  -  1)+  1;	  char    numeric    =    val.substring(0,    val.length())+    1;    	non-compiled	[CE]  	4	None	replace
66	[BUG]  [BUGGY]  char  numeric  =  val.substring(0,  val.length()  +  1)+  1;  [CE]  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  char  numeric  =  val.substring(0,  val.length()  +  1)+  1;  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	char  numeric  =  val.substring(0,  val.length()  +  1)+  1;	  char    numeric    =    val.substring(0,    val.length())+    1;    	non-compiled	[CE]  	4	None	replace
67	[BUG]  [BUGGY]  int  decPos  =  expPos  -  val.length()  -  1;  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  int  decPos  =  expPos  -  val.length()  -  1;  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	int  decPos  =  expPos  -  val.length()  -  1;	  int    decPos    =    expPos    -    val.length();    	non-compiled	[CE]  	38	None	replace
68	[BUG]  [BUGGY]  int  decPos  =  expPos  -  val.length()  +  1;  [CE]  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  int  decPos  =  expPos  -  val.length()  +  1;  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	int  decPos  =  expPos  -  val.length()  +  1;	  int    decPos    =    expPos    -    val.length();    	non-compiled	[CE]  	38	None	replace
69	[BUG]  [BUGGY]  int  decPos  =  val.length()  -  expPos;  [CE]  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  int  decPos  =  val.length()  -  expPos;  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	int  decPos  =  val.length()  -  expPos;	  int    decPos    =    expPos    -    val.length();    	non-compiled	[CE]  	38	None	replace
70	[BUG]  [BUGGY]  Character  numeric  =  val.substring(0,  val.length()  -  1);  [CE]  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  Character  numeric  =  val.substring(0,  val.length()  -  1);  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	Character  numeric  =  val.substring(0,  val.length()  -  1);	  char    numeric    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  	14	None	replace
71	[BUG]  [BUGGY]  String  numeric  =  val.substring(0,  val.length()  -  1)/  1;  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  String  numeric  =  val.substring(0,  val.length()  -  1)/  1;  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  numeric  =  val.substring(0,  val.length()  -  1)/  1;	  String    numeric    =    val.substring(0,    val.length()    -    1)+    1;    	non-compiled	[CE]  	2	None	replace
72	[BUG]  [BUGGY]  Dec  <  Object>  dec  =  val.substring(decPos  +  1,  val.length()  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  Dec  <  Object>  dec  =  val.substring(decPos  +  1,  val.length()  -  1);  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	Dec  <  Object>  dec  =  val.substring(decPos  +  1,  val.length()  -  1);	  if(!Character.isDigit(lastChar))    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    expPos)))    {    exp    =    val.substring(expPos    +    1,    val.length());    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
73	[BUG]  [BUGGY]  Numeric  mant  =  numeric.substring(0,  val.length()  -  1);  [CE]  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  Numeric  mant  =  numeric.substring(0,  val.length()  -  1);  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	Numeric  mant  =  numeric.substring(0,  val.length()  -  1);	  if(!Character.isDigit(lastChar))    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    expPos)))    {    exp    =    val.substring(expPos    +    1,    val.length());    }    	non-compiled	[CE]  	35	None	replace
74	[BUG]  [BUGGY]  Dec  <  Object>  dec  =  val.substring(0,  decPos);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  Dec  <  Object>  dec  =  val.substring(0,  decPos);  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	Dec  <  Object>  dec  =  val.substring(0,  decPos);	  if(!Character.isDigit(lastChar))    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    expPos)))    {    exp    =    val.substring(expPos    +    1,    val.length());    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
75	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos))  ||  isDigits(numeric.charAt(0)))  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1  [CE]  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos))  ||  isDigits(numeric.charAt(0)))  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos))  ||  isDigits(numeric.charAt(0)))  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    expPos))    ||    isDigits(numeric.charAt(0)))    {    exp    =    val.substring(expPos    +    1,    val.length()    -    1);    }    	non-compiled	[CE]  	27	None	replace
76	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos))  &&  isDigits(numeric.charAt(0)))  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos))  &&  isDigits(numeric.charAt(0)))  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos))  &&  isDigits(numeric.charAt(0)))  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    expPos))    ||    isDigits(numeric.charAt(0)))    {    exp    =    val.substring(expPos    +    1,    val.length()    -    1);    }    	non-compiled	[CE]  	27	None	replace
77	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(val.substring(0,  expPos))  ||  isDigits(numeric.charAt(0)))  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(val.substring(0,  expPos))  ||  isDigits(numeric.charAt(0)))  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(val.substring(0,  expPos))  ||  isDigits(numeric.charAt(0)))  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    expPos))    ||    isDigits(numeric.charAt(0)))    {    exp    =    val.substring(expPos    +    1,    val.length()    -    1);    }    	non-compiled	[CE]  	27	None	replace
78	[BUG]  [BUGGY]  char  decPos  =  val.length()  +  1;  [CE]  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  char  decPos  =  val.length()  +  1;  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	char  decPos  =  val.length()  +  1;	  char    decPos    =    val.length();    	non-compiled	[CE]  	21	None	replace
79	[BUG]  [BUGGY]  exp  =  val.substring(expPos  +  1,  val.length();  [CE]  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  exp  =  val.substring(expPos  +  1,  val.length();  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	exp  =  val.substring(expPos  +  1,  val.length();	  exp    =    val.substring(expPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  	17	None	replace
80	[BUG]  [BUGGY]  Numeric  numeric  =  val.substring(1,  val.length());  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  Numeric  numeric  =  val.substring(1,  val.length());  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	Numeric  numeric  =  val.substring(1,  val.length());	  Numeric    numeric    =    val.substring(0,    val.length());    	non-compiled	[CE]  	31	None	replace
81	[BUG]  [BUGGY]  Number  mant  =  val.substring(0,  val.length()  -  1);  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  Number  mant  =  val.substring(0,  val.length()  -  1);  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	Number  mant  =  val.substring(0,  val.length()  -  1);	  Numeric    mant    =    val.substring(1,    val.length()    -    1);    	non-compiled	[CE]  	30	None	replace
82	[BUG]  [BUGGY]  int  decPos  =  expPos;  [CE]  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  int  decPos  =  expPos;  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	int  decPos  =  expPos;	  int    decPos    =    exp.length();    	non-compiled	[CE]  	22	None	replace
83	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&  isDigits(numeric.charAt(0)))  {  exp  =  val.substring(0,  val.length()  -  1);  }  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&  isDigits(numeric.charAt(0)))  {  exp  =  val.substring(0,  val.length()  -  1);  }  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&  isDigits(numeric.charAt(0)))  {  exp  =  val.substring(0,  val.length()  -  1);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    isDigits(numeric.charAt(0)))    {    exp    =    val.substring(0,    val.length()    -    1);    }    	non-compiled	[CE]  	25	None	replace
84	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1)))    {    exp    =    val.substring(expPos    +    1,    val.length()    -    1);    }    	non-compiled	[CE]  	28	None	replace
85	[BUG]  [BUGGY]  String  numeric  =  val.substring(2,  val.length()  -  1);  [CE]  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  String  numeric  =  val.substring(2,  val.length()  -  1);  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  numeric  =  val.substring(2,  val.length()  -  1);	  String    numeric    =    val.substring(1,    val.length()    -    1);    	non-compiled	[CE]  	10	None	replace
86	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null)  {  if(dec  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  exp  =  val.substring(0,  val.length()  -  1);  }  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  if(dec  ==  null  &&  exp  ==  null)  {  if(dec  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  exp  =  val.substring(0,  val.length()  -  1);  }  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	if(dec  ==  null  &&  exp  ==  null)  {  if(dec  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  exp  =  val.substring(0,  val.length()  -  1);  }	  if(exp    ==    null)    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.charAt(0)))    {    exp    =    val.substring(0,    val.length()    -    1);    }    	non-compiled	[CE]  	41	None	replace
87	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  val.length()  -  1)))  {  exp  =  val.substring(0,  val.length()  -  1);  }  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  val.length()  -  1)))  {  exp  =  val.substring(0,  val.length()  -  1);  }  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  val.length()  -  1)))  {  exp  =  val.substring(0,  val.length()  -  1);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(2)))    {    exp    =    val.substring(0,    val.length()    -    1);    }    	non-compiled	[CE]  	23	None	replace
88	[BUG]  [BUGGY]  Character  numeric  =  val.substring(0,  val.length());  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  Character  numeric  =  val.substring(0,  val.length());  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	Character  numeric  =  val.substring(0,  val.length());	  char    numeric    =    val.substring(0,    val.length()    -    2);    	non-compiled	[CE]  	13	None	replace
89	[BUG]  [BUGGY]  Char  numeric  =  val.substring(0,  val.length());  [CE]  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  Char  numeric  =  val.substring(0,  val.length());  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	Char  numeric  =  val.substring(0,  val.length());	  char    numeric    =    val.substring(0,    val.length()    -    2);    	non-compiled	[CE]  	13	None	replace
90	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(val.substring(0,  expPos)))  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  [CE]  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(val.substring(0,  expPos)))  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(val.substring(0,  expPos)))  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }	  if(!Character.isDigit(lastChar))    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    expPos)))    {    exp    =    val.substring(expPos    +    1,    val.length()    -    1);    }    	non-compiled	[CE]  	33	None	replace
91	[BUG]  [BUGGY]  if(!Character.isDigit(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos)))  {  exp  =  val.substring  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  if(!Character.isDigit(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos)))  {  exp  =  val.substring  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	if(!Character.isDigit(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos)))  {  exp  =  val.substring	  if(!Character.isDigit(lastChar))    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    expPos)))    {    exp    =    val.substring(expPos    +    1,    val.length()    -    1);    }    	non-compiled	[CE]  	33	None	replace
92	[BUG]  [BUGGY]  Char  val  =  val.substring(0,  val.length());  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  Char  val  =  val.substring(0,  val.length());  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	Char  val  =  val.substring(0,  val.length());	  char    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  	6	None	replace
93	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  decPos))  ||  isDigits(numeric.charAt(0)))  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  [CE]  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  decPos))  ||  isDigits(numeric.charAt(0)))  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  decPos))  ||  isDigits(numeric.charAt(0)))  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    expPos))    ||    isDigits(numeric.charAt(0)))    {    exp    =    val.substring(expPos    +    1,    val.length()    -    1);    }    	non-compiled	[CE]  	27	None	replace
94	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos))  ||  isDigits(numeric.charAt(0)))  {  exp  =  val.substring(expPos  +  1,  val.length()  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos))  ||  isDigits(numeric.charAt(0)))  {  exp  =  val.substring(expPos  +  1,  val.length()  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos))  ||  isDigits(numeric.charAt(0)))  {  exp  =  val.substring(expPos  +  1,  val.length()	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    expPos))    ||    isDigits(numeric.charAt(0)))    {    exp    =    val.substring(expPos    +    1,    val.length()    -    1);    }    	non-compiled	[CE]  	27	None	replace
95	[BUG]  [BUGGY]  int  decPos  =  expPos  -  1;  [CE]  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  int  decPos  =  expPos  -  1;  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	int  decPos  =  expPos  -  1;	  int    decPos    =    exp.length();    	non-compiled	[CE]  	22	None	replace
96	[BUG]  [BUGGY]  Numeric  mant  =  val.substring(start,  val.length()  -  1);  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  Numeric  mant  =  val.substring(start,  val.length()  -  1);  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	Numeric  mant  =  val.substring(start,  val.length()  -  1);	  Numeric    mant    =    val.substring(0,    val.length());    	non-compiled	[CE]  	15	None	replace
97	[BUG]  [BUGGY]  String  val  =  val.substring(0,  expPos  +  1);  [CE]  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  String  val  =  val.substring(0,  expPos  +  1);  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  val  =  val.substring(0,  expPos  +  1);	  String    val    =    val.substring(0,    expPos.length()    -    1);    	non-compiled	[CE]  	7	None	replace
98	[BUG]  [BUGGY]  String  val  =  val.substring(0,  decPos.length()  -  1);  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  String  val  =  val.substring(0,  decPos.length()  -  1);  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  val  =  val.substring(0,  decPos.length()  -  1);	  String    val    =    val.substring(0,    expPos.length()    -    1);    	non-compiled	[CE]  	7	None	replace
99	[BUG]  [BUGGY]  exp  =  val.substring(decPos  +  1,  val.length());  [CE]  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  exp  =  val.substring(decPos  +  1,  val.length());  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	exp  =  val.substring(decPos  +  1,  val.length());	  exp    =    val.substring(expPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  	17	None	replace
100	[BUG]  [BUGGY]  int  decPos  =  expPos  /  val.length();  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  int  decPos  =  expPos  /  val.length();  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	int  decPos  =  expPos  /  val.length();	  int    decPos    =    expPos    -    val.length();    	non-compiled	[CE]  	38	None	replace
101	[BUG]  [BUGGY]  State  state  =  val.getActualValue();  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  State  state  =  val.getActualValue();  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	State  state  =  val.getActualValue();	  State    state    =    val.getState();    	non-compiled	[CE]  	11	None	replace
102	[BUG]  [BUGGY]  State  state  =  val.getActualState();  [CE]  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  State  state  =  val.getActualState();  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	State  state  =  val.getActualState();	  State    state    =    val.getState();    	non-compiled	[CE]  	11	None	replace
103	[BUG]  [BUGGY]  Numeric  mant  =  val.substring(decPos  +  1,  val.length());  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  Numeric  mant  =  val.substring(decPos  +  1,  val.length());  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	Numeric  mant  =  val.substring(decPos  +  1,  val.length());	  Numeric    mant    =    val.substring(expPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  	29	None	replace
104	[BUG]  [BUGGY]  Numeric  mant  =  val.substring(2,  val.length()  -  1);  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  Numeric  mant  =  val.substring(2,  val.length()  -  1);  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	Numeric  mant  =  val.substring(2,  val.length()  -  1);	  Numeric    mant    =    val.substring(1,    val.length()    -    1);    	non-compiled	[CE]  	30	None	replace
105	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(2)))  {  exp  =  val.substring(0,  val.length()  -  1);  }  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(2)))  {  exp  =  val.substring(0,  val.length()  -  1);  }  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(2)))  {  exp  =  val.substring(0,  val.length()  -  1);  }	  if(dec    ==    null    &&    exp    ==    null    ||    isDigits(numeric.substring(1)))    {    exp    =    val.substring(0,    val.length()    -    1);    }    	non-compiled	[CE]  	39	None	replace
106	[BUG]  [BUGGY]  String  mant  =  val.substring(0,  val.length())+  1;  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  String  mant  =  val.substring(0,  val.length())+  1;  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  mant  =  val.substring(0,  val.length())+  1;	  String    mant    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  	16	None	replace
107	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length())-  1;  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  String  val  =  val.substring(0,  val.length())-  1;  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  val  =  val.substring(0,  val.length())-  1;	  String    val    =    val.substring(0,    val.length()    +    1);    	non-compiled	[CE]  	8	None	replace
108	[BUG]  [BUGGY]  int  decPos  =  val.lastIndexOf('.')-  1;  [CE]  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  int  decPos  =  val.lastIndexOf('.')-  1;  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	int  decPos  =  val.lastIndexOf('.')-  1;	  int    decPos    =    val.length()    -    1;    	non-compiled	[CE]  	19	None	replace
109	[BUG]  [BUGGY]  int  decPos  =  val.lastIndexOf('-')-  1;  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  int  decPos  =  val.lastIndexOf('-')-  1;  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	int  decPos  =  val.lastIndexOf('-')-  1;	  int    decPos    =    val.length()    -    1;    	non-compiled	[CE]  	19	None	replace
110	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  exp  =  val.substring(expPos  +  1,  val.length());  }  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  exp  =  val.substring(expPos  +  1,  val.length());  }  [BUGGY]      String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  exp  =  val.substring(expPos  +  1,  val.length());  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1)))    {    exp    =    val.substring(expPos    +    1,    val.length()    -    1);    }    	non-compiled	[CE]  	28	None	replace
111	[BUG]  [BUGGY]  String  numeric  =  val.substring(0,  decPos)+  1;  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }        [BUGGY]  String  numeric  =  val.substring(0,  decPos)+  1;  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  numeric  =  val.substring(0,  decPos)+  1;	  String    numeric    =    val.substring(0,    expPos)+    1;    	non-compiled	[CE]  	42	None	replace
