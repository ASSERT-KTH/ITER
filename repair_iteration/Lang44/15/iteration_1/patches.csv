bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  val  =  val.substring(0,  val.length());  [CE]  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  val  =  val.substring(0,  val.length());  [BUGGY]    String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	val  =  val.substring(0,  val.length());	      val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  	3	None	replace
2	[BUG]  [BUGGY]  String  numeric  =  val.substring(0,  val.length()  -  1)+  1;  [CE]  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  String  numeric  =  val.substring(0,  val.length()  -  1)+  1;  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  numeric  =  val.substring(0,  val.length()  -  1)+  1;	  String    numeric    =    val.substring(0,    val.length())+    1;    	non-compiled	[CE]  	8	None	replace
3	[BUG]  [BUGGY]  String  numeric  =  val.substring(0,  val.length()  +  1)+  1;  [CE]  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  String  numeric  =  val.substring(0,  val.length()  +  1)+  1;  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  numeric  =  val.substring(0,  val.length()  +  1)+  1;	  String    numeric    =    val.substring(0,    val.length())+    1;    	non-compiled	[CE]  	8	None	replace
4	[BUG]  [BUGGY]  char  numeric  =  val.substring(0,  val.length())+  1;  [CE]  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  char  numeric  =  val.substring(0,  val.length())+  1;  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	char  numeric  =  val.substring(0,  val.length())+  1;	  String    numeric    =    val.substring(0,    val.length())+    1;    	non-compiled	[CE]  	8	None	replace
5	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length());  [CE]  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  String  val  =  val.substring(0,  val.length());  [BUGGY]    String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  val  =  val.substring(0,  val.length());	      String    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  	2	None	replace
6	[BUG]  [BUGGY]  char  val  =  val.substring(0,  val.length()  -  1);  [CE]  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  char  val  =  val.substring(0,  val.length()  -  1);  [BUGGY]    String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	char  val  =  val.substring(0,  val.length()  -  1);	      String    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  	2	None	replace
7	[BUG]  [BUGGY]  String  val  =  val.substring(0,  expPos.length()  -  1);  [CE]  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  String  val  =  val.substring(0,  expPos.length()  -  1);  [BUGGY]    String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  val  =  val.substring(0,  expPos.length()  -  1);	      String    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  	2	None	replace
8	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length()  +  1);  [CE]  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  String  val  =  val.substring(0,  val.length()  +  1);  [BUGGY]    String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  val  =  val.substring(0,  val.length()  +  1);	      String    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  	2	None	replace
9	[BUG]  [BUGGY]  exp  =  val.substring(0,  val.length()  -  1);  [CE]  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  exp  =  val.substring(0,  val.length()  -  1);  [BUGGY]    String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	exp  =  val.substring(0,  val.length()  -  1);	      if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.charAt(0)))    {    exp    =    val.substring(0,    val.length()    -    1);    }    	non-compiled	[CE]  	12	None	replace
10	[BUG]  [BUGGY]  String  numeric  =  val.substring(1,  val.length()  -  1);  [CE]  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  String  numeric  =  val.substring(1,  val.length()  -  1);  [BUGGY]    String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  numeric  =  val.substring(1,  val.length()  -  1);	      if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.charAt(0)))    {    exp    =    val.substring(0,    val.length()    -    1);    }    	non-compiled	[CE]  	12	None	replace
11	[BUG]  [BUGGY]  State  state  =  val.getState();  [CE]  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  State  state  =  val.getState();  [BUGGY]    String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	State  state  =  val.getState();	      if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.charAt(0)))    {    exp    =    val.substring(0,    val.length()    -    1);    }    	non-compiled	[CE]  	12	None	replace
12	[BUG]  [BUGGY]  String  numeric  =  val.substring(0,  val.length()));  [CE]  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  String  numeric  =  val.substring(0,  val.length()));  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  numeric  =  val.substring(0,  val.length()));	  String    numeric    =    val.substring(0,    val.length()    +    1);    	non-compiled	[CE]  	7	None	replace
13	[BUG]  [BUGGY]  char  numeric  =  val.substring(0,  val.length()  -  2);  [CE]  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  char  numeric  =  val.substring(0,  val.length()  -  2);  [BUGGY]    String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	char  numeric  =  val.substring(0,  val.length()  -  2);	      String    numeric    =    val.substring(0,    val.length()    -    2);    	non-compiled	[CE]  	5	None	replace
14	[BUG]  [BUGGY]  char  numeric  =  val.substring(0,  val.length()  -  1);  [CE]  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  char  numeric  =  val.substring(0,  val.length()  -  1);  [BUGGY]    String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	char  numeric  =  val.substring(0,  val.length()  -  1);	      String    numeric    =    val.substring(0,    val.length()    -    2);    	non-compiled	[CE]  	5	None	replace
15	[BUG]  [BUGGY]  Numeric  mant  =  val.substring(0,  val.length());  [CE]  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  Numeric  mant  =  val.substring(0,  val.length());  [BUGGY]    String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	Numeric  mant  =  val.substring(0,  val.length());	      Numeric    mant    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  	11	None	replace
16	[BUG]  [BUGGY]  String  mant  =  val.substring(0,  val.length()  -  1);  [CE]  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  String  mant  =  val.substring(0,  val.length()  -  1);  [BUGGY]    String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  mant  =  val.substring(0,  val.length()  -  1);	      Numeric    mant    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  	11	None	replace
17	[BUG]  [BUGGY]  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  [CE]  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  [BUGGY]    String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	exp  =  val.substring(expPos  +  1,  val.length()  -  1);	      if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    expPos)))    {    exp    =    val.substring(expPos    +    1,    val.length()    -    1);    }    	non-compiled	[CE]  	10	None	replace
18	[BUG]  [BUGGY]  exp  =  val.substring(expPos  +  1,  val.length());  [CE]  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  exp  =  val.substring(expPos  +  1,  val.length());  [BUGGY]    String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	exp  =  val.substring(expPos  +  1,  val.length());	      if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    expPos)))    {    exp    =    val.substring(expPos    +    1,    val.length()    -    1);    }    	non-compiled	[CE]  	10	None	replace
19	[BUG]  [BUGGY]  int  decPos  =  val.length()  -  1;  [CE]  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  int  decPos  =  val.length()  -  1;  [BUGGY]    String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	int  decPos  =  val.length()  -  1;	      int    decPos    =    val.length();    	non-compiled	[CE]  	4	None	replace
20	[BUG]  [BUGGY]  int  decPos  =  val.length()  +  1;  [CE]  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  int  decPos  =  val.length()  +  1;  [BUGGY]    String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	int  decPos  =  val.length()  +  1;	      int    decPos    =    val.length();    	non-compiled	[CE]  	4	None	replace
21	[BUG]  [BUGGY]  char  decPos  =  val.length();  [CE]  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  char  decPos  =  val.length();  [BUGGY]    String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	char  decPos  =  val.length();	      int    decPos    =    val.length();    	non-compiled	[CE]  	4	None	replace
22	[BUG]  [BUGGY]  int  decPos  =  exp.length();  [CE]  [FE]                    StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  int  decPos  =  exp.length();  [BUGGY]    String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	int  decPos  =  exp.length();	      int    decPos    =    val.length();    	non-compiled	[CE]  	4	None	replace
23	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  exp  =  val.substring(0,  val.length()  -  1);  }  [CE]  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  exp  =  val.substring(0,  val.length()  -  1);  }  [BUGGY]    String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  exp  =  val.substring(0,  val.length()  -  1);  }	      if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1)))    {    exp    =    val.substring(0,    val.length()    -    1);    }    	non-compiled	[CE]  	14	None	replace
24	[BUG]  [BUGGY]  String  numeric  =  val.substring(0,  val.length()  -  3);  [CE]  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  String  numeric  =  val.substring(0,  val.length()  -  3);  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  numeric  =  val.substring(0,  val.length()  -  3);	  String    numeric    =    val.substring(0,    val.length());    	non-compiled	[CE]  	6	None	replace
25	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {  exp  =  val.substring(0,  val.length()  -  1);  }  [CE]  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {  exp  =  val.substring(0,  val.length()  -  1);  }  [BUGGY]    String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {  exp  =  val.substring(0,  val.length()  -  1);  }	      if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.charAt(0)))    {    exp    =    val.substring(0,    val.length()    -    1);    }    	non-compiled	[CE]  	12	None	replace
26	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.charAt(0)))  {  exp  =  val.substring(0,  val.length()  -  1);  }  [CE]  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.charAt(0)))  {  exp  =  val.substring(0,  val.length()  -  1);  }  [BUGGY]    String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.charAt(0)))  {  exp  =  val.substring(0,  val.length()  -  1);  }	      if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.charAt(0)))    {    exp    =    val.substring(0,    val.length()    -    1);    }    	non-compiled	[CE]  	12	None	replace
27	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos))  ||  isDigits(numeric.charAt(0)))  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  [CE]  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos))  ||  isDigits(numeric.charAt(0)))  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  [BUGGY]    String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos))  ||  isDigits(numeric.charAt(0)))  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }	      if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    expPos)))    {    exp    =    val.substring(expPos    +    1,    val.length()    -    1);    }    	non-compiled	[CE]  	10	None	replace
28	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  [CE]  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  [BUGGY]    String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }	      if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    expPos)))    {    exp    =    val.substring(expPos    +    1,    val.length()    -    1);    }    	non-compiled	[CE]  	10	None	replace
29	[BUG]  [BUGGY]  Numeric  mant  =  val.substring(expPos  +  1,  val.length()  -  1);  [CE]  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  Numeric  mant  =  val.substring(expPos  +  1,  val.length()  -  1);  [BUGGY]    String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	Numeric  mant  =  val.substring(expPos  +  1,  val.length()  -  1);	      Numeric    mant    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  	11	None	replace
30	[BUG]  [BUGGY]  Numeric  mant  =  val.substring(1,  val.length()  -  1);  [CE]  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  Numeric  mant  =  val.substring(1,  val.length()  -  1);  [BUGGY]    String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	Numeric  mant  =  val.substring(1,  val.length()  -  1);	      Numeric    mant    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  	11	None	replace
31	[BUG]  [BUGGY]  Numeric  numeric  =  val.substring(0,  val.length());  [CE]  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  Numeric  numeric  =  val.substring(0,  val.length());  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	Numeric  numeric  =  val.substring(0,  val.length());	  String    numeric    =    val.substring(0,    val.length()    +    1);    	non-compiled	[CE]  	7	None	replace
32	[BUG]  [BUGGY]  char  numeric  =  val.substring(0,  val.length());  [CE]  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  char  numeric  =  val.substring(0,  val.length());  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	char  numeric  =  val.substring(0,  val.length());	  String    numeric    =    val.substring(0,    val.length());    	non-compiled	[CE]  	6	None	replace
33	[BUG]  [BUGGY]  if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos)))  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  [CE]  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos)))  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  [BUGGY]    String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos)))  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }	      if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    expPos)))    {    exp    =    val.substring(expPos    +    1,    val.length()    -    1);    }    	non-compiled	[CE]  	10	None	replace
34	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos)))  {  exp  =  val.substring(expPos  +  1,  val.length());  }  [CE]  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos)))  {  exp  =  val.substring(expPos  +  1,  val.length());  }  [BUGGY]    String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos)))  {  exp  =  val.substring(expPos  +  1,  val.length());  }	      if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    expPos)))    {    exp    =    val.substring(expPos    +    1,    val.length()    -    1);    }    	non-compiled	[CE]  	10	None	replace
35	[BUG]  [BUGGY]  if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos)))  {  exp  =  val.substring(expPos  +  1,  val.length());  }  [CE]  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos)))  {  exp  =  val.substring(expPos  +  1,  val.length());  }  [BUGGY]    String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	if(!Character.isDigit(lastChar))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  expPos)))  {  exp  =  val.substring(expPos  +  1,  val.length());  }	      if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    expPos)))    {    exp    =    val.substring(expPos    +    1,    val.length()    -    1);    }    	non-compiled	[CE]  	10	None	replace
36	[BUG]  [BUGGY]  Numeric  mant  =  val.substring(1,  val.length());  [CE]  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  Numeric  mant  =  val.substring(1,  val.length());  [BUGGY]    String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	Numeric  mant  =  val.substring(1,  val.length());	      Numeric    mant    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  	11	None	replace
37	[BUG]  [BUGGY]  int  decPos  =  expPos  +  val.length();  [CE]  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  int  decPos  =  expPos  +  val.length();  [BUGGY]    String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	int  decPos  =  expPos  +  val.length();	      int    decPos    =    val.length();    	non-compiled	[CE]  	4	None	replace
38	[BUG]  [BUGGY]  int  decPos  =  expPos  -  val.length();  [CE]  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  int  decPos  =  expPos  -  val.length();  [BUGGY]    String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	int  decPos  =  expPos  -  val.length();	      int    decPos    =    val.length();    	non-compiled	[CE]  	4	None	replace
39	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(1)))  {  exp  =  val.substring(0,  val.length()  -  1);  }  [CE]  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(1)))  {  exp  =  val.substring(0,  val.length()  -  1);  }  [BUGGY]    String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(1)))  {  exp  =  val.substring(0,  val.length()  -  1);  }	      if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1)))    {    exp    =    val.substring(0,    val.length()    -    1);    }    	non-compiled	[CE]  	14	None	replace
40	[BUG]  [BUGGY]  val  =  val.substring(0,  val.length()  +  1);  [CE]  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  val  =  val.substring(0,  val.length()  +  1);  [BUGGY]    String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	val  =  val.substring(0,  val.length()  +  1);	      val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  	3	None	replace
41	[BUG]  [BUGGY]  if(exp  ==  null)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  exp  =  val.substring(0,  val.length()  -  1);  }  [CE]  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  if(exp  ==  null)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  exp  =  val.substring(0,  val.length()  -  1);  }  [BUGGY]    String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	if(exp  ==  null)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  exp  =  val.substring(0,  val.length()  -  1);  }	      if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.charAt(0)))    {    exp    =    val.substring(0,    val.length()    -    1);    }    	non-compiled	[CE]  	12	None	replace
42	[BUG]  [BUGGY]  String  numeric  =  val.substring(0,  expPos)+  1;  [CE]  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    }  dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }      [BUGGY]  String  numeric  =  val.substring(0,  expPos)+  1;  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	188	188	1	replace	String  numeric  =  val.substring(0,  expPos)+  1;	  String    numeric    =    val.substring(0,    val.length())+    1;    	non-compiled	[CE]  	8	None	replace
