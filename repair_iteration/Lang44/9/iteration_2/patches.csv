bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Mant  val  =  val.substring(decPos  +  1,  expPos  +  1);  [CE]  orphaned  case  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  Mant  val  =  val.substring(decPos  +  1,  expPos  +  1);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	Mant  val  =  val.substring(decPos  +  1,  expPos  +  1);	  Mant    val    =    val.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  orphaned  case	30	None	replace
2	[BUG]  [BUGGY]  Mant  val  =  val.substring(0,  expPos);  [CE]  orphaned  case  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  Mant  val  =  val.substring(0,  expPos);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	Mant  val  =  val.substring(0,  expPos);	  Mant    val    =    val.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  orphaned  case	30	None	replace
3	[BUG]  [BUGGY]  Mant  val  =  val.substring(decPos  +  1,  expPos,  expPos);  [CE]  orphaned  case  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  Mant  val  =  val.substring(decPos  +  1,  expPos,  expPos);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	Mant  val  =  val.substring(decPos  +  1,  expPos,  expPos);	  Mant    val    =    val.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  orphaned  case	30	None	replace
4	[BUG]  [BUGGY]  if(decPos  >  -1  ||  expPos  <  expPos)  {  [CE]  orphaned  case  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  if(decPos  >  -1  ||  expPos  <  expPos)  {  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	if(decPos  >  -1  ||  expPos  <  expPos)  {	  if(expPos    >    -1    ||    expPos    <    decPos)    {    	non-compiled	[CE]  orphaned  case	17	None	replace
5	[BUG]  [BUGGY]  if(decPos  >  -1  ||  expPos  <  decPos)  {  [CE]  orphaned  case  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  if(decPos  >  -1  ||  expPos  <  decPos)  {  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	if(decPos  >  -1  ||  expPos  <  decPos)  {	  if(expPos    >    -1    ||    expPos    <    decPos)    {    	non-compiled	[CE]  orphaned  case	17	None	replace
6	[BUG]  [BUGGY]  mant  =  val.substring(0,  2);  [CE]  orphaned  case  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  mant  =  val.substring(0,  2);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	mant  =  val.substring(0,  2);	  mant    =    val.substring(0,    1);    	non-compiled	[CE]  orphaned  case	5	None	replace
7	[BUG]  [BUGGY]  mant  =  val.substring(0,  3);  [CE]  orphaned  case  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  mant  =  val.substring(0,  3);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	mant  =  val.substring(0,  3);	  mant    =    val.substring(0,    1);    	non-compiled	[CE]  orphaned  case	5	None	replace
8	[BUG]  [BUGGY]  mant  =  val.substring(0,  4);  [CE]  orphaned  case  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  mant  =  val.substring(0,  4);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	mant  =  val.substring(0,  4);	  mant    =    val.substring(0,    1);    	non-compiled	[CE]  orphaned  case	5	None	replace
9	[BUG]  [BUGGY]  mant  <  expPos)  {  throw  new  NumberFormatException( " ");  [CE]  orphaned  case  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  mant  <  expPos)  {  throw  new  NumberFormatException( " ");  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	mant  <  expPos)  {  throw  new  NumberFormatException( " ");	  bucket    <    expPos)    {    throw    new    NumberFormatException(   "   ");    	non-compiled	[CE]  orphaned  case	10	None	replace
10	[BUG]  [BUGGY]  bucket  <  expPos)  {  throw  new  NumberFormatException(val  + "  is  not  a  valid  number.   ");  [CE]  orphaned  case  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  bucket  <  expPos)  {  throw  new  NumberFormatException(val  + "  is  not  a  valid  number.   ");  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	bucket  <  expPos)  {  throw  new  NumberFormatException(val  + "  is  not  a  valid  number.   ");	  bucket    <    expPos)    {    throw    new    NumberFormatException(   "   ");    	non-compiled	[CE]  orphaned  case	10	None	replace
11	[BUG]  [BUGGY]  Mant  val  =  val.substring(0,  decPos  +  1);  [CE]  orphaned  case  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  Mant  val  =  val.substring(0,  decPos  +  1);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	Mant  val  =  val.substring(0,  decPos  +  1);	  Mant    val    =    val.substring(decPos    +    1);    	non-compiled	[CE]  orphaned  case	26	None	replace
12	[BUG]  [BUGGY]  Mant  val  =  val.substring(decPos  +  2);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  Mant  val  =  val.substring(decPos  +  2);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	Mant  val  =  val.substring(decPos  +  2);	  Mant    val    =    val.substring(decPos    +    1);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
13	[BUG]  [BUGGY]  if(allZeros)  {  aughtExceptionHandler.throwAsUnquotedException( " ");  }  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  if(allZeros)  {  aughtExceptionHandler.throwAsUnquotedException( " ");  }  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	if(allZeros)  {  aughtExceptionHandler.throwAsUnquotedException( " ");  }	  aughtExceptionHandler.throwAsUnquotedException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
14	[BUG]  [BUGGY]  if(decPos  >  -1)  {  aughtExceptionHandler.throwAsUnquotedException( " ");  }  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  if(decPos  >  -1)  {  aughtExceptionHandler.throwAsUnquotedException( " ");  }  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	if(decPos  >  -1)  {  aughtExceptionHandler.throwAsUnquotedException( " ");  }	  aughtExceptionHandler.throwAsUnquotedException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
15	[BUG]  [BUGGY]  nfe.throwAsUnquotedException( " ");  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  nfe.throwAsUnquotedException( " ");  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	nfe.throwAsUnquotedException( " ");	  aughtExceptionHandler.throwAsUnquotedException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
16	[BUG]  [BUGGY]  mant  =  val.substring(decPos  +  1,  expPos  +  3);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  mant  =  val.substring(decPos  +  1,  expPos  +  3);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	mant  =  val.substring(decPos  +  1,  expPos  +  3);	  mant    =    val.substring(decPos    +    1,    expPos    +    1);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
17	[BUG]  [BUGGY]  val  =  val.substring(decPos  +  1,  expPos  +  1);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  val  =  val.substring(decPos  +  1,  expPos  +  1);  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	val  =  val.substring(decPos  +  1,  expPos  +  1);	  val    =    val.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
18	[BUG]  [BUGGY]  val  =  val.substring(decPos  +  1,  expPos,  expPos);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  val  =  val.substring(decPos  +  1,  expPos,  expPos);  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	val  =  val.substring(decPos  +  1,  expPos,  expPos);	  val    =    val.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
19	[BUG]  [BUGGY]  int  expPos  =  val.lastIndexOf('.',  DEC_PREFIX  +  1);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  int  expPos  =  val.lastIndexOf('.',  DEC_PREFIX  +  1);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	int  expPos  =  val.lastIndexOf('.',  DEC_PREFIX  +  1);	  int    expPos    =    val.lastIndexOf('.',    DEC_PREFIX);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
20	[BUG]  [BUGGY]  int  expPos  =  val.indexOf('.',  DEC_PREFIX);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  int  expPos  =  val.indexOf('.',  DEC_PREFIX);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	int  expPos  =  val.indexOf('.',  DEC_PREFIX);	  int    expPos    =    val.lastIndexOf('.',    DEC_PREFIX);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
21	[BUG]  [BUGGY]  bucket  <  expPos)  {  throw  new  NumberFormatException(val  + "  is  not  a  valid  number.   ");  }  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  bucket  <  expPos)  {  throw  new  NumberFormatException(val  + "  is  not  a  valid  number.   ");  }  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	bucket  <  expPos)  {  throw  new  NumberFormatException(val  + "  is  not  a  valid  number.   ");  }	  bucket    <    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
22	[BUG]  [BUGGY]  bucket  <  =  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  bucket  <  =  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	bucket  <  =  decPos)  {  throw  new  NumberFormatException( " ");  }	  bucket    <    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
23	[BUG]  [BUGGY]  mant  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  mant  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	mant  <  decPos)  {  throw  new  NumberFormatException( " ");  }	  bucket    <    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
24	[BUG]  [BUGGY]  reason:  throw  new  NumberFormatException( " ".equals(dec));  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  reason:  throw  new  NumberFormatException( " ".equals(dec));  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	reason:  throw  new  NumberFormatException( " ".equals(dec));	  reason:    throw    new    NumberFormatException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
25	[BUG]  [BUGGY]  reason:  throw  new  NumberFormatException( " ",  val);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  reason:  throw  new  NumberFormatException( " ",  val);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	reason:  throw  new  NumberFormatException( " ",  val);	  reason:    throw    new    NumberFormatException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
26	[BUG]  [BUGGY]  reason:  throw  new  NumberFormatException( " ",  nfe);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  reason:  throw  new  NumberFormatException( " ",  nfe);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	reason:  throw  new  NumberFormatException( " ",  nfe);	  reason:    throw    new    NumberFormatException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
27	[BUG]  [BUGGY]  mant  =  val.substring(decPos  +  1,  decPos);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  mant  =  val.substring(decPos  +  1,  decPos);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	mant  =  val.substring(decPos  +  1,  decPos);	  mant    =    val.substring(decPos    +    2);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
28	[BUG]  [BUGGY]  Mant  val  =  val.substring(1,  decPos);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  Mant  val  =  val.substring(1,  decPos);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	Mant  val  =  val.substring(1,  decPos);	  Mant    val    =    val.substring(0,    decPos);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
29	[BUG]  [BUGGY]  val  =  val.substring(0,  expPos  +  1);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  val  =  val.substring(0,  expPos  +  1);  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	val  =  val.substring(0,  expPos  +  1);	  val    =    val.substring(0,    expPos);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
30	[BUG]  [BUGGY]  val  =  val.substring(0,  decPos);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  val  =  val.substring(0,  decPos);  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	val  =  val.substring(0,  decPos);	  val    =    val.substring(0,    expPos);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
31	[BUG]  [BUGGY]  val  =  val.substring(1,  expPos);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  val  =  val.substring(1,  expPos);  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	val  =  val.substring(1,  expPos);	  val    =    val.substring(0,    expPos);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
32	[BUG]  [BUGGY]  int  expPos  =  val.lastIndexOf('.',  decPos  +  1);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  int  expPos  =  val.lastIndexOf('.',  decPos  +  1);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	int  expPos  =  val.lastIndexOf('.',  decPos  +  1);	  int    expPos    =    val.lastIndexOf('.',    decPos);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
33	[BUG]  [BUGGY]  int  expPos  =  val.indexOf('.',  decPos);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  int  expPos  =  val.indexOf('.',  decPos);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	int  expPos  =  val.indexOf('.',  decPos);	  int    expPos    =    val.lastIndexOf('.',    decPos);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
34	[BUG]  [BUGGY]  val  =  val.substring(decPos  +  2);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  val  =  val.substring(decPos  +  2);  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	val  =  val.substring(decPos  +  2);	  val    =    val.substring(decPos    +    1);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
35	[BUG]  [BUGGY]  mant  =  val.substring(1,  decPos  +  1);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  mant  =  val.substring(1,  decPos  +  1);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	mant  =  val.substring(1,  decPos  +  1);	  mant    =    val.substring(1,    decPos);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
36	[BUG]  [BUGGY]  mant  =  val.substring(2,  decPos);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  mant  =  val.substring(2,  decPos);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	mant  =  val.substring(2,  decPos);	  mant    =    val.substring(1,    decPos);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
37	[BUG]  [BUGGY]  mant  <  expPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  mant  <  expPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	mant  <  expPos)  {  throw  new  NumberFormatException( " ");  }	  bucket    <    expPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
38	[BUG]  [BUGGY]  bucket  <  =  expPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  bucket  <  =  expPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	bucket  <  =  expPos)  {  throw  new  NumberFormatException( " ");  }	  bucket    <    expPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
39	[BUG]  [BUGGY]  int  expPos  =  val.lastIndexOf('.',  dec  +  1);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  int  expPos  =  val.lastIndexOf('.',  dec  +  1);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	int  expPos  =  val.lastIndexOf('.',  dec  +  1);	  int    expPos    =    val.lastIndexOf('.',    dec);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
40	[BUG]  [BUGGY]  int  expPos  =  val.indexOf('.',  dec);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  int  expPos  =  val.indexOf('.',  dec);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	int  expPos  =  val.indexOf('.',  dec);	  int    expPos    =    val.lastIndexOf('.',    dec);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
41	[BUG]  [BUGGY]  if(decPos  >  -1  &&  expPos  <  val.length())  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  if(decPos  >  -1  &&  expPos  <  val.length())  {  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	if(decPos  >  -1  &&  expPos  <  val.length())  {	  if(decPos    >    -1    &&    expPos    <    expPos)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
42	[BUG]  [BUGGY]  if(expPos  >  -1  ||  expPos  <  val.length())  {  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  if(expPos  >  -1  ||  expPos  <  val.length())  {  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	if(expPos  >  -1  ||  expPos  <  val.length())  {	  if(expPos    >    -1    &&    expPos    <    val.length())    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
43	[BUG]  [BUGGY]  if(decPos  >  -1  &&  expPos  >=  decPos)  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  if(decPos  >  -1  &&  expPos  >=  decPos)  {  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	if(decPos  >  -1  &&  expPos  >=  decPos)  {	  if(expPos    >    -1    &&    expPos    >=    decPos)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
44	[BUG]  [BUGGY]  if(expPos  >  -1  ||  expPos  >=  decPos)  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  if(expPos  >  -1  ||  expPos  >=  decPos)  {  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	if(expPos  >  -1  ||  expPos  >=  decPos)  {	  if(expPos    >    -1    &&    expPos    >=    decPos)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
45	[BUG]  [BUGGY]  reason:  this.decPos  =  val;  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  reason:  this.decPos  =  val;  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	reason:  this.decPos  =  val;	  reason:    this.decPos    =    decPos;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
46	[BUG]  [BUGGY]  reason:  this.decPos  =  decPos  +  1;  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  reason:  this.decPos  =  decPos  +  1;  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	reason:  this.decPos  =  decPos  +  1;	  reason:    this.decPos    =    decPos;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
47	[BUG]  [BUGGY]  reason:  this.decPos  =  expPos;  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  reason:  this.decPos  =  expPos;  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	reason:  this.decPos  =  expPos;	  reason:    this.decPos    =    decPos;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
48	[BUG]  [BUGGY]  mant  =  val.substring(1,  expPos  +  1);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  mant  =  val.substring(1,  expPos  +  1);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	mant  =  val.substring(1,  expPos  +  1);	  mant    =    val.substring(1,    expPos);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
49	[BUG]  [BUGGY]  mant  =  val.substring(1,  expPos  +  2);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  mant  =  val.substring(1,  expPos  +  2);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	mant  =  val.substring(1,  expPos  +  2);	  mant    =    val.substring(1,    expPos);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
50	[BUG]  [BUGGY]  mant  =  val.substring(0,  expPos  +  2);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  mant  =  val.substring(0,  expPos  +  2);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	mant  =  val.substring(0,  expPos  +  2);	  mant    =    val.substring(0,    expPos    +    1);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
51	[BUG]  [BUGGY]  mant  =  val.substring(0,  expPos  +  1,  expPos);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  mant  =  val.substring(0,  expPos  +  1,  expPos);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	mant  =  val.substring(0,  expPos  +  1,  expPos);	  mant    =    val.substring(0,    expPos    +    1);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
52	[BUG]  [BUGGY]  mant  =  val.substring(0,  expPos  +  1,  decPos);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  mant  =  val.substring(0,  expPos  +  1,  decPos);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	mant  =  val.substring(0,  expPos  +  1,  decPos);	  mant    =    val.substring(0,    expPos    +    1);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
53	[BUG]  [BUGGY]  if(decPos  >  -1  &&  expPos  <  =  expPos)  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  if(decPos  >  -1  &&  expPos  <  =  expPos)  {  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	if(decPos  >  -1  &&  expPos  <  =  expPos)  {	  if(expPos    >    -1    &&    expPos    <    =    decPos)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
54	[BUG]  [BUGGY]  if(expPos  >  -1  ||  expPos  <  =  decPos)  {  [CE]  orphaned  case  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  if(expPos  >  -1  ||  expPos  <  =  decPos)  {  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	if(expPos  >  -1  ||  expPos  <  =  decPos)  {	  if(expPos    >    -1    &&    expPos    <    =    decPos)    {    	non-compiled	[CE]  orphaned  case	18	None	replace
55	[BUG]  [BUGGY]  mant  =  val.substring(0,  decPos  +  1,  expPos);  [CE]  orphaned  case  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  mant  =  val.substring(0,  decPos  +  1,  expPos);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	mant  =  val.substring(0,  decPos  +  1,  expPos);	  mant    =    val.substring(0,    decPos    +    1);    	non-compiled	[CE]  orphaned  case	3	None	replace
56	[BUG]  [BUGGY]  mant  =  val.substring(0,  decPos  +  2);  [CE]  orphaned  case  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  mant  =  val.substring(0,  decPos  +  2);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	mant  =  val.substring(0,  decPos  +  2);	  mant    =    val.substring(0,    decPos    +    1);    	non-compiled	[CE]  orphaned  case	3	None	replace
57	[BUG]  [BUGGY]  mant  <  1  ||  expPos  >  -1)  {  throw  new  NumberFormatException( " ");  }  [CE]  orphaned  case  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  mant  <  1  ||  expPos  >  -1)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	mant  <  1  ||  expPos  >  -1)  {  throw  new  NumberFormatException( " ");  }	  bucket    <    1    ||    expPos    >    -1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  orphaned  case	36	None	replace
58	[BUG]  [BUGGY]  bucket  <  1  ||  expPos  >=  -1)  {  throw  new  NumberFormatException( " ");  }  [CE]  orphaned  case  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  bucket  <  1  ||  expPos  >=  -1)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	bucket  <  1  ||  expPos  >=  -1)  {  throw  new  NumberFormatException( " ");  }	  bucket    <    1    ||    expPos    >    -1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  orphaned  case	36	None	replace
59	[BUG]  [BUGGY]  bucket  <  1  ||  expPos  ==  -1)  {  throw  new  NumberFormatException( " ");  }  [CE]  orphaned  case  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  bucket  <  1  ||  expPos  ==  -1)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	bucket  <  1  ||  expPos  ==  -1)  {  throw  new  NumberFormatException( " ");  }	  bucket    <    1    ||    expPos    >    -1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  orphaned  case	36	None	replace
60	[BUG]  [BUGGY]  int  expPos  =  val.lastIndexOf('.',  2);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  int  expPos  =  val.lastIndexOf('.',  2);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	int  expPos  =  val.lastIndexOf('.',  2);	  int    expPos    =    val.lastIndexOf('.',    1);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
61	[BUG]  [BUGGY]  int  expPos  =  val.indexOf('.',  1);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  int  expPos  =  val.indexOf('.',  1);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	int  expPos  =  val.indexOf('.',  1);	  int    expPos    =    val.lastIndexOf('.',    1);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
62	[BUG]  [BUGGY]  int  expPos  =  val.lastIndexOf('.',  DEC_POP  +  1);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  int  expPos  =  val.lastIndexOf('.',  DEC_POP  +  1);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	int  expPos  =  val.lastIndexOf('.',  DEC_POP  +  1);	  int    expPos    =    val.lastIndexOf('.',    DEC_POP);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
63	[BUG]  [BUGGY]  int  expPos  =  val.indexOf('.',  DEC_POP);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  int  expPos  =  val.indexOf('.',  DEC_POP);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	int  expPos  =  val.indexOf('.',  DEC_POP);	  int    expPos    =    val.lastIndexOf('.',    DEC_POP);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
64	[BUG]  [BUGGY]  bucket  <  0  ||  expPos  >  -1)  {  if(decPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  bucket  <  0  ||  expPos  >  -1)  {  if(decPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	bucket  <  0  ||  expPos  >  -1)  {  if(decPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }	  if(expPos    >    -1)    {    if(decPos    >=    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
65	[BUG]  [BUGGY]  bucket  <  0  ||  expPos  >  -1  ||  expPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  bucket  <  0  ||  expPos  >  -1  ||  expPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	bucket  <  0  ||  expPos  >  -1  ||  expPos  >=  decPos)  {  throw  new  NumberFormatException( " ");	  if(expPos    >    -1)    {    if(decPos    >=    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
66	[BUG]  [BUGGY]  bucket  <  0  ||  expPos  >  -1  ||  expPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  bucket  <  0  ||  expPos  >  -1  ||  expPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	bucket  <  0  ||  expPos  >  -1  ||  expPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }	  if(expPos    >    -1)    {    if(decPos    >=    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
67	[BUG]  [BUGGY]  bucket  <  0  ||  expPos  >  -1)  {  if(expPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  type  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  bucket  <  0  ||  expPos  >  -1)  {  if(expPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	bucket  <  0  ||  expPos  >  -1)  {  if(expPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }	  if(expPos    >    -1)    {    if(decPos    >=    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
68	[BUG]  [BUGGY]  mant  =  val.substring(decPos  +  1,  expPos,  expPos  +  1);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  mant  =  val.substring(decPos  +  1,  expPos,  expPos  +  1);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	mant  =  val.substring(decPos  +  1,  expPos,  expPos  +  1);	  mant    =    val.substring(decPos    +    1,    expPos,    expPos);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
69	[BUG]  [BUGGY]  mant  =  val.substring(decPos  +  1,  expPos,  decPos);  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  mant  =  val.substring(decPos  +  1,  expPos,  decPos);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	mant  =  val.substring(decPos  +  1,  expPos,  decPos);	  mant    =    val.substring(decPos    +    1,    expPos,    expPos);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
70	[BUG]  [BUGGY]  if(decPos  >  -1  &&  expPos  <  decPos.length())  {  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  if(decPos  >  -1  &&  expPos  <  decPos.length())  {  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	if(decPos  >  -1  &&  expPos  <  decPos.length())  {	  if(expPos    >    -1    &&    expPos    <    decPos.length())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
71	[BUG]  [BUGGY]  if(expPos  >  -1  ||  expPos  <  decPos.length())  {  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  if(expPos  >  -1  ||  expPos  <  decPos.length())  {  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	if(expPos  >  -1  ||  expPos  <  decPos.length())  {	  if(expPos    >    -1    &&    expPos    <    decPos.length())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
72	[BUG]  [BUGGY]  bucket  <  =  0  ||  expPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  bucket  <  =  0  ||  expPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	bucket  <  =  0  ||  expPos  >=  decPos)  {  throw  new  NumberFormatException( " ");	  if(expPos    >    -1)    {    if(decPos    >=    expPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
73	[BUG]  [BUGGY]  reason:  this.decPos  =  val.substring(decPos  +  1);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  reason:  this.decPos  =  val.substring(decPos  +  1);  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	reason:  this.decPos  =  val.substring(decPos  +  1);	  if(expPos    >    -1)    {    if(decPos    >=    expPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
74	[BUG]  [BUGGY]  bucket  <  =  0  ||  expPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  bucket  <  =  0  ||  expPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	bucket  <  =  0  ||  expPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }	  if(expPos    >    -1)    {    if(decPos    >=    expPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
75	[BUG]  [BUGGY]  Context.report(JSError.make(val,  DEC_NUMBER_ERROR,  lastChar));  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  Context.report(JSError.make(val,  DEC_NUMBER_ERROR,  lastChar));  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	Context.report(JSError.make(val,  DEC_NUMBER_ERROR,  lastChar));	  Context.codeBug();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
76	[BUG]  [BUGGY]  Context.report(JSError.make(val,  lastChar,  expPos));  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  Context.report(JSError.make(val,  lastChar,  expPos));  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	Context.report(JSError.make(val,  lastChar,  expPos));	  Context.codeBug();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
77	[BUG]  [BUGGY]  Context.setCurrentName(val.substring(decPos,  expPos));  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  Context.setCurrentName(val.substring(decPos,  expPos));  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	Context.setCurrentName(val.substring(decPos,  expPos));	  Context.codeBug();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
78	[BUG]  [BUGGY]  mant  <  1  ||  expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  mant  <  1  ||  expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	mant  <  1  ||  expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }	  bucket    <    1    ||    expPos    <    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
79	[BUG]  [BUGGY]  bucket  <  1  ||  expPos  >  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  bucket  <  1  ||  expPos  >  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	bucket  <  1  ||  expPos  >  decPos)  {  throw  new  NumberFormatException( " ");  }	  bucket    <    1    ||    expPos    <    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
80	[BUG]  [BUGGY]  bucket  <  1  ||  expPos  <  0)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  bucket  <  1  ||  expPos  <  0)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	bucket  <  1  ||  expPos  <  0)  {  throw  new  NumberFormatException( " ");  }	  bucket    <    1    ||    expPos    <    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
81	[BUG]  [BUGGY]  bucket  <  1  ||  expPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  bucket  <  1  ||  expPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	bucket  <  1  ||  expPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }	  bucket    <    1    ||    expPos    <    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
82	[BUG]  [BUGGY]  if(decPos  >  -1  &&  expPos  <  decPos.length()  -  1)  {  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  if(decPos  >  -1  &&  expPos  <  decPos.length()  -  1)  {  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	if(decPos  >  -1  &&  expPos  <  decPos.length()  -  1)  {	  if(expPos    >    -1    &&    expPos    <    decPos.length()    -    1)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
83	[BUG]  [BUGGY]  if(expPos  >  -1  ||  expPos  <  decPos.length()  -  1)  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  if(expPos  >  -1  ||  expPos  <  decPos.length()  -  1)  {  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	if(expPos  >  -1  ||  expPos  <  decPos.length()  -  1)  {	  if(expPos    >    -1    &&    expPos    <    decPos.length()    -    1)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
84	[BUG]  [BUGGY]  val  =  val.substring(0,  1);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  val  =  val.substring(0,  1);  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	val  =  val.substring(0,  1);	  val    =    val.substring(0,    expPos);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
85	[BUG]  [BUGGY]  if(expPos  >  -1  &&  decPos  <  expPos)  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  if(expPos  >  -1  &&  decPos  <  expPos)  {  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	if(expPos  >  -1  &&  decPos  <  expPos)  {	  if(decPos    >    -1    &&    expPos    <    expPos)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
86	[BUG]  [BUGGY]  int  expPos)  {  throw  new  NumberFormatException( " ");  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  int  expPos)  {  throw  new  NumberFormatException( " ");  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	int  expPos)  {  throw  new  NumberFormatException( " ");	  bucket    <    expPos)    {    throw    new    NumberFormatException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
87	[BUG]  [BUGGY]  Context.report(JSError.make(NumberFormat.NUMBER_INT,  lastChar));  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  Context.report(JSError.make(NumberFormat.NUMBER_INT,  lastChar));  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	Context.report(JSError.make(NumberFormat.NUMBER_INT,  lastChar));	  Context.codeBug();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
88	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  val,  DEC_NUMBER_INDEX));  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  Context.report(JSError.make(sourceName,  val,  DEC_NUMBER_INDEX));  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	Context.report(JSError.make(sourceName,  val,  DEC_NUMBER_INDEX));	  Context.codeBug();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
89	[BUG]  [BUGGY]  Context.report(JSError.make(NumberFormat.NUMBER_INT,  val.length()));  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  Context.report(JSError.make(NumberFormat.NUMBER_INT,  val.length()));  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	Context.report(JSError.make(NumberFormat.NUMBER_INT,  val.length()));	  Context.codeBug();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
90	[BUG]  [BUGGY]  if(expPos  >  -1  &&  decPos  <  decPos)  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  if(expPos  >  -1  &&  decPos  <  decPos)  {  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	if(expPos  >  -1  &&  decPos  <  decPos)  {	  if(decPos    >    -1    &&    expPos    <    decPos)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
91	[BUG]  [BUGGY]  bucket  <  =  1  ||  expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  bucket  <  =  1  ||  expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	bucket  <  =  1  ||  expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }	  bucket    <    1    ||    expPos    <    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
92	[BUG]  [BUGGY]  bucket  <  1  &&  expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  bucket  <  1  &&  expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	bucket  <  1  &&  expPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }	  bucket    <    1    ||    expPos    <    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
93	[BUG]  [BUGGY]  int  expPos  =  val.lastIndexOf('.',  expPos);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  int  expPos  =  val.lastIndexOf('.',  expPos);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	int  expPos  =  val.lastIndexOf('.',  expPos);	  int    expPos    =    val.lastIndexOf('.',    decPos);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
94	[BUG]  [BUGGY]  if(!allZeros)  {  aughtExceptionHandler.throwAsUnquotedException( " ");  }  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  if(!allZeros)  {  aughtExceptionHandler.throwAsUnquotedException( " ");  }  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	if(!allZeros)  {  aughtExceptionHandler.throwAsUnquotedException( " ");  }	  aughtExceptionHandler.throwAsUnquotedException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
95	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsUnquotedException( " ",  val);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  aughtExceptionHandler.throwAsUnquotedException( " ",  val);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	aughtExceptionHandler.throwAsUnquotedException( " ",  val);	  aughtExceptionHandler.throwAsUnquotedException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
96	[BUG]  [BUGGY]  reason:  this.decPos  =  0;  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  reason:  this.decPos  =  0;  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	reason:  this.decPos  =  0;	  reason:    this.decPos    =    decPos;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
97	[BUG]  [BUGGY]  reason:  return  new  NumberFormatException( " ");  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  reason:  return  new  NumberFormatException( " ");  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	reason:  return  new  NumberFormatException( " ");	  reason:    throw    new    NumberFormatException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
98	[BUG]  [BUGGY]  reason:  throw  new  NumberFormatException( " ",  allZeros);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  reason:  throw  new  NumberFormatException( " ",  allZeros);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	reason:  throw  new  NumberFormatException( " ",  allZeros);	  reason:    throw    new    NumberFormatException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
99	[BUG]  [BUGGY]  val  =  val.substring(decPos  +  3);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  val  =  val.substring(decPos  +  3);  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	val  =  val.substring(decPos  +  3);	  val    =    val.substring(decPos    +    1);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
100	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  >=  val.length())  {  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  if(expPos  >  -1  &&  expPos  >=  val.length())  {  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	if(expPos  >  -1  &&  expPos  >=  val.length())  {	  if(expPos    >    -1    &&    expPos    >=    decPos)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
101	[BUG]  [BUGGY]  mant  =  val.substring(2,  expPos);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  mant  =  val.substring(2,  expPos);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	mant  =  val.substring(2,  expPos);	  mant    =    val.substring(1,    expPos);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
102	[BUG]  [BUGGY]  bucket  <  0  ||  expPos  >  -1)  {  if(decPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  bucket  <  0  ||  expPos  >  -1)  {  if(decPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	bucket  <  0  ||  expPos  >  -1)  {  if(decPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }	  if(expPos    >    -1)    {    if(decPos    >=    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
103	[BUG]  [BUGGY]  bucket  <  =  0  ||  expPos  >  -1)  {  if(decPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  bucket  <  =  0  ||  expPos  >  -1)  {  if(decPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	bucket  <  =  0  ||  expPos  >  -1)  {  if(decPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }	  if(expPos    >    -1)    {    if(decPos    >=    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
104	[BUG]  [BUGGY]  bucket  <  =  0  ||  expPos  >  -1)  {  if(decPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  bucket  <  =  0  ||  expPos  >  -1)  {  if(decPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	bucket  <  =  0  ||  expPos  >  -1)  {  if(decPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }	  if(expPos    >    -1)    {    if(decPos    >=    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
105	[BUG]  [BUGGY]  val  =  val.substring(decPos  +  1,  expPos  +  2);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  val  =  val.substring(decPos  +  1,  expPos  +  2);  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	val  =  val.substring(decPos  +  1,  expPos  +  2);	  val    =    val.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
106	[BUG]  [BUGGY]  bucket  <  =  1  ||  expPos  >  -1)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  bucket  <  =  1  ||  expPos  >  -1)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	bucket  <  =  1  ||  expPos  >  -1)  {  throw  new  NumberFormatException( " ");  }	  bucket    <    1    ||    expPos    >    -1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
107	[BUG]  [BUGGY]  bucket  <  0  ||  expPos  >  -1)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  bucket  <  0  ||  expPos  >  -1)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	bucket  <  0  ||  expPos  >  -1)  {  throw  new  NumberFormatException( " ");  }	  bucket    <    1    ||    expPos    >    -1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
108	[BUG]  [BUGGY]  reason:  this.decPos  =  -decPos;  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  reason:  this.decPos  =  -decPos;  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	reason:  this.decPos  =  -decPos;	  reason:    this.decPos    =    decPos;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
109	[BUG]  [BUGGY]  if(dec  ==  null)  {  aughtExceptionHandler.throwAsUnquotedException( " ");  }  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  if(dec  ==  null)  {  aughtExceptionHandler.throwAsUnquotedException( " ");  }  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	if(dec  ==  null)  {  aughtExceptionHandler.throwAsUnquotedException( " ");  }	  aughtExceptionHandler.throwAsUnquotedException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
110	[BUG]  [BUGGY]  bucket  <  1  ||  expPos  >  -1)  {  if(decPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  bucket  <  1  ||  expPos  >  -1)  {  if(decPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	bucket  <  1  ||  expPos  >  -1)  {  if(decPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }	  if(expPos    >    -1)    {    if(decPos    >=    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
111	[BUG]  [BUGGY]  bucket  <  NUMBER_INTEGER  ||  expPos  >  -1)  {  if(decPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  bucket  <  NUMBER_INTEGER  ||  expPos  >  -1)  {  if(decPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	bucket  <  NUMBER_INTEGER  ||  expPos  >  -1)  {  if(decPos  >=  decPos)  {  throw  new  NumberFormatException( " ");  }	  if(expPos    >    -1)    {    if(decPos    >=    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
112	[BUG]  [BUGGY]  bucket  <  NUMBER_INT_OR_OBJECT  ||  endsWithEmpty(decPos))  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  bucket  <  NUMBER_INT_OR_OBJECT  ||  endsWithEmpty(decPos))  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	bucket  <  NUMBER_INT_OR_OBJECT  ||  endsWithEmpty(decPos))  {  throw  new  NumberFormatException( " ");  }	  if(expPos    >    -1)    {    if(decPos    >=    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
113	[BUG]  [BUGGY]  bucket  <  NUMBER_INT_OR_OBJECT  ||  endsWithEOL())  {  throw  new  NumberFormatException( " ");  }  [CE]  illegal  start  of  type  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  bucket  <  NUMBER_INT_OR_OBJECT  ||  endsWithEOL())  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	bucket  <  NUMBER_INT_OR_OBJECT  ||  endsWithEOL())  {  throw  new  NumberFormatException( " ");  }	  if(expPos    >    -1)    {    if(decPos    >=    decPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
114	[BUG]  [BUGGY]  mant  =  val.substring(1,  1);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  mant  =  val.substring(1,  1);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	mant  =  val.substring(1,  1);	  mant    =    val.substring(0,    1);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
115	[BUG]  [BUGGY]  mant  =  val.substring(decPos  +  3);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  mant  =  val.substring(decPos  +  3);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	mant  =  val.substring(decPos  +  3);	  mant    =    val.substring(decPos    +    2);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
116	[BUG]  [BUGGY]  val  =  val.substring(expPos  +  1);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  val  =  val.substring(expPos  +  1);  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	val  =  val.substring(expPos  +  1);	  val    =    val.substring(decPos    +    1);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
117	[BUG]  [BUGGY]  Context.report(JSError.make(NUMBER_INT_ERROR,  lastChar));  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  Context.report(JSError.make(NUMBER_INT_ERROR,  lastChar));  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	Context.report(JSError.make(NUMBER_INT_ERROR,  lastChar));	  Context.codeBug();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
118	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  null,  expPos,  DEC));  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  Context.report(JSError.make(sourceName,  null,  expPos,  DEC));  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	Context.report(JSError.make(sourceName,  null,  expPos,  DEC));	  Context.codeBug();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
119	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  val,  DEC_NUMBER_INT_VALUE));  [CE]  orphaned  case  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  Context.report(JSError.make(sourceName,  val,  DEC_NUMBER_INT_VALUE));  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	Context.report(JSError.make(sourceName,  val,  DEC_NUMBER_INT_VALUE));	  Context.codeBug();    	non-compiled	[CE]  orphaned  case	40	None	replace
120	[BUG]  [BUGGY]  int  expPos  =  decPos  +  1;  [CE]  orphaned  case  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  int  expPos  =  decPos  +  1;  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	int  expPos  =  decPos  +  1;	  bucket    <    expPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  orphaned  case	9	None	replace
121	[BUG]  [BUGGY]  mant  =  val.substring(0,  expPos,  decPos);  [CE]  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  mant  =  val.substring(0,  expPos,  decPos);  [BUGGY]      if  (expPos  >  -1)  {  mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	mant  =  val.substring(0,  expPos,  decPos);	  mant    =    val.substring(decPos    +    1,    expPos,    expPos);    	non-compiled	[CE]  	24	None	replace
122	[BUG]  [BUGGY]  bucket  <  1  ||  expPos  >  -1)  {  if(decPos  >=  expPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  orphaned  case  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  bucket  <  1  ||  expPos  >  -1)  {  if(decPos  >=  expPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	bucket  <  1  ||  expPos  >  -1)  {  if(decPos  >=  expPos)  {  throw  new  NumberFormatException( " ");  }	  if(expPos    >    -1)    {    if(decPos    >=    expPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  orphaned  case	41	None	replace
123	[BUG]  [BUGGY]  bucket  <  1  ||  expPos  >  -1  ||  expPos  >=  val.length())  {  throw  new  NumberFormatException( " ");  }  [CE]  orphaned  case  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  bucket  <  1  ||  expPos  >  -1  ||  expPos  >=  val.length())  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	bucket  <  1  ||  expPos  >  -1  ||  expPos  >=  val.length())  {  throw  new  NumberFormatException( " ");  }	  if(expPos    >    -1)    {    if(decPos    >=    expPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  orphaned  case	41	None	replace
124	[BUG]  [BUGGY]  bucket  <  1  ||  expPos  >  -1  ||  expPos  <  val.length())  {  throw  new  NumberFormatException( " ");  }  [CE]  orphaned  case  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  bucket  <  1  ||  expPos  >  -1  ||  expPos  <  val.length())  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	bucket  <  1  ||  expPos  >  -1  ||  expPos  <  val.length())  {  throw  new  NumberFormatException( " ");  }	  if(expPos    >    -1)    {    if(decPos    >=    expPos)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  orphaned  case	41	None	replace
125	[BUG]  [BUGGY]  val  =  val.substring(expPos  +  1,  decPos);  [CE]  orphaned  case  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  throw  new  NumberFormatException(val  +       "  is  not  a  valid  number.     ");  }  dec  =  val.substring(decPos  +  1,  expPos);  }  else  {  dec  =  val.substring(decPos  +  1);  }  mant  =  val.substring(0,  decPos);  }  else  {      [BUGGY]  val  =  val.substring(expPos  +  1,  decPos);  [BUGGY]      mant  =  val.substring(0,  expPos);  }  else  {  mant  =  val;  }  dec  =  null;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	174	174	1	replace	val  =  val.substring(expPos  +  1,  decPos);	  val    =    val.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  orphaned  case	29	None	replace
