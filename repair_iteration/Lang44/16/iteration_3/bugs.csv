bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(exp);  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  boolean  allZeros  =  isAllZeros(exp);  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(exp);	  boolean    allZeros    =    isAllZeros(mant);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
2	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(dec);  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  boolean  allZeros  =  isAllZeros(dec);  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(dec);	  boolean    allZeros    =    isAllZeros(mant);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
3	[BUG]  [BUGGY]  String  exp  =  val.substring(expPos  +  1,  val.length());  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  exp  =  val.substring(expPos  +  1,  val.length());  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  exp  =  val.substring(expPos  +  1,  val.length());	  String    exp    =    val.substring(expPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
4	[BUG]  [BUGGY]  char  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  char  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	char  exp  =  val.substring(expPos  +  1,  val.length()  -  1);	  String    exp    =    val.substring(expPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
5	[BUG]  [BUGGY]  String  exp  =  numeric.substring(expPos  +  1,  val.length());  [CE]  illegal  start  of  expression  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  exp  =  numeric.substring(expPos  +  1,  val.length());  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  exp  =  numeric.substring(expPos  +  1,  val.length());	  String    exp    =    val.substring(expPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
6	[BUG]  [BUGGY]  exp  =  val.substring(expPos  +  1,  val.length());  [CE]  illegal  start  of  expression  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  exp  =  val.substring(expPos  +  1,  val.length());  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	exp  =  val.substring(expPos  +  1,  val.length());	  String    exp    =    val.substring(expPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
7	[BUG]  [BUGGY]  String  exp  =  numeric.substring(0,  val.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  exp  =  numeric.substring(0,  val.length()  -  1);  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  exp  =  numeric.substring(0,  val.length()  -  1);	  String    exp    =    numeric.substring(0,    val.length());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
8	[BUG]  [BUGGY]  char  exp  =  val.substring(0,  val.length());  [CE]  illegal  start  of  expression  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  char  exp  =  val.substring(0,  val.length());  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	char  exp  =  val.substring(0,  val.length());	  String    exp    =    numeric.substring(0,    val.length());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
9	[BUG]  [BUGGY]  String  numeric  =  val.substring(2,  val.length()  -  1);  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  numeric  =  val.substring(2,  val.length()  -  1);  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  numeric  =  val.substring(2,  val.length()  -  1);	  String    numeric    =    val.substring(1,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
10	[BUG]  [BUGGY]  String  numeric  =  val.substring(1,  val.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  numeric  =  val.substring(1,  val.length()  +  1);  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  numeric  =  val.substring(1,  val.length()  +  1);	  String    numeric    =    val.substring(1,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
11	[BUG]  [BUGGY]  String  numeric  =  val.substring(expPos  +  1,  val.length()  -  2);  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  numeric  =  val.substring(expPos  +  1,  val.length()  -  2);  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  numeric  =  val.substring(expPos  +  1,  val.length()  -  2);	  String    numeric    =    val.substring(expPos    +    1,    val.length());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
12	[BUG]  [BUGGY]  String  numeric  =  val.substring(expPos  +  1,  val.length()  -  3);  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  numeric  =  val.substring(expPos  +  1,  val.length()  -  3);  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  numeric  =  val.substring(expPos  +  1,  val.length()  -  3);	  String    numeric    =    val.substring(expPos    +    1,    val.length());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
13	[BUG]  [BUGGY]  String  numeric  =  new  String(val.substring(0,  val.length()));  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  numeric  =  new  String(val.substring(0,  val.length()));  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  numeric  =  new  String(val.substring(0,  val.length()));	  String    numeric    =    new    String(numeric.substring(0,    val.length()));    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
14	[BUG]  [BUGGY]  String  numeric  =  new  String(numeric.substring(0,  val.length()  -  1));  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  numeric  =  new  String(numeric.substring(0,  val.length()  -  1));  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  numeric  =  new  String(numeric.substring(0,  val.length()  -  1));	  String    numeric    =    new    String(numeric.substring(0,    val.length()));    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
15	[BUG]  [BUGGY]  String  numeric  =  new  String(numeric.substring(0,  val.length()  +  1));  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  numeric  =  new  String(numeric.substring(0,  val.length()  +  1));  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  numeric  =  new  String(numeric.substring(0,  val.length()  +  1));	  String    numeric    =    new    String(numeric.substring(0,    val.length()));    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
16	[BUG]  [BUGGY]  String  numeric  =  new  String(val.substring(0,  val.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  numeric  =  new  String(val.substring(0,  val.length()  -  1));  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  numeric  =  new  String(val.substring(0,  val.length()  -  1));	  String    numeric    =    new    String(numeric.substring(0,    val.length()));    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
17	[BUG]  [BUGGY]  String  exp  =  val.substring(0,  val.length()));  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  exp  =  val.substring(0,  val.length()));  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  exp  =  val.substring(0,  val.length()));	  String    exp    =    val.substring(0,    val.length()    +    1);    	non-compiled	[CE]  	2	None	replace
18	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(numeric,  exp);  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(numeric,  exp);  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(numeric,  exp);	  boolean    allZeros    =    isAllZeros(numeric)&&    isAllZeros(exp,    numeric);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
19	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(null,  exp);  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(null,  exp);  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(null,  exp);	  boolean    allZeros    =    isAllZeros(numeric)&&    isAllZeros(exp,    numeric);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
20	[BUG]  [BUGGY]  String  exp  =  val.substring(0,  val.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  exp  =  val.substring(0,  val.length()  -  2);  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  exp  =  val.substring(0,  val.length()  -  2);	  String    exp    =    val.substring(0,    val.length());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
21	[BUG]  [BUGGY]  String  dec  =  val.substring(expPos  +  1,  val.length()  -  1);  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  dec  =  val.substring(expPos  +  1,  val.length()  -  1);  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  dec  =  val.substring(expPos  +  1,  val.length()  -  1);	  String    dec    =    val.substring(expPos    +    1,    val.length());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
22	[BUG]  [BUGGY]  String  dec  =  val.substring(expPos  +  1,  val.length()  -  2);  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  dec  =  val.substring(expPos  +  1,  val.length()  -  2);  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  dec  =  val.substring(expPos  +  1,  val.length()  -  2);	  String    dec    =    val.substring(expPos    +    1,    val.length());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
23	[BUG]  [BUGGY]  String  dec  =  val.substring(decPos  +  1,  val.length());  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  dec  =  val.substring(decPos  +  1,  val.length());  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  dec  =  val.substring(decPos  +  1,  val.length());	  String    dec    =    val.substring(expPos    +    1,    val.length());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
24	[BUG]  [BUGGY]  String  numeric  =  val.substring(decPos  +  1,  val.length()  -  1);  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  numeric  =  val.substring(decPos  +  1,  val.length()  -  1);  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  numeric  =  val.substring(decPos  +  1,  val.length()  -  1);	  String    numeric    =    val.substring(decPos    +    1,    val.length());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
25	[BUG]  [BUGGY]  String  numeric  =  val.substring(decPos  +  1,  val.length()  -  2);  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  numeric  =  val.substring(decPos  +  1,  val.length()  -  2);  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  numeric  =  val.substring(decPos  +  1,  val.length()  -  2);	  String    numeric    =    val.substring(decPos    +    1,    val.length());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
26	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)||  isAllZeros(numeric);  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)||  isAllZeros(numeric);  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(numeric)||  isAllZeros(numeric);	  boolean    allZeros    =    isAllZeros(numeric)||    isAllZeros(exp);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
27	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)||  isAllZeros(val);  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)||  isAllZeros(val);  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(numeric)||  isAllZeros(val);	  boolean    allZeros    =    isAllZeros(numeric)||    isAllZeros(exp);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
28	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(dec)&&  isAllZeros(exp,  exp);  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  boolean  allZeros  =  isAllZeros(dec)&&  isAllZeros(exp,  exp);  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(dec)&&  isAllZeros(exp,  exp);	  boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(exp,    exp);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
29	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(val);  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(val);  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(val);	  boolean    allZeros    =    isAllZeros(numeric)&&    isAllZeros(mant);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
30	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(dec)&&  isAllZeros(exp,  numeric,  mant);  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  boolean  allZeros  =  isAllZeros(dec)&&  isAllZeros(exp,  numeric,  mant);  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(dec)&&  isAllZeros(exp,  numeric,  mant);	  boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(exp,    numeric,    dec);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
31	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(exp,  numeric,  dec);  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(exp,  numeric,  dec);  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(exp,  numeric,  dec);	  boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(exp,    numeric,    dec);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
32	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp,  dec,  numeric);  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp,  dec,  numeric);  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp,  dec,  numeric);	  boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(exp,    numeric,    dec);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
33	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(null);  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(null);  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(null);	  boolean    allZeros    =    isAllZeros(numeric)&&    isAllZeros(null);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
34	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(null,  numeric);  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(null,  numeric);  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(null,  numeric);	  boolean    allZeros    =    isAllZeros(numeric)&&    isAllZeros(null);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
35	[BUG]  [BUGGY]  String  numeric  =  val.substring(1,  val.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  numeric  =  val.substring(1,  val.length()  -  2);  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  numeric  =  val.substring(1,  val.length()  -  2);	  String    numeric    =    val.substring(1,    val.length());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
36	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp,  expPos  +  1);  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp,  expPos  +  1);  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp,  expPos  +  1);	  boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(exp,    expPos);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
37	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(dec)&&  isAllZeros(exp,  expPos);  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  boolean  allZeros  =  isAllZeros(dec)&&  isAllZeros(exp,  expPos);  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(dec)&&  isAllZeros(exp,  expPos);	  boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(exp,    expPos);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
38	[BUG]  [BUGGY]  String  dec  =  val.substring(0,  val.length());  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  dec  =  val.substring(0,  val.length());  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  dec  =  val.substring(0,  val.length());	  String    dec    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
39	[BUG]  [BUGGY]  char  dec  =  val.substring(0,  val.length()  -  1);  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  char  dec  =  val.substring(0,  val.length()  -  1);  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	char  dec  =  val.substring(0,  val.length()  -  1);	  String    dec    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
40	[BUG]  [BUGGY]  String  dec  =  val.substring(0,  val.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  dec  =  val.substring(0,  val.length()  +  1);  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  dec  =  val.substring(0,  val.length()  +  1);	  String    dec    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
41	[BUG]  [BUGGY]  String  dec  =  numeric.substring(0,  val.length());  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  dec  =  numeric.substring(0,  val.length());  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  dec  =  numeric.substring(0,  val.length());	  String    dec    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
42	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(dec)&&  isAllZeros(numeric,  exp);  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  boolean  allZeros  =  isAllZeros(dec)&&  isAllZeros(numeric,  exp);  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(dec)&&  isAllZeros(numeric,  exp);	  boolean    allZeros    =    isAllZeros(dec)&&    isAllZeros(exp,    numeric);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
43	[BUG]  [BUGGY]  String  numeric  =  val.substring(0,  expPos.length());  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  numeric  =  val.substring(0,  expPos.length());  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  numeric  =  val.substring(0,  expPos.length());	  String    numeric    =    val.substring(0,    expPos.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
44	[BUG]  [BUGGY]  String  numeric  =  val.substring(0,  expPos  +  1);  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  numeric  =  val.substring(0,  expPos  +  1);  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  numeric  =  val.substring(0,  expPos  +  1);	  String    numeric    =    val.substring(0,    expPos.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
45	[BUG]  [BUGGY]  String  numeric  =  val.substring(0,  val.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  numeric  =  val.substring(0,  val.length()  -  2);  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  numeric  =  val.substring(0,  val.length()  -  2);	  String    numeric    =    val.substring(0,    val.length();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
46	[BUG]  [BUGGY]  String  numeric  =  val.substring(expPos  +  1,  value.length());  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  numeric  =  val.substring(expPos  +  1,  value.length());  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  numeric  =  val.substring(expPos  +  1,  value.length());	  String    numeric    =    value.substring(expPos    +    1,    val.length());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
47	[BUG]  [BUGGY]  String  numeric  =  value.substring(expPos  +  1,  val.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  numeric  =  value.substring(expPos  +  1,  val.length()  -  1);  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  numeric  =  value.substring(expPos  +  1,  val.length()  -  1);	  String    numeric    =    value.substring(expPos    +    1,    val.length());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
48	[BUG]  [BUGGY]  String  numeric  =  value.substring(expPos  +  1,  val.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  numeric  =  value.substring(expPos  +  1,  val.length()  -  2);  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  numeric  =  value.substring(expPos  +  1,  val.length()  -  2);	  String    numeric    =    value.substring(expPos    +    1,    val.length());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
49	[BUG]  [BUGGY]  String  exp  =  val.substring(1,  val.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  exp  =  val.substring(1,  val.length()  -  1);  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  exp  =  val.substring(1,  val.length()  -  1);	  String    exp    =    val.substring(1,    val.length());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
50	[BUG]  [BUGGY]  String  exp  =  val.substring(1,  val.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  exp  =  val.substring(1,  val.length()  +  1);  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  exp  =  val.substring(1,  val.length()  +  1);	  String    exp    =    val.substring(1,    val.length());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
51	[BUG]  [BUGGY]  String  numeric  =  val.substring(0,  val.length()  -  1)+  1;  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  numeric  =  val.substring(0,  val.length()  -  1)+  1;  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  numeric  =  val.substring(0,  val.length()  -  1)+  1;	  String    numeric    =    val.substring(0,    val.length())+    1;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
52	[BUG]  [BUGGY]  String  numeric  =  val.substring(0,  val.length()  +  1)+  1;  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  numeric  =  val.substring(0,  val.length()  +  1)+  1;  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  numeric  =  val.substring(0,  val.length()  +  1)+  1;	  String    numeric    =    val.substring(0,    val.length())+    1;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
53	[BUG]  [BUGGY]  String  nomeric  =  val.substring(expPos  +  1,  val.length()  -  1);  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  nomeric  =  val.substring(expPos  +  1,  val.length()  -  1);  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  nomeric  =  val.substring(expPos  +  1,  val.length()  -  1);	  String    nomeric    =    val.substring(expPos    +    1,    val.length());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
54	[BUG]  [BUGGY]  String  nomeric  =  val.substring(expPos  +  1,  val.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  nomeric  =  val.substring(expPos  +  1,  val.length()  -  2);  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  nomeric  =  val.substring(expPos  +  1,  val.length()  -  2);	  String    nomeric    =    val.substring(expPos    +    1,    val.length());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
55	[BUG]  [BUGGY]  String  nomeric  =  val.substring(expPos  +  1,  val.length()  -  3);  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  nomeric  =  val.substring(expPos  +  1,  val.length()  -  3);  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  nomeric  =  val.substring(expPos  +  1,  val.length()  -  3);	  String    nomeric    =    val.substring(expPos    +    1,    val.length());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
56	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(dec);  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(dec);  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(dec);	  boolean    allZeros    =    isAllZeros(numeric)&&    isAllZeros(dec);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
57	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)&&  exp  ==  null;  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)&&  exp  ==  null;  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(numeric)&&  exp  ==  null;	  boolean    allZeros    =    isAllZeros(mant)&&    exp    ==    null;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
58	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  exp!=  null;  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  exp!=  null;  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(mant)&&  exp!=  null;	  boolean    allZeros    =    isAllZeros(mant)&&    exp    ==    null;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
59	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(dec)&&  exp  ==  null;  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  boolean  allZeros  =  isAllZeros(dec)&&  exp  ==  null;  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(dec)&&  exp  ==  null;	  boolean    allZeros    =    isAllZeros(mant)&&    exp    ==    null;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
60	[BUG]  [BUGGY]  String  numeric  =  val.substring(0,  val.length()));  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  numeric  =  val.substring(0,  val.length()));  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  numeric  =  val.substring(0,  val.length()));	  String    numeric    =    val.substring(0,    val.length()    +    1);    	non-compiled	[CE]  	6	None	replace
61	[BUG]  [BUGGY]  String  numeric  =  val.substring(1,  val.length())+  1;  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  numeric  =  val.substring(1,  val.length())+  1;  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  numeric  =  val.substring(1,  val.length())+  1;	  String    numeric    =    val.substring(1,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
62	[BUG]  [BUGGY]  String  numeric  =  new  String(numeric.substring(0,  expPos));  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  numeric  =  new  String(numeric.substring(0,  expPos));  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  numeric  =  new  String(numeric.substring(0,  expPos));	  String    numeric    =    new    String(numeric.substring(0,    val.length()));    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
63	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp,  numeric,  expPos);  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp,  numeric,  expPos);  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp,  numeric,  expPos);	  boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(exp,    numeric,    dec);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
64	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp,  numeric,  exp);  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp,  numeric,  exp);  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp,  numeric,  exp);	  boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(exp,    numeric,    dec);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
65	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(mant)||  exp  ==  null;  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  boolean  allZeros  =  isAllZeros(mant)||  exp  ==  null;  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(mant)||  exp  ==  null;	  boolean    allZeros    =    isAllZeros(mant)&&    exp    ==    null;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
66	[BUG]  [BUGGY]  String  exp  =  val.substring(0,  null.length());  [CE]  illegal  start  of  expression  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  exp  =  val.substring(0,  null.length());  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  exp  =  val.substring(0,  null.length());	  String    exp    =    numeric.substring(0,    val.length());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
67	[BUG]  [BUGGY]  String  dec  =  val.substring(decPos  +  1,  val.length()  -  1);  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  dec  =  val.substring(decPos  +  1,  val.length()  -  1);  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  dec  =  val.substring(decPos  +  1,  val.length()  -  1);	  String    dec    =    val.substring(expPos    +    1,    val.length());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
68	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(value);  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(value);  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(value);	  boolean    allZeros    =    isAllZeros(numeric)&&    isAllZeros(null);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
69	[BUG]  [BUGGY]  String  dec  =  val.substring(0,  val.length())+  1;  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  dec  =  val.substring(0,  val.length())+  1;  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  dec  =  val.substring(0,  val.length())+  1;	  String    dec    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
70	[BUG]  [BUGGY]  String  numeric  =  mant.substring(expPos  +  1,  val.length());  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  numeric  =  mant.substring(expPos  +  1,  val.length());  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  numeric  =  mant.substring(expPos  +  1,  val.length());	  String    numeric    =    value.substring(expPos    +    1,    val.length());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
71	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(dec)&&  isAllZeros(exp,  numeric,  dec);  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  boolean  allZeros  =  isAllZeros(dec)&&  isAllZeros(exp,  numeric,  dec);  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(dec)&&  isAllZeros(exp,  numeric,  dec);	  boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(exp,    numeric,    dec);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
72	[BUG]  [BUGGY]  String  nomeric  =  val.substring(decPos  +  1,  val.length());  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  nomeric  =  val.substring(decPos  +  1,  val.length());  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  nomeric  =  val.substring(decPos  +  1,  val.length());	  String    nomeric    =    val.substring(expPos    +    1,    val.length());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
73	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(dec)&&  isAllZeros(numeric);  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  boolean  allZeros  =  isAllZeros(dec)&&  isAllZeros(numeric);  [BUGGY]      switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(dec)&&  isAllZeros(numeric);	  boolean    allZeros    =    isAllZeros(numeric)&&    isAllZeros(dec);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
74	[BUG]  [BUGGY]  String  exp  =  val.substring(decPos  +  1,  val.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  exp  =  val.substring(decPos  +  1,  val.length()  -  1);  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  exp  =  val.substring(decPos  +  1,  val.length()  -  1);	  String    exp    =    val.substring(expPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
75	[BUG]  [BUGGY]  String  exp  =  val.substring(0,  numeric.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  exp  =  val.substring(0,  numeric.length()  -  1);  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  exp  =  val.substring(0,  numeric.length()  -  1);	  String    exp    =    val.substring(0,    val.length());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
76	[BUG]  [BUGGY]  String  numeric  =  val.substring(decPos  +  1,  expPos.length());  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);      [BUGGY]  String  numeric  =  val.substring(decPos  +  1,  expPos.length());  [BUGGY]      boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  numeric  =  val.substring(decPos  +  1,  expPos.length());	  String    numeric    =    val.substring(decPos    +    1,    val.length());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
