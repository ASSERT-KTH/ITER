bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  exp  =  val.substring(0,  val.length());  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);    [BUGGY]  String  exp  =  val.substring(0,  val.length());  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  exp  =  val.substring(0,  val.length());	      String    exp    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
2	[BUG]  [BUGGY]  String  exp  =  val.substring(0,  val.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);    [BUGGY]  String  exp  =  val.substring(0,  val.length()  +  1);  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  exp  =  val.substring(0,  val.length()  +  1);	      String    exp    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
3	[BUG]  [BUGGY]  String  exp  =  numeric.substring(0,  val.length());  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);    [BUGGY]  String  exp  =  numeric.substring(0,  val.length());  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  exp  =  numeric.substring(0,  val.length());	      String    exp    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
4	[BUG]  [BUGGY]  String  exp  =  val.substring(1,  val.length());  [CE]  illegal  start  of  expression  [FE]                    StringIndexOutOfBoundsException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);    [BUGGY]  String  exp  =  val.substring(1,  val.length());  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  exp  =  val.substring(1,  val.length());	      String    exp    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
5	[BUG]  [BUGGY]  String  numeric  =  val.substring(0,  val.length());  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);    [BUGGY]  String  numeric  =  val.substring(0,  val.length());  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  numeric  =  val.substring(0,  val.length());	      String    numeric    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
6	[BUG]  [BUGGY]  String  numeric  =  val.substring(0,  val.length()  +  1);  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);    [BUGGY]  String  numeric  =  val.substring(0,  val.length()  +  1);  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  numeric  =  val.substring(0,  val.length()  +  1);	      String    numeric    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
7	[BUG]  [BUGGY]  String  numeric  =  val.substring(1,  val.length());  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);    [BUGGY]  String  numeric  =  val.substring(1,  val.length());  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  numeric  =  val.substring(1,  val.length());	      String    numeric    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
8	[BUG]  [BUGGY]  String  numeric  =  val.substring(0,  val.length();  [CE]  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);    [BUGGY]  String  numeric  =  val.substring(0,  val.length();  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  numeric  =  val.substring(0,  val.length();	      String    numeric    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  	2	None	replace
9	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(mant);  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);    [BUGGY]  boolean  allZeros  =  isAllZeros(mant);  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(mant);	      boolean    allZeros    =    isAllZeros(numeric);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
10	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(dec)&&  isAllZeros(exp,  mant);  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);    [BUGGY]  boolean  allZeros  =  isAllZeros(dec)&&  isAllZeros(exp,  mant);  [BUGGY]    switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(dec)&&  isAllZeros(exp,  mant);	  boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(exp,    dec);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
11	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(dec)&&  isAllZeros(exp,  numeric);  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);    [BUGGY]  boolean  allZeros  =  isAllZeros(dec)&&  isAllZeros(exp,  numeric);  [BUGGY]    switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(dec)&&  isAllZeros(exp,  numeric);	  boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(exp,    dec);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
12	[BUG]  [BUGGY]  String  numeric  =  val.substring(expPos  +  1,  val.length());  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);    [BUGGY]  String  numeric  =  val.substring(expPos  +  1,  val.length());  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  numeric  =  val.substring(expPos  +  1,  val.length());	      String    numeric    =    val.substring(expPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
13	[BUG]  [BUGGY]  String  numeric  =  value.substring(expPos  +  1,  val.length());  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);    [BUGGY]  String  numeric  =  value.substring(expPos  +  1,  val.length());  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  numeric  =  value.substring(expPos  +  1,  val.length());	      String    numeric    =    val.substring(expPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
14	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)||  isAllZeros(exp);  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);    [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)||  isAllZeros(exp);  [BUGGY]    switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(numeric)||  isAllZeros(exp);	  boolean    allZeros    =    isAllZeros(mant)||    isAllZeros(exp);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
15	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(null);  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);    [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(null);  [BUGGY]    switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(null);	  boolean    allZeros    =    isAllZeros(numeric)&&    isAllZeros(exp);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
16	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(dec);  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);    [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(dec);  [BUGGY]    switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(dec);	  boolean    allZeros    =    isAllZeros(numeric)&&    isAllZeros(exp);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
17	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(dec)&&  isAllZeros(exp);  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);    [BUGGY]  boolean  allZeros  =  isAllZeros(dec)&&  isAllZeros(exp);  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(dec)&&  isAllZeros(exp);	      boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(exp);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
18	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(exp,  numeric);  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);    [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(exp,  numeric);  [BUGGY]    switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(exp,  numeric);	  boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(exp,    numeric);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
19	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp,  numeric,  dec);  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);    [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp,  numeric,  dec);  [BUGGY]    switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp,  numeric,  dec);	  boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(exp,    numeric);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
20	[BUG]  [BUGGY]  String  numeric  =  new  String(numeric.substring(0,  val.length()));  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);    [BUGGY]  String  numeric  =  new  String(numeric.substring(0,  val.length()));  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  numeric  =  new  String(numeric.substring(0,  val.length()));	      String    numeric    =    numeric.substring(0,    numeric.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
21	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(mant);  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);    [BUGGY]  boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(mant);  [BUGGY]    switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(numeric)&&  isAllZeros(mant);	  boolean    allZeros    =    isAllZeros(numeric)&&    isAllZeros(exp);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
22	[BUG]  [BUGGY]  String  dec  =  val.substring(expPos  +  1,  val.length());  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);    [BUGGY]  String  dec  =  val.substring(expPos  +  1,  val.length());  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  dec  =  val.substring(expPos  +  1,  val.length());	      String    numeric    =    val.substring(expPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
23	[BUG]  [BUGGY]  String  nomeric  =  val.substring(expPos  +  1,  val.length());  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);    [BUGGY]  String  nomeric  =  val.substring(expPos  +  1,  val.length());  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  nomeric  =  val.substring(expPos  +  1,  val.length());	      String    numeric    =    val.substring(expPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
24	[BUG]  [BUGGY]  String  dec  =  val.substring(0,  val.length()  -  1);  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);    [BUGGY]  String  dec  =  val.substring(0,  val.length()  -  1);  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  dec  =  val.substring(0,  val.length()  -  1);	      String    numeric    =    numeric.substring(0,    numeric.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
25	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(numeric);  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);    [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(numeric);  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(numeric);	      boolean    allZeros    =    isAllZeros(numeric)&&    isAllZeros(numeric);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
26	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp,  expPos);  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);    [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp,  expPos);  [BUGGY]    switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp,  expPos);	  boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(exp,    dec);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
27	[BUG]  [BUGGY]  String  numeric  =  val.substring(0,  val.length())+  1;  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);    [BUGGY]  String  numeric  =  val.substring(0,  val.length())+  1;  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  numeric  =  val.substring(0,  val.length())+  1;	      String    numeric    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
28	[BUG]  [BUGGY]  String  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);    [BUGGY]  String  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  exp  =  val.substring(expPos  +  1,  val.length()  -  1);	      String    exp    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
29	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  exp  ==  null;  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);    [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  exp  ==  null;  [BUGGY]    switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(mant)&&  exp  ==  null;	  boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(exp,    numeric);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
30	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp,  exp);  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);    [BUGGY]  boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp,  exp);  [BUGGY]    switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(mant)&&  isAllZeros(exp,  exp);	  boolean    allZeros    =    isAllZeros(mant)&&    isAllZeros(exp,    dec);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
31	[BUG]  [BUGGY]  boolean  allZeros  =  isAllZeros(dec)||  isAllZeros(exp);  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);    [BUGGY]  boolean  allZeros  =  isAllZeros(dec)||  isAllZeros(exp);  [BUGGY]    switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	boolean  allZeros  =  isAllZeros(dec)||  isAllZeros(exp);	  boolean    allZeros    =    isAllZeros(mant)||    isAllZeros(exp);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
32	[BUG]  [BUGGY]  String  numeric  =  val.substring(0,  expPos.length()  -  1);  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);    [BUGGY]  String  numeric  =  val.substring(0,  expPos.length()  -  1);  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  numeric  =  val.substring(0,  expPos.length()  -  1);	      String    numeric    =    numeric.substring(0,    numeric.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
33	[BUG]  [BUGGY]  String  numeric  =  val.substring(1,  val.length()  -  1);  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);    [BUGGY]  String  numeric  =  val.substring(1,  val.length()  -  1);  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  numeric  =  val.substring(1,  val.length()  -  1);	      String    numeric    =    numeric.substring(0,    numeric.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
34	[BUG]  [BUGGY]  String  numeric  =  val.substring(decPos  +  1,  val.length());  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    dec  =  null;  }  if  (!Character.isDigit(lastChar))  {  if  (expPos  >  -1  &&  expPos  <  val.length()  -  1)  {  exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);    [BUGGY]  String  numeric  =  val.substring(decPos  +  1,  val.length());  [BUGGY]    boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	189	189	1	replace	String  numeric  =  val.substring(decPos  +  1,  val.length());	      String    numeric    =    val.substring(expPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
