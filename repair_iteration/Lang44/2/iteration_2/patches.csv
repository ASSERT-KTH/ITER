bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  val  =  val.toUpperCase(Locale.ENGLISH);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  String  val  =  val.toUpperCase(Locale.ENGLISH);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	String  val  =  val.toUpperCase(Locale.ENGLISH);	  String    val    =    val.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  not  a  statement	18	None	replace
2	[BUG]  [BUGGY]  String  val  =  val.toLowerCase(Locale.ENGLISH,  1);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  String  val  =  val.toLowerCase(Locale.ENGLISH,  1);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	String  val  =  val.toLowerCase(Locale.ENGLISH,  1);	  String    val    =    val.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  not  a  statement	18	None	replace
3	[BUG]  [BUGGY]  String  val  =  val.toLowerCase(Locale.ENGLISH,  true);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  String  val  =  val.toLowerCase(Locale.ENGLISH,  true);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	String  val  =  val.toLowerCase(Locale.ENGLISH,  true);	  String    val    =    val.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  not  a  statement	18	None	replace
4	[BUG]  [BUGGY]  Number  val  =  createNumber(val,  true);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createNumber(val,  true);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val,  true);	  Number    val    =    createNumber(val,    false);    	non-compiled	[CE]  not  a  statement	23	None	replace
5	[BUG]  [BUGGY]  Number  val  =  createNumber(val,  false,  null);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createNumber(val,  false,  null);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val,  false,  null);	  Number    val    =    createNumber(val,    false);    	non-compiled	[CE]  not  a  statement	23	None	replace
6	[BUG]  [BUGGY]  Number  val  =  createNumber(null,  false);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createNumber(null,  false);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(null,  false);	  Number    val    =    createNumber(val,    false);    	non-compiled	[CE]  not  a  statement	23	None	replace
7	[BUG]  [BUGGY]  Number  val  =  createNumber(val,  false,  val);  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createNumber(val,  false,  val);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val,  false,  val);	  Number    val    =    createNumber(val,    false);    	non-compiled	[CE]  not  a  statement	23	None	replace
8	[BUG]  [BUGGY]  Number  val  =(Number)val.cloneByte();  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =(Number)val.cloneByte();  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =(Number)val.cloneByte();	  Number    val    =(Number)val.cloneTree();    	non-compiled	[CE]  not  a  statement	2	None	replace
9	[BUG]  [BUGGY]  Number  val  =  createNull(val);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createNull(val);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNull(val);	  Number    val    =    createValue(val);    	non-compiled	[CE]  not  a  statement	51	None	replace
10	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length());  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  String  val  =  val.substring(0,  val.length());  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	String  val  =  val.substring(0,  val.length());	  Number    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	7	None	replace
11	[BUG]  [BUGGY]  number  =  val.substring(0,  val.length());  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  number  =  val.substring(0,  val.length());  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	number  =  val.substring(0,  val.length());	  Number    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	7	None	replace
12	[BUG]  [BUGGY]  Number  val  =  val.substring(0,  val.length();  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  val.substring(0,  val.length();  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  val.substring(0,  val.length();	  Number    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	7	None	replace
13	[BUG]  [BUGGY]  if(val.length()  ==  0  ||  val.charAt(0)  ==  ':')  {  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  if(val.length()  ==  0  ||  val.charAt(0)  ==  ':')  {  [BUGGY]      throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	if(val.length()  ==  0  ||  val.charAt(0)  ==  ':')  {	  if(val.length()    ==    0    ||    val.charAt(0)    =='   "')    {    	non-compiled	[CE]  not  a  statement	46	None	replace
14	[BUG]  [BUGGY]  if(val.length()!=  0  ||  val.charAt(0)!=  '/')  {  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  if(val.length()!=  0  ||  val.charAt(0)!=  '/')  {  [BUGGY]      throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	if(val.length()!=  0  ||  val.charAt(0)!=  '/')  {	  if(val.length()    ==    0    ||    val.charAt(0)!=    '/')    {    	non-compiled	[CE]  not  a  statement	29	None	replace
15	[BUG]  [BUGGY]  if(val.length()  ==  0  ||  val.charAt(1)!=  '/')  {  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  if(val.length()  ==  0  ||  val.charAt(1)!=  '/')  {  [BUGGY]      throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	if(val.length()  ==  0  ||  val.charAt(1)!=  '/')  {	  if(val.length()    ==    0    ||    val.charAt(0)!=    '/')    {    	non-compiled	[CE]  not  a  statement	29	None	replace
16	[BUG]  [BUGGY]  if(val.length()  ==  1  ||  val.charAt(0)!=  '/')  {  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  if(val.length()  ==  1  ||  val.charAt(0)!=  '/')  {  [BUGGY]      throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	if(val.length()  ==  1  ||  val.charAt(0)!=  '/')  {	  if(val.length()    ==    0    ||    val.charAt(0)!=    '/')    {    	non-compiled	[CE]  not  a  statement	29	None	replace
17	[BUG]  [BUGGY]  if(val.length()!=  0  ||  val.charAt(val.length()  -  1)!=' "')  {  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  if(val.length()!=  0  ||  val.charAt(val.length()  -  1)!=' "')  {  [BUGGY]      throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	if(val.length()!=  0  ||  val.charAt(val.length()  -  1)!=' "')  {	  if(val.length()    ==    0    ||    val.charAt(val.length())!='   "')    {    	non-compiled	[CE]  not  a  statement	24	None	replace
18	[BUG]  [BUGGY]  if(val.length()  ==  0  ||  val.charAt(val.length()  -  1)!=  '/')  {  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  if(val.length()  ==  0  ||  val.charAt(val.length()  -  1)!=  '/')  {  [BUGGY]      throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	if(val.length()  ==  0  ||  val.charAt(val.length()  -  1)!=  '/')  {	  if(val.length()    ==    0    ||    val.charAt(val.length())!='   "')    {    	non-compiled	[CE]  not  a  statement	24	None	replace
19	[BUG]  [BUGGY]  Number  val  =  getNumberValue(val.toUpperCase(),  false);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  getNumberValue(val.toUpperCase(),  false);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getNumberValue(val.toUpperCase(),  false);	  Number    val    =    getNumberValue(val.toUpperCase());    	non-compiled	[CE]  not  a  statement	14	None	replace
20	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toUpperCase(),  false);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createNumber(val.toUpperCase(),  false);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val.toUpperCase(),  false);	  Number    val    =    createNumber(val.toUpperCase());    	non-compiled	[CE]  not  a  statement	52	None	replace
21	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toUpperCase()  +  1);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createNumber(val.toUpperCase()  +  1);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val.toUpperCase()  +  1);	  Number    val    =    createNumber(val.toUpperCase());    	non-compiled	[CE]  not  a  statement	52	None	replace
22	[BUG]  [BUGGY]  Number  val  =  getNumber(val.toUpperCase()  +  1);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  getNumber(val.toUpperCase()  +  1);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getNumber(val.toUpperCase()  +  1);	  Number    val    =    getNumber(val.toUpperCase());    	non-compiled	[CE]  not  a  statement	17	None	replace
23	[BUG]  [BUGGY]  Number  val  =  getNumber(val.toUpperCase(),  false);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  getNumber(val.toUpperCase(),  false);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getNumber(val.toUpperCase(),  false);	  Number    val    =    getNumber(val.toUpperCase());    	non-compiled	[CE]  not  a  statement	17	None	replace
24	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toLowerCase(),  false);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createNumber(val.toLowerCase(),  false);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val.toLowerCase(),  false);	  Number    val    =    createNumber(val.toLowerCase());    	non-compiled	[CE]  not  a  statement	21	None	replace
25	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toLowerCase(),  true);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createNumber(val.toLowerCase(),  true);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val.toLowerCase(),  true);	  Number    val    =    createNumber(val.toLowerCase());    	non-compiled	[CE]  not  a  statement	21	None	replace
26	[BUG]  [BUGGY]  Number  val  =  getNumberValue(val.trim()).toLowerCase();  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  getNumberValue(val.trim()).toLowerCase();  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getNumberValue(val.trim()).toLowerCase();	  Number    val    =    getNumberValue(val.trim());    	non-compiled	[CE]  not  a  statement	43	None	replace
27	[BUG]  [BUGGY]  if(val.length()!=  0  ||  val.charAt(0)  ==  '-')  {  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  if(val.length()!=  0  ||  val.charAt(0)  ==  '-')  {  [BUGGY]      throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	if(val.length()!=  0  ||  val.charAt(0)  ==  '-')  {	  if(val.length()!=    0    ||    val.charAt(0)!=    '-')    {    	non-compiled	[CE]  not  a  statement	4	None	replace
28	[BUG]  [BUGGY]  if(val.length()  >=  0  ||  val.charAt(0)!=  '-')  {  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  if(val.length()  >=  0  ||  val.charAt(0)!=  '-')  {  [BUGGY]      throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	if(val.length()  >=  0  ||  val.charAt(0)!=  '-')  {	  if(val.length()!=    0    ||    val.charAt(0)!=    '-')    {    	non-compiled	[CE]  not  a  statement	4	None	replace
29	[BUG]  [BUGGY]  Number  val  =(Number)val.doubleValue();  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =(Number)val.doubleValue();  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =(Number)val.doubleValue();	  Number    val    =(Number)val.intValue();    	non-compiled	[CE]  not  a  statement	3	None	replace
30	[BUG]  [BUGGY]  Number  val  =(Number)val.longValue();  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =(Number)val.longValue();  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =(Number)val.longValue();	  Number    val    =(Number)val.intValue();    	non-compiled	[CE]  not  a  statement	3	None	replace
31	[BUG]  [BUGGY]  Number  val  =(Number)val.floatValue();  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =(Number)val.floatValue();  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =(Number)val.floatValue();	  Number    val    =(Number)val.intValue();    	non-compiled	[CE]  not  a  statement	3	None	replace
32	[BUG]  [BUGGY]  Number  val  =  getNumber();  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  getNumber();  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getNumber();	  Number    val    =    getValue();    	non-compiled	[CE]  not  a  statement	31	None	replace
33	[BUG]  [BUGGY]  throw  new  NumberFormatException( " " "  +  val.toString()  + "  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  throw  new  NumberFormatException( " " "  +  val.toString()  + "  is  not  a  valid  number. ");  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	throw  new  NumberFormatException( " " "  +  val.toString()  + "  is  not  a  valid  number. ");	  throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	15	None	replace
34	[BUG]  [BUGGY]  throw  new  NumberFormatException( " " "  +  val.length()  + "  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  throw  new  NumberFormatException( " " "  +  val.length()  + "  is  not  a  valid  number. ");  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	throw  new  NumberFormatException( " " "  +  val.length()  + "  is  not  a  valid  number. ");	  throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	15	None	replace
35	[BUG]  [BUGGY]  throw  new  NumberFormatException( " " "  +  val.getName()  + "  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  throw  new  NumberFormatException( " " "  +  val.getName()  + "  is  not  a  valid  number. ");  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	throw  new  NumberFormatException( " " "  +  val.getName()  + "  is  not  a  valid  number. ");	  throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	15	None	replace
36	[BUG]  [BUGGY]  throw  new  NumberFormatException( " "  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  throw  new  NumberFormatException( " "  is  not  a  valid  number. ");  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	throw  new  NumberFormatException( " "  is  not  a  valid  number. ");	  throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	15	None	replace
37	[BUG]  [BUGGY]  Number  val  =  getNumber(val.getValue());  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  getNumber(val.getValue());  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getNumber(val.getValue());	  Number    val    =    getNumber(val.toCharArray());    	non-compiled	[CE]  not  a  statement	33	None	replace
38	[BUG]  [BUGGY]  Number  val  =  getNumber(val.substring(1));  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  getNumber(val.substring(1));  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getNumber(val.substring(1));	  Number    val    =    getNumber(val.toCharArray());    	non-compiled	[CE]  not  a  statement	33	None	replace
39	[BUG]  [BUGGY]  Number  val  =  getValue(val.toLowerCase(),  false);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  getValue(val.toLowerCase(),  false);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getValue(val.toLowerCase(),  false);	  Number    val    =    getValue(val.toLowerCase());    	non-compiled	[CE]  not  a  statement	25	None	replace
40	[BUG]  [BUGGY]  Number  val  =  getValue(val.toLowerCase()  +  1);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  getValue(val.toLowerCase()  +  1);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getValue(val.toLowerCase()  +  1);	  Number    val    =    getValue(val.toLowerCase());    	non-compiled	[CE]  not  a  statement	25	None	replace
41	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length()  -  2);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  String  val  =  val.substring(0,  val.length()  -  2);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	String  val  =  val.substring(0,  val.length()  -  2);	  String    val    =    val.trim();    	non-compiled	[CE]  not  a  statement	47	None	replace
42	[BUG]  [BUGGY]  if(val.length()  ==  0  ||(val.charAt(0)  ==  '-'  &&  val.charAt(2)  ==  '-'))  {  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  if(val.length()  ==  0  ||(val.charAt(0)  ==  '-'  &&  val.charAt(2)  ==  '-'))  {  [BUGGY]      throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	if(val.length()  ==  0  ||(val.charAt(0)  ==  '-'  &&  val.charAt(2)  ==  '-'))  {	  if(val.length()    ==    0    ||(val.charAt(0)    ==    '-'    &&    val.charAt(1)    ==    '-'))    {    	non-compiled	[CE]  not  a  statement	28	None	replace
43	[BUG]  [BUGGY]  if(val.length()  ==  1  ||(val.charAt(0)  ==  '-'  &&  val.charAt(1)  ==  '-'))  {  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  if(val.length()  ==  1  ||(val.charAt(0)  ==  '-'  &&  val.charAt(1)  ==  '-'))  {  [BUGGY]      throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	if(val.length()  ==  1  ||(val.charAt(0)  ==  '-'  &&  val.charAt(1)  ==  '-'))  {	  if(val.length()    ==    0    ||(val.charAt(0)    ==    '-'    &&    val.charAt(1)    ==    '-'))    {    	non-compiled	[CE]  not  a  statement	28	None	replace
44	[BUG]  [BUGGY]  Number  val  =  getValue(val.trim()).toLowerCase();  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  getValue(val.trim()).toLowerCase();  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getValue(val.trim()).toLowerCase();	  Number    val    =    getValue(val.trim());    	non-compiled	[CE]  not  a  statement	39	None	replace
45	[BUG]  [BUGGY]  Number  val  =  getValue(val.substring(1));  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  getValue(val.substring(1));  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getValue(val.substring(1));	  Number    val    =    getValue(val.trim());    	non-compiled	[CE]  not  a  statement	39	None	replace
46	[BUG]  [BUGGY]  if(val.length()  ==  1  ||  val.charAt(0)  ==  '-')  {  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  if(val.length()  ==  1  ||  val.charAt(0)  ==  '-')  {  [BUGGY]      throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	if(val.length()  ==  1  ||  val.charAt(0)  ==  '-')  {	  if(val.length()    ==    0    ||    val.charAt(0)    ==    '-')    {    	non-compiled	[CE]  not  a  statement	6	None	replace
47	[BUG]  [BUGGY]  Numeric  val  =  val.substring(0,  val.length());  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Numeric  val  =  val.substring(0,  val.length());  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Numeric  val  =  val.substring(0,  val.length());	  Number    val    =    val.substring(0,    val.length()    -    3);    	non-compiled	[CE]  not  a  statement	34	None	replace
48	[BUG]  [BUGGY]  Number  val  =(Number)val.toUpperCase();  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =(Number)val.toUpperCase();  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =(Number)val.toUpperCase();	  Number    val    =(Number)val.toLowerCase();    	non-compiled	[CE]  not  a  statement	44	None	replace
49	[BUG]  [BUGGY]  Number  val  =(Number)val.toLowerCase(Locale.ENGLISH);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =(Number)val.toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =(Number)val.toLowerCase(Locale.ENGLISH);	  Number    val    =(Number)val.toLowerCase();    	non-compiled	[CE]  not  a  statement	44	None	replace
50	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toString(),  true);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createNumber(val.toString(),  true);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val.toString(),  true);	  Number    val    =    createNumber(val.toCharArray(),    true);    	non-compiled	[CE]  not  a  statement	41	None	replace
51	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  true,  0);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  true,  0);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val.toCharArray(),  true,  0);	  Number    val    =    createNumber(val.toCharArray(),    true);    	non-compiled	[CE]  not  a  statement	41	None	replace
52	[BUG]  [BUGGY]  val  =  createNumber(val.toCharArray(),  false);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  val  =  createNumber(val.toCharArray(),  false);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	val  =  createNumber(val.toCharArray(),  false);	  Number    val    =    createNumber(val.toCharArray(),    true);    	non-compiled	[CE]  not  a  statement	41	None	replace
53	[BUG]  [BUGGY]  Number  val  =  createNumber(val.substring(1),  val.length());  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createNumber(val.substring(1),  val.length());  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val.substring(1),  val.length());	  Number    val    =    createNumber(val.substring(1));    	non-compiled	[CE]  not  a  statement	10	None	replace
54	[BUG]  [BUGGY]  Number  val  =  createNumber(val.substring(2));  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createNumber(val.substring(2));  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val.substring(2));	  Number    val    =    createNumber(val.substring(1));    	non-compiled	[CE]  not  a  statement	10	None	replace
55	[BUG]  [BUGGY]  Number  val  =  createNumber(val.substring(0,  val.length()));  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createNumber(val.substring(0,  val.length()));  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val.substring(0,  val.length()));	  Number    val    =    createNumber(val.substring(1));    	non-compiled	[CE]  not  a  statement	10	None	replace
56	[BUG]  [BUGGY]  if(val.length()  ==  1  ||  val.charAt(1)  ==  '-')  {  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  if(val.length()  ==  1  ||  val.charAt(1)  ==  '-')  {  [BUGGY]      throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	if(val.length()  ==  1  ||  val.charAt(1)  ==  '-')  {	  if(val.length()    ==    0    ||    val.charAt(1)    ==    '-')    {    	non-compiled	[CE]  not  a  statement	37	None	replace
57	[BUG]  [BUGGY]  Number  val  =  getNumber(val.toLowerCase()  +  1);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  getNumber(val.toLowerCase()  +  1);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getNumber(val.toLowerCase()  +  1);	  Number    val    =    getNumber(val.toLowerCase());    	non-compiled	[CE]  not  a  statement	16	None	replace
58	[BUG]  [BUGGY]  Number  val  =(Number)val.toString();  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =(Number)val.toString();  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =(Number)val.toString();	  Number    val    =(Number)val.toCharArray();    	non-compiled	[CE]  not  a  statement	45	None	replace
59	[BUG]  [BUGGY]  Number  val  =  getNullValue(val.toLowerCase());  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  getNullValue(val.toLowerCase());  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getNullValue(val.toLowerCase());	  Number    val    =    getNullValue(val);    	non-compiled	[CE]  not  a  statement	26	None	replace
60	[BUG]  [BUGGY]  String  val  =  val!=  null?  null  :  val.toLowerCase();  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  String  val  =  val!=  null?  null  :  val.toLowerCase();  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	String  val  =  val!=  null?  null  :  val.toLowerCase();	  String    val    =    val    ==    null?    null    :    val.toLowerCase();    	non-compiled	[CE]  not  a  statement	42	None	replace
61	[BUG]  [BUGGY]  String  val  =  val  ==  null?  null  :  val.toUpperCase();  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  String  val  =  val  ==  null?  null  :  val.toUpperCase();  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	String  val  =  val  ==  null?  null  :  val.toUpperCase();	  String    val    =    val    ==    null?    null    :    val.toLowerCase();    	non-compiled	[CE]  not  a  statement	42	None	replace
62	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toString(),  false);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createNumber(val.toString(),  false);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val.toString(),  false);	  Number    val    =    createNumber(val.toCharArray(),    false);    	non-compiled	[CE]  not  a  statement	40	None	replace
63	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  false,  val);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  false,  val);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val.toCharArray(),  false,  val);	  Number    val    =    createNumber(val.toCharArray(),    false);    	non-compiled	[CE]  not  a  statement	40	None	replace
64	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  false,  null);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  false,  null);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val.toCharArray(),  false,  null);	  Number    val    =    createNumber(val.toCharArray(),    false);    	non-compiled	[CE]  not  a  statement	40	None	replace
65	[BUG]  [BUGGY]  null  =  val.length();  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  null  =  val.length();  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	null  =  val.length();	  if(val.length()    ==    0)    {    return    this;    }    	non-compiled	[CE]  not  a  statement	35	None	replace
66	[BUG]  [BUGGY]  Number  val  =  getBaseValue(val);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  getBaseValue(val);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getBaseValue(val);	  Number    val    =    getBaseValue();    	non-compiled	[CE]  not  a  statement	32	None	replace
67	[BUG]  [BUGGY]  Number  val  =  getNumberValue(val.toCharArray());  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  getNumberValue(val.toCharArray());  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getNumberValue(val.toCharArray());	  Number    val    =    getNumberValue(val.toLowerCase());    	non-compiled	[CE]  not  a  statement	13	None	replace
68	[BUG]  [BUGGY]  val  =  val.substring(0,  val.length());  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  val  =  val.substring(0,  val.length());  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	val  =  val.substring(0,  val.length());	  Number    val    =    val.substring(0,    val.length()    -    2);    	non-compiled	[CE]  not  a  statement	8	None	replace
69	[BUG]  [BUGGY]  Number  val  =  val.substring(0,  val.length()  +  1);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  val.substring(0,  val.length()  +  1);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  val.substring(0,  val.length()  +  1);	  Number    val    =    val.substring(0,    val.length());    	non-compiled	[CE]  not  a  statement	9	None	replace
70	[BUG]  [BUGGY]  Number  val  =  getValue(val.toUpperCase(),  false);  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  getValue(val.toUpperCase(),  false);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getValue(val.toUpperCase(),  false);	  Number    val    =    getValue(val.toUpperCase());    	non-compiled	[CE]  not  a  statement	27	None	replace
71	[BUG]  [BUGGY]  Number  val  =  getValue(val.toUpperCase()  +  1);  [CE]  not  a  statement  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  getValue(val.toUpperCase()  +  1);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getValue(val.toUpperCase()  +  1);	  Number    val    =    getValue(val.toUpperCase());    	non-compiled	[CE]  not  a  statement	27	None	replace
72	[BUG]  [BUGGY]  if(val.length()  ==  0)  {  throw  new  NumberFormatException( " ");  }  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  if(val.length()  ==  0)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	if(val.length()  ==  0)  {  throw  new  NumberFormatException( " ");  }	  aughtException(   "   "   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	48	None	replace
73	[BUG]  [BUGGY]  if(val.length()  ==  0)  {  throw  new  NumberFormatException( " " "  +  val.substring(0,  val.length()  -  1));  }  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  if(val.length()  ==  0)  {  throw  new  NumberFormatException( " " "  +  val.substring(0,  val.length()  -  1));  }  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	if(val.length()  ==  0)  {  throw  new  NumberFormatException( " " "  +  val.substring(0,  val.length()  -  1));  }	  aughtException(   "   "   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	48	None	replace
74	[BUG]  [BUGGY]  if(val.length()  ==  0)  {  throw  new  NumberFormatException( " " ");  }  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  if(val.length()  ==  0)  {  throw  new  NumberFormatException( " " ");  }  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	if(val.length()  ==  0)  {  throw  new  NumberFormatException( " " ");  }	  aughtException(   "   "   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	48	None	replace
75	[BUG]  [BUGGY]  Number  val  =  createNumber(val,  this);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createNumber(val,  this);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val,  this);	  Number    val    =    createNumber(val,    null);    	non-compiled	[CE]  not  a  statement	22	None	replace
76	[BUG]  [BUGGY]  Number  val  =  createNumber(val,  null,  0);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createNumber(val,  null,  0);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val,  null,  0);	  Number    val    =    createNumber(val,    null);    	non-compiled	[CE]  not  a  statement	22	None	replace
77	[BUG]  [BUGGY]  Number  val  =  createNumber(val,  null,  true);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createNumber(val,  null,  true);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val,  null,  true);	  Number    val    =    createNumber(val,    null);    	non-compiled	[CE]  not  a  statement	22	None	replace
78	[BUG]  [BUGGY]  Number  val  =  createNumber(val,  null,  false);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createNumber(val,  null,  false);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val,  null,  false);	  Number    val    =    createNumber(val,    null);    	non-compiled	[CE]  not  a  statement	22	None	replace
79	[BUG]  [BUGGY]  MutableValueUtils.checkState(val!=  null);  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  MutableValueUtils.checkState(val!=  null);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	MutableValueUtils.checkState(val!=  null);	  MutableValueUtils.checkNotNull(val);    	non-compiled	[CE]  not  a  statement	50	None	replace
80	[BUG]  [BUGGY]  MutableValueUtils.checkState(val  ==  null);  [CE]  not  a  statement  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  MutableValueUtils.checkState(val  ==  null);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	MutableValueUtils.checkState(val  ==  null);	  MutableValueUtils.checkNotNull(val);    	non-compiled	[CE]  not  a  statement	50	None	replace
81	[BUG]  [BUGGY]  Number  val  =  createNumber(val.getKey());  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createNumber(val.getKey());  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val.getKey());	  Number    val    =    createNumber(val.getValue());    	non-compiled	[CE]  not  a  statement	11	None	replace
82	[BUG]  [BUGGY]  Number  val  =  createNumber(val.getValue()  +  1);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createNumber(val.getValue()  +  1);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val.getValue()  +  1);	  Number    val    =    createNumber(val.getValue());    	non-compiled	[CE]  not  a  statement	11	None	replace
83	[BUG]  [BUGGY]  MutableValueUtils.checkState(val.length()!=  0);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  MutableValueUtils.checkState(val.length()!=  0);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	MutableValueUtils.checkState(val.length()!=  0);	  MutableValueUtils.checkState(val.length()    ==    0);    	non-compiled	[CE]  not  a  statement	49	None	replace
84	[BUG]  [BUGGY]  MutableValueUtils.checkState(val.length()  ==  1);  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  MutableValueUtils.checkState(val.length()  ==  1);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	MutableValueUtils.checkState(val.length()  ==  1);	  MutableValueUtils.checkState(val.length()    ==    0);    	non-compiled	[CE]  not  a  statement	49	None	replace
85	[BUG]  [BUGGY]  MutableValueUtils.checkState(val.length()  >=  0);  [CE]  not  a  statement  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  MutableValueUtils.checkState(val.length()  >=  0);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	MutableValueUtils.checkState(val.length()  >=  0);	  MutableValueUtils.checkState(val.length()    ==    0);    	non-compiled	[CE]  not  a  statement	49	None	replace
86	[BUG]  [BUGGY]  Number  val  =  createNumber(val.substring(0,  val.length()  +  1));  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createNumber(val.substring(0,  val.length()  +  1));  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val.substring(0,  val.length()  +  1));	  Number    val    =    createNumber(val.substring(0,    val.length()    -    1));    	non-compiled	[CE]  not  a  statement	54	None	replace
87	[BUG]  [BUGGY]  Number  val  =  createNumber(val.substring(0,  val.length()  1));  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createNumber(val.substring(0,  val.length()  1));  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val.substring(0,  val.length()  1));	  Number    val    =    createNumber(val.substring(0,    val.length()    -    1));    	non-compiled	[CE]  not  a  statement	54	None	replace
88	[BUG]  [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( " " "  +  val.toString()  + "  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( " " "  +  val.toString()  + "  is  not  a  valid  number. ");  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	MutableFormatException  e  =  new  MutableFormatException( " " "  +  val.toString()  + "  is  not  a  valid  number. ");	  MutableFormatException    e    =    new    MutableFormatException(   "   "   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	53	None	replace
89	[BUG]  [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( " " "  +  val.getName()  + "  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( " " "  +  val.getName()  + "  is  not  a  valid  number. ");  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	MutableFormatException  e  =  new  MutableFormatException( " " "  +  val.getName()  + "  is  not  a  valid  number. ");	  MutableFormatException    e    =    new    MutableFormatException(   "   "   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	53	None	replace
90	[BUG]  [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( " " "  +  val.length()  + "  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( " " "  +  val.length()  + "  is  not  a  valid  number. ");  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	MutableFormatException  e  =  new  MutableFormatException( " " "  +  val.length()  + "  is  not  a  valid  number. ");	  MutableFormatException    e    =    new    MutableFormatException(   "   "   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	53	None	replace
91	[BUG]  [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( " " "  +  val.getMessage());  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( " " "  +  val.getMessage());  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	MutableFormatException  e  =  new  MutableFormatException( " " "  +  val.getMessage());	  MutableFormatException    e    =    new    MutableFormatException(   "   "   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	53	None	replace
92	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length()  +  1);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  String  val  =  val.substring(0,  val.length()  +  1);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	String  val  =  val.substring(0,  val.length()  +  1);	  String    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	20	None	replace
93	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length()).trim();  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  String  val  =  val.substring(0,  val.length()).trim();  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	String  val  =  val.substring(0,  val.length()).trim();	  String    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	20	None	replace
94	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length())+  1;  [CE]  not  a  statement  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  String  val  =  val.substring(0,  val.length())+  1;  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	String  val  =  val.substring(0,  val.length())+  1;	  String    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	20	None	replace
95	[BUG]  [BUGGY]  Number  val  =(Number)val.getKey();  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =(Number)val.getKey();  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =(Number)val.getKey();	  Number    val    =(Number)val.getValue();    	non-compiled	[CE]  not  a  statement	1	None	replace
96	[BUG]  [BUGGY]  Numer  val  =  val.substring(0,  val.length());  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Numer  val  =  val.substring(0,  val.length());  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Numer  val  =  val.substring(0,  val.length());	  Number    val    =    val.substring(0,    val.length()    -    3);    	non-compiled	[CE]  not  a  statement	34	None	replace
97	[BUG]  [BUGGY]  Node  val  =  val.substring(0,  val.length());  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Node  val  =  val.substring(0,  val.length());  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Node  val  =  val.substring(0,  val.length());	  Number    val    =    val.substring(0,    val.length()    -    3);    	non-compiled	[CE]  not  a  statement	34	None	replace
98	[BUG]  [BUGGY]  MutableValueUtils.checkArgument(val!=  null);  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  MutableValueUtils.checkArgument(val!=  null);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	MutableValueUtils.checkArgument(val!=  null);	  MutableValueUtils.checkNotNull(val);    	non-compiled	[CE]  not  a  statement	50	None	replace
99	[BUG]  [BUGGY]  Number  val  =  getNumber(val.toLowerCase(),  false);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  getNumber(val.toLowerCase(),  false);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getNumber(val.toLowerCase(),  false);	  Number    val    =    getNumber(val.toLowerCase());    	non-compiled	[CE]  not  a  statement	16	None	replace
100	[BUG]  [BUGGY]  Number  val  =  getNumberValue(val.substring(1));  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  getNumberValue(val.substring(1));  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getNumberValue(val.substring(1));	  Number    val    =    getNumberValue(val.trim());    	non-compiled	[CE]  not  a  statement	43	None	replace
101	[BUG]  [BUGGY]  Number  val  =  getNumberValue(val.trim(),  null);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  getNumberValue(val.trim(),  null);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getNumberValue(val.trim(),  null);	  Number    val    =    getNumberValue(val.trim());    	non-compiled	[CE]  not  a  statement	43	None	replace
102	[BUG]  [BUGGY]  Number  val  =  getNumber(val.toUpperCase(Locale.ENGLISH));  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  getNumber(val.toUpperCase(Locale.ENGLISH));  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getNumber(val.toUpperCase(Locale.ENGLISH));	  Number    val    =    getNumber(val.toUpperCase());    	non-compiled	[CE]  not  a  statement	17	None	replace
103	[BUG]  [BUGGY]  Number  val  =  createValue(val,  null);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createValue(val,  null);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createValue(val,  null);	  Number    val    =    createValue(val);    	non-compiled	[CE]  not  a  statement	51	None	replace
104	[BUG]  [BUGGY]  if(val.length()  ==  0  ||  val.charAt(0)  ==  '/')  {  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  if(val.length()  ==  0  ||  val.charAt(0)  ==  '/')  {  [BUGGY]      throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	if(val.length()  ==  0  ||  val.charAt(0)  ==  '/')  {	  if(val.length()    ==    0    ||    val.charAt(0)!=    '/')    {    	non-compiled	[CE]  not  a  statement	29	None	replace
105	[BUG]  [BUGGY]  if(val.length()!=  0  ||  val.charAt(0)  ==  '/')  {  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  if(val.length()!=  0  ||  val.charAt(0)  ==  '/')  {  [BUGGY]      throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	if(val.length()!=  0  ||  val.charAt(0)  ==  '/')  {	  if(val.length()    ==    0    ||    val.charAt(0)!=    '/')    {    	non-compiled	[CE]  not  a  statement	29	None	replace
106	[BUG]  [BUGGY]  Number  val  =  getNumericValue(val);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  getNumericValue(val);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getNumericValue(val);	  Number    val    =    getNullValue(val);    	non-compiled	[CE]  not  a  statement	26	None	replace
107	[BUG]  [BUGGY]  Number  val  =  getValue(val.trim(),  null);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  getValue(val.trim(),  null);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getValue(val.trim(),  null);	  Number    val    =    getValue(val.trim());    	non-compiled	[CE]  not  a  statement	39	None	replace
108	[BUG]  [BUGGY]  if(val.length()  ==  0  ||  val.charAt(val.length()  -  1)!=  '')  {  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  if(val.length()  ==  0  ||  val.charAt(val.length()  -  1)!=  '')  {  [BUGGY]      throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	if(val.length()  ==  0  ||  val.charAt(val.length()  -  1)!=  '')  {	  if(val.length()    ==    0    ||    val.charAt(val.length())!='   "')    {    	non-compiled	[CE]  not  a  statement	24	None	replace
109	[BUG]  [BUGGY]  if(val.length()  ==  0  ||  val.charAt(val.length()  -  1)!=  ':')  {  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  if(val.length()  ==  0  ||  val.charAt(val.length()  -  1)!=  ':')  {  [BUGGY]      throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	if(val.length()  ==  0  ||  val.charAt(val.length()  -  1)!=  ':')  {	  if(val.length()    ==    0    ||    val.charAt(val.length())!='   "')    {    	non-compiled	[CE]  not  a  statement	24	None	replace
110	[BUG]  [BUGGY]  Number  val  =  createNumber(val,  val.trim());  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createNumber(val,  val.trim());  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val,  val.trim());	  Number    val    =    createNumber(val.trim());    	non-compiled	[CE]  not  a  statement	38	None	replace
111	[BUG]  [BUGGY]  if(val.length()  ==  0  ||  val.charAt(0)  ==  '')  {  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  if(val.length()  ==  0  ||  val.charAt(0)  ==  '')  {  [BUGGY]      throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	if(val.length()  ==  0  ||  val.charAt(0)  ==  '')  {	  if(val.length()    ==    0    ||    val.charAt(0)    =='   "')    {    	non-compiled	[CE]  not  a  statement	46	None	replace
112	[BUG]  [BUGGY]  Number  val  =  createNumber(val,  val.substring(0,  val.length()));  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createNumber(val,  val.substring(0,  val.length()));  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val,  val.substring(0,  val.length()));	  Number    val    =    createNumber(val.substring(0,    val.length()    -    1));    	non-compiled	[CE]  not  a  statement	54	None	replace
113	[BUG]  [BUGGY]  Number  val  =  createNumber(val,  null,  -1);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createNumber(val,  null,  -1);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val,  null,  -1);	  Number    val    =    createNumber(val,    null);    	non-compiled	[CE]  not  a  statement	22	None	replace
114	[BUG]  [BUGGY]  Number  val  =  createNumber(val,  null,  val);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createNumber(val,  null,  val);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val,  null,  val);	  Number    val    =    createNumber(val,    null);    	non-compiled	[CE]  not  a  statement	22	None	replace
115	[BUG]  [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( " " "  +  val.toLowerCase());  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( " " "  +  val.toLowerCase());  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	MutableFormatException  e  =  new  MutableFormatException( " " "  +  val.toLowerCase());	  MutableFormatException    e    =    new    MutableFormatException(   "   "   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	53	None	replace
116	[BUG]  [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( " " "  +  val.toString());  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( " " "  +  val.toString());  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	MutableFormatException  e  =  new  MutableFormatException( " " "  +  val.toString());	  MutableFormatException    e    =    new    MutableFormatException(   "   "   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	53	None	replace
117	[BUG]  [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( " " "  +  val.getName()  + " "  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( " " "  +  val.getName()  + " "  is  not  a  valid  number. ");  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	MutableFormatException  e  =  new  MutableFormatException( " " "  +  val.getName()  + " "  is  not  a  valid  number. ");	  MutableFormatException    e    =    new    MutableFormatException(   "   "   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	53	None	replace
118	[BUG]  [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( " " "  +  val.toString()  + " "  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( " " "  +  val.toString()  + " "  is  not  a  valid  number. ");  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	MutableFormatException  e  =  new  MutableFormatException( " " "  +  val.toString()  + " "  is  not  a  valid  number. ");	  MutableFormatException    e    =    new    MutableFormatException(   "   "   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	53	None	replace
119	[BUG]  [BUGGY]  if(val.length()  ==  0  ||(val.charAt(1)  ==  '-'  &&  val.charAt(0)  ==  '-'))  {  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  if(val.length()  ==  0  ||(val.charAt(1)  ==  '-'  &&  val.charAt(0)  ==  '-'))  {  [BUGGY]      throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	if(val.length()  ==  0  ||(val.charAt(1)  ==  '-'  &&  val.charAt(0)  ==  '-'))  {	  if(val.length()    ==    0    ||(val.charAt(0)    ==    '-'    &&    val.charAt(1)    ==    '-'))    {    	non-compiled	[CE]  not  a  statement	28	None	replace
120	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toUpperCase(Locale.ENGLISH));  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createNumber(val.toUpperCase(Locale.ENGLISH));  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val.toUpperCase(Locale.ENGLISH));	  Number    val    =    createNumber(val.toUpperCase());    	non-compiled	[CE]  not  a  statement	52	None	replace
121	[BUG]  [BUGGY]  Number  val  =  getNumberValue(val.toUpperCase(Locale.ENGLISH));  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  getNumberValue(val.toUpperCase(Locale.ENGLISH));  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getNumberValue(val.toUpperCase(Locale.ENGLISH));	  Number    val    =    getNumberValue(val.toUpperCase());    	non-compiled	[CE]  not  a  statement	14	None	replace
122	[BUG]  [BUGGY]  String  val  =  val.toLowerCase(Locale.ENGLISH).trim();  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  String  val  =  val.toLowerCase(Locale.ENGLISH).trim();  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	String  val  =  val.toLowerCase(Locale.ENGLISH).trim();	  String    val    =    val.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  not  a  statement	18	None	replace
123	[BUG]  [BUGGY]  Number  val  =  val.substring(1,  val.length());  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  val.substring(1,  val.length());  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  val.substring(1,  val.length());	  Number    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	7	None	replace
124	[BUG]  [BUGGY]  String  val  =  val.trim().toLowerCase();  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  String  val  =  val.trim().toLowerCase();  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	String  val  =  val.trim().toLowerCase();	  String    val    =    val.trim();    	non-compiled	[CE]  not  a  statement	47	None	replace
125	[BUG]  [BUGGY]  throw  new  NumberFormatException( " " "  +  val.toLowerCase()  + "  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  throw  new  NumberFormatException( " " "  +  val.toLowerCase()  + "  is  not  a  valid  number. ");  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	throw  new  NumberFormatException( " " "  +  val.toLowerCase()  + "  is  not  a  valid  number. ");	  throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	15	None	replace
126	[BUG]  [BUGGY]  Number  val  =(Number)val.intValue()  +  1;  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =(Number)val.intValue()  +  1;  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =(Number)val.intValue()  +  1;	  Number    val    =(Number)val.intValue();    	non-compiled	[CE]  not  a  statement	3	None	replace
127	[BUG]  [BUGGY]  Number  val  =  getNumber(val.trim());  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  getNumber(val.trim());  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getNumber(val.trim());	  Number    val    =    getNumber(val.toCharArray());    	non-compiled	[CE]  not  a  statement	33	None	replace
128	[BUG]  [BUGGY]  Number  val  =  getNumber(val.toCharArray()  +  1);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  getNumber(val.toCharArray()  +  1);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getNumber(val.toCharArray()  +  1);	  Number    val    =    getNumber(val.toCharArray());    	non-compiled	[CE]  not  a  statement	33	None	replace
129	[BUG]  [BUGGY]  Number  val  =  getValue(val.toUpperCase(Locale.ENGLISH));  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  getValue(val.toUpperCase(Locale.ENGLISH));  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getValue(val.toUpperCase(Locale.ENGLISH));	  Number    val    =    getValue(val.toUpperCase());    	non-compiled	[CE]  not  a  statement	27	None	replace
130	[BUG]  [BUGGY]  Number  val  =  getValue(val.toLowerCase(),  true);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  getValue(val.toLowerCase(),  true);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getValue(val.toLowerCase(),  true);	  Number    val    =    getValue(val.toLowerCase());    	non-compiled	[CE]  not  a  statement	25	None	replace
131	[BUG]  [BUGGY]  Number  val  =  createNumber(val,  val.toCharArray(),  false);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createNumber(val,  val.toCharArray(),  false);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val,  val.toCharArray(),  false);	  Number    val    =    createNumber(val.toCharArray(),    false);    	non-compiled	[CE]  not  a  statement	40	None	replace
132	[BUG]  [BUGGY]  Numer  val  =  createNumber(val.toCharArray(),  false);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Numer  val  =  createNumber(val.toCharArray(),  false);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Numer  val  =  createNumber(val.toCharArray(),  false);	  Number    val    =    createNumber(val.toCharArray(),    true);    	non-compiled	[CE]  not  a  statement	41	None	replace
133	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  null);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  null);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val.toCharArray(),  null);	  Number    val    =    createNumber(val.toCharArray(),    true);    	non-compiled	[CE]  not  a  statement	41	None	replace
134	[BUG]  [BUGGY]  if(val.length()  ==  0)  {  throw  new  NumberFormatException( " " "  +  val.substring(0,  val.length()  -  1);  }  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  if(val.length()  ==  0)  {  throw  new  NumberFormatException( " " "  +  val.substring(0,  val.length()  -  1);  }  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	if(val.length()  ==  0)  {  throw  new  NumberFormatException( " " "  +  val.substring(0,  val.length()  -  1);  }	  aughtException(   "   "   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	48	None	replace
135	[BUG]  [BUGGY]  if(val.length()  ==  0)  {  throw  new  NumberFormatException( " " "  +  val.substring(0,  val.length()  -  1,  val.length()));  }  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  if(val.length()  ==  0)  {  throw  new  NumberFormatException( " " "  +  val.substring(0,  val.length()  -  1,  val.length()));  }  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	if(val.length()  ==  0)  {  throw  new  NumberFormatException( " " "  +  val.substring(0,  val.length()  -  1,  val.length()));  }	  aughtException(   "   "   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	48	None	replace
136	[BUG]  [BUGGY]  Number  val  =  createValue(val.toString());  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createValue(val.toString());  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createValue(val.toString());	  Number    val    =    createNumber(val.toString());    	non-compiled	[CE]  not  a  statement	12	None	replace
137	[BUG]  [BUGGY]  MutableValueUtils.checkState(val.length()  >  0);  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  MutableValueUtils.checkState(val.length()  >  0);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	MutableValueUtils.checkState(val.length()  >  0);	  MutableValueUtils.checkState(val.length()    ==    0);    	non-compiled	[CE]  not  a  statement	49	None	replace
138	[BUG]  [BUGGY]  if(val.length()  ==  1  ||  val.charAt(0)!=  '-')  {  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  if(val.length()  ==  1  ||  val.charAt(0)!=  '-')  {  [BUGGY]      throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	if(val.length()  ==  1  ||  val.charAt(0)!=  '-')  {	  if(val.length()    ==    0    ||    val.charAt(1)!=    '-')    {    	non-compiled	[CE]  not  a  statement	5	None	replace
139	[BUG]  [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( " " "  +  val.toString()  + ". "  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( " " "  +  val.toString()  + ". "  is  not  a  valid  number. ");  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	MutableFormatException  e  =  new  MutableFormatException( " " "  +  val.toString()  + ". "  is  not  a  valid  number. ");	  MutableFormatException    e    =    new    MutableFormatException(   "   "   "    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	53	None	replace
140	[BUG]  [BUGGY]  Number  val  =(Number)val.substring(1);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =(Number)val.substring(1);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =(Number)val.substring(1);	  Number    val    =(Number)val.intValue();    	non-compiled	[CE]  not  a  statement	3	None	replace
141	[BUG]  [BUGGY]  Number  val  =  createNumber(null,  val);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createNumber(null,  val);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(null,  val);	  Number    val    =    createNumber(val,    null);    	non-compiled	[CE]  not  a  statement	22	None	replace
142	[BUG]  [BUGGY]  Null  val  =  val.substring(0,  val.length());  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Null  val  =  val.substring(0,  val.length());  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Null  val  =  val.substring(0,  val.length());	  Number    val    =    val.substring(0,    val.length()    -    3);    	non-compiled	[CE]  not  a  statement	34	None	replace
143	[BUG]  [BUGGY]  Number  val  =  getNumber(val.toString());  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  getNumber(val.toString());  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getNumber(val.toString());	  Number    val    =    getNumber(val.toCharArray());    	non-compiled	[CE]  not  a  statement	33	None	replace
144	[BUG]  [BUGGY]  Number  val  =  createNumber(val.substring(0,  val.length()),  val.length());  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createNumber(val.substring(0,  val.length()),  val.length());  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val.substring(0,  val.length()),  val.length());	  Number    val    =    createNumber(val.substring(0,    val.length()    -    1));    	non-compiled	[CE]  not  a  statement	54	None	replace
145	[BUG]  [BUGGY]  if(val.length()!=  1  ||  val.charAt(0)!=  '-')  {  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  if(val.length()!=  1  ||  val.charAt(0)!=  '-')  {  [BUGGY]      throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	if(val.length()!=  1  ||  val.charAt(0)!=  '-')  {	  if(val.length()!=    0    ||    val.charAt(0)!=    '-')    {    	non-compiled	[CE]  not  a  statement	4	None	replace
146	[BUG]  [BUGGY]  Number  val  =  getValue(val.toUpperCase(),  true);  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  getValue(val.toUpperCase(),  true);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getValue(val.toUpperCase(),  true);	  Number    val    =    getValue(val.toUpperCase());    	non-compiled	[CE]  not  a  statement	27	None	replace
147	[BUG]  [BUGGY]  Number  val  =  getNumberValue(val.toLowerCase(),  false);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  getNumberValue(val.toLowerCase(),  false);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getNumberValue(val.toLowerCase(),  false);	  Number    val    =    getNumberValue(val.toLowerCase());    	non-compiled	[CE]  not  a  statement	13	None	replace
148	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toUpperCase(),  true);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createNumber(val.toUpperCase(),  true);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val.toUpperCase(),  true);	  Number    val    =    createNumber(val.toUpperCase());    	non-compiled	[CE]  not  a  statement	52	None	replace
149	[BUG]  [BUGGY]  Number  val  =  val.substring(0,  val.length())+  1;  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  val.substring(0,  val.length())+  1;  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  val.substring(0,  val.length())+  1;	  Number    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	7	None	replace
150	[BUG]  [BUGGY]  Number  val  =  val.substring(0,  val.length()).trim();  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  val.substring(0,  val.length()).trim();  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  val.substring(0,  val.length()).trim();	  Number    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	7	None	replace
151	[BUG]  [BUGGY]  MutableValueUtils.checkArgument(val.length()  ==  0);  [CE]  not  a  statement  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  MutableValueUtils.checkArgument(val.length()  ==  0);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	MutableValueUtils.checkArgument(val.length()  ==  0);	  MutableValueUtils.checkNotNull(val);    	non-compiled	[CE]  not  a  statement	50	None	replace
152	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length();  [CE]  not  a  statement  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  String  val  =  val.substring(0,  val.length();  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	String  val  =  val.substring(0,  val.length();	  String    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	20	None	replace
153	[BUG]  [BUGGY]  throw  new  NumberFormatException( " " "  +  val.trim()  + "  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  throw  new  NumberFormatException( " " "  +  val.trim()  + "  is  not  a  valid  number. ");  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	throw  new  NumberFormatException( " " "  +  val.trim()  + "  is  not  a  valid  number. ");	  throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	15	None	replace
154	[BUG]  [BUGGY]  throw  new  NumberFormatException( " " "  +  val.substring(0,  val.length()  -  1));  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  throw  new  NumberFormatException( " " "  +  val.substring(0,  val.length()  -  1));  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	throw  new  NumberFormatException( " " "  +  val.substring(0,  val.length()  -  1));	  throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.       ");    	non-compiled	[CE]  not  a  statement	15	None	replace
155	[BUG]  [BUGGY]  Number  val  =  createNumber(val,  val.toCharArray(),  true);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createNumber(val,  val.toCharArray(),  true);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val,  val.toCharArray(),  true);	  Number    val    =    createNumber(val.toCharArray(),    true);    	non-compiled	[CE]  not  a  statement	41	None	replace
156	[BUG]  [BUGGY]  Number  val  =  getNumberValue(val.toUpperCase()  +  1);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  getNumberValue(val.toUpperCase()  +  1);  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getNumberValue(val.toUpperCase()  +  1);	  Number    val    =    getNumberValue(val.toUpperCase());    	non-compiled	[CE]  not  a  statement	14	None	replace
157	[BUG]  [BUGGY]  Number  val  =  createValue(val.getValue());  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createValue(val.getValue());  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createValue(val.getValue());	  Number    val    =    createNumber(val.getValue());    	non-compiled	[CE]  not  a  statement	11	None	replace
158	[BUG]  [BUGGY]  Number  val  =  createNumber(val.getBytes());  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }      [BUGGY]  Number  val  =  createNumber(val.getBytes());  [BUGGY]      if  (val.length()  ==  0)  {  throw  new  NumberFormatException(     "\     "\     "  is  not  a  valid  number.     ");  }  if  (val.startsWith(     "--     "))  {      return  null;  }  if  (val.startsWith(     "0x     ")  ||  val.startsWith(     "-0x     "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val.getBytes());	  Number    val    =    createNumber(val.getValue());    	non-compiled	[CE]  not  a  statement	11	None	replace
