bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Number  val  =(Number)val.getValue();  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  Number  val  =(Number)val.getValue();  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =(Number)val.getValue();	      Number    val    =(Number)val.clone();    	non-compiled	[CE]  not  a  statement	1	None	replace
2	[BUG]  [BUGGY]  Number  val  =(Number)val.cloneTree();  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  Number  val  =(Number)val.cloneTree();  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =(Number)val.cloneTree();	      Number    val    =(Number)val.clone();    	non-compiled	[CE]  not  a  statement	1	None	replace
3	[BUG]  [BUGGY]  Number  val  =(Number)val.intValue();  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  Number  val  =(Number)val.intValue();  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =(Number)val.intValue();	      Number    val    =(Number)val.clone();    	non-compiled	[CE]  not  a  statement	1	None	replace
4	[BUG]  [BUGGY]  if(val.length()!=  0  ||  val.charAt(0)!=  '-')  {  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  if(val.length()!=  0  ||  val.charAt(0)!=  '-')  {  [BUGGY]    throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	if(val.length()!=  0  ||  val.charAt(0)!=  '-')  {	  if(val.length()    ==    0    ||    val.charAt(0)!=    '-')    {    	non-compiled	[CE]  not  a  statement	10	None	replace
5	[BUG]  [BUGGY]  if(val.length()  ==  0  ||  val.charAt(1)!=  '-')  {  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  if(val.length()  ==  0  ||  val.charAt(1)!=  '-')  {  [BUGGY]    throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	if(val.length()  ==  0  ||  val.charAt(1)!=  '-')  {	  if(val.length()    ==    0    ||    val.charAt(0)!=    '-')    {    	non-compiled	[CE]  not  a  statement	10	None	replace
6	[BUG]  [BUGGY]  if(val.length()  ==  0  ||  val.charAt(0)  ==  '-')  {  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  if(val.length()  ==  0  ||  val.charAt(0)  ==  '-')  {  [BUGGY]    throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	if(val.length()  ==  0  ||  val.charAt(0)  ==  '-')  {	  if(val.length()    ==    0    ||    val.charAt(0)!=    '-')    {    	non-compiled	[CE]  not  a  statement	10	None	replace
7	[BUG]  [BUGGY]  Number  val  =  val.substring(0,  val.length()  -  1);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  Number  val  =  val.substring(0,  val.length()  -  1);  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  val.substring(0,  val.length()  -  1);	      if(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   "    is    not    a    valid    number.   ");    }    	non-compiled	[CE]  not  a  statement	14	None	replace
8	[BUG]  [BUGGY]  Number  val  =  val.substring(0,  val.length()  -  2);  [CE]  unclosed  string  literal  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  Number  val  =  val.substring(0,  val.length()  -  2);  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  val.substring(0,  val.length()  -  2);	      if(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   "    is    not    a    valid    number.   ");    }    	non-compiled	[CE]  unclosed  string  literal	14	None	replace
9	[BUG]  [BUGGY]  Number  val  =  val.substring(0,  val.length());  [CE]  unclosed  string  literal  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  Number  val  =  val.substring(0,  val.length());  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  val.substring(0,  val.length());	      if(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   "    is    not    a    valid    number.   ");    }    	non-compiled	[CE]  unclosed  string  literal	14	None	replace
10	[BUG]  [BUGGY]  Number  val  =  createNumber(val.substring(1));  [CE]  unclosed  string  literal  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  Number  val  =  createNumber(val.substring(1));  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val.substring(1));	      Number    val    =    createNumber(val.toCharArray());    	non-compiled	[CE]  unclosed  string  literal	9	None	replace
11	[BUG]  [BUGGY]  Number  val  =  createNumber(val.getValue());  [CE]  unclosed  string  literal  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  Number  val  =  createNumber(val.getValue());  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val.getValue());	      Number    val    =    createNumber(val.toCharArray());    	non-compiled	[CE]  unclosed  string  literal	9	None	replace
12	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toString());  [CE]  unclosed  string  literal  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  Number  val  =  createNumber(val.toString());  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val.toString());	      Number    val    =    createNumber(val.toCharArray());    	non-compiled	[CE]  unclosed  string  literal	9	None	replace
13	[BUG]  [BUGGY]  Number  val  =  getNumberValue(val.toLowerCase());  [CE]  unclosed  string  literal  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  Number  val  =  getNumberValue(val.toLowerCase());  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getNumberValue(val.toLowerCase());	      Number    val    =    getNumberValue(val);    	non-compiled	[CE]  unclosed  string  literal	3	None	replace
14	[BUG]  [BUGGY]  Number  val  =  getNumberValue(val.toUpperCase());  [CE]  unclosed  string  literal  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  Number  val  =  getNumberValue(val.toUpperCase());  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getNumberValue(val.toUpperCase());	      Number    val    =    getNumberValue(val);    	non-compiled	[CE]  unclosed  string  literal	3	None	replace
15	[BUG]  [BUGGY]  throw  new  NumberFormatException( " " "  is  not  a  valid  number.   ");  [CE]  unclosed  string  literal  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  throw  new  NumberFormatException( " " "  is  not  a  valid  number.   ");  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	throw  new  NumberFormatException( " " "  is  not  a  valid  number.   ");	      if(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   "   "    is    not    a    valid    number.   ");    }    	non-compiled	[CE]  unclosed  string  literal	12	None	replace
16	[BUG]  [BUGGY]  Number  val  =  getNumber(val.toLowerCase());  [CE]  unclosed  string  literal  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  Number  val  =  getNumber(val.toLowerCase());  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getNumber(val.toLowerCase());	      Number    val    =    getNumber(val);    	non-compiled	[CE]  unclosed  string  literal	4	None	replace
17	[BUG]  [BUGGY]  Number  val  =  getNumber(val.toUpperCase());  [CE]  unclosed  string  literal  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  Number  val  =  getNumber(val.toUpperCase());  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getNumber(val.toUpperCase());	      Number    val    =    getNumber(val);    	non-compiled	[CE]  unclosed  string  literal	4	None	replace
18	[BUG]  [BUGGY]  String  val  =  val.toLowerCase(Locale.ENGLISH);  [CE]  unclosed  string  literal  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  String  val  =  val.toLowerCase(Locale.ENGLISH);  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	String  val  =  val.toLowerCase(Locale.ENGLISH);	      String    val    =    val.toLowerCase();    	non-compiled	[CE]  unclosed  string  literal	15	None	replace
19	[BUG]  [BUGGY]  String  val  =  val.toUpperCase();  [CE]  unclosed  string  literal  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  String  val  =  val.toUpperCase();  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	String  val  =  val.toUpperCase();	      String    val    =    val.toLowerCase();    	non-compiled	[CE]  unclosed  string  literal	15	None	replace
20	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length()  -  1);  [CE]  unclosed  string  literal  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  String  val  =  val.substring(0,  val.length()  -  1);  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	String  val  =  val.substring(0,  val.length()  -  1);	      String    val    =    val.toLowerCase();    	non-compiled	[CE]  unclosed  string  literal	15	None	replace
21	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toLowerCase());  [CE]  unclosed  string  literal  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  Number  val  =  createNumber(val.toLowerCase());  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val.toLowerCase());	      Number    val    =    createNumber(val);    	non-compiled	[CE]  unclosed  string  literal	2	None	replace
22	[BUG]  [BUGGY]  Number  val  =  createNumber(val,  null);  [CE]  unclosed  string  literal  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  Number  val  =  createNumber(val,  null);  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val,  null);	      Number    val    =    createNumber(val);    	non-compiled	[CE]  unclosed  string  literal	2	None	replace
23	[BUG]  [BUGGY]  Number  val  =  createNumber(val,  false);  [CE]  unclosed  string  literal  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  Number  val  =  createNumber(val,  false);  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val,  false);	      Number    val    =    createNumber(val);    	non-compiled	[CE]  unclosed  string  literal	2	None	replace
24	[BUG]  [BUGGY]  if(val.length()  ==  0  ||  val.charAt(val.length())!=' "')  {  [CE]  unclosed  string  literal  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  if(val.length()  ==  0  ||  val.charAt(val.length())!=' "')  {  [BUGGY]    throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	if(val.length()  ==  0  ||  val.charAt(val.length())!=' "')  {	  if    (val.length()    ==    0    ||    val.charAt(val.length()    -    1)!=    '   "')    {    	non-compiled	[CE]  unclosed  string  literal	6	None	replace
25	[BUG]  [BUGGY]  Number  val  =  getValue(val.toLowerCase());  [CE]  unclosed  string  literal  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  Number  val  =  getValue(val.toLowerCase());  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getValue(val.toLowerCase());	      Number    val    =    getValue(val);    	non-compiled	[CE]  unclosed  string  literal	5	None	replace
26	[BUG]  [BUGGY]  Number  val  =  getNullValue(val);  [CE]  unclosed  string  literal  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  Number  val  =  getNullValue(val);  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getNullValue(val);	      Number    val    =    getValue(val);    	non-compiled	[CE]  unclosed  string  literal	5	None	replace
27	[BUG]  [BUGGY]  Number  val  =  getValue(val.toUpperCase());  [CE]  unclosed  string  literal  [FE]                    StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  Number  val  =  getValue(val.toUpperCase());  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getValue(val.toUpperCase());	      Number    val    =    getValue(val);    	non-compiled	[CE]  unclosed  string  literal	5	None	replace
28	[BUG]  [BUGGY]  if(val.length()  ==  0  ||(val.charAt(0)  ==  '-'  &&  val.charAt(1)  ==  '-'))  {  [CE]  unclosed  string  literal  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  if(val.length()  ==  0  ||(val.charAt(0)  ==  '-'  &&  val.charAt(1)  ==  '-'))  {  [BUGGY]    throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	if(val.length()  ==  0  ||(val.charAt(0)  ==  '-'  &&  val.charAt(1)  ==  '-'))  {	  if    (val.length()    ==    0    ||(val.charAt(0)    ==    '-'    &&    val.charAt(0)    ==    '-'))    {    	non-compiled	[CE]  unclosed  string  literal	7	None	replace
29	[BUG]  [BUGGY]  if(val.length()  ==  0  ||  val.charAt(0)!=  '/')  {  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  if(val.length()  ==  0  ||  val.charAt(0)!=  '/')  {  [BUGGY]    throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	if(val.length()  ==  0  ||  val.charAt(0)!=  '/')  {	  if(val.length()    ==    0    ||    val.charAt(0)!=    '   "')    {    	non-compiled	[CE]  not  a  statement	11	None	replace
30	[BUG]  [BUGGY]  Number  val  =  getNumberValue();  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  Number  val  =  getNumberValue();  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getNumberValue();	      Number    val    =    getNullValue();    	non-compiled	[CE]  not  a  statement	8	None	replace
31	[BUG]  [BUGGY]  Number  val  =  getValue();  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  Number  val  =  getValue();  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getValue();	      Number    val    =    getNullValue();    	non-compiled	[CE]  not  a  statement	8	None	replace
32	[BUG]  [BUGGY]  Number  val  =  getBaseValue();  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  Number  val  =  getBaseValue();  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getBaseValue();	      Number    val    =    getNullValue();    	non-compiled	[CE]  not  a  statement	8	None	replace
33	[BUG]  [BUGGY]  Number  val  =  getNumber(val.toCharArray());  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  Number  val  =  getNumber(val.toCharArray());  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getNumber(val.toCharArray());	      Number    val    =    getNumber(val);    	non-compiled	[CE]  not  a  statement	4	None	replace
34	[BUG]  [BUGGY]  Number  val  =  val.substring(0,  val.length()  -  3);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  Number  val  =  val.substring(0,  val.length()  -  3);  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  val.substring(0,  val.length()  -  3);	      if(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   "'    is    not    a    valid    number.   ");    }    	non-compiled	[CE]  not  a  statement	16	None	replace
35	[BUG]  [BUGGY]  if(val.length()  ==  0)  {  return  this;  }  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  if(val.length()  ==  0)  {  return  this;  }  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	if(val.length()  ==  0)  {  return  this;  }	      if(val.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	13	None	replace
36	[BUG]  [BUGGY]  Number  val  =  getNumericValue();  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  Number  val  =  getNumericValue();  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getNumericValue();	      Number    val    =    getNullValue();    	non-compiled	[CE]  not  a  statement	8	None	replace
37	[BUG]  [BUGGY]  if(val.length()  ==  0  ||  val.charAt(1)  ==  '-')  {  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  if(val.length()  ==  0  ||  val.charAt(1)  ==  '-')  {  [BUGGY]    throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	if(val.length()  ==  0  ||  val.charAt(1)  ==  '-')  {	  if(val.length()    ==    0    ||    val.charAt(0)!=    '-')    {    	non-compiled	[CE]  not  a  statement	10	None	replace
38	[BUG]  [BUGGY]  Number  val  =  createNumber(val.trim());  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  Number  val  =  createNumber(val.trim());  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val.trim());	      Number    val    =    createNumber(val);    	non-compiled	[CE]  not  a  statement	2	None	replace
39	[BUG]  [BUGGY]  Number  val  =  getValue(val.trim());  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  Number  val  =  getValue(val.trim());  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getValue(val.trim());	      Number    val    =    getValue(val);    	non-compiled	[CE]  not  a  statement	5	None	replace
40	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  false);  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  false);  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val.toCharArray(),  false);	      Number    val    =    createNumber(val.toCharArray());    	non-compiled	[CE]  not  a  statement	9	None	replace
41	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  true);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  Number  val  =  createNumber(val.toCharArray(),  true);  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val.toCharArray(),  true);	      Number    val    =    createNumber(val.toCharArray());    	non-compiled	[CE]  not  a  statement	9	None	replace
42	[BUG]  [BUGGY]  String  val  =  val  ==  null?  null  :  val.toLowerCase();  [CE]  unclosed  string  literal  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  String  val  =  val  ==  null?  null  :  val.toLowerCase();  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	String  val  =  val  ==  null?  null  :  val.toLowerCase();	      String    val    =    val.toLowerCase();    	non-compiled	[CE]  unclosed  string  literal	15	None	replace
43	[BUG]  [BUGGY]  Number  val  =  getNumberValue(val.trim());  [CE]  unclosed  string  literal  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  Number  val  =  getNumberValue(val.trim());  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  getNumberValue(val.trim());	      Number    val    =    getNumberValue(val);    	non-compiled	[CE]  unclosed  string  literal	3	None	replace
44	[BUG]  [BUGGY]  Number  val  =(Number)val.toLowerCase();  [CE]  unclosed  string  literal  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  Number  val  =(Number)val.toLowerCase();  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =(Number)val.toLowerCase();	      Number    val    =(Number)val.clone();    	non-compiled	[CE]  unclosed  string  literal	1	None	replace
45	[BUG]  [BUGGY]  Number  val  =(Number)val.toCharArray();  [CE]  unclosed  string  literal  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  Number  val  =(Number)val.toCharArray();  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =(Number)val.toCharArray();	      Number    val    =(Number)val.clone();    	non-compiled	[CE]  unclosed  string  literal	1	None	replace
46	[BUG]  [BUGGY]  if(val.length()  ==  0  ||  val.charAt(0)  ==' "')  {  [CE]  unclosed  string  literal  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  if(val.length()  ==  0  ||  val.charAt(0)  ==' "')  {  [BUGGY]    throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	if(val.length()  ==  0  ||  val.charAt(0)  ==' "')  {	  if(val.length()    ==    0    ||    val.charAt(0)!=    '   "')    {    	non-compiled	[CE]  unclosed  string  literal	11	None	replace
47	[BUG]  [BUGGY]  String  val  =  val.trim();  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  String  val  =  val.trim();  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	String  val  =  val.trim();	      String    val    =    val.toLowerCase();    	non-compiled	[CE]  not  a  statement	15	None	replace
48	[BUG]  [BUGGY]  aughtException( " " "  is  not  a  valid  number. ");  [CE]  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  aughtException( " " "  is  not  a  valid  number. ");  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	aughtException( " " "  is  not  a  valid  number. ");	      if(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   "'    is    not    a    valid    number.   ");    }    	non-compiled	[CE]  	16	None	replace
49	[BUG]  [BUGGY]  MutableValueUtils.checkState(val.length()  ==  0);  [CE]  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  MutableValueUtils.checkState(val.length()  ==  0);  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	MutableValueUtils.checkState(val.length()  ==  0);	      if(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   "'    is    not    a    valid    number.   ");    }    	non-compiled	[CE]  	16	None	replace
50	[BUG]  [BUGGY]  MutableValueUtils.checkNotNull(val);  [CE]  [FE]                    StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  MutableValueUtils.checkNotNull(val);  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	MutableValueUtils.checkNotNull(val);	      if(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   "'    is    not    a    valid    number.   ");    }    	non-compiled	[CE]  	16	None	replace
51	[BUG]  [BUGGY]  Number  val  =  createValue(val);  [CE]  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  Number  val  =  createValue(val);  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createValue(val);	      Number    val    =    createNumber(val);    	non-compiled	[CE]  	2	None	replace
52	[BUG]  [BUGGY]  Number  val  =  createNumber(val.toUpperCase());  [CE]  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  Number  val  =  createNumber(val.toUpperCase());  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val.toUpperCase());	      Number    val    =    createNumber(val);    	non-compiled	[CE]  	2	None	replace
53	[BUG]  [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( " " "  is  not  a  valid  number. ");  [CE]  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( " " "  is  not  a  valid  number. ");  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	MutableFormatException  e  =  new  MutableFormatException( " " "  is  not  a  valid  number. ");	      if(val.length()    ==    0)    {    throw    new    NumberFormatException(   "   "    is    not    a    valid    number.   ");    }    	non-compiled	[CE]  	14	None	replace
54	[BUG]  [BUGGY]  Number  val  =  createNumber(val.substring(0,  val.length()  -  1));  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  static  Number  createNumber(String  val)  throws  NumberFormatException  {  if  (val  ==  null)  {  return  null;  }    [BUGGY]  Number  val  =  createNumber(val.substring(0,  val.length()  -  1));  [BUGGY]    if  (val.length()  ==  0)  {  throw  new  NumberFormatException(   "\   "\   "  is  not  a  valid  number.   ");  }  if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	142	142	1	replace	Number  val  =  createNumber(val.substring(0,  val.length()  -  1));	      Number    val    =    createNumber(val.toCharArray());    	non-compiled	[CE]  not  a  statement	9	None	replace
