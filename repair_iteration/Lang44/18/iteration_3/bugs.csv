bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	if(exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {	  if(exp    ==    null    &&    exp    ==    null    &&    (numeric.charAt(0)    ==    '-'    ||    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	36	None	replace
2	[BUG]  [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2))  ||  isDigits(numeric.substring(2)))  {  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2))  ||  isDigits(numeric.substring(2)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	if(exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(0,  2))  ||  isDigits(numeric.substring(2)))  {	  if(exp    ==    null    &&    exp    ==    null    &&    (numeric.charAt(0)    ==    '-'    ||    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	36	None	replace
3	[BUG]  [BUGGY]  Double  numeric  =  val.substring(0,  val.length()  -  2);  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Double  numeric  =  val.substring(0,  val.length()  -  2);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	Double  numeric  =  val.substring(0,  val.length()  -  2);	  Double    numeric    =    val.substring(0,    val.length());    	non-compiled	[CE]  	9	None	replace
4	[BUG]  [BUGGY]  Double  numeric  =  val.substring(1,  val.length()  -  1);  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Double  numeric  =  val.substring(1,  val.length()  -  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	Double  numeric  =  val.substring(1,  val.length()  -  1);	  Double    numeric    =    val.substring(0,    val.length());    	non-compiled	[CE]  	9	None	replace
5	[BUG]  [BUGGY]  String  numeric  =  val.substring(0,  val.length()  -  2);  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  String  numeric  =  val.substring(0,  val.length()  -  2);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	String  numeric  =  val.substring(0,  val.length()  -  2);	  String    numeric    =    val.substring(0,    val.length());    	non-compiled	[CE]  	10	None	replace
6	[BUG]  [BUGGY]  String  numeric  =  val.substring(0,  val.length()  +  1);  [CE]  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  String  numeric  =  val.substring(0,  val.length()  +  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	String  numeric  =  val.substring(0,  val.length()  +  1);	  String    numeric    =    val.substring(0,    val.length());    	non-compiled	[CE]  	10	None	replace
7	[BUG]  [BUGGY]  String  numeric  =  val.substring(1,  val.length()  -  1);  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  String  numeric  =  val.substring(1,  val.length()  -  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	String  numeric  =  val.substring(1,  val.length()  -  1);	  String    numeric    =    val.substring(0,    val.length());    	non-compiled	[CE]  	10	None	replace
8	[BUG]  [BUGGY]  String  dec  =  val.substring(decPos  +  1,  val.length()  -  1);  [CE]  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  String  dec  =  val.substring(decPos  +  1,  val.length()  -  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	String  dec  =  val.substring(decPos  +  1,  val.length()  -  1);	  String    dec    =    val.substring(delimPos    +    1,    val.length());    	non-compiled	[CE]  	50	None	replace
9	[BUG]  [BUGGY]  String  dec  =  val.substring(delimPos  +  1,  val.length()  -  1);  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  String  dec  =  val.substring(delimPos  +  1,  val.length()  -  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	String  dec  =  val.substring(delimPos  +  1,  val.length()  -  1);	  String    dec    =    val.substring(delimPos    +    1,    val.length());    	non-compiled	[CE]  	50	None	replace
10	[BUG]  [BUGGY]  val  =  val.substring(0,  val.length()  -  2);  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  val  =  val.substring(0,  val.length()  -  2);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	val  =  val.substring(0,  val.length()  -  2);	  val    =    val.substring(0,    val.length());    	non-compiled	[CE]  	33	None	replace
11	[BUG]  [BUGGY]  String  dec  =  val.substring(0,  val.length()  -  2);  [CE]  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  String  dec  =  val.substring(0,  val.length()  -  2);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	String  dec  =  val.substring(0,  val.length()  -  2);	  String    dec    =    val.substring(0,    val.length());    	non-compiled	[CE]  	18	None	replace
12	[BUG]  [BUGGY]  String  dec  =  val.substring(1,  val.length()  -  1);  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  String  dec  =  val.substring(1,  val.length()  -  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	String  dec  =  val.substring(1,  val.length()  -  1);	  String    dec    =    val.substring(0,    val.length());    	non-compiled	[CE]  	18	None	replace
13	[BUG]  [BUGGY]  Double  numeric  =  val.substring(decPos  +  1,  val.length());  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Double  numeric  =  val.substring(decPos  +  1,  val.length());  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	Double  numeric  =  val.substring(decPos  +  1,  val.length());	  Double    numeric    =    val.substring(decPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  	56	None	replace
14	[BUG]  [BUGGY]  String  numeric  =  val.substring(decPos  +  1,  val.length());  [CE]  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  String  numeric  =  val.substring(decPos  +  1,  val.length());  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	String  numeric  =  val.substring(decPos  +  1,  val.length());	  Double    numeric    =    val.substring(decPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  	56	None	replace
15	[BUG]  [BUGGY]  Double  numeric  =  val.substring(0,  val.length()));  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Double  numeric  =  val.substring(0,  val.length()));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	Double  numeric  =  val.substring(0,  val.length()));	  Double    numeric    =    val.substring(0,    val.length()    +    1);    	non-compiled	[CE]  	12	None	replace
16	[BUG]  [BUGGY]  if(exp  ==  null  &&  exp!=  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(exp  ==  null  &&  exp!=  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	if(exp  ==  null  &&  exp!=  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {	  if(exp    ==    null    &&    exp    ==    null    &&    (numeric.charAt(0)    ==    '-'    ||    isDigits(numeric.substring(1))    &&    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	23	None	replace
17	[BUG]  [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  [CE]  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	if(exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {	  if(exp    ==    null    &&    exp    ==    null    &&    (numeric.charAt(0)    ==    '-'    ||    isDigits(numeric.substring(1))    &&    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	23	None	replace
18	[BUG]  [BUGGY]  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))||  isDigits(numeric.substring(2)));  [CE]  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))||  isDigits(numeric.substring(2)));  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	(numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))||  isDigits(numeric.substring(2)));	  (numeric.charAt(0)    ==    '-'    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)));    	non-compiled	[CE]  	30	None	replace
19	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  [CE]  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {	  if(dec    ==    null    &&    exp    ==    null    ||    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	51	None	replace
20	[BUG]  [BUGGY]  if(dec  ==  null  ||  exp  ==  null  ||  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  ||  exp  ==  null  ||  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	if(dec  ==  null  ||  exp  ==  null  ||  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {	  if(dec    ==    null    &&    exp    ==    null    ||    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	51	None	replace
21	[BUG]  [BUGGY]  if(numeric.charAt(0)  ==  '-'  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(numeric.charAt(0)  ==  '-'  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	if(numeric.charAt(0)  ==  '-'  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {	  if(dec    ==    null    &&    exp    ==    null    ||    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	51	None	replace
22	[BUG]  [BUGGY]  Double  dec  =  val.substring(expPos  +  1,  val.length()  -  1);  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Double  dec  =  val.substring(expPos  +  1,  val.length()  -  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	Double  dec  =  val.substring(expPos  +  1,  val.length()  -  1);	  Double    dec    =    val.substring(expPos    +    1,    val.length());    	non-compiled	[CE]  	14	None	replace
23	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(1)))  {  [CE]  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(1)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(1)))  {	  if(dec    ==    null    &&    exp    ==    null    ||    isDigits(numeric.substring(1))||    isDigits(numeric.substring(1)))    {    	non-compiled	[CE]  	28	None	replace
24	[BUG]  [BUGGY]  if(dec  ==  null  ||  exp  ==  null  ||  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  ||  exp  ==  null  ||  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	if(dec  ==  null  ||  exp  ==  null  ||  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {	  if(dec    ==    null    &&    exp    ==    null    ||    isDigits(numeric.substring(1))||    isDigits(numeric.substring(1)))    {    	non-compiled	[CE]  	28	None	replace
25	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(2))&&  isDigits(numeric.substring(1)))  {  [CE]  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(2))&&  isDigits(numeric.substring(1)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(2))&&  isDigits(numeric.substring(1)))  {	  if(dec    ==    null    &&    exp    ==    null    &&    (numeric.charAt(0)    ==    '-'    ||    isDigits(numeric.substring(2))    &&    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	52	None	replace
26	[BUG]  [BUGGY]  if(numeric!=  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  [CE]  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(numeric!=  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	if(numeric!=  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {	  if(numeric!=    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	7	None	replace
27	[BUG]  [BUGGY]  if(numeric  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(numeric  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	if(numeric  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {	  if(numeric!=    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	7	None	replace
28	[BUG]  [BUGGY]  Double  dec  =  val.substring(decPos  +  1,  val.length()  -  2);  [CE]  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Double  dec  =  val.substring(decPos  +  1,  val.length()  -  2);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	Double  dec  =  val.substring(decPos  +  1,  val.length()  -  2);	  Double    dec    =    val.substring(decPos    +    1,    val.length());    	non-compiled	[CE]  	13	None	replace
29	[BUG]  [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	if(exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {	  if(exp    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.charAt(0)))    {    	non-compiled	[CE]  	1	None	replace
30	[BUG]  [BUGGY]  String  numeric  =  val.substring(expPos  +  1,  val.length());  [CE]  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  String  numeric  =  val.substring(expPos  +  1,  val.length());  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	String  numeric  =  val.substring(expPos  +  1,  val.length());	  Double    numeric    =    val.substring(expPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  	49	None	replace
31	[BUG]  [BUGGY]  String  numeric  =  val.substring(1  +  1,  val.length()  -  1);  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  String  numeric  =  val.substring(1  +  1,  val.length()  -  1);  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	String  numeric  =  val.substring(1  +  1,  val.length()  -  1);	  String    numeric    =    val.substring(expPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  	48	None	replace
32	[BUG]  [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  (val.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(2))||  isDigits(numeric.substring(2)))  {  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  (val.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(2))||  isDigits(numeric.substring(2)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	if(exp  ==  null  &&  exp  ==  null  &&  (val.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(2))||  isDigits(numeric.substring(2)))  {	  if(exp    ==    null    &&    exp    ==    null    &&    (numeric.charAt(0)    ==    '-'    ||    isDigits(numeric.substring(2))    ||    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	47	None	replace
33	[BUG]  [BUGGY]  Double  dec  =  val.substring(delimPos  +  1,  val.length()  -  1);  [CE]  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Double  dec  =  val.substring(delimPos  +  1,  val.length()  -  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	Double  dec  =  val.substring(delimPos  +  1,  val.length()  -  1);	  Double    dec    =    val.substring(delimPos    +    1,    val.length());    	non-compiled	[CE]  	38	None	replace
34	[BUG]  [BUGGY]  val  =  val.substring(1,  val.length()  -  1);  [CE]  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  val  =  val.substring(1,  val.length()  -  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	val  =  val.substring(1,  val.length()  -  1);	  val    =    val.substring(1,    val.length());    	non-compiled	[CE]  	34	None	replace
35	[BUG]  [BUGGY]  double  dec  =  val.substring(decPos  +  1,  val.length()  -  1);  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  double  dec  =  val.substring(decPos  +  1,  val.length()  -  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	double  dec  =  val.substring(decPos  +  1,  val.length()  -  1);	  double    dec    =    val.substring(decPos    +    1,    val.length());    	non-compiled	[CE]  	15	None	replace
36	[BUG]  [BUGGY]  double  dec  =  val.substring(expPos  +  1,  val.length());  [CE]  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  double  dec  =  val.substring(expPos  +  1,  val.length());  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	double  dec  =  val.substring(expPos  +  1,  val.length());	  double    dec    =    val.substring(decPos    +    1,    val.length());    	non-compiled	[CE]  	15	None	replace
37	[BUG]  [BUGGY]  double  dec  =  val.substring(decPos  +  1,  val.length()  -  2);  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  double  dec  =  val.substring(decPos  +  1,  val.length()  -  2);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	double  dec  =  val.substring(decPos  +  1,  val.length()  -  2);	  double    dec    =    val.substring(decPos    +    1,    val.length());    	non-compiled	[CE]  	15	None	replace
38	[BUG]  [BUGGY]  Double  dec  =  val.substring(0,  val.length());  [CE]  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Double  dec  =  val.substring(0,  val.length());  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	Double  dec  =  val.substring(0,  val.length());	  Double    dec    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  	16	None	replace
39	[BUG]  [BUGGY]  Double  dec  =  val.substring(1,  val.length());  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Double  dec  =  val.substring(1,  val.length());  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	Double  dec  =  val.substring(1,  val.length());	  Double    dec    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  	16	None	replace
40	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&  isDigits(numeric.substring(1)))  {  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&  isDigits(numeric.substring(1)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&  isDigits(numeric.substring(1)))  {	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    isDigits(numeric.substring(1)))    {    	non-compiled	[CE]  	37	None	replace
41	[BUG]  [BUGGY]  String  dec  =  val.substring(0,  val.length()  -  1)+  1;  [CE]  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  String  dec  =  val.substring(0,  val.length()  -  1)+  1;  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	String  dec  =  val.substring(0,  val.length()  -  1)+  1;	  String    dec    =    val.substring(0,    val.length())+    1;    	non-compiled	[CE]  	45	None	replace
42	[BUG]  [BUGGY]  Double  d  =  val.substring(decPos  +  1,  val.length()  -  1);  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Double  d  =  val.substring(decPos  +  1,  val.length()  -  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	Double  d  =  val.substring(decPos  +  1,  val.length()  -  1);	  Double    d    =    val.substring(expPos    +    1,    val.length());    	non-compiled	[CE]  	24	None	replace
43	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||(numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))||  isDigits  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||(numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))||  isDigits  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||(numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))||  isDigits	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&(numeric.charAt(0)    ==    '-'    ||    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring    	non-compiled	[CE]  	53	None	replace
44	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&(numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  ||  isDigits  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&(numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  ||  isDigits  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&(numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  ||  isDigits	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&(numeric.charAt(0)    ==    '-'    ||    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring    	non-compiled	[CE]  	53	None	replace
45	[BUG]  [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||(numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))||  isDigits  [CE]  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||(numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))||  isDigits  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	if(exp  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||(numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))||  isDigits	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&(numeric.charAt(0)    ==    '-'    ||    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring    	non-compiled	[CE]  	53	None	replace
46	[BUG]  [BUGGY]  if(numeric  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(numeric  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	if(numeric  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {	  if(exp    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(1)))    {    	non-compiled	[CE]  	2	None	replace
47	[BUG]  [BUGGY]  Double  numeric  =  val.substring(0,  val.length()  -  1)+  1;  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Double  numeric  =  val.substring(0,  val.length()  -  1)+  1;  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	Double  numeric  =  val.substring(0,  val.length()  -  1)+  1;	  Double    numeric    =    val.substring(0,    val.length())+    1;    	non-compiled	[CE]  	44	None	replace
48	[BUG]  [BUGGY]  Double  numeric  =  val.substring(expPos  +  1,  val.length()  -  2);  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Double  numeric  =  val.substring(expPos  +  1,  val.length()  -  2);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	Double  numeric  =  val.substring(expPos  +  1,  val.length()  -  2);	  Double    numeric    =    val.substring(expPos    +    1,    val.length());    	non-compiled	[CE]  	54	None	replace
49	[BUG]  [BUGGY]  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(2))||  isDigits(numeric.substring(2)));  [CE]  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(2))||  isDigits(numeric.substring(2)));  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	(numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(2))||  isDigits(numeric.substring(2)));	  (numeric.charAt(0)    ==    '-'    &&    isDigits(numeric.substring(2))    ||    isDigits(numeric.substring(2)));    	non-compiled	[CE]  	31	None	replace
50	[BUG]  [BUGGY]  Double  numeric  =  val.substring(1,  val.length()  +  1);  [CE]  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Double  numeric  =  val.substring(1,  val.length()  +  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	Double  numeric  =  val.substring(1,  val.length()  +  1);	  Double    numeric    =    val.substring(1,    val.length());    	non-compiled	[CE]  	11	None	replace
51	[BUG]  [BUGGY]  String  dec  =  val.substring(decPos  +  1,  val.length()  -  2);  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  String  dec  =  val.substring(decPos  +  1,  val.length()  -  2);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	String  dec  =  val.substring(decPos  +  1,  val.length()  -  2);	  String    dec    =    val.substring(decPos    +    1,    val.length());    	non-compiled	[CE]  	4	None	replace
52	[BUG]  [BUGGY]  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))||  isDigits(numeric.substring(1)));  [CE]  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))||  isDigits(numeric.substring(1)));  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	(numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))||  isDigits(numeric.substring(1)));	  (numeric.charAt(0)    ==    '-'    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(1)));    	non-compiled	[CE]  	32	None	replace
53	[BUG]  [BUGGY]  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)));  [CE]  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)));  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	(numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)));	  (numeric.charAt(0)    ==    '-'    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(1)));    	non-compiled	[CE]  	32	None	replace
54	[BUG]  [BUGGY]  String  numeric  =  val.substring(1,  val.length());  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  String  numeric  =  val.substring(1,  val.length());  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	String  numeric  =  val.substring(1,  val.length());	  String    numeric    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  	29	None	replace
55	[BUG]  [BUGGY]  String  numeric  =  val.substring(0,  val.length();  [CE]  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  String  numeric  =  val.substring(0,  val.length();  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	String  numeric  =  val.substring(0,  val.length();	  String    numeric    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  	29	None	replace
56	[BUG]  [BUGGY]  Double  d  =  val.substring(0,  val.length());  [CE]  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Double  d  =  val.substring(0,  val.length());  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	Double  d  =  val.substring(0,  val.length());	  Double    d    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  	25	None	replace
57	[BUG]  [BUGGY]  Double  d  =  val.substring(1,  val.length());  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Double  d  =  val.substring(1,  val.length());  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	Double  d  =  val.substring(1,  val.length());	  Double    d    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  	25	None	replace
58	[BUG]  [BUGGY]  Double  d  =  val.substring(0,  val.length()  +  1);  [CE]  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Double  d  =  val.substring(0,  val.length()  +  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	Double  d  =  val.substring(0,  val.length()  +  1);	  Double    d    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  	25	None	replace
59	[BUG]  [BUGGY]  Double  d  =  val.substring(1  +  1,  val.length());  [CE]  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Double  d  =  val.substring(1  +  1,  val.length());  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	Double  d  =  val.substring(1  +  1,  val.length());	  Double    d    =    val.substring(1    +    1,    val.length()    -    1);    	non-compiled	[CE]  	27	None	replace
60	[BUG]  [BUGGY]  Double  d  =  val.substring(1,  val.length()  -  1);  [CE]  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Double  d  =  val.substring(1,  val.length()  -  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	Double  d  =  val.substring(1,  val.length()  -  1);	  Double    d    =    val.substring(1    +    1,    val.length()    -    1);    	non-compiled	[CE]  	27	None	replace
61	[BUG]  [BUGGY]  String  dec  =  val.substring(1  +  1,  val.length());  [CE]  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  String  dec  =  val.substring(1  +  1,  val.length());  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	String  dec  =  val.substring(1  +  1,  val.length());	  String    dec    =    val.substring(1    +    1,    val.length()    -    1);    	non-compiled	[CE]  	5	None	replace
62	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {	  if(dec    ==    null    &&    exp    ==    null    ||    isDigits(numeric.substring(1))    ||    isDigits(numeric.charAt(0)))    {    	non-compiled	[CE]  	55	None	replace
63	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(2))  &&  isDigits(numeric.charAt(0)))  {  [CE]  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(2))  &&  isDigits(numeric.charAt(0)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(2))  &&  isDigits(numeric.charAt(0)))  {	  if(dec    ==    null    &&    exp    ==    null    ||    isDigits(numeric.substring(1))    ||    isDigits(numeric.charAt(0)))    {    	non-compiled	[CE]  	55	None	replace
64	[BUG]  [BUGGY]  if(dec  ==  null  ||  exp  ==  null  ||  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  ||  exp  ==  null  ||  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	if(dec  ==  null  ||  exp  ==  null  ||  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {	  if(dec    ==    null    &&    exp    ==    null    ||    isDigits(numeric.substring(1))    ||    isDigits(numeric.charAt(0)))    {    	non-compiled	[CE]  	55	None	replace
65	[BUG]  [BUGGY]  Double  d  =  val.substring(numericPos  +  1,  val.length()  -  1);  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Double  d  =  val.substring(numericPos  +  1,  val.length()  -  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	Double  d  =  val.substring(numericPos  +  1,  val.length()  -  1);	  Double    d    =    val.substring(numericPos    +    1,    val.length());    	non-compiled	[CE]  	42	None	replace
66	[BUG]  [BUGGY]  Double  dec  =  val.substring(0,  val.length()  +  1);  [CE]  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Double  dec  =  val.substring(0,  val.length()  +  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	Double  dec  =  val.substring(0,  val.length()  +  1);	  Double    dec    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  	16	None	replace
67	[BUG]  [BUGGY]  if(exp!=  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(exp!=  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	if(exp!=  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {	  if(exp    ==    null    &&    exp    ==    null    &&    (numeric.charAt(0)    ==    '-'    ||    isDigits(numeric.substring(1))    &&    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	23	None	replace
68	[BUG]  [BUGGY]  Double  numeric  =  val.substring(delimPos  +  1,  val.length());  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Double  numeric  =  val.substring(delimPos  +  1,  val.length());  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	Double  numeric  =  val.substring(delimPos  +  1,  val.length());	  Double    numeric    =    val.substring(decPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  	56	None	replace
69	[BUG]  [BUGGY]  Double  numeric  =  val.substring(numericPos  +  1,  val.length());  [CE]  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Double  numeric  =  val.substring(numericPos  +  1,  val.length());  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	Double  numeric  =  val.substring(numericPos  +  1,  val.length());	  Double    numeric    =    val.substring(expPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  	49	None	replace
70	[BUG]  [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	if(exp  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {	  if(exp    ==    null    &&    exp    ==    null    &&    (numeric.charAt(0)    ==    '-'    ||    isDigits(numeric.substring(2))    ||    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	47	None	replace
71	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {	  if(exp    ==    null    &&    exp    ==    null    &&    (numeric.charAt(0)    ==    '-'    ||    isDigits(numeric.substring(2))    ||    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	47	None	replace
72	[BUG]  [BUGGY]  String  numeric  =  val.substring(numericPos  +  1,  val.length());  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  String  numeric  =  val.substring(numericPos  +  1,  val.length());  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	String  numeric  =  val.substring(numericPos  +  1,  val.length());	  String    numeric    =    val.substring(expPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  	48	None	replace
73	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&  isDigits(numeric.substring(2)))  {  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&  isDigits(numeric.substring(2)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&  isDigits(numeric.substring(2)))  {	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    isDigits(numeric.substring(1)))    {    	non-compiled	[CE]  	37	None	replace
74	[BUG]  [BUGGY]  double  dec  =  val.substring(expPos  +  1,  val.length()  -  1);  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  double  dec  =  val.substring(expPos  +  1,  val.length()  -  1);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	double  dec  =  val.substring(expPos  +  1,  val.length()  -  1);	  double    dec    =    val.substring(decPos    +    1,    val.length());    	non-compiled	[CE]  	15	None	replace
75	[BUG]  [BUGGY]  String  dec  =  val.substring(delimPos  +  1,  val.length()  -  2);  [CE]  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  String  dec  =  val.substring(delimPos  +  1,  val.length()  -  2);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	String  dec  =  val.substring(delimPos  +  1,  val.length()  -  2);	  String    dec    =    val.substring(delimPos    +    1,    val.length());    	non-compiled	[CE]  	50	None	replace
76	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&(numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  ||  isDigits  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&(numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  ||  isDigits  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&(numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  ||  isDigits	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&(numeric.charAt(0)    ==    '-'    ||    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring    	non-compiled	[CE]  	53	None	replace
77	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&(numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(2))  ||  isDigits  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&(numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(2))  ||  isDigits  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&(numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(2))  ||  isDigits	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&(numeric.charAt(0)    ==    '-'    ||    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring    	non-compiled	[CE]  	53	None	replace
78	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||(numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(2))  ||  isDigits  [CE]  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||(numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(2))  ||  isDigits  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||(numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(2))  ||  isDigits	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&(numeric.charAt(0)    ==    '-'    ||    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring    	non-compiled	[CE]  	53	None	replace
79	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(1)))  {  [CE]  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(1)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(1)))  {	  if(dec    ==    null    &&    exp    ==    null    &&    (numeric.charAt(0)    ==    '-'    ||    isDigits(numeric.substring(2))    &&    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	52	None	replace
80	[BUG]  [BUGGY]  Double  numeric  =  val.substring(0,  val.length()  +  1)+  1;  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Double  numeric  =  val.substring(0,  val.length()  +  1)+  1;  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	Double  numeric  =  val.substring(0,  val.length()  +  1)+  1;	  Double    numeric    =    val.substring(0,    val.length())+    1;    	non-compiled	[CE]  	44	None	replace
81	[BUG]  [BUGGY]  Double  dec  =  val.substring(delimPos  +  1,  val.length()  -  2);  [CE]  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Double  dec  =  val.substring(delimPos  +  1,  val.length()  -  2);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	Double  dec  =  val.substring(delimPos  +  1,  val.length()  -  2);	  Double    dec    =    val.substring(delimPos    +    1,    val.length());    	non-compiled	[CE]  	38	None	replace
82	[BUG]  [BUGGY]  String  numeric  =  val.substring(0,  val.length())+  1;  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  String  numeric  =  val.substring(0,  val.length())+  1;  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	String  numeric  =  val.substring(0,  val.length())+  1;	  String    numeric    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  	29	None	replace
83	[BUG]  [BUGGY]  String  numeric  =  val.substring(0,  val.length()));  [CE]  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  String  numeric  =  val.substring(0,  val.length()));  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	String  numeric  =  val.substring(0,  val.length()));	  String    numeric    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  	29	None	replace
84	[BUG]  [BUGGY]  Double  numeric  =  val.substring(previousPos  +  1,  val.length());  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Double  numeric  =  val.substring(previousPos  +  1,  val.length());  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	Double  numeric  =  val.substring(previousPos  +  1,  val.length());	  Double    numeric    =    val.substring(decPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  	56	None	replace
85	[BUG]  [BUGGY]  Double  numeric  =  val.substring(0,  val.length();  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Double  numeric  =  val.substring(0,  val.length();  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	Double  numeric  =  val.substring(0,  val.length();	  Double    numeric    =    val.substring(0,    val.length()    +    1);    	non-compiled	[CE]  	12	None	replace
86	[BUG]  [BUGGY]  String  dec  =  val.substring(decPos  +  1,  val.length()  -  3);  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  String  dec  =  val.substring(decPos  +  1,  val.length()  -  3);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	String  dec  =  val.substring(decPos  +  1,  val.length()  -  3);	  String    dec    =    val.substring(decPos    +    1,    val.length());    	non-compiled	[CE]  	4	None	replace
87	[BUG]  [BUGGY]  String  dec  =  val.substring(decPos  +  1,  val.charAt(0));  [CE]  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  String  dec  =  val.substring(decPos  +  1,  val.charAt(0));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	String  dec  =  val.substring(decPos  +  1,  val.charAt(0));	  String    dec    =    val.substring(decPos    +    1,    val.length());    	non-compiled	[CE]  	4	None	replace
88	[BUG]  [BUGGY]  String  numeric  =  val.substring(previousPos  +  1,  val.length());  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  String  numeric  =  val.substring(previousPos  +  1,  val.length());  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	String  numeric  =  val.substring(previousPos  +  1,  val.length());	  String    numeric    =    val.substring(expPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  	48	None	replace
89	[BUG]  [BUGGY]  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1)));  [CE]  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1)));  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	(numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1)));	  (numeric.charAt(0)    ==    '-'    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(1)));    	non-compiled	[CE]  	32	None	replace
90	[BUG]  [BUGGY]  val  =  val.substring(decPos  +  1,  val.length()  -  2);  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  val  =  val.substring(decPos  +  1,  val.length()  -  2);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	val  =  val.substring(decPos  +  1,  val.length()  -  2);	  val    =    val.substring(decPos    +    1,    val.length());    	non-compiled	[CE]  	43	None	replace
91	[BUG]  [BUGGY]  if(dec  ==  null  ||  exp  ==  null  ||  isDigits(numeric.substring(2))  ||  isDigits(numeric.charAt(0)))  {  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  ||  exp  ==  null  ||  isDigits(numeric.substring(2))  ||  isDigits(numeric.charAt(0)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	if(dec  ==  null  ||  exp  ==  null  ||  isDigits(numeric.substring(2))  ||  isDigits(numeric.charAt(0)))  {	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(2))    &&    isDigits(numeric.charAt(0)))    {    	non-compiled	[CE]  	17	None	replace
92	[BUG]  [BUGGY]  Double  d  =  val.substring(decPos  +  1,  val.length()  -  2);  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Double  d  =  val.substring(decPos  +  1,  val.length()  -  2);  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	Double  d  =  val.substring(decPos  +  1,  val.length()  -  2);	  Double    d    =    val.substring(decPos    +    1,    val.length());    	non-compiled	[CE]  	26	None	replace
93	[BUG]  [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(1)))  {  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(exp  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(1)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	if(exp  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(1)))  {	  if(exp    ==    null    &&    exp    ==    null    &&    (numeric.charAt(0)    ==    '-'    ||    isDigits(numeric.substring(2))    ||    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	47	None	replace
94	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {	  if(exp    ==    null    &&    exp    ==    null    &&    (numeric.charAt(0)    ==    '-'    ||    isDigits(numeric.substring(2))    ||    isDigits(numeric.substring(2)))    {    	non-compiled	[CE]  	47	None	replace
95	[BUG]  [BUGGY]  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)));  [CE]  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  (numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)));  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	(numeric.charAt(0)  ==  '-'  ||  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)));	  (numeric.charAt(0)    ==    '-'    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)));    	non-compiled	[CE]  	30	None	replace
96	[BUG]  [BUGGY]  String  dec  =  val.substring(2,  val.length());  [CE]  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  String  dec  =  val.substring(2,  val.length());  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	String  dec  =  val.substring(2,  val.length());	  String    dec    =    val.substring(1,    val.length());    	non-compiled	[CE]  	21	None	replace
97	[BUG]  [BUGGY]  String  dec  =  val.substring(0,  val.length()));  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  String  dec  =  val.substring(0,  val.length()));  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	String  dec  =  val.substring(0,  val.length()));	  String    dec    =    val.substring(0,    val.length()    +    1);    	non-compiled	[CE]  	19	None	replace
98	[BUG]  [BUGGY]  val  =  val.substring(delimPos  +  1,  val.length());  [CE]  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  val  =  val.substring(delimPos  +  1,  val.length());  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	val  =  val.substring(delimPos  +  1,  val.length());	  val    =    val.substring(decPos    +    1,    val.length()    -    1);    	non-compiled	[CE]  	46	None	replace
99	[BUG]  [BUGGY]  Double  dec  =  val.substring(0,  val.length())+  1;  [CE]  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  Double  dec  =  val.substring(0,  val.length())+  1;  [BUGGY]      if  (dec  ==  null      &&  exp  ==  null            &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	Double  dec  =  val.substring(0,  val.length())+  1;	  Double    dec    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  	16	None	replace
100	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(2))  ||  isDigits(numeric.charAt(0)))  {  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      exp  =  val.substring(expPos  +  1,  val.length()  -  1);  }  else  {  exp  =  null;  }  String  numeric  =  val.substring(0,  val.length()  -  1);  boolean  allZeros  =  isAllZeros(mant)  &&  isAllZeros(exp);  switch  (lastChar)  {  case  'l'  :  case  'L'  :      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(2))  ||  isDigits(numeric.charAt(0)))  {  [BUGGY]      &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	193	195	1	replace	if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(2))  ||  isDigits(numeric.charAt(0)))  {	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(2))    ||    isDigits(numeric.charAt(0)))    {    	non-compiled	[CE]  	6	None	replace
