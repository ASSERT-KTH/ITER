bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    if(val.startsWith( "0x ")||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  [CE]  not  a  statement  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  if  (val.startsWith( "-- "))  {      return  null;  }  if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  [BUGGY]    if(val.startsWith( "0x ")||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  [BUGGY]  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	    if(val.startsWith( "0x ")||  val.startsWith( "-0x "))  {  return  createInteger(val);  }		non-compiled	[CE]  not  a  statement	10	None	add
2	[BUG]  [BUGGY]    if(val.startsWith( "0x ")||  val.startsWith( "-0x "))  {  return  createBigInteger(val);  }  [CE]  not  a  statement  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  if  (val.startsWith( "-- "))  {      return  null;  }  if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  [BUGGY]    if(val.startsWith( "0x ")||  val.startsWith( "-0x "))  {  return  createBigInteger(val);  }  [BUGGY]  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	    if(val.startsWith( "0x ")||  val.startsWith( "-0x "))  {  return  createBigInteger(val);  }		non-compiled	[CE]  not  a  statement	10	None	add
3	[BUG]  [BUGGY]    String  val  =  val.substring(0,  val.length()  -  1);  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException  [CONTEXT]  if  (val.startsWith( "-- "))  {      return  null;  }  if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  [BUGGY]    String  val  =  val.substring(0,  val.length()  -  1);  [BUGGY]  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	    String  val  =  val.substring(0,  val.length()  -  1);		non-compiled	[CE]  not  a  statement	10	None	add
4	[BUG]  [BUGGY]    if(val.startsWith( "0x ")||  val.startsWith( "-0x "))  {  return  createLong(val);  }  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException  [CONTEXT]  if  (val.startsWith( "-- "))  {      return  null;  }  if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  [BUGGY]    if(val.startsWith( "0x ")||  val.startsWith( "-0x "))  {  return  createLong(val);  }  [BUGGY]  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	    if(val.startsWith( "0x ")||  val.startsWith( "-0x "))  {  return  createLong(val);  }		non-compiled	[CE]  not  a  statement	10	None	add
5	[BUG]  [BUGGY]    if(val.startsWith( "- ")||  val.startsWith( "- "))  {  return  createInteger(val);  }  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException  [CONTEXT]  if  (val.startsWith( "-- "))  {      return  null;  }  if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  [BUGGY]    if(val.startsWith( "- ")||  val.startsWith( "- "))  {  return  createInteger(val);  }  [BUGGY]  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	    if(val.startsWith( "- ")||  val.startsWith( "- "))  {  return  createInteger(val);  }		non-compiled	[CE]  not  a  statement	10	None	add
6	[BUG]  [BUGGY]  char  lastChar  =  val.charAt(val.length());  [CE]  not  a  statement  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  if  (val.startsWith( "-- "))  {      return  null;  }  if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  [BUGGY]  char  lastChar  =  val.charAt(val.length());  [BUGGY]  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	char  lastChar  =  val.charAt(val.length());	char  lastChar  =  val.charAt(val.length()  -  1);  	non-compiled	[CE]  not  a  statement	9	None	replace
7	[BUG]  [BUGGY]  String  lastChar  =  val.charAt(val.length()  -  1);  [CE]  not  a  statement  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  if  (val.startsWith( "-- "))  {      return  null;  }  if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  [BUGGY]  String  lastChar  =  val.charAt(val.length()  -  1);  [BUGGY]  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	String  lastChar  =  val.charAt(val.length()  -  1);	char  lastChar  =  val.charAt(val.length()  -  1);  	non-compiled	[CE]  not  a  statement	9	None	replace
8	[BUG]  [BUGGY]  char  lastChar  =  val.charAt(val.length())+  1;  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException  [CONTEXT]  if  (val.startsWith( "-- "))  {      return  null;  }  if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  [BUGGY]  char  lastChar  =  val.charAt(val.length())+  1;  [BUGGY]  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	char  lastChar  =  val.charAt(val.length())+  1;	char  lastChar  =  val.charAt(val.length()  -  1);  	non-compiled	[CE]  not  a  statement	9	None	replace
9	[BUG]  [BUGGY]  char  lastChar  =  val.charAt(val.length()  *  1);  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException  [CONTEXT]  if  (val.startsWith( "-- "))  {      return  null;  }  if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  [BUGGY]  char  lastChar  =  val.charAt(val.length()  *  1);  [BUGGY]  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	char  lastChar  =  val.charAt(val.length()  *  1);	char  lastChar  =  val.charAt(val.length()  -  1);  	non-compiled	[CE]  not  a  statement	9	None	replace
10	[BUG]  [BUGGY]    if(val.startsWith( "0x ")||  val.startsWith( "-0x "))  {  return  createBigDecimal(val);  }  [CE]  not  a  statement  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  if  (val.startsWith( "-- "))  {      return  null;  }  if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  [BUGGY]    if(val.startsWith( "0x ")||  val.startsWith( "-0x "))  {  return  createBigDecimal(val);  }  [BUGGY]  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	    if(val.startsWith( "0x ")||  val.startsWith( "-0x "))  {  return  createBigDecimal(val);  }		non-compiled	[CE]  not  a  statement	10	None	add
11	[BUG]  [BUGGY]    if(!allZeros)  {  if(val.startsWith( "0x ")||  val.startsWith( "-0x "))  {  return  createBigInteger(val);  }  [CE]  not  a  statement  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  if  (val.startsWith( "-- "))  {      return  null;  }  if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  [BUGGY]    if(!allZeros)  {  if(val.startsWith( "0x ")||  val.startsWith( "-0x "))  {  return  createBigInteger(val);  }  [BUGGY]  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	    if(!allZeros)  {  if(val.startsWith( "0x ")||  val.startsWith( "-0x "))  {  return  createBigInteger(val);  }		non-compiled	[CE]  not  a  statement	10	None	add
12	[BUG]  [BUGGY]    if(!allZeros)  {  if(val.startsWith( "0x ")||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  [CE]  not  a  statement  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  if  (val.startsWith( "-- "))  {      return  null;  }  if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  [BUGGY]    if(!allZeros)  {  if(val.startsWith( "0x ")||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  [BUGGY]  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	    if(!allZeros)  {  if(val.startsWith( "0x ")||  val.startsWith( "-0x "))  {  return  createInteger(val);  }		non-compiled	[CE]  not  a  statement	10	None	add
13	[BUG]  [BUGGY]    if(!allZeros)  {  if(val.startsWith( "- ")||  val.startsWith( "-0x "))  {  return  createBigInteger(val);  }  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException  [CONTEXT]  if  (val.startsWith( "-- "))  {      return  null;  }  if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  [BUGGY]    if(!allZeros)  {  if(val.startsWith( "- ")||  val.startsWith( "-0x "))  {  return  createBigInteger(val);  }  [BUGGY]  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	    if(!allZeros)  {  if(val.startsWith( "- ")||  val.startsWith( "-0x "))  {  return  createBigInteger(val);  }		non-compiled	[CE]  not  a  statement	10	None	add
14	[BUG]  [BUGGY]    if(!allZeros)  {  if(val.startsWith( "0x ")||  val.startsWith( "-0x "))  {  return  createLong(val);  }  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException  [CONTEXT]  if  (val.startsWith( "-- "))  {      return  null;  }  if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  [BUGGY]    if(!allZeros)  {  if(val.startsWith( "0x ")||  val.startsWith( "-0x "))  {  return  createLong(val);  }  [BUGGY]  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	    if(!allZeros)  {  if(val.startsWith( "0x ")||  val.startsWith( "-0x "))  {  return  createLong(val);  }		non-compiled	[CE]  not  a  statement	10	None	add
15	[BUG]  [BUGGY]    String  dec  =  val.substring(0,  val.length()  -  1);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException  [CONTEXT]  if  (val.startsWith( "-- "))  {      return  null;  }  if  (val.startsWith( "0x ")  ||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  [BUGGY]    String  dec  =  val.substring(0,  val.length()  -  1);  [BUGGY]  char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	    String  dec  =  val.substring(0,  val.length()  -  1);		non-compiled	[CE]  not  a  statement	10	None	add
