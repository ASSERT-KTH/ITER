bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ||  val.startsWith( "-0x "))  {  return  createBigInteger(val);  }  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  ||  val.startsWith( "-0x "))  {  return  createBigInteger(val);  }  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	||  val.startsWith( "-0x "))  {  return  createBigInteger(val);  }	      if(val.startsWith(   "0x   ")||    val.startsWith(   "-0x   "))    {    return    createBigInteger(val);    }    	non-compiled	[CE]  not  a  statement	2	None	replace
2	[BUG]  [BUGGY]  String  lastChar  =  val.charAt(val.length());  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  String  lastChar  =  val.charAt(val.length());  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	String  lastChar  =  val.charAt(val.length());	  char    lastChar    =    val.charAt(val.length());    	non-compiled	[CE]  not  a  statement	6	None	replace
3	[BUG]  [BUGGY]  char  lastChar  =  val.charAt(val.length()  -  2);  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  char  lastChar  =  val.charAt(val.length()  -  2);  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	char  lastChar  =  val.charAt(val.length()  -  2);	  char    lastChar    =    val.charAt(val.length());    	non-compiled	[CE]  not  a  statement	6	None	replace
4	[BUG]  [BUGGY]  AllZeros)  {  if(val.startsWith( "0x   ")||  val.startsWith( "-0x   "))  {  return  createBigInteger(val);  }  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  AllZeros)  {  if(val.startsWith( "0x   ")||  val.startsWith( "-0x   "))  {  return  createBigInteger(val);  }  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	AllZeros)  {  if(val.startsWith( "0x   ")||  val.startsWith( "-0x   "))  {  return  createBigInteger(val);  }	      if(!allZeros)    {    if(val.startsWith(   "0x   ")||    val.startsWith(   "-0x   "))    {    return    createBigInteger(val);    }    	non-compiled	[CE]  not  a  statement	11	None	replace
5	[BUG]  [BUGGY]  if(val.startsWith( "-0x   ")||  val.startsWith( "-0x   "))  {  return  createBigInteger(val);  }  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  if(val.startsWith( "-0x   ")||  val.startsWith( "-0x   "))  {  return  createBigInteger(val);  }  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	if(val.startsWith( "-0x   ")||  val.startsWith( "-0x   "))  {  return  createBigInteger(val);  }	      if(!allZeros)    {    if(val.startsWith(   "0x   ")||    val.startsWith(   "-0x   "))    {    return    createBigInteger(val);    }    	non-compiled	[CE]  not  a  statement	11	None	replace
6	[BUG]  [BUGGY]  ||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  ||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	||  val.startsWith( "-0x "))  {  return  createInteger(val);  }	      if(val.startsWith(   "0x   ")||    val.startsWith(   "-0x   "))    {    return    createInteger(val);    }    	non-compiled	[CE]  not  a  statement	1	None	replace
7	[BUG]  [BUGGY]  if(val.startsWith( "0x ")||  val.startsWith( "-0x "))  {  return  createNumber(val);  }  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  if(val.startsWith( "0x ")||  val.startsWith( "-0x "))  {  return  createNumber(val);  }  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	if(val.startsWith( "0x ")||  val.startsWith( "-0x "))  {  return  createNumber(val);  }	      if(val.startsWith(   "0x   ")||    val.startsWith(   "-0x   "))    {    return    createInteger(val);    }    	non-compiled	[CE]  not  a  statement	1	None	replace
8	[BUG]  [BUGGY]  char  lastChar  =  val.charAt(val.length()  -  1)+  1;  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  char  lastChar  =  val.charAt(val.length()  -  1)+  1;  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	char  lastChar  =  val.charAt(val.length()  -  1)+  1;	  char    lastChar    =    val.charAt(val.length())+    1;    	non-compiled	[CE]  not  a  statement	8	None	replace
9	[BUG]  [BUGGY]  String  lastChar  =  val.charAt(val.length())+  1;  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  String  lastChar  =  val.charAt(val.length())+  1;  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	String  lastChar  =  val.charAt(val.length())+  1;	  char    lastChar    =    val.charAt(val.length())+    1;    	non-compiled	[CE]  not  a  statement	8	None	replace
10	[BUG]  [BUGGY]  char  lastChar  =  val.charAt(val.length())+  2;  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  char  lastChar  =  val.charAt(val.length())+  2;  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	char  lastChar  =  val.charAt(val.length())+  2;	  char    lastChar    =    val.charAt(val.length())+    1;    	non-compiled	[CE]  not  a  statement	8	None	replace
11	[BUG]  [BUGGY]  AllZeros)  {  if(val.startsWith( "0x   ")||  val.startsWith( "-0x   "))  {  return  createInteger(val);  }  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  AllZeros)  {  if(val.startsWith( "0x   ")||  val.startsWith( "-0x   "))  {  return  createInteger(val);  }  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	AllZeros)  {  if(val.startsWith( "0x   ")||  val.startsWith( "-0x   "))  {  return  createInteger(val);  }	      if(!allZeros)    {    if(val.startsWith(   "0x   ")||    val.startsWith(   "-0x   "))    {    return    createLong(val);    }    	non-compiled	[CE]  not  a  statement	14	None	replace
12	[BUG]  [BUGGY]  AllZeros)  {  if(val.startsWith( "0x   ")||  val.startsWith( "-0x   "))  {  return  createLong(val);  }  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  AllZeros)  {  if(val.startsWith( "0x   ")||  val.startsWith( "-0x   "))  {  return  createLong(val);  }  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	AllZeros)  {  if(val.startsWith( "0x   ")||  val.startsWith( "-0x   "))  {  return  createLong(val);  }	      if(!allZeros)    {    if(val.startsWith(   "0x   ")||    val.startsWith(   "-0x   "))    {    return    createLong(val);    }    	non-compiled	[CE]  not  a  statement	14	None	replace
13	[BUG]  [BUGGY]  ||  val.startsWith( "-   "))  {  return  createInteger(val);  }  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  ||  val.startsWith( "-   "))  {  return  createInteger(val);  }  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	||  val.startsWith( "-   "))  {  return  createInteger(val);  }	      if(val.startsWith(   "-   ")||    val.startsWith(   "-   "))    {    return    createInteger(val);    }    	non-compiled	[CE]  not  a  statement	5	None	replace
14	[BUG]  [BUGGY]  if(val.startsWith( "- ")||  val.startsWith( "- "))  {  return  createNumber(val);  }  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  if(val.startsWith( "- ")||  val.startsWith( "- "))  {  return  createNumber(val);  }  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	if(val.startsWith( "- ")||  val.startsWith( "- "))  {  return  createNumber(val);  }	      if(val.startsWith(   "-   ")||    val.startsWith(   "-   "))    {    return    createInteger(val);    }    	non-compiled	[CE]  not  a  statement	5	None	replace
15	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length());  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  String  val  =  val.substring(0,  val.length());  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	String  val  =  val.substring(0,  val.length());	      String    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	3	None	replace
16	[BUG]  [BUGGY]  char  val  =  val.substring(0,  val.length()  -  1);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  char  val  =  val.substring(0,  val.length()  -  1);  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	char  val  =  val.substring(0,  val.length()  -  1);	      String    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	3	None	replace
17	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length()  +  1);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  String  val  =  val.substring(0,  val.length()  +  1);  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	String  val  =  val.substring(0,  val.length()  +  1);	      String    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	3	None	replace
18	[BUG]  [BUGGY]  try  {  [Delete]  catch(NumberFormatException  nfe)  {  if(val.startsWith( "- ")||  val.startsWith( "-0x   "))  {  return  createBigInteger(val);  }  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  try  {  [Delete]  catch(NumberFormatException  nfe)  {  if(val.startsWith( "- ")||  val.startsWith( "-0x   "))  {  return  createBigInteger(val);  }  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	try  {  [Delete]  catch(NumberFormatException  nfe)  {  if(val.startsWith( "- ")||  val.startsWith( "-0x   "))  {  return  createBigInteger(val);  }	      if(!allZeros)    {    if(val.startsWith(   "-   ")||    val.startsWith(   "-0x   "))    {    return    createBigInteger(val);    }    	non-compiled	[CE]  not  a  statement	13	None	replace
19	[BUG]  [BUGGY]  try  {  [Delete]  catch(Exception  e)  {  if(val.startsWith( "- ")||  val.startsWith( "-0x   "))  {  return  createBigInteger(val);  }  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  try  {  [Delete]  catch(Exception  e)  {  if(val.startsWith( "- ")||  val.startsWith( "-0x   "))  {  return  createBigInteger(val);  }  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	try  {  [Delete]  catch(Exception  e)  {  if(val.startsWith( "- ")||  val.startsWith( "-0x   "))  {  return  createBigInteger(val);  }	      if(!allZeros)    {    if(val.startsWith(   "-   ")||    val.startsWith(   "-0x   "))    {    return    createBigInteger(val);    }    	non-compiled	[CE]  not  a  statement	13	None	replace
20	[BUG]  [BUGGY]  char  lastChar  =  val.charAt(val.length()  /  1);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  char  lastChar  =  val.charAt(val.length()  /  1);  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	char  lastChar  =  val.charAt(val.length()  /  1);	  char    lastChar    =    val.charAt(val.length()    *    1);    	non-compiled	[CE]  not  a  statement	9	None	replace
21	[BUG]  [BUGGY]  char  lastChar  =  val.charAt(val.length()  *  2);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  char  lastChar  =  val.charAt(val.length()  *  2);  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	char  lastChar  =  val.charAt(val.length()  *  2);	  char    lastChar    =    val.charAt(val.length()    *    1);    	non-compiled	[CE]  not  a  statement	9	None	replace
22	[BUG]  [BUGGY]  String  lastChar  =  val.charAt(val.length()  *  1);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  String  lastChar  =  val.charAt(val.length()  *  1);  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	String  lastChar  =  val.charAt(val.length()  *  1);	  char    lastChar    =    val.charAt(val.length()    *    1);    	non-compiled	[CE]  not  a  statement	9	None	replace
23	[BUG]  [BUGGY]  String  dec  =  val.substring(0,  val.length());  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  String  dec  =  val.substring(0,  val.length());  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	String  dec  =  val.substring(0,  val.length());	      String    dec    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	15	None	replace
24	[BUG]  [BUGGY]  char  dec  =  val.substring(0,  val.length()  -  1);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  char  dec  =  val.substring(0,  val.length()  -  1);  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	char  dec  =  val.substring(0,  val.length()  -  1);	      String    dec    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	15	None	replace
25	[BUG]  [BUGGY]  String  dec  =  val.substring(0,  val.length()  +  1);  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  String  dec  =  val.substring(0,  val.length()  +  1);  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	String  dec  =  val.substring(0,  val.length()  +  1);	      String    dec    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	15	None	replace
26	[BUG]  [BUGGY]  if(!allZeros)  {  if(val.startsWith( "-0x ")||  val.startsWith( "-0x   "))  {  return  createBigInteger(val);  }  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  if(!allZeros)  {  if(val.startsWith( "-0x ")||  val.startsWith( "-0x   "))  {  return  createBigInteger(val);  }  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	if(!allZeros)  {  if(val.startsWith( "-0x ")||  val.startsWith( "-0x   "))  {  return  createBigInteger(val);  }	      if(!allZeros)    {    if(val.startsWith(   "-   ")||    val.startsWith(   "-0x   "))    {    return    createBigInteger(val);    }    	non-compiled	[CE]  not  a  statement	13	None	replace
27	[BUG]  [BUGGY]  if(!allZeros)  {  if(val.startsWith( "-0 ")||  val.startsWith( "-0x   "))  {  return  createBigInteger(val);  }  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  if(!allZeros)  {  if(val.startsWith( "-0 ")||  val.startsWith( "-0x   "))  {  return  createBigInteger(val);  }  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	if(!allZeros)  {  if(val.startsWith( "-0 ")||  val.startsWith( "-0x   "))  {  return  createBigInteger(val);  }	      if(!allZeros)    {    if(val.startsWith(   "-   ")||    val.startsWith(   "-0x   "))    {    return    createBigInteger(val);    }    	non-compiled	[CE]  not  a  statement	13	None	replace
28	[BUG]  [BUGGY]  String  dec  =  val.substring(0,  val.length()  -  2);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  String  dec  =  val.substring(0,  val.length()  -  2);  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	String  dec  =  val.substring(0,  val.length()  -  2);	      String    dec    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	15	None	replace
29	[BUG]  [BUGGY]  char  lastChar  =  val.charAt(val.length()  +  1)+  1;  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  char  lastChar  =  val.charAt(val.length()  +  1)+  1;  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	char  lastChar  =  val.charAt(val.length()  +  1)+  1;	  char    lastChar    =    val.charAt(val.length())+    1;    	non-compiled	[CE]  not  a  statement	8	None	replace
30	[BUG]  [BUGGY]  if(val.startsWith( "- ")||  val.startsWith( "-0 "))  {  return  createInteger(val);  }  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  if(val.startsWith( "- ")||  val.startsWith( "-0 "))  {  return  createInteger(val);  }  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	if(val.startsWith( "- ")||  val.startsWith( "-0 "))  {  return  createInteger(val);  }	      if(val.startsWith(   "-   ")||    val.startsWith(   "-   "))    {    return    createInteger(val);    }    	non-compiled	[CE]  not  a  statement	5	None	replace
31	[BUG]  [BUGGY]  if(val.startsWith( "- ")||  val.startsWith( "-))  {  return  createInteger(val);  }  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  if(val.startsWith( "- ")||  val.startsWith( "-))  {  return  createInteger(val);  }  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	if(val.startsWith( "- ")||  val.startsWith( "-))  {  return  createInteger(val);  }	      if(val.startsWith(   "-   ")||    val.startsWith(   "-   "))    {    return    createInteger(val);    }    	non-compiled	[CE]  not  a  statement	5	None	replace
32	[BUG]  [BUGGY]  if(val.startsWith( "-0x   ")||  val.startsWith( "-0x   "))  {  return  createBigDecimal(val);  }  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  if(val.startsWith( "-0x   ")||  val.startsWith( "-0x   "))  {  return  createBigDecimal(val);  }  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	if(val.startsWith( "-0x   ")||  val.startsWith( "-0x   "))  {  return  createBigDecimal(val);  }	      if(val.startsWith(   "0x   ")||    val.startsWith(   "-0x   "))    {    return    createBigDecimal(val);    }    	non-compiled	[CE]  not  a  statement	10	None	replace
33	[BUG]  [BUGGY]  if(!allZeros)  {  if(val.startsWith( "-0x ")||  val.startsWith( "-0x   "))  {  return  createInteger(val);  }  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  if(!allZeros)  {  if(val.startsWith( "-0x ")||  val.startsWith( "-0x   "))  {  return  createInteger(val);  }  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	if(!allZeros)  {  if(val.startsWith( "-0x ")||  val.startsWith( "-0x   "))  {  return  createInteger(val);  }	      if(!allZeros)    {    if(val.startsWith(   "0x   ")||    val.startsWith(   "-0x   "))    {    return    createInteger(val);    }    	non-compiled	[CE]  not  a  statement	12	None	replace
34	[BUG]  [BUGGY]  if(val.startsWith( ".0x ")||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  if(val.startsWith( ".0x ")||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	if(val.startsWith( ".0x ")||  val.startsWith( "-0x "))  {  return  createInteger(val);  }	      if(val.startsWith(   "0x   ")||    val.startsWith(   "-0x   "))    {    return    createInteger(val);    }    	non-compiled	[CE]  not  a  statement	1	None	replace
35	[BUG]  [BUGGY]  if(val.startsWith( "0x ")||  val.startsWith( "-1x "))  {  return  createInteger(val);  }  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  if(val.startsWith( "0x ")||  val.startsWith( "-1x "))  {  return  createInteger(val);  }  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	if(val.startsWith( "0x ")||  val.startsWith( "-1x "))  {  return  createInteger(val);  }	      if(val.startsWith(   "0x   ")||    val.startsWith(   "-0x   "))    {    return    createInteger(val);    }    	non-compiled	[CE]  not  a  statement	1	None	replace
36	[BUG]  [BUGGY]  String  dec  =  val.substring(0,  val.length())+  1;  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  String  dec  =  val.substring(0,  val.length())+  1;  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	String  dec  =  val.substring(0,  val.length())+  1;	      String    dec    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	15	None	replace
37	[BUG]  [BUGGY]  if(!allZeros)  {  if(val.startsWith( "- ")||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  if(!allZeros)  {  if(val.startsWith( "- ")||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	if(!allZeros)  {  if(val.startsWith( "- ")||  val.startsWith( "-0x "))  {  return  createInteger(val);  }	      if(!allZeros)    {    if(val.startsWith(   "-   ")||    val.startsWith(   "-0x   "))    {    return    createBigInteger(val);    }    	non-compiled	[CE]  not  a  statement	13	None	replace
38	[BUG]  [BUGGY]  if(val.startsWith( ". ")||  val.startsWith( ". "))  {  return  createInteger(val);  }  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  if(val.startsWith( ". ")||  val.startsWith( ". "))  {  return  createInteger(val);  }  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	if(val.startsWith( ". ")||  val.startsWith( ". "))  {  return  createInteger(val);  }	      if(val.startsWith(   "-   ")||    val.startsWith(   "-   "))    {    return    createInteger(val);    }    	non-compiled	[CE]  not  a  statement	5	None	replace
39	[BUG]  [BUGGY]  if(val.startsWith( "- ")||  val.startsWith( ".- "))  {  return  createInteger(val);  }  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  if(val.startsWith( "- ")||  val.startsWith( ".- "))  {  return  createInteger(val);  }  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	if(val.startsWith( "- ")||  val.startsWith( ".- "))  {  return  createInteger(val);  }	      if(val.startsWith(   "-   ")||    val.startsWith(   "-   "))    {    return    createInteger(val);    }    	non-compiled	[CE]  not  a  statement	5	None	replace
40	[BUG]  [BUGGY]  if(val.startsWith( "- ")||  val.startsWith( "- "))  {  return  createNull(val);  }  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  if(val.startsWith( "- ")||  val.startsWith( "- "))  {  return  createNull(val);  }  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	if(val.startsWith( "- ")||  val.startsWith( "- "))  {  return  createNull(val);  }	      if(val.startsWith(   "-   ")||    val.startsWith(   "-   "))    {    return    createInteger(val);    }    	non-compiled	[CE]  not  a  statement	5	None	replace
41	[BUG]  [BUGGY]  char  lastChar  =  val.charAt(val.indexOf('-')+  1);  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  char  lastChar  =  val.charAt(val.indexOf('-')+  1);  [BUGGY]    String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	char  lastChar  =  val.charAt(val.indexOf('-')+  1);	  char    lastChar    =    val.charAt(val.length())+    1;    	non-compiled	[CE]  not  a  statement	8	None	replace
42	[BUG]  [BUGGY]  if(!allZeros)  {  if(val.startsWith( "0x ")||  val.startsWith( "-1))  {  return  createInteger(val);  }  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  if(!allZeros)  {  if(val.startsWith( "0x ")||  val.startsWith( "-1))  {  return  createInteger(val);  }  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	if(!allZeros)  {  if(val.startsWith( "0x ")||  val.startsWith( "-1))  {  return  createInteger(val);  }	      if(!allZeros)    {    if(val.startsWith(   "0x   ")||    val.startsWith(   "-0x   "))    {    return    createInteger(val);    }    	non-compiled	[CE]  not  a  statement	12	None	replace
43	[BUG]  [BUGGY]  if(!allZeros)  {  if(val.startsWith( "0x ")||  val.startsWith( ".- "))  {  return  createInteger(val);  }  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  if(!allZeros)  {  if(val.startsWith( "0x ")||  val.startsWith( ".- "))  {  return  createInteger(val);  }  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	if(!allZeros)  {  if(val.startsWith( "0x ")||  val.startsWith( ".- "))  {  return  createInteger(val);  }	      if(!allZeros)    {    if(val.startsWith(   "0x   ")||    val.startsWith(   "-0x   "))    {    return    createInteger(val);    }    	non-compiled	[CE]  not  a  statement	12	None	replace
44	[BUG]  [BUGGY]  if(val.startsWith( "-0x ")||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  if(val.startsWith( "-0x ")||  val.startsWith( "-0x "))  {  return  createInteger(val);  }  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	if(val.startsWith( "-0x ")||  val.startsWith( "-0x "))  {  return  createInteger(val);  }	      if(val.startsWith(   "0x   ")||    val.startsWith(   "-0x   "))    {    return    createInteger(val);    }    	non-compiled	[CE]  not  a  statement	1	None	replace
45	[BUG]  [BUGGY]  if(val.startsWith( "-0 ")||  val.startsWith( "-0 "))  {  return  createInteger(val);  }  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  if(val.startsWith( "-0 ")||  val.startsWith( "-0 "))  {  return  createInteger(val);  }  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	if(val.startsWith( "-0 ")||  val.startsWith( "-0 "))  {  return  createInteger(val);  }	      if(val.startsWith(   "0x   ")||    val.startsWith(   "-0x   "))    {    return    createInteger(val);    }    	non-compiled	[CE]  not  a  statement	1	None	replace
46	[BUG]  [BUGGY]  if(val.startsWith( "- ")||  val.startsWith( "- "))  {  return  createBigDecimal(val);  }  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  if(val.startsWith( "- ")||  val.startsWith( "- "))  {  return  createBigDecimal(val);  }  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	if(val.startsWith( "- ")||  val.startsWith( "- "))  {  return  createBigDecimal(val);  }	      if(val.startsWith(   "0x   ")||    val.startsWith(   "-0x   "))    {    return    createBigDecimal(val);    }    	non-compiled	[CE]  not  a  statement	10	None	replace
47	[BUG]  [BUGGY]  if(val.startsWith( "-0 ")||  val.startsWith( "-0 "))  {  return  createBigDecimal(val);  }  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  if(val.startsWith( "-0 ")||  val.startsWith( "-0 "))  {  return  createBigDecimal(val);  }  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	if(val.startsWith( "-0 ")||  val.startsWith( "-0 "))  {  return  createBigDecimal(val);  }	      if(val.startsWith(   "0x   ")||    val.startsWith(   "-0x   "))    {    return    createBigDecimal(val);    }    	non-compiled	[CE]  not  a  statement	10	None	replace
48	[BUG]  [BUGGY]  if(!allZeros)  {  if(val.startsWith( "0x ")||  val.startsWith( "-1))  {  return  createBigInteger(val);  }  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  if(!allZeros)  {  if(val.startsWith( "0x ")||  val.startsWith( "-1))  {  return  createBigInteger(val);  }  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	if(!allZeros)  {  if(val.startsWith( "0x ")||  val.startsWith( "-1))  {  return  createBigInteger(val);  }	      if(!allZeros)    {    if(val.startsWith(   "0x   ")||    val.startsWith(   "-0x   "))    {    return    createBigInteger(val);    }    	non-compiled	[CE]  not  a  statement	11	None	replace
49	[BUG]  [BUGGY]  if(val.startsWith( "-0 ")||  val.startsWith( "-0 "))  {  return  createBigInteger(val);  }  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  if(val.startsWith( "-0 ")||  val.startsWith( "-0 "))  {  return  createBigInteger(val);  }  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	if(val.startsWith( "-0 ")||  val.startsWith( "-0 "))  {  return  createBigInteger(val);  }	      if(val.startsWith(   "0x   ")||    val.startsWith(   "-0x   "))    {    return    createBigInteger(val);    }    	non-compiled	[CE]  not  a  statement	2	None	replace
50	[BUG]  [BUGGY]  String  val  =  val.substring(0,  val.length())+  1;  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    if  (val.startsWith(   "--   "))  {      return  null;  }  if  (val.startsWith(   "0x   ")  ||  val.startsWith(   "-0x   "))  {  return  createInteger(val);  }    [BUGGY]  String  val  =  val.substring(0,  val.length())+  1;  [BUGGY]    char  lastChar  =  val.charAt(val.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  val.indexOf('.');  int  expPos  =  val.indexOf('e')  +  val.indexOf('E')  +  1;  if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos)  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  val  [VARIABLES]  Float  f  boolean  allZeros  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  val  Double  d  int  decPos  expPos  	projects/Lang44/src/java/org/apache/commons/lang/NumberUtils.java	0.5773502691896258	155	155	1	replace	String  val  =  val.substring(0,  val.length())+  1;	      String    val    =    val.substring(0,    val.length()    -    1);    	non-compiled	[CE]  not  a  statement	3	None	replace
