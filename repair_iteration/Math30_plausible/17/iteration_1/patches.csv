bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double  n2  =  n1  *  n2prod;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  n2  =  n1  *  n2prod;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n1  *  n2prod;	      final    double    n2    =    n1    *    n2;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	7	None	replace
2	[BUG]  [BUGGY]  final  double  n2  =  n1  *  EU;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  n2  =  n1  *  EU;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n1  *  EU;	      final    double    n2    =    n1    *    n2;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	7	None	replace
3	[BUG]  [BUGGY]  final  int  n2  =  n1  *  n2;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  int  n2  =  n1  *  n2;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  int  n2  =  n1  *  n2;	      final    double    n2    =    n1    *    n2;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	7	None	replace
4	[BUG]  [BUGGY]  final  double  n1  =  n2  *  n1;  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  n1  =  n2  *  n1;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n1  =  n2  *  n1;	      final    double    n1    =    n1    *    n2;    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	11	None	replace
5	[BUG]  [BUGGY]  final  double  n1  =  n1  *  n2prod;  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  n1  =  n1  *  n2prod;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n1  =  n1  *  n2prod;	      final    double    n1    =    n1    *    n2;    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	11	None	replace
6	[BUG]  [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU);  [CE]  cannot  find  symbol  VarU  [FE]              AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU);	      	non-compiled	[CE]  cannot  find  symbol  VarU	6	None	replace
7	[BUG]  [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(z);  [CE]  cannot  find  symbol  VarU  [FE]                AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(z);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(z);	      	non-compiled	[CE]  cannot  find  symbol  VarU	6	None	replace
8	[BUG]  [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU);  return  2  *  StandardNormal.cumulativeProbability(z);  [CE]  cannot  find  symbol  VarU  [FE]                  AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU);  return  2  *  StandardNormal.cumulativeProbability(z);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU);  return  2  *  StandardNormal.cumulativeProbability(z);	      	non-compiled	[CE]  cannot  find  symbol  VarU	6	None	replace
9	[BUG]  [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(n1);  [CE]  cannot  find  symbol  VarU  [FE]                    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(n1);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(n1);	      	non-compiled	[CE]  cannot  find  symbol  VarU	6	None	replace
10	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  VarU  =  n1  *  (n2  +  n1)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	add	final  double  VarU  =  n1  *  (n2  +  n1)/  2.0;	  final    double    VarU    =    n2prod    *    (n1    +    n2    +    1)/    2.0;    	compilable	  [FE]  AssertionError  	3	1	replace
11	[BUG]  [BUGGY]  final  double  VarU  =  n1  *  (n2  +  n1)/  2.0;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  VarU  =  n1  *  (n2  +  n1)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n1  *  (n2  +  n1)/  2.0;	  final    double    VarU    =    n2prod    *    (n1    +    n2    +    1)/    2.0;    	compilable	  [FE]  AssertionError  	3	1	replace
12	[BUG]  [BUGGY]  final  double  VarU  =  n1  +  n2prod  *  (n1  +  n2  +  1)/  2.0;  [CE]  cannot  find  symbol  n2prod  [FE]            AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  VarU  =  n1  +  n2prod  *  (n1  +  n2  +  1)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n1  +  n2prod  *  (n1  +  n2  +  1)/  2.0;	  final    double    VarU    =    n2prod    *    (n1    +    n2    +    1)/    2.0;    	non-compiled	[CE]  cannot  find  symbol  n2prod	3	None	replace
13	[BUG]  [BUGGY]  final  double  VarU  =  n1prod  *  (n1  +  n2prod  +  1)/  2.0;  [CE]  cannot  find  symbol  n1prod  [FE]              AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  VarU  =  n1prod  *  (n1  +  n2prod  +  1)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n1prod  *  (n1  +  n2prod  +  1)/  2.0;	  final    double    VarU    =    n2prod    *    (n1    +    n2    +    1)/    2.0;    	non-compiled	[CE]  cannot  find  symbol  n1prod	3	None	replace
14	[BUG]  [BUGGY]  final  double  VarU  =  n2prod  *  (n1  +  n2)/  2.0;  [CE]  cannot  find  symbol  n2prod  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  VarU  =  n2prod  *  (n1  +  n2)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n2prod  *  (n1  +  n2)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    	non-compiled	[CE]  cannot  find  symbol  n2prod	5	None	replace
15	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  VarU  =  n1n2prod  *  (n2  +  n1)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	add	final  double  VarU  =  n1n2prod  *  (n2  +  n1)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    	compilable	  [FE]  AssertionError  	5	2	replace
16	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  *  (n2  +  n1)/  2.0;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  VarU  =  n1n2prod  *  (n2  +  n1)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n1n2prod  *  (n2  +  n1)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    	compilable	  [FE]  AssertionError  	5	2	replace
17	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  VarU  =  n1n2prod  /  (n1  +  n2)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	add	final  double  VarU  =  n1n2prod  /  (n1  +  n2)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    	compilable	  [FE]  AssertionError  	5	2	replace
18	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  /  (n1  +  n2)/  2.0;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  VarU  =  n1n2prod  /  (n1  +  n2)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n1n2prod  /  (n1  +  n2)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    	compilable	  [FE]  AssertionError  	5	2	replace
19	[BUG]  [BUGGY]  final  double  VarU  =  n1  +  n2prod  *  (n1  +  n2)/  2.0;  [CE]  cannot  find  symbol  n2prod  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  VarU  =  n1  +  n2prod  *  (n1  +  n2)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n1  +  n2prod  *  (n1  +  n2)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    	non-compiled	[CE]  cannot  find  symbol  n2prod	5	None	replace
20	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)/  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)/  2.0;  [CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)/  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n1n2prod    *    (n1    +    n2    +    1)/    2.0;    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)/  2.0;	  	non-compiled	[CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	1	None	add
21	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)/  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2)/  2.0;  [CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]      AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)/  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n1n2prod    *    (n1    +    n2    +    1)/    2.0;    final  double  VarU  =  n1n2prod  *  (n1  +  n2)/  2.0;	  	non-compiled	[CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	1	None	add
22	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)/  2.0;  final  double  VarU  =  n2prod  *  (n1  +  n2  +  1)/  2.0;  [CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)/  2.0;  final  double  VarU  =  n2prod  *  (n1  +  n2  +  1)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n1n2prod    *    (n1    +    n2    +    1)/    2.0;    final  double  VarU  =  n2prod  *  (n1  +  n2  +  1)/  2.0;	  	non-compiled	[CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	1	None	add
23	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  *  (n1  +  n2)/  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2)/  2.0;  [CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  VarU  =  n1n2prod  *  (n1  +  n2)/  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    final  double  VarU  =  n1n2prod  *  (n1  +  n2)/  2.0;	  	non-compiled	[CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	4	None	add
24	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  *  (n1  +  n2)/  2.0;  final  double  VarU  =  n2prod  *  (n1  +  n2)/  2.0;  [CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]      AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  VarU  =  n1n2prod  *  (n1  +  n2)/  2.0;  final  double  VarU  =  n2prod  *  (n1  +  n2)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    final  double  VarU  =  n2prod  *  (n1  +  n2)/  2.0;	  	non-compiled	[CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	4	None	add
25	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  *  (n1  +  n2)/  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2)/2  2.0;  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  VarU  =  n1n2prod  *  (n1  +  n2)/  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2)/2  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    final  double  VarU  =  n1n2prod  *  (n1  +  n2)/2  2.0;	  	non-compiled	[CE]  ';'  expected	4	None	add
26	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  VarU  =  n1n2prod  /  (n1  +  n2  +  1)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	add	final  double  VarU  =  n1n2prod  /  (n1  +  n2  +  1)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2    +    1)/    2.0;    	compilable	  [FE]  AssertionError  	2	2	replace
27	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  /  (n1  +  n2  +  1)/  2.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  VarU  =  n1n2prod  /  (n1  +  n2  +  1)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n1n2prod  /  (n1  +  n2  +  1)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2    +    1)/    2.0;    	compilable	  [FE]  AssertionError  	2	2	replace
28	[BUG]  [BUGGY]      final  double  n2prod  =  n1  *  n2  +  1;  final  double  n2prod  =  n1  *  n2  +  1;  [CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]      final  double  n2prod  =  n1  *  n2  +  1;  final  double  n2prod  =  n1  *  n2  +  1;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	        final    double    n2prod    =    n1    *    n2    +    1;    final  double  n2prod  =  n1  *  n2  +  1;	  	non-compiled	[CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	15	None	add
29	[BUG]  [BUGGY]      final  double  n2prod  =  n1  *  n2  +  1;  final  double  n2prod  =  n1  *  n2)  +  1;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]      final  double  n2prod  =  n1  *  n2  +  1;  final  double  n2prod  =  n1  *  n2)  +  1;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	        final    double    n2prod    =    n1    *    n2    +    1;    final  double  n2prod  =  n1  *  n2)  +  1;	  	non-compiled	[CE]  ';'  expected	15	None	add
30	[BUG]  [BUGGY]      final  double  n2prod  =  n1  *  n2  +  1;  final  double  n2prod  =  n1  *  n2.  +  1;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]      final  double  n2prod  =  n1  *  n2  +  1;  final  double  n2prod  =  n1  *  n2.  +  1;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	        final    double    n2prod    =    n1    *    n2    +    1;    final  double  n2prod  =  n1  *  n2.  +  1;	  	non-compiled	[CE]  <identifier>  expected	15	None	add
31	[BUG]  [BUGGY]      final  double  n2prod  =  n1  *  n2  +  1;  Final  double  n2prod  =  n1  *  n2  +  1;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]      final  double  n2prod  =  n1  *  n2  +  1;  Final  double  n2prod  =  n1  *  n2  +  1;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	        final    double    n2prod    =    n1    *    n2    +    1;    Final  double  n2prod  =  n1  *  n2  +  1;	  	non-compiled	[CE]  not  a  statement	15	None	add
32	[BUG]  [BUGGY]  final  double  n2  =  n1  *  (n2  +  n1);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  n2  =  n1  *  (n2  +  n1);  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n1  *  (n2  +  n1);	      final    double    n2    =    n1    *    (n1    +    n2);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	14	None	replace
33	[BUG]  [BUGGY]  final  int  n2  =  n1  *  (n1  +  n2);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  int  n2  =  n1  *  (n1  +  n2);  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  int  n2  =  n1  *  (n1  +  n2);	      final    double    n2    =    n1    *    (n1    +    n2);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	14	None	replace
34	[BUG]  [BUGGY]      final  double  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;  [CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]      final  double  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	        final    double    n2prod    =    n1    *    n2;    final  double  n2prod  =  n1  *  n2;	  	non-compiled	[CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	9	None	add
35	[BUG]  [BUGGY]      final  double  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]      final  double  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2);  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	        final    double    n2prod    =    n1    *    n2;    final  double  n2prod  =  n1  *  n2);	  	non-compiled	[CE]  ';'  expected	9	None	add
36	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]      final  double  n2prod  =  n1  *  n2;  final  double  n1prod  =  n1  *  n2;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	add	        final    double    n2prod    =    n1    *    n2;    final  double  n1prod  =  n1  *  n2;	  	compilable	  [FE]  AssertionError  	9	1	add
37	[BUG]  [BUGGY]      final  double  n2prod  =  n1  *  n2;  final  double  n1prod  =  n1  *  n2;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]      final  double  n2prod  =  n1  *  n2;  final  double  n1prod  =  n1  *  n2;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	        final    double    n2prod    =    n1    *    n2;    final  double  n1prod  =  n1  *  n2;	  	compilable	  [FE]  AssertionError  	9	1	add
38	[BUG]  [BUGGY]      final  double  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2.;  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]      final  double  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2.;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	        final    double    n2prod    =    n1    *    n2;    final  double  n2prod  =  n1  *  n2.;	  	non-compiled	[CE]  <identifier>  expected	9	None	add
39	[BUG]  [BUGGY]  final  double  n2  =  n1  *  n2prod  +  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  n2  =  n1  *  n2prod  +  1;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n1  *  n2prod  +  1;	      final    double    n2    =    n1    *    n2    +    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	8	None	replace
40	[BUG]  [BUGGY]  final  double  n2  =  n1  +  n2  +  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  n2  =  n1  +  n2  +  1;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n1  +  n2  +  1;	      final    double    n2    =    n1    *    n2    +    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	8	None	replace
41	[BUG]  [BUGGY]  final  double  n2prod  =  n1  *  n2  +  2;  [CE]  cannot  find  symbol  VarU  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  n2prod  =  n1  *  n2  +  2;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2prod  =  n1  *  n2  +  2;	      final    double    n2prod    =    n1    *    n2    +    1;    	non-compiled	[CE]  cannot  find  symbol  VarU	16	None	replace
42	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  n2  +  1;  [CE]  cannot  find  symbol  VarU  [FE]      AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  int  n2prod  =  n1  *  n2  +  1;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  int  n2prod  =  n1  *  n2  +  1;	      final    double    n2prod    =    n1    *    n2    +    1;    	non-compiled	[CE]  cannot  find  symbol  VarU	16	None	replace
43	[BUG]  [BUGGY]  final  double  n2  =  n1  +  n2prod;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  n2  =  n1  +  n2prod;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n1  +  n2prod;	      final    double    n2    =    n1    +    n2;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	12	None	replace
44	[BUG]  [BUGGY]  final  double  n2  =  n1  +  n2Prod;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  n2  =  n1  +  n2Prod;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n1  +  n2Prod;	      final    double    n2    =    n1    +    n2;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	12	None	replace
45	[BUG]  [BUGGY]  final  double  n2prod  =  n2  *  n1;  [CE]  cannot  find  symbol  VarU  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  n2prod  =  n2  *  n1;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2prod  =  n2  *  n1;	      final    double    n2prod    =    n1    *    n2;    	non-compiled	[CE]  cannot  find  symbol  VarU	10	None	replace
46	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  n2;  [CE]  cannot  find  symbol  VarU  [FE]      AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  int  n2prod  =  n1  *  n2;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  int  n2prod  =  n1  *  n2;	      final    double    n2prod    =    n1    *    n2;    	non-compiled	[CE]  cannot  find  symbol  VarU	10	None	replace
47	[BUG]  [BUGGY]  final  double  n2  =  (2  *  n1  +  n2)/  2.0;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  n2  =  (2  *  n1  +  n2)/  2.0;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  (2  *  n1  +  n2)/  2.0;	      final    double    n2    =    (n1    +    n2)/    2.0;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	13	None	replace
48	[BUG]  [BUGGY]  final  double  n2  =  (n1  +  n2)/  2.0L;  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  n2  =  (n1  +  n2)/  2.0L;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  (n1  +  n2)/  2.0L;	      final    double    n2    =    (n1    +    n2)/    2.0;    	non-compiled	[CE]  ';'  expected	13	None	replace
49	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  *  (n1  +  n2)/  2.0;  final  double  VarU  =  n1n2prod  *  (n1.  +  n2)/  2.0;  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  VarU  =  n1n2prod  *  (n1  +  n2)/  2.0;  final  double  VarU  =  n1n2prod  *  (n1.  +  n2)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    final  double  VarU  =  n1n2prod  *  (n1.  +  n2)/  2.0;	  	non-compiled	[CE]  <identifier>  expected	4	None	add
50	[BUG]  [BUGGY]  final  double  n2  =  n1  *  Umin;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  n2  =  n1  *  Umin;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n1  *  Umin;	      final    double    n2    =    n1    *    n2;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	7	None	replace
51	[BUG]  [BUGGY]  final  double  n2  =  n2  *  n1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  n2  =  n2  *  n1;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n2  *  n1;	      final    double    n2    =    n1    *    n2;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	7	None	replace
52	[BUG]  [BUGGY]  final  double  n2  =  (Umin  -  EU)/  FastMath.sqrt(VarU);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  n2  =  (Umin  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  (Umin  -  EU)/  FastMath.sqrt(VarU);	      	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	6	None	replace
53	[BUG]  [BUGGY]  final  double  n2  =  (Umin  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(n2);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  n2  =  (Umin  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(n2);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  (Umin  -  EU)/  FastMath.sqrt(VarU).cumulativeProbability(n2);	      	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	6	None	replace
54	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)/  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2.  +  1)/  2.0;  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)/  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2.  +  1)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n1n2prod    *    (n1    +    n2    +    1)/    2.0;    final  double  VarU  =  n1n2prod  *  (n1  +  n2.  +  1)/  2.0;	  	non-compiled	[CE]  <identifier>  expected	1	None	add
55	[BUG]  [BUGGY]  final  double  n1  =  n1  *  Umin;  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  n1  =  n1  *  Umin;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n1  =  n1  *  Umin;	      final    double    n1    =    n1    *    n2;    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	11	None	replace
56	[BUG]  [BUGGY]      final  double  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2,;  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]      final  double  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2,;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	        final    double    n2prod    =    n1    *    n2;    final  double  n2prod  =  n1  *  n2,;	  	non-compiled	[CE]  <identifier>  expected	9	None	add
57	[BUG]  [BUGGY]  final  double  n2  =  n1  *  Umin  +  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  n2  =  n1  *  Umin  +  1;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n1  *  Umin  +  1;	      final    double    n2    =    n1    *    n2    +    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	8	None	replace
58	[BUG]  [BUGGY]  final  double  n2  =  n1  *  n2  +  2;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  n2  =  n1  *  n2  +  2;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n1  *  n2  +  2;	      final    double    n2    =    n1    *    n2    +    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	8	None	replace
59	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  VarU  =  n2  *  (n1  +  n2  +  1)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	add	final  double  VarU  =  n2  *  (n1  +  n2  +  1)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2    +    1)/    2.0;    	compilable	  [FE]  AssertionError  	2	1	replace
60	[BUG]  [BUGGY]  final  double  VarU  =  n2  *  (n1  +  n2  +  1)/  2.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  VarU  =  n2  *  (n1  +  n2  +  1)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n2  *  (n1  +  n2  +  1)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2    +    1)/    2.0;    	compilable	  [FE]  AssertionError  	2	1	replace
61	[BUG]  [BUGGY]      final  double  n2prod  =  n1  *  n2  +  1;  final  double  n2prod  =  n1  *  n2,  1;  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]      final  double  n2prod  =  n1  *  n2  +  1;  final  double  n2prod  =  n1  *  n2,  1;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	        final    double    n2prod    =    n1    *    n2    +    1;    final  double  n2prod  =  n1  *  n2,  1;	  	non-compiled	[CE]  <identifier>  expected	15	None	add
62	[BUG]  [BUGGY]  final  double  n2  =  (n1  +  n2);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  n2  =  (n1  +  n2);  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  (n1  +  n2);	      final    double    n2    =    n1    *    (n1    +    n2);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	14	None	replace
63	[BUG]  [BUGGY]  final  double  n2  =  (0  *  n2)/  2.0;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  n2  =  (0  *  n2)/  2.0;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  (0  *  n2)/  2.0;	      final    double    n2    =    (n1    +    n2)/    2.0;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	13	None	replace
64	[BUG]  [BUGGY]  final  double  n2prod  =  n2  *  n1  +  1;  [CE]  cannot  find  symbol  VarU  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  n2prod  =  n2  *  n1  +  1;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2prod  =  n2  *  n1  +  1;	      final    double    n2prod    =    n1    *    n2    +    1;    	non-compiled	[CE]  cannot  find  symbol  VarU	16	None	replace
65	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  VarU  =  n2  *  (n1  +  n2)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	add	final  double  VarU  =  n2  *  (n1  +  n2)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    	compilable	  [FE]  AssertionError  	5	1	replace
66	[BUG]  [BUGGY]  final  double  VarU  =  n2  *  (n1  +  n2)/  2.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  VarU  =  n2  *  (n1  +  n2)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n2  *  (n1  +  n2)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    	compilable	  [FE]  AssertionError  	5	1	replace
67	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  VarU  =  n1n2prod  *  (n2  *  n1)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	add	final  double  VarU  =  n1n2prod  *  (n2  *  n1)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    	compilable	  [FE]  AssertionError  	5	2	replace
68	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  *  (n2  *  n1)/  2.0;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  VarU  =  n1n2prod  *  (n2  *  n1)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n1n2prod  *  (n2  *  n1)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    	compilable	  [FE]  AssertionError  	5	2	replace
69	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  VarU  =  n1  *  (n1  +  n2)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	add	final  double  VarU  =  n1  *  (n1  +  n2)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    	compilable	  [FE]  AssertionError  	5	1	replace
70	[BUG]  [BUGGY]  final  double  VarU  =  n1  *  (n1  +  n2)/  2.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  VarU  =  n1  *  (n1  +  n2)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n1  *  (n1  +  n2)/  2.0;	  final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    	compilable	  [FE]  AssertionError  	5	1	replace
71	[BUG]  [BUGGY]  final  double  n2  =  n1  *  EU  +  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  n2  =  n1  *  EU  +  1;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n1  *  EU  +  1;	      final    double    n2    =    n1    *    n2    +    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	8	None	replace
72	[BUG]  [BUGGY]  final  double  n1  =  n1  *  n2  +  1;  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  n1  =  n1  *  n2  +  1;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n1  =  n1  *  n2  +  1;	      final    double    n1    =    n1    *    n2;    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	11	None	replace
73	[BUG]  [BUGGY]      final  double  n2prod  =  n1  *  n2  +  1;  final  double  n2prod  =  n1.  *  n2  +  1;  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]      final  double  n2prod  =  n1  *  n2  +  1;  final  double  n2prod  =  n1.  *  n2  +  1;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	        final    double    n2prod    =    n1    *    n2    +    1;    final  double  n2prod  =  n1.  *  n2  +  1;	  	non-compiled	[CE]  <identifier>  expected	15	None	add
74	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  *  (n1  +  n2)/  2.0;  final  double  VarU  =  n1prod  *  (n1  +  n2)/  2.0;  [CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  VarU  =  n1n2prod  *  (n1  +  n2)/  2.0;  final  double  VarU  =  n1prod  *  (n1  +  n2)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    final  double  VarU  =  n1prod  *  (n1  +  n2)/  2.0;	  	non-compiled	[CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	4	None	add
75	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  *  (n1  +  n2)/  2.0;  final  double  VarU  =  n1  *  (n1  +  n2)/  2.0;  [CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]      AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  VarU  =  n1n2prod  *  (n1  +  n2)/  2.0;  final  double  VarU  =  n1  *  (n1  +  n2)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    final  double  VarU  =  n1  *  (n1  +  n2)/  2.0;	  	non-compiled	[CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	4	None	add
76	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  *  (n1  +  n2)/  2.0;  final  double  VarU  =  (n1  +  n2)/  2.0;  [CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  VarU  =  n1n2prod  *  (n1  +  n2)/  2.0;  final  double  VarU  =  (n1  +  n2)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n1n2prod    *    (n1    +    n2)/    2.0;    final  double  VarU  =  (n1  +  n2)/  2.0;	  	non-compiled	[CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	4	None	add
77	[BUG]  [BUGGY]  final  double  n2  =  n2  +  n1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  n2  =  n2  +  n1;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  n2  =  n2  +  n1;	      final    double    n2    =    n1    +    n2;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	12	None	replace
78	[BUG]  [BUGGY]  final  double  VarU  =  n2prod  *  (n1  +  n2prod  +  1)/  2.0;  [CE]  cannot  find  symbol  n2prod  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  VarU  =  n2prod  *  (n1  +  n2prod  +  1)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final  double  VarU  =  n2prod  *  (n1  +  n2prod  +  1)/  2.0;	  final    double    VarU    =    n2prod    *    (n1    +    n2    +    1)/    2.0;    	non-compiled	[CE]  cannot  find  symbol  n2prod	3	None	replace
79	[BUG]  [BUGGY]  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)/  2.0;  final  double  VarU  =  n1prod  *  (n1  +  n2  +  1)/  2.0;  [CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)/  2.0;  final  double  VarU  =  n1prod  *  (n1  +  n2  +  1)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	final    double    VarU    =    n1n2prod    *    (n1    +    n2    +    1)/    2.0;    final  double  VarU  =  n1prod  *  (n1  +  n2  +  1)/  2.0;	  	non-compiled	[CE]  variable  VarU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	1	None	add
80	[BUG]  [BUGGY]      final  double  n2prod  =  n1  *  n2;  final  double  n2prod  =  n0  *  n2;  [CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]      final  double  n2prod  =  n1  *  n2;  final  double  n2prod  =  n0  *  n2;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	        final    double    n2prod    =    n1    *    n2;    final  double  n2prod  =  n0  *  n2;	  	non-compiled	[CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	9	None	add
81	[BUG]  [BUGGY]      final  double  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1)  *  n2;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;    [BUGGY]      final  double  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1)  *  n2;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	        final    double    n2prod    =    n1    *    n2;    final  double  n2prod  =  n1)  *  n2;	  	non-compiled	[CE]  ';'  expected	9	None	add
