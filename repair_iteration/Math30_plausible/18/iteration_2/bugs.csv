bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU,  n2);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU,  n2);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU,  n2);	  final    double    z    =    (n1    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	2	None	replace
2	[BUG]  [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU,  n1);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]      AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU,  n1);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU,  n1);	  final    double    z    =    (n1    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	2	None	replace
3	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU);  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU);  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU);    final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	3	None	add
4	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU);  Final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU);  Final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU);    Final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  not  a  statement	3	None	add
5	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU);  static  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU);  static  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU);    static  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
6	[BUG]  [BUGGY]  final  double  z  =  (EU  -  10.0)/  FastMath.sqrt(VarU);  final  double  z  =  (EU  -  10.0)/  FastMath.sqrt(VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (EU  -  10.0)/  FastMath.sqrt(VarU);  final  double  z  =  (EU  -  10.0)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (EU    -    10.0)/    FastMath.sqrt(VarU);    final  double  z  =  (EU  -  10.0)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	6	None	add
7	[BUG]  [BUGGY]  final  double  z  =  (EU  -  10.0)/  FastMath.sqrt(VarU);  Final  double  z  =  (EU  -  10.0)/  FastMath.sqrt(VarU);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (EU  -  10.0)/  FastMath.sqrt(VarU);  Final  double  z  =  (EU  -  10.0)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (EU    -    10.0)/    FastMath.sqrt(VarU);    Final  double  z  =  (EU  -  10.0)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  not  a  statement	6	None	add
8	[BUG]  [BUGGY]  final  double  z  =  (EU  -  10.0)/  FastMath.sqrt(VarU);  final  double  z  =  (UE  -  10.0)/  FastMath.sqrt(VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (EU  -  10.0)/  FastMath.sqrt(VarU);  final  double  z  =  (UE  -  10.0)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (EU    -    10.0)/    FastMath.sqrt(VarU);    final  double  z  =  (UE  -  10.0)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	6	None	add
9	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n1);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n1);  [BUGGY]    final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n1);	      final    double    z    =    (n1    +    n2)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	18	None	replace
10	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n2);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n2);  [BUGGY]    final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n2);	      final    double    z    =    (n1    +    n2)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	18	None	replace
11	[BUG]  [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  n1);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  n1);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  n1);	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	22	None	replace
12	[BUG]  [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  VarU);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]      AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  VarU);	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	22	None	replace
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n2  +  n1)/  2.0;  [BUGGY]    final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (n2  +  n1)/  2.0;	      final    double    z    =    (n1    +    n2)/    2.0;    	compilable	  [FE]  AssertionError  	11	1	replace
14	[BUG]  [BUGGY]  final  double  z  =  (n2  +  n1)/  2.0;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n2  +  n1)/  2.0;  [BUGGY]    final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  +  n1)/  2.0;	      final    double    z    =    (n1    +    n2)/    2.0;    	compilable	  [FE]  AssertionError  	11	1	replace
15	[BUG]  [BUGGY]  final  double  z  =  (n2  +  n1)/  VarU.cumulativeProbability(VarU);  [CE]  double  cannot  be  dereferenced  [FE]          AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n2  +  n1)/  VarU.cumulativeProbability(VarU);  [BUGGY]    final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  +  n1)/  VarU.cumulativeProbability(VarU);	      final    double    z    =    (n1    +    n2)/    VarU.cumulativeProbability(VarU);    	non-compiled	[CE]  double  cannot  be  dereferenced	10	None	replace
16	[BUG]  [BUGGY]  final  double  z  =(n2  +  n1)/  VarU.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]        AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =(n2  +  n1)/  VarU.doubleValue();  [BUGGY]    final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n2  +  n1)/  VarU.doubleValue();	      final    double    z    =(n1    +    n2)/    VarU.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	13	None	replace
17	[BUG]  [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.intValue();  [CE]  double  cannot  be  dereferenced  [FE]          AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.intValue();  [BUGGY]    final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n1  +  n2)/  VarU.intValue();	      final    double    z    =(n1    +    n2)/    VarU.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	13	None	replace
18	[BUG]  [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.toString();  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.toString();  [BUGGY]    final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n1  +  n2)/  VarU.toString();	      final    double    z    =(n1    +    n2)/    VarU.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	13	None	replace
19	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2)/  VarU.cumulativeProbability(variable);  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n1  +  n2)/  VarU.cumulativeProbability(variable);  [BUGGY]    final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  +  n2)/  VarU.cumulativeProbability(variable);	      final    double    z    =    (n1    +    n2)/    VarU.cumulativeProbability(varU);    	non-compiled	[CE]  cannot  find  symbol  	12	None	replace
20	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2)/  VarU.cumulativeProbability(VarU.class);  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n1  +  n2)/  VarU.cumulativeProbability(VarU.class);  [BUGGY]    final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  +  n2)/  VarU.cumulativeProbability(VarU.class);	      final    double    z    =    (n1    +    n2)/    VarU.cumulativeProbability(varU);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
21	[BUG]  [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU);  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU);  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU);    final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	21	None	add
22	[BUG]  [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU);  Final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU);  Final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU);    Final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  not  a  statement	21	None	add
23	[BUG]  [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU);  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU).0;  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU);  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU).0;  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU);    final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU).0;	  	non-compiled	[CE]  ';'  expected	21	None	add
24	[BUG]  [BUGGY]  final  double  z  =  (n2  +  n1)/  VarU.roundFloor(VarU);  [CE]  double  cannot  be  dereferenced  [FE]          AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n2  +  n1)/  VarU.roundFloor(VarU);  [BUGGY]    final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  +  n1)/  VarU.roundFloor(VarU);	      final    double    z    =    (n1    +    n2)/    VarU.roundFloor(VarU);    	non-compiled	[CE]  double  cannot  be  dereferenced	14	None	replace
25	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2)/  VarU.cumulativeProbability(n2);  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n1  +  n2)/  VarU.cumulativeProbability(n2);  [BUGGY]    final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  +  n2)/  VarU.cumulativeProbability(n2);	      final    double    z    =    (n1    +    n2)/    VarU.cumulativeProbability(n1);    	non-compiled	[CE]  double  cannot  be  dereferenced	20	None	replace
26	[BUG]  [BUGGY]  final  double  z  =  (n2  +  n1)/  VarU.cumulativeProbability(n1);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n2  +  n1)/  VarU.cumulativeProbability(n1);  [BUGGY]    final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  +  n1)/  VarU.cumulativeProbability(n1);	      final    double    z    =    (n1    +    n2)/    VarU.cumulativeProbability(n1);    	non-compiled	[CE]  double  cannot  be  dereferenced	20	None	replace
27	[BUG]  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  n1);  [CE]  cannot  find  symbol  UE  [FE]            AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  n1);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  n1);	  final    double    z    =    (UE    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  cannot  find  symbol  UE	5	None	replace
28	[BUG]  [BUGGY]  final  double  z  =  (EU  -  10.0)/  FastMath.sqrt(VarU,  n1);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (EU  -  10.0)/  FastMath.sqrt(VarU,  n1);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (EU  -  10.0)/  FastMath.sqrt(VarU,  n1);	  final    double    z    =    (EU    -    10.0)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	7	None	replace
29	[BUG]  [BUGGY]  final  double  z  =  (UE  -  10.0)/  FastMath.sqrt(VarU);  [CE]  cannot  find  symbol  UE  [FE]      AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (UE  -  10.0)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (UE  -  10.0)/  FastMath.sqrt(VarU);	  final    double    z    =    (EU    -    10.0)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  cannot  find  symbol  UE	7	None	replace
30	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (EU  -  1)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (EU  -  1)/  FastMath.sqrt(VarU);	  final    double    z    =    (EU    -    10.0)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	7	2	replace
31	[BUG]  [BUGGY]  final  double  z  =  (EU  -  1)/  FastMath.sqrt(VarU);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (EU  -  1)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (EU  -  1)/  FastMath.sqrt(VarU);	  final    double    z    =    (EU    -    10.0)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	7	2	replace
32	[BUG]  [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU);  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU);  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (EU    -    EU)/    FastMath.sqrt(VarU);    final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	16	None	add
33	[BUG]  [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU);  Final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU);  Final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (EU    -    EU)/    FastMath.sqrt(VarU);    Final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  not  a  statement	16	None	add
34	[BUG]  [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU);  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU);  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (EU    -    EU)/    FastMath.sqrt(VarU);    final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	16	None	add
35	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2prod  +  1)/  2.0;  [CE]  cannot  find  symbol  n2prod  [FE]        AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n1  +  n2prod  +  1)/  2.0;  [BUGGY]    final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  +  n2prod  +  1)/  2.0;	      final    double    z    =    (n1    +    n2    +    1)/    2.0;    	non-compiled	[CE]  cannot  find  symbol  n2prod	9	None	replace
36	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n2  +  n1  +  1)/  2.0;  [BUGGY]    final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (n2  +  n1  +  1)/  2.0;	      final    double    z    =    (n1    +    n2    +    1)/    2.0;    	compilable	  [FE]  AssertionError  	9	1	replace
37	[BUG]  [BUGGY]  final  double  z  =  (n2  +  n1  +  1)/  2.0;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n2  +  n1  +  1)/  2.0;  [BUGGY]    final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  +  n1  +  1)/  2.0;	      final    double    z    =    (n1    +    n2    +    1)/    2.0;    	compilable	  [FE]  AssertionError  	9	1	replace
38	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  VarU);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  VarU);	  final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	4	None	replace
39	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  n1);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]      AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  n1);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  n1);	  final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	4	None	replace
40	[BUG]  [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  VarU);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  VarU);	  final    double    z    =    (EU    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	17	None	replace
41	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (EU  -  2)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (EU  -  2)/  FastMath.sqrt(VarU);	  final    double    z    =    (EU    -    EU)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	17	2	replace
42	[BUG]  [BUGGY]  final  double  z  =  (EU  -  2)/  FastMath.sqrt(VarU);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (EU  -  2)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (EU  -  2)/  FastMath.sqrt(VarU);	  final    double    z    =    (EU    -    EU)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	17	2	replace
43	[BUG]  [BUGGY]  final  double  z  =  VarU.cumulativeProbability(n1);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  VarU.cumulativeProbability(n1);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  VarU.cumulativeProbability(n1);	      	non-compiled	[CE]  double  cannot  be  dereferenced	8	None	replace
44	[BUG]  [BUGGY]  final  double  standardNormal  =  new  NormalDistribution(0,  1);  [CE]  incompatible  types  [FE]                  AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  standardNormal  =  new  NormalDistribution(0,  1);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  standardNormal  =  new  NormalDistribution(0,  1);	      	non-compiled	[CE]  incompatible  types	8	None	replace
45	[BUG]  [BUGGY]  final  double  EU  =  VarU.cumulativeProbability(n1);  [CE]  variable  EU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  EU  =  VarU.cumulativeProbability(n1);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  EU  =  VarU.cumulativeProbability(n1);	      	non-compiled	[CE]  variable  EU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	8	None	replace
46	[BUG]  [BUGGY]  final  double  standardNormal  =  new  NormalDistribution(n1,  1);  [CE]  incompatible  types  [FE]                      AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  standardNormal  =  new  NormalDistribution(n1,  1);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  standardNormal  =  new  NormalDistribution(n1,  1);	      	non-compiled	[CE]  incompatible  types	8	None	replace
47	[BUG]  [BUGGY]  final  double  n2  =  n2  *  VarU.doubleValue();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  n2  =  n2  *  VarU.doubleValue();  [BUGGY]    final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  n2  =  n2  *  VarU.doubleValue();	      final    double    n2    =    n1    *    VarU.doubleValue();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	19	None	replace
48	[BUG]  [BUGGY]  final  double  n2  =  VarU.doubleValue();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  n2  =  VarU.doubleValue();  [BUGGY]    final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  n2  =  VarU.doubleValue();	      final    double    n2    =    n1    *    VarU.doubleValue();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	19	None	replace
49	[BUG]  [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU);  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU);  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n1    -    EU)/    FastMath.sqrt(VarU);    final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	1	None	add
50	[BUG]  [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU);  Final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU);  Final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n1    -    EU)/    FastMath.sqrt(VarU);    Final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  not  a  statement	1	None	add
51	[BUG]  [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU);  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU).0;  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU);  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU).0;  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n1    -    EU)/    FastMath.sqrt(VarU);    final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU).0;	  	non-compiled	[CE]  ';'  expected	1	None	add
52	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =(n1  +  n2)/  EU;  [BUGGY]    final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =(n1  +  n2)/  EU;	      final    double    z    =(n1    +    n2)/    VarU;    	compilable	  [FE]  AssertionError  	15	1	replace
53	[BUG]  [BUGGY]  final  double  z  =(n1  +  n2)/  EU;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =(n1  +  n2)/  EU;  [BUGGY]    final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n1  +  n2)/  EU;	      final    double    z    =(n1    +    n2)/    VarU;    	compilable	  [FE]  AssertionError  	15	1	replace
54	[BUG]  [BUGGY]  final  double  z  =(n1  +  n2)/  VAR;  [CE]  cannot  find  symbol  VAR  [FE]              AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =(n1  +  n2)/  VAR;  [BUGGY]    final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n1  +  n2)/  VAR;	      final    double    z    =(n1    +    n2)/    VarU;    	non-compiled	[CE]  cannot  find  symbol  VAR	15	None	replace
55	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =(n2  +  n1)/  VarU;  [BUGGY]    final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =(n2  +  n1)/  VarU;	      final    double    z    =(n1    +    n2)/    VarU;    	compilable	  [FE]  AssertionError  	15	1	replace
56	[BUG]  [BUGGY]  final  double  z  =(n2  +  n1)/  VarU;  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =(n2  +  n1)/  VarU;  [BUGGY]    final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n2  +  n1)/  VarU;	      final    double    z    =(n1    +    n2)/    VarU;    	compilable	  [FE]  AssertionError  	15	1	replace
57	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (EU  -  64)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (EU  -  64)/  FastMath.sqrt(VarU);	  final    double    z    =    (EU    -    EU)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	17	2	replace
58	[BUG]  [BUGGY]  final  double  z  =  (EU  -  64)/  FastMath.sqrt(VarU);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (EU  -  64)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (EU  -  64)/  FastMath.sqrt(VarU);	  final    double    z    =    (EU    -    EU)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	17	2	replace
59	[BUG]  [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU);  final  double  n  =  (n2  -  EU)/  FastMath.sqrt(VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU);  final  double  n  =  (n2  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU);    final  double  n  =  (n2  -  EU)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	21	None	add
60	[BUG]  [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU);  final  double  n2  =  (n2  -  EU)/  FastMath.sqrt(VarU);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]      AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU);  final  double  n2  =  (n2  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU);    final  double  n2  =  (n2  -  EU)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	21	None	add
61	[BUG]  [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.multiply(VarU.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]        AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.multiply(VarU.doubleValue());  [BUGGY]    final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n1  +  n2)/  VarU.multiply(VarU.doubleValue());	      final    double    z    =(n1    +    n2)/    VarU.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	13	None	replace
62	[BUG]  [BUGGY]  final  double  n2  =  VarU  *  n1.doubleValue();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  n2  =  VarU  *  n1.doubleValue();  [BUGGY]    final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  n2  =  VarU  *  n1.doubleValue();	      final    double    n2    =    n1    *    VarU.doubleValue();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	19	None	replace
63	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2)/  VarU.intValue(VarU);  [CE]  double  cannot  be  dereferenced  [FE]          AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n1  +  n2)/  VarU.intValue(VarU);  [BUGGY]    final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  +  n2)/  VarU.intValue(VarU);	      final    double    z    =    (n1    +    n2)/    VarU.roundFloor(VarU);    	non-compiled	[CE]  double  cannot  be  dereferenced	14	None	replace
64	[BUG]  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  VarU);  [CE]  cannot  find  symbol  UE  [FE]            AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  VarU);	  final    double    z    =    (UE    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  cannot  find  symbol  UE	5	None	replace
65	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU);  final  double  z  =  (0VarU  -  EU)/  FastMath.sqrt(VarU);  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU);  final  double  z  =  (0VarU  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU);    final  double  z  =  (0VarU  -  EU)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  ')'  expected	3	None	add
66	[BUG]  [BUGGY]  final  double  z  =  VarU.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  VarU.doubleValue();  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  VarU.doubleValue();	      	non-compiled	[CE]  double  cannot  be  dereferenced	8	None	replace
67	[BUG]  [BUGGY]  final  double  naturalRanking  =  VarU.cumulativeProbability(n1);  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  naturalRanking  =  VarU.cumulativeProbability(n1);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  naturalRanking  =  VarU.cumulativeProbability(n1);	      	non-compiled	[CE]  double  cannot  be  dereferenced	8	None	replace
68	[BUG]  [BUGGY]  final  VarU  =  VarU.doubleValue();  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  VarU  =  VarU.doubleValue();  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  VarU  =  VarU.doubleValue();	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
69	[BUG]  [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU);  final  double  n  =  (n1  -  EU)/  FastMath.sqrt(VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU);  final  double  n  =  (n1  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n1    -    EU)/    FastMath.sqrt(VarU);    final  double  n  =  (n1  -  EU)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	1	None	add
70	[BUG]  [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU);  final  double  n1  =  (n1  -  EU)/  FastMath.sqrt(VarU);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]      AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU);  final  double  n1  =  (n1  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n1    -    EU)/    FastMath.sqrt(VarU);    final  double  n1  =  (n1  -  EU)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	1	None	add
71	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  +  1);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  +  1);	  final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	4	2	replace
72	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  +  1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  +  1);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  +  1);	  final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	4	2	replace
73	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (VarU  *  EU)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (VarU  *  EU)/  FastMath.sqrt(VarU);	  final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	4	2	replace
74	[BUG]  [BUGGY]  final  double  z  =  (VarU  *  EU)/  FastMath.sqrt(VarU);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (VarU  *  EU)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (VarU  *  EU)/  FastMath.sqrt(VarU);	  final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	4	2	replace
75	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (EU  -  2.0)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (EU  -  2.0)/  FastMath.sqrt(VarU);	  final    double    z    =    (EU    -    10.0)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	7	2	replace
76	[BUG]  [BUGGY]  final  double  z  =  (EU  -  2.0)/  FastMath.sqrt(VarU);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (EU  -  2.0)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (EU  -  2.0)/  FastMath.sqrt(VarU);	  final    double    z    =    (EU    -    10.0)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	7	2	replace
77	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (VarU  -  10.0)/  FastMath.sqrt(EU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (VarU  -  10.0)/  FastMath.sqrt(EU);	  final    double    z    =    (EU    -    10.0)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	7	2	replace
78	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  10.0)/  FastMath.sqrt(EU);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (VarU  -  10.0)/  FastMath.sqrt(EU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (VarU  -  10.0)/  FastMath.sqrt(EU);	  final    double    z    =    (EU    -    10.0)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	7	2	replace
79	[BUG]  [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  n2);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  n2);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  n2);	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	22	None	replace
80	[BUG]  [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.intValue;  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.intValue;  [BUGGY]    final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n1  +  n2)/  VarU.intValue;	      final    double    z    =(n1    +    n2)/    VarU;    	non-compiled	[CE]  double  cannot  be  dereferenced	15	None	replace
81	[BUG]  [BUGGY]  final  double  n2  =  n1  *  VarU.doubleValue()  +  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  n2  =  n1  *  VarU.doubleValue()  +  1;  [BUGGY]    final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  n2  =  n1  *  VarU.doubleValue()  +  1;	      final    double    n2    =    n1    *    VarU.doubleValue();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	19	None	replace
82	[BUG]  [BUGGY]  final  double  n2  =  n0  *  VarU.doubleValue();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  n2  =  n0  *  VarU.doubleValue();  [BUGGY]    final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  n2  =  n0  *  VarU.doubleValue();	      final    double    n2    =    n1    *    VarU.doubleValue();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	19	None	replace
83	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n1  *  n2)/  2.0;  [BUGGY]    final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (n1  *  n2)/  2.0;	      final    double    z    =    (n1    +    n2)/    2.0;    	compilable	  [FE]  AssertionError  	11	1	replace
84	[BUG]  [BUGGY]  final  double  z  =  (n1  *  n2)/  2.0;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n1  *  n2)/  2.0;  [BUGGY]    final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  *  n2)/  2.0;	      final    double    z    =    (n1    +    n2)/    2.0;    	compilable	  [FE]  AssertionError  	11	1	replace
85	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n2  -  n1)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (n2  -  n1)/  FastMath.sqrt(VarU);	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	22	2	replace
86	[BUG]  [BUGGY]  final  double  z  =  (n2  -  n1)/  FastMath.sqrt(VarU);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n2  -  n1)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  n1)/  FastMath.sqrt(VarU);	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	22	2	replace
87	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU);	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	22	2	replace
88	[BUG]  [BUGGY]  final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU);	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	22	2	replace
89	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n1  -  10.0)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (n1  -  10.0)/  FastMath.sqrt(VarU);	  final    double    z    =    (EU    -    10.0)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	7	2	replace
90	[BUG]  [BUGGY]  final  double  z  =  (n1  -  10.0)/  FastMath.sqrt(VarU);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n1  -  10.0)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  -  10.0)/  FastMath.sqrt(VarU);	  final    double    z    =    (EU    -    10.0)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	7	2	replace
91	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n2  -  10.0)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (n2  -  10.0)/  FastMath.sqrt(VarU);	  final    double    z    =    (EU    -    10.0)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	7	2	replace
92	[BUG]  [BUGGY]  final  double  z  =  (n2  -  10.0)/  FastMath.sqrt(VarU);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n2  -  10.0)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  10.0)/  FastMath.sqrt(VarU);	  final    double    z    =    (EU    -    10.0)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	7	2	replace
93	[BUG]  [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU);  final  double  z  =  (n1  -  UN)/  FastMath.sqrt(VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU);  final  double  z  =  (n1  -  UN)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n1    -    EU)/    FastMath.sqrt(VarU);    final  double  z  =  (n1  -  UN)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	1	None	add
94	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  n1  *  n2;  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  n1  *  n2;	      	compilable	  [FE]  AssertionError  	8	1	replace
95	[BUG]  [BUGGY]  final  double  z  =  n1  *  n2;  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  n1  *  n2;  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  n1  *  n2;	      	compilable	  [FE]  AssertionError  	8	1	replace
96	[BUG]  [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU);  final  double  z  =  (0  -  EU)/  FastMath.sqrt(VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU);  final  double  z  =  (0  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU);    final  double  z  =  (0  -  EU)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	21	None	add
97	[BUG]  [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.MAX_VALUE;  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.MAX_VALUE;  [BUGGY]    final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n1  +  n2)/  VarU.MAX_VALUE;	      final    double    z    =(n1    +    n2)/    VarU;    	non-compiled	[CE]  double  cannot  be  dereferenced	15	None	replace
98	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(Umin);  [BUGGY]    final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (n1  +  n2)/  FastMath.sqrt(Umin);	      final    double    z    =    (n1    +    n2)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	18	1	replace
99	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(Umin);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(Umin);  [BUGGY]    final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  +  n2)/  FastMath.sqrt(Umin);	      final    double    z    =    (n1    +    n2)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	18	1	replace
100	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  n2);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  n2);  [BUGGY]      final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  n2);	  final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	4	None	replace
101	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2)/  VarU.instance.roundFloor(VarU);  [CE]  double  cannot  be  dereferenced  [FE]          AssertionError    [CONTEXT]    final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;    [BUGGY]  final  double  z  =  (n1  +  n2)/  VarU.instance.roundFloor(VarU);  [BUGGY]    final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  +  n2)/  VarU.instance.roundFloor(VarU);	      final    double    z    =    (n1    +    n2)/    VarU.roundFloor(VarU);    	non-compiled	[CE]  double  cannot  be  dereferenced	14	None	replace
