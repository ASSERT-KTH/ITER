bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double  z  =  (n2  -  10.0)/  FastMath.sqrt(VarU,  EU);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  10.0)/  FastMath.sqrt(VarU,  EU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  10.0)/  FastMath.sqrt(VarU,  EU);	  final    double    z    =    (n2    -    10.0)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	92	None	replace
2	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  2.0)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (n2  -  2.0)/  FastMath.sqrt(VarU);	  final    double    z    =    (n2    -    10.0)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	92	2	replace
3	[BUG]  [BUGGY]  final  double  z  =  (n2  -  2.0)/  FastMath.sqrt(VarU);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  2.0)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  2.0)/  FastMath.sqrt(VarU);	  final    double    z    =    (n2    -    10.0)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	92	2	replace
4	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  *  n1)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (n2  *  n1)/  2.0;	  final    double    z    =    (n1    *    n2)/    2.0;    	compilable	  [FE]  AssertionError  	84	1	replace
5	[BUG]  [BUGGY]  final  double  z  =  (n2  *  n1)/  2.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  *  n1)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  *  n1)/  2.0;	  final    double    z    =    (n1    *    n2)/    2.0;    	compilable	  [FE]  AssertionError  	84	1	replace
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  *  VarU)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (n1  *  VarU)/  2.0;	  final    double    z    =    (n1    *    n2)/    2.0;    	compilable	  [FE]  AssertionError  	84	2	replace
7	[BUG]  [BUGGY]  final  double  z  =  (n1  *  VarU)/  2.0;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  *  VarU)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  *  VarU)/  2.0;	  final    double    z    =    (n1    *    n2)/    2.0;    	compilable	  [FE]  AssertionError  	84	2	replace
8	[BUG]  [BUGGY]  final  double  z  =(n1  +  n2)/  EU;  final  double  z  =(n1  +  n2)/  EU;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n1  +  n2)/  EU;  final  double  z  =(n1  +  n2)/  EU;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =(n1    +    n2)/    EU;    final  double  z  =(n1  +  n2)/  EU;	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	52	None	add
9	[BUG]  [BUGGY]  final  double  z  =(n1  +  n2)/  EU;  final  double  z  =(n2  +  n2)/  EU;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n1  +  n2)/  EU;  final  double  z  =(n2  +  n2)/  EU;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =(n1    +    n2)/    EU;    final  double  z  =(n2  +  n2)/  EU;	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	52	None	add
10	[BUG]  [BUGGY]  final  double  z  =(n1  +  n2)/  EU;  Final  double  z  =(n1  +  n2)/  EU;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n1  +  n2)/  EU;  Final  double  z  =(n1  +  n2)/  EU;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =(n1    +    n2)/    EU;    Final  double  z  =(n1  +  n2)/  EU;	  	non-compiled	[CE]  not  a  statement	52	None	add
11	[BUG]  [BUGGY]  final  double  z  =(n1  +  n2)/  EU;  final  double  z  =(n1  +  n2)1/  EU;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n1  +  n2)/  EU;  final  double  z  =(n1  +  n2)1/  EU;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =(n1    +    n2)/    EU;    final  double  z  =(n1  +  n2)1/  EU;	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	52	None	add
12	[BUG]  [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU,  n2,  n1);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU,  n2,  n1);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU,  n2,  n1);	  final    double    z    =    (n1    -    EU)/    FastMath.sqrt(VarU,    n1);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	2	None	replace
13	[BUG]  [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU,  n1,  n2);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU,  n1,  n2);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU,  n1,  n2);	  final    double    z    =    (n1    -    EU)/    FastMath.sqrt(VarU,    n1);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	2	None	replace
14	[BUG]  [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  n1,  n1);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  n1,  n1);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  n1,  n1);	  final    double    z    =    (n1    -    EU)/    FastMath.sqrt(VarU,    n1);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	2	None	replace
15	[BUG]  [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  VarU,  n1);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  VarU,  n1);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  VarU,  n1);	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU,    VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	12	None	replace
16	[BUG]  [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  VarU,  n2);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  VarU,  n2);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  VarU,  n2);	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU,    VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	12	None	replace
17	[BUG]  [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  VarU,  naturalRanking);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  VarU,  naturalRanking);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  VarU,  naturalRanking);	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU,    VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	12	None	replace
18	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n1,  n2);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n1,  n2);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n1,  n2);	  final    double    z    =    (n1    +    n2)/    FastMath.sqrt(VarU,    n1);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	9	None	replace
19	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n2,  n1);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n2,  n1);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n2,  n1);	  final    double    z    =    (n1    +    n2)/    FastMath.sqrt(VarU,    n1);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	9	None	replace
20	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n1,  n1);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n1,  n1);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n1,  n1);	  final    double    z    =    (n1    +    n2)/    FastMath.sqrt(VarU,    n1);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	9	None	replace
21	[BUG]  [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.UTF8;  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.UTF8;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n1  +  n2)/  VarU.UTF8;	  final    double    z    =(n1    +    n2)/    VarU.intValue;    	non-compiled	[CE]  double  cannot  be  dereferenced	80	None	replace
22	[BUG]  [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.UE;  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.UE;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n1  +  n2)/  VarU.UE;	  final    double    z    =(n1    +    n2)/    VarU.intValue;    	non-compiled	[CE]  double  cannot  be  dereferenced	80	None	replace
23	[BUG]  [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.US;  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.US;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n1  +  n2)/  VarU.US;	  final    double    z    =(n1    +    n2)/    VarU.intValue;    	non-compiled	[CE]  double  cannot  be  dereferenced	80	None	replace
24	[BUG]  [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.EOF;  [CE]  double  cannot  be  dereferenced  [FE]                      AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.EOF;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n1  +  n2)/  VarU.EOF;	  final    double    z    =(n1    +    n2)/    VarU.intValue;    	non-compiled	[CE]  double  cannot  be  dereferenced	80	None	replace
25	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  2.0)/  FastMath.sqrt(EU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (VarU  -  2.0)/  FastMath.sqrt(EU);	  final    double    z    =    (VarU    -    10.0)/    FastMath.sqrt(EU);    	compilable	  [FE]  AssertionError  	78	2	replace
26	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  2.0)/  FastMath.sqrt(EU);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  2.0)/  FastMath.sqrt(EU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (VarU  -  2.0)/  FastMath.sqrt(EU);	  final    double    z    =    (VarU    -    10.0)/    FastMath.sqrt(EU);    	compilable	  [FE]  AssertionError  	78	2	replace
27	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  10.0)/  FastMath.sqrt(VarU.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  10.0)/  FastMath.sqrt(VarU.doubleValue());  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (VarU  -  10.0)/  FastMath.sqrt(VarU.doubleValue());	  final    double    z    =    (VarU    -    10.0)/    FastMath.sqrt(EU);    	non-compiled	[CE]  double  cannot  be  dereferenced	78	None	replace
28	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  1)/  FastMath.sqrt(EU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (VarU  -  1)/  FastMath.sqrt(EU);	  final    double    z    =    (VarU    -    10.0)/    FastMath.sqrt(EU);    	compilable	  [FE]  AssertionError  	78	2	replace
29	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  1)/  FastMath.sqrt(EU);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  1)/  FastMath.sqrt(EU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (VarU  -  1)/  FastMath.sqrt(EU);	  final    double    z    =    (VarU    -    10.0)/    FastMath.sqrt(EU);    	compilable	  [FE]  AssertionError  	78	2	replace
30	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  1.5)/  FastMath.sqrt(EU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (VarU  -  1.5)/  FastMath.sqrt(EU);	  final    double    z    =    (VarU    -    10.0)/    FastMath.sqrt(EU);    	compilable	  [FE]  AssertionError  	78	2	replace
31	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  1.5)/  FastMath.sqrt(EU);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  1.5)/  FastMath.sqrt(EU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (VarU  -  1.5)/  FastMath.sqrt(EU);	  final    double    z    =    (VarU    -    10.0)/    FastMath.sqrt(EU);    	compilable	  [FE]  AssertionError  	78	2	replace
32	[BUG]  [BUGGY]  final  double  z  =  (n2  +  n1  +  1)/  2.0;  final  double  z  =  (n2  +  n1  +  1)/  2.0;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  +  n1  +  1)/  2.0;  final  double  z  =  (n2  +  n1  +  1)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n2    +    n1    +    1)/    2.0;    final  double  z  =  (n2  +  n1  +  1)/  2.0;	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	36	None	add
33	[BUG]  [BUGGY]  final  double  z  =  (n2  +  n1  +  1)/  2.0;  final  double  z  =  (n2  +  n1.  +  1)/  2.0;  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  +  n1  +  1)/  2.0;  final  double  z  =  (n2  +  n1.  +  1)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n2    +    n1    +    1)/    2.0;    final  double  z  =  (n2  +  n1.  +  1)/  2.0;	  	non-compiled	[CE]  <identifier>  expected	36	None	add
34	[BUG]  [BUGGY]  final  double  z  =  (n2  +  n1  +  1)/  2.0;  final  double  z  =  (n2  +  n1)/  2.0;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  +  n1  +  1)/  2.0;  final  double  z  =  (n2  +  n1)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n2    +    n1    +    1)/    2.0;    final  double  z  =  (n2  +  n1)/  2.0;	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	36	None	add
35	[BUG]  [BUGGY]  final  double  z  =(n2  +  n2)/  VarU.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n2  +  n2)/  VarU.doubleValue();  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n2  +  n2)/  VarU.doubleValue();	  final    double    z    =(n2    +    n1)/    VarU.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	16	None	replace
36	[BUG]  [BUGGY]  final  double  z  =(n1  +  n1)/  VarU.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n1  +  n1)/  VarU.doubleValue();  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n1  +  n1)/  VarU.doubleValue();	  final    double    z    =(n2    +    n1)/    VarU.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	16	None	replace
37	[BUG]  [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  VarU,  n1);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  VarU,  n1);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  VarU,  n1);	  final    double    z    =    (EU    -    EU)/    FastMath.sqrt(VarU,    VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	40	None	replace
38	[BUG]  [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  VarU,  naturalRanking);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  VarU,  naturalRanking);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  VarU,  naturalRanking);	  final    double    z    =    (EU    -    EU)/    FastMath.sqrt(VarU,    VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	40	None	replace
39	[BUG]  [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  VarU,  n2);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  VarU,  n2);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  VarU,  n2);	  final    double    z    =    (EU    -    EU)/    FastMath.sqrt(VarU,    VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	40	None	replace
40	[BUG]  [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  VarU,  null);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  VarU,  null);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  VarU,  null);	  final    double    z    =    (EU    -    EU)/    FastMath.sqrt(VarU,    VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	40	None	replace
41	[BUG]  [BUGGY]  final  double  z  =  (n2  +  n1)/  2.0;  final  double  z  =  (n2  +  n1)/  2.0;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  +  n1)/  2.0;  final  double  z  =  (n2  +  n1)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n2    +    n1)/    2.0;    final  double  z  =  (n2  +  n1)/  2.0;	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	13	None	add
42	[BUG]  [BUGGY]  final  double  z  =  (n2  +  n1)/  2.0;  final  double  z  =  (n2)  +  n1)/  2.0;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  +  n1)/  2.0;  final  double  z  =  (n2)  +  n1)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n2    +    n1)/    2.0;    final  double  z  =  (n2)  +  n1)/  2.0;	  	non-compiled	[CE]  ';'  expected	13	None	add
43	[BUG]  [BUGGY]  final  double  z  =  (n2  +  n1)/  2.0;  final  double  z  =  (n2  +  n2)/  2.0;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  +  n1)/  2.0;  final  double  z  =  (n2  +  n2)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n2    +    n1)/    2.0;    final  double  z  =  (n2  +  n2)/  2.0;	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	13	None	add
44	[BUG]  [BUGGY]  final  double  n2  =  VarU  *  n2.doubleValue();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  n2  =  VarU  *  n2.doubleValue();  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  n2  =  VarU  *  n2.doubleValue();	  final    double    n2    =    VarU    *    n1.doubleValue();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	62	None	replace
45	[BUG]  [BUGGY]  final  double  n2  =  VarU  *  EU.doubleValue();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  n2  =  VarU  *  EU.doubleValue();  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  n2  =  VarU  *  EU.doubleValue();	  final    double    n2    =    VarU    *    n1.doubleValue();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	62	None	replace
46	[BUG]  [BUGGY]  final  double  n2  =  VarU  /  n1.doubleValue();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  n2  =  VarU  /  n1.doubleValue();  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  n2  =  VarU  /  n1.doubleValue();	  final    double    n2    =    VarU    *    n1.doubleValue();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	62	None	replace
47	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  +  2);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  +  2);	  final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU    +    1);    	compilable	  [FE]  AssertionError  	72	2	replace
48	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  +  2);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  +  2);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  +  2);	  final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU    +    1);    	compilable	  [FE]  AssertionError  	72	2	replace
49	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  *  1);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  *  1);	  final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU    +    1);    	compilable	  [FE]  AssertionError  	72	2	replace
50	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  *  1);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  *  1);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  *  1);	  final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU    +    1);    	compilable	  [FE]  AssertionError  	72	2	replace
51	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  +  3);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  +  3);	  final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU    +    1);    	compilable	  [FE]  AssertionError  	72	2	replace
52	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  +  3);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  +  3);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  +  3);	  final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU    +    1);    	compilable	  [FE]  AssertionError  	72	2	replace
53	[BUG]  [BUGGY]  static  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  static  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	static  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU);	  final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU);    static    final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
54	[BUG]  [BUGGY]  final  static  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU);  [CE]  repeated  modifier  [FE]              AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  static  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  static  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU);	  final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU);    static    final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  repeated  modifier	5	None	replace
55	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  VarU);  static  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  VarU);  static  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  VarU);  static  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU);	  final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU);    static    final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
56	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2)/  VarU.cumulativeProbability(n2,  n1);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  +  n2)/  VarU.cumulativeProbability(n2,  n1);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  +  n2)/  VarU.cumulativeProbability(n2,  n1);	  final    double    z    =    (n1    +    n2)/    VarU.cumulativeProbability(n2);    	non-compiled	[CE]  double  cannot  be  dereferenced	25	None	replace
57	[BUG]  [BUGGY]  final  double  z  =  VarU.doubleValue()  *  VarU.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  VarU.doubleValue()  *  VarU.doubleValue();  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  VarU.doubleValue()  *  VarU.doubleValue();	  final    double    z    =    VarU.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	66	None	replace
58	[BUG]  [BUGGY]  final  double  z  =  VarU.parseDouble(n1,  n2);  [CE]  double  cannot  be  dereferenced  [FE]                      AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  VarU.parseDouble(n1,  n2);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  VarU.parseDouble(n1,  n2);	  final    double    z    =    VarU.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	66	None	replace
59	[BUG]  [BUGGY]  final  double  z  =  VarU.parseDouble(n1);  [CE]  double  cannot  be  dereferenced  [FE]                        AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  VarU.parseDouble(n1);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  VarU.parseDouble(n1);	  final    double    z    =    VarU.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	66	None	replace
60	[BUG]  [BUGGY]  final  double  standardNormal  =  new  NormalDistribution(n1,  1,  n2);  [CE]  incompatible  types  [FE]                          AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  standardNormal  =  new  NormalDistribution(n1,  1,  n2);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  standardNormal  =  new  NormalDistribution(n1,  1,  n2);	  final    double    standardNormal    =    new    NormalDistribution(n1,    1);    	non-compiled	[CE]  incompatible  types	46	None	replace
61	[BUG]  [BUGGY]  final  double  standardNormal  =  new  NormalDistribution(n2,  1);  [CE]  incompatible  types  [FE]                            AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  standardNormal  =  new  NormalDistribution(n2,  1);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  standardNormal  =  new  NormalDistribution(n2,  1);	  final    double    standardNormal    =    new    NormalDistribution(n1,    1);    	non-compiled	[CE]  incompatible  types	46	None	replace
62	[BUG]  [BUGGY]  final  double  standardNormal  =  new  NormalDistribution(UE,  1);  [CE]  cannot  find  symbol  UE  [FE]                              AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  standardNormal  =  new  NormalDistribution(UE,  1);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  standardNormal  =  new  NormalDistribution(UE,  1);	  final    double    standardNormal    =    new    NormalDistribution(n1,    1);    	non-compiled	[CE]  cannot  find  symbol  UE	46	None	replace
63	[BUG]  [BUGGY]  final  double  z  =  (EU  -  64)/  FastMath.sqrt(VarU,  n1);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (EU  -  64)/  FastMath.sqrt(VarU,  n1);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (EU  -  64)/  FastMath.sqrt(VarU,  n1);	  final    double    z    =    (EU    -    64)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	58	None	replace
64	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  -  64)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (n1  -  64)/  FastMath.sqrt(VarU);	  final    double    z    =    (EU    -    64)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	58	2	replace
65	[BUG]  [BUGGY]  final  double  z  =  (n1  -  64)/  FastMath.sqrt(VarU);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  -  64)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  -  64)/  FastMath.sqrt(VarU);	  final    double    z    =    (EU    -    64)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	58	2	replace
66	[BUG]  [BUGGY]  final  double  z  =  (UE  -  64)/  FastMath.sqrt(VarU);  [CE]  cannot  find  symbol  UE  [FE]        AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (UE  -  64)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (UE  -  64)/  FastMath.sqrt(VarU);	  final    double    z    =    (EU    -    64)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  cannot  find  symbol  UE	58	None	replace
67	[BUG]  [BUGGY]  final  double  z  =  (EU  -  10.0)/  FastMath.sqrt(VarU,  n1,  n2);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (EU  -  10.0)/  FastMath.sqrt(VarU,  n1,  n2);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (EU  -  10.0)/  FastMath.sqrt(VarU,  n1,  n2);	  final    double    z    =    (EU    -    10.0)/    FastMath.sqrt(VarU,    n1);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	28	None	replace
68	[BUG]  [BUGGY]  final  double  z  =  (EU  -  10.0)/  FastMath.sqrt(VarU,  n2,  n1);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (EU  -  10.0)/  FastMath.sqrt(VarU,  n2,  n1);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (EU  -  10.0)/  FastMath.sqrt(VarU,  n2,  n1);	  final    double    z    =    (EU    -    10.0)/    FastMath.sqrt(VarU,    n1);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	28	None	replace
69	[BUG]  [BUGGY]  final  double  z  =  (n1  -  10.0)/  FastMath.sqrt(VarU,  EU);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  -  10.0)/  FastMath.sqrt(VarU,  EU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  -  10.0)/  FastMath.sqrt(VarU,  EU);	  final    double    z    =    (EU    -    10.0)/    FastMath.sqrt(VarU,    n1);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	28	None	replace
70	[BUG]  [BUGGY]  final  double  z  =  (UE  -  10.0)/  FastMath.sqrt(VarU,  n1,  n2);  [CE]  cannot  find  symbol  UE  [FE]              AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (UE  -  10.0)/  FastMath.sqrt(VarU,  n1,  n2);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (UE  -  10.0)/  FastMath.sqrt(VarU,  n1,  n2);	  final    double    z    =    (EU    -    10.0)/    FastMath.sqrt(VarU,    n1);    	non-compiled	[CE]  cannot  find  symbol  UE	28	None	replace
71	[BUG]  [BUGGY]  final  double  z  =  (n2  -  10.0)/  FastMath.sqrt(VarU);  final  double  z  =  (n2  -  10.0)/  FastMath.sqrt(VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  10.0)/  FastMath.sqrt(VarU);  final  double  z  =  (n2  -  10.0)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n2    -    10.0)/    FastMath.sqrt(VarU);    final  double  z  =  (n2  -  10.0)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	91	None	add
72	[BUG]  [BUGGY]  final  double  z  =  (n2  -  10.0)/  FastMath.sqrt(VarU);  Final  double  z  =  (n2  -  10.0)/  FastMath.sqrt(VarU);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  10.0)/  FastMath.sqrt(VarU);  Final  double  z  =  (n2  -  10.0)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n2    -    10.0)/    FastMath.sqrt(VarU);    Final  double  z  =  (n2  -  10.0)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  not  a  statement	91	None	add
73	[BUG]  [BUGGY]  final  double  z  =  (n2  -  10.0)/  FastMath.sqrt(VarU);  final  double  z  =  (n2  -  10.0)/  FastMath.sqrt(VarU).0;  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  10.0)/  FastMath.sqrt(VarU);  final  double  z  =  (n2  -  10.0)/  FastMath.sqrt(VarU).0;  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n2    -    10.0)/    FastMath.sqrt(VarU);    final  double  z  =  (n2  -  10.0)/  FastMath.sqrt(VarU).0;	  	non-compiled	[CE]  ';'  expected	91	None	add
74	[BUG]  [BUGGY]  final  double  z  =  (UE  -  10.0)/  FastMath.sqrt(VarU,  n1);  [CE]  cannot  find  symbol  UE  [FE]            AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (UE  -  10.0)/  FastMath.sqrt(VarU,  n1);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (UE  -  10.0)/  FastMath.sqrt(VarU,  n1);	  final    double    z    =    (EU    -    10.0)/    FastMath.sqrt(VarU);    final    double    z    =    (UE    -    10.0)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  cannot  find  symbol  UE	8	None	replace
75	[BUG]  [BUGGY]  final  double  z  =  (UE  -  10.0)/  FastMath.sqrt(VarU,  n2);  [CE]  cannot  find  symbol  UE  [FE]              AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (UE  -  10.0)/  FastMath.sqrt(VarU,  n2);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (UE  -  10.0)/  FastMath.sqrt(VarU,  n2);	  final    double    z    =    (EU    -    10.0)/    FastMath.sqrt(VarU);    final    double    z    =    (UE    -    10.0)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  cannot  find  symbol  UE	8	None	replace
76	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  -  n2)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (n1  -  n2)/  FastMath.sqrt(VarU);	  final    double    z    =    (n2    -    n2)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	88	2	replace
77	[BUG]  [BUGGY]  final  double  z  =  (n1  -  n2)/  FastMath.sqrt(VarU);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  -  n2)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  -  n2)/  FastMath.sqrt(VarU);	  final    double    z    =    (n2    -    n2)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	88	2	replace
78	[BUG]  [BUGGY]  final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU,  EU);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU,  EU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU,  EU);	  final    double    z    =    (n2    -    n2)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	88	None	replace
79	[BUG]  [BUGGY]  final  double  z  =  (n2  -  n2)/  VarU.sqrt(Factory.sqrt(VarU));  [CE]  cannot  find  symbol  Factory  [FE]        AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  n2)/  VarU.sqrt(Factory.sqrt(VarU));  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  n2)/  VarU.sqrt(Factory.sqrt(VarU));	  final    double    z    =    (n2    -    n2)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  cannot  find  symbol  Factory	88	None	replace
80	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n1)/  VarU.cumulativeProbability(n2);  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  +  n1)/  VarU.cumulativeProbability(n2);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  +  n1)/  VarU.cumulativeProbability(n2);	  final    double    z    =    (n2    +    n1)/    VarU.cumulativeProbability(n1);    	non-compiled	[CE]  double  cannot  be  dereferenced	26	None	replace
81	[BUG]  [BUGGY]  final  double  z  =  (n2  +  n1)/  VarU.cumulativeProbability(n2);  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  +  n1)/  VarU.cumulativeProbability(n2);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  +  n1)/  VarU.cumulativeProbability(n2);	  final    double    z    =    (n2    +    n1)/    VarU.cumulativeProbability(n1);    	non-compiled	[CE]  double  cannot  be  dereferenced	26	None	replace
82	[BUG]  [BUGGY]  final  double  z  =  (n2  +  n2)/  VarU.cumulativeProbability(n1);  [CE]  double  cannot  be  dereferenced  [FE]                      AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  +  n2)/  VarU.cumulativeProbability(n1);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  +  n2)/  VarU.cumulativeProbability(n1);	  final    double    z    =    (n2    +    n1)/    VarU.cumulativeProbability(n1);    	non-compiled	[CE]  double  cannot  be  dereferenced	26	None	replace
83	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  n1,  n2);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  n1,  n2);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  n1,  n2);	  final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU,    n1);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	39	None	replace
84	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  n2,  n1);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  n2,  n1);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  n2,  n1);	  final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU,    n1);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	39	None	replace
85	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  VarU,  n2);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  VarU,  n2);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  VarU,  n2);	  final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU,    n1);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	39	None	replace
86	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  n2,  VarU);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  n2,  VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  n2,  VarU);	  final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU,    n1);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	39	None	replace
87	[BUG]  [BUGGY]  final  double  n2  =  n2prod  *  VarU.doubleValue();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  n2  =  n2prod  *  VarU.doubleValue();  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  n2  =  n2prod  *  VarU.doubleValue();	  final    double    n2    =    n2    *    VarU.doubleValue();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	47	None	replace
88	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n2  +  n1)/  EU;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =(n2  +  n1)/  EU;	  final    double    z    =(n1    +    n2)/    EU;    	compilable	  [FE]  AssertionError  	53	1	replace
89	[BUG]  [BUGGY]  final  double  z  =(n2  +  n1)/  EU;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n2  +  n1)/  EU;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n2  +  n1)/  EU;	  final    double    z    =(n1    +    n2)/    EU;    	compilable	  [FE]  AssertionError  	53	1	replace
90	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  +  1);  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  +  1);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  +  1);  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  +  1);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU    +    1);    final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  +  1);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	71	None	add
91	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  +  1);  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  +  1));  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  +  1);  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  +  1));  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU    +    1);    final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  +  1));	  	non-compiled	[CE]  ';'  expected	71	None	add
92	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  +  1);  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  +  2);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  +  1);  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  +  2);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU    +    1);    final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  +  2);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	71	None	add
93	[BUG]  [BUGGY]  final  double  z  =(n2  +  n1)/  VarU.toString();  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n2  +  n1)/  VarU.toString();  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n2  +  n1)/  VarU.toString();	  final    double    z    =(n1    +    n2)/    VarU.toString();    	non-compiled	[CE]  double  cannot  be  dereferenced	18	None	replace
94	[BUG]  [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.asPath();  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.asPath();  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n1  +  n2)/  VarU.asPath();	  final    double    z    =(n1    +    n2)/    VarU.toString();    	non-compiled	[CE]  double  cannot  be  dereferenced	18	None	replace
95	[BUG]  [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.getValue(n1);  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.getValue(n1);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n1  +  n2)/  VarU.getValue(n1);	  final    double    z    =(n1    +    n2)/    VarU.toString();    	non-compiled	[CE]  double  cannot  be  dereferenced	18	None	replace
96	[BUG]  [BUGGY]  final  double  z  =  (n2  +  n2)/  VarU.roundFloor(VarU);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  +  n2)/  VarU.roundFloor(VarU);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  +  n2)/  VarU.roundFloor(VarU);	  final    double    z    =    (n2    +    n1)/    VarU.roundFloor(VarU);    	non-compiled	[CE]  double  cannot  be  dereferenced	24	None	replace
97	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2  +  1)/  VarU.roundFloor(VarU);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  +  n2  +  1)/  VarU.roundFloor(VarU);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  +  n2  +  1)/  VarU.roundFloor(VarU);	  final    double    z    =    (n2    +    n1)/    VarU.roundFloor(VarU);    	non-compiled	[CE]  double  cannot  be  dereferenced	24	None	replace
98	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2)/  VarU.cumulativeProbability(VarU,  standardNormal.class);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  +  n2)/  VarU.cumulativeProbability(VarU,  standardNormal.class);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  +  n2)/  VarU.cumulativeProbability(VarU,  standardNormal.class);	  final    double    z    =    (n1    +    n2)/    VarU.cumulativeProbability(VarU.class);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
99	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2)/  VarU.cumulativeProbability(VarU.NAME);  [CE]  double  cannot  be  dereferenced  [FE]                      AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  +  n2)/  VarU.cumulativeProbability(VarU.NAME);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  +  n2)/  VarU.cumulativeProbability(VarU.NAME);	  final    double    z    =    (n1    +    n2)/    VarU.cumulativeProbability(VarU.class);    	non-compiled	[CE]  double  cannot  be  dereferenced	20	None	replace
100	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  -  1)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (n1  -  1)/  FastMath.sqrt(VarU);	  final    double    z    =    (EU    -    1)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	31	2	replace
101	[BUG]  [BUGGY]  final  double  z  =  (n1  -  1)/  FastMath.sqrt(VarU);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  -  1)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  -  1)/  FastMath.sqrt(VarU);	  final    double    z    =    (EU    -    1)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	31	2	replace
102	[BUG]  [BUGGY]  final  double  z  =  (EU  -  1)/  FastMath.sqrt(VarU,  n1);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (EU  -  1)/  FastMath.sqrt(VarU,  n1);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (EU  -  1)/  FastMath.sqrt(VarU,  n1);	  final    double    z    =    (EU    -    1)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	31	None	replace
103	[BUG]  [BUGGY]  final  double  z  =  (EU  -  1)/  FastMath.sqrt(VarU,  VarU);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (EU  -  1)/  FastMath.sqrt(VarU,  VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (EU  -  1)/  FastMath.sqrt(VarU,  VarU);	  final    double    z    =    (EU    -    1)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	31	None	replace
104	[BUG]  [BUGGY]  final  double  z  =  (n2  +  n2)/  VarU.cumulativeProbability(VarU);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  +  n2)/  VarU.cumulativeProbability(VarU);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  +  n2)/  VarU.cumulativeProbability(VarU);	  final    double    z    =    (n2    +    n1)/    VarU.cumulativeProbability(VarU);    	non-compiled	[CE]  double  cannot  be  dereferenced	15	None	replace
105	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n1)/  VarU.cumulativeProbability(VarU);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  +  n1)/  VarU.cumulativeProbability(VarU);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  +  n1)/  VarU.cumulativeProbability(VarU);	  final    double    z    =    (n2    +    n1)/    VarU.cumulativeProbability(VarU);    	non-compiled	[CE]  double  cannot  be  dereferenced	15	None	replace
106	[BUG]  [BUGGY]  final  double  n2  =  VarU.doubleValue()  +  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  n2  =  VarU.doubleValue()  +  1;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  n2  =  VarU.doubleValue()  +  1;	  final    double    n2    =    VarU.doubleValue();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	48	None	replace
107	[BUG]  [BUGGY]  final  double  n2  =  VarU.parseDouble(n1);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  n2  =  VarU.parseDouble(n1);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  n2  =  VarU.parseDouble(n1);	  final    double    n2    =    VarU.doubleValue();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	48	None	replace
108	[BUG]  [BUGGY]  final  double  n2  =  VarU.doubleValue()  *  2;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  n2  =  VarU.doubleValue()  *  2;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  n2  =  VarU.doubleValue()  *  2;	  final    double    n2    =    VarU.doubleValue();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	48	None	replace
109	[BUG]  [BUGGY]  final  double  z  =  VarU.cumulativeProbability(varU);  [CE]  cannot  find  symbol  varU  [FE]                    AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  VarU.cumulativeProbability(varU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  VarU.cumulativeProbability(varU);	  final    double    z    =    VarU.cumulativeProbability(n1);    	non-compiled	[CE]  cannot  find  symbol  varU	43	None	replace
110	[BUG]  [BUGGY]  final  double  z  =  VarU.cumulativeProbability(n2);  [CE]  double  cannot  be  dereferenced  [FE]                      AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  VarU.cumulativeProbability(n2);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  VarU.cumulativeProbability(n2);	  final    double    z    =    VarU.cumulativeProbability(n1);    	non-compiled	[CE]  double  cannot  be  dereferenced	43	None	replace
111	[BUG]  [BUGGY]  final  double  z  =  VarU.cumulativeProbability(n1,  EU);  [CE]  double  cannot  be  dereferenced  [FE]                        AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  VarU.cumulativeProbability(n1,  EU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  VarU.cumulativeProbability(n1,  EU);	  final    double    z    =    VarU.cumulativeProbability(n1);    	non-compiled	[CE]  double  cannot  be  dereferenced	43	None	replace
112	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (0  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (0  -  EU)/  FastMath.sqrt(VarU);	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU);    final    double    z    =    (0    -    EU)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	96	2	replace
113	[BUG]  [BUGGY]  final  double  z  =  (0  -  EU)/  FastMath.sqrt(VarU);  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (0  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (0  -  EU)/  FastMath.sqrt(VarU);	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU);    final    double    z    =    (0    -    EU)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	96	2	replace
114	[BUG]  [BUGGY]  final  double  z  =(n1  -  EU)/  FastMath.sqrt(VarU);  final  double  z  =  (0  -  EU)/  FastMath.sqrt(VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n1  -  EU)/  FastMath.sqrt(VarU);  final  double  z  =  (0  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n1  -  EU)/  FastMath.sqrt(VarU);  final  double  z  =  (0  -  EU)/  FastMath.sqrt(VarU);	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU);    final    double    z    =    (0    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	96	None	replace
115	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (0  *  EU)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (0  *  EU)/  FastMath.sqrt(VarU);	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU);    final    double    z    =    (0    -    EU)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	96	2	replace
116	[BUG]  [BUGGY]  final  double  z  =  (0  *  EU)/  FastMath.sqrt(VarU);  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (0  *  EU)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (0  *  EU)/  FastMath.sqrt(VarU);	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU);    final    double    z    =    (0    -    EU)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	96	2	replace
117	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  EU);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  EU);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  EU);	  final    double    z    =    (n1    +    n2)/    FastMath.sqrt(VarU,    n2);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	10	None	replace
118	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2)/  VarU.cumulativeProbability(variable,  n2);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  +  n2)/  VarU.cumulativeProbability(variable,  n2);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  +  n2)/  VarU.cumulativeProbability(variable,  n2);	  final    double    z    =    (n1    +    n2)/    VarU.cumulativeProbability(variable);    	non-compiled	[CE]  cannot  find  symbol  	19	None	replace
119	[BUG]  [BUGGY]  final  double  z  =  (n2  +  n1)/  VarU.cumulativeProbability(variable);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  +  n1)/  VarU.cumulativeProbability(variable);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  +  n1)/  VarU.cumulativeProbability(variable);	  final    double    z    =    (n1    +    n2)/    VarU.cumulativeProbability(variable);    	non-compiled	[CE]  cannot  find  symbol  	19	None	replace
120	[BUG]  [BUGGY]  final  double  z  =(n2  +  n1)/  VarU.MAX_VALUE;  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n2  +  n1)/  VarU.MAX_VALUE;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n2  +  n1)/  VarU.MAX_VALUE;	  final    double    z    =(n1    +    n2)/    VarU.MAX_VALUE;    	non-compiled	[CE]  double  cannot  be  dereferenced	97	None	replace
121	[BUG]  [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.MIN_VALUE;  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.MIN_VALUE;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n1  +  n2)/  VarU.MIN_VALUE;	  final    double    z    =(n1    +    n2)/    VarU.MAX_VALUE;    	non-compiled	[CE]  double  cannot  be  dereferenced	97	None	replace
122	[BUG]  [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.MAX_VALUE  |  VarU.MAX_VALUE;  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.MAX_VALUE  |  VarU.MAX_VALUE;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n1  +  n2)/  VarU.MAX_VALUE  |  VarU.MAX_VALUE;	  final    double    z    =(n1    +    n2)/    VarU.MAX_VALUE;    	non-compiled	[CE]  double  cannot  be  dereferenced	97	None	replace
123	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  10.0)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (VarU  -  10.0)/  FastMath.sqrt(VarU);	  final    double    z    =    (UE    -    10.0)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	29	2	replace
124	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  10.0)/  FastMath.sqrt(VarU);  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  10.0)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (VarU  -  10.0)/  FastMath.sqrt(VarU);	  final    double    z    =    (UE    -    10.0)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	29	2	replace
125	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  VarU,  n1);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  VarU,  n1);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  VarU,  n1);	  final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU,    VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	38	None	replace
126	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  VarU,  naturalRanking);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  VarU,  naturalRanking);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  VarU,  naturalRanking);	  final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU,    VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	38	None	replace
127	[BUG]  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  n2);  [CE]  cannot  find  symbol  UE  [FE]                AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  n2);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  n2);	  final    double    z    =    (UE    -    EU)/    FastMath.sqrt(VarU,    n1);    	non-compiled	[CE]  cannot  find  symbol  UE	27	None	replace
128	[BUG]  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  n1,  n2);  [CE]  cannot  find  symbol  UE  [FE]                  AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  n1,  n2);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  n1,  n2);	  final    double    z    =    (UE    -    EU)/    FastMath.sqrt(VarU,    n1);    	non-compiled	[CE]  cannot  find  symbol  UE	27	None	replace
129	[BUG]  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  n2,  n1);  [CE]  cannot  find  symbol  UE  [FE]                    AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  n2,  n1);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  n2,  n1);	  final    double    z    =    (UE    -    EU)/    FastMath.sqrt(VarU,    n1);    	non-compiled	[CE]  cannot  find  symbol  UE	27	None	replace
130	[BUG]  [BUGGY]  final  double  z  =  (EU  -  64)/  FastMath.sqrt(VarU);  final  double  z  =  (EU  -  64)/  FastMath.sqrt(VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (EU  -  64)/  FastMath.sqrt(VarU);  final  double  z  =  (EU  -  64)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (EU    -    64)/    FastMath.sqrt(VarU);    final  double  z  =  (EU  -  64)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	57	None	add
131	[BUG]  [BUGGY]  final  double  z  =  (EU  -  64)/  FastMath.sqrt(VarU);  Final  double  z  =  (EU  -  64)/  FastMath.sqrt(VarU);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (EU  -  64)/  FastMath.sqrt(VarU);  Final  double  z  =  (EU  -  64)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (EU    -    64)/    FastMath.sqrt(VarU);    Final  double  z  =  (EU  -  64)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  not  a  statement	57	None	add
132	[BUG]  [BUGGY]  final  double  z  =  (EU  -  64)/  FastMath.sqrt(VarU);  final  double  z  =  (EU  -  64)/  FastMath.sqrt(VarU).0;  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (EU  -  64)/  FastMath.sqrt(VarU);  final  double  z  =  (EU  -  64)/  FastMath.sqrt(VarU).0;  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (EU    -    64)/    FastMath.sqrt(VarU);    final  double  z  =  (EU  -  64)/  FastMath.sqrt(VarU).0;	  	non-compiled	[CE]  ';'  expected	57	None	add
133	[BUG]  [BUGGY]  final  double  z  =(n2  +  n1)/  VarU.multiply(VarU.doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n2  +  n1)/  VarU.multiply(VarU.doubleValue());  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n2  +  n1)/  VarU.multiply(VarU.doubleValue());	  final    double    z    =(n1    +    n2)/    VarU.multiply(VarU.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	61	None	replace
134	[BUG]  [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.multiply(VarU,  n2.doubleValue());  [CE]  int  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.multiply(VarU,  n2.doubleValue());  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n1  +  n2)/  VarU.multiply(VarU,  n2.doubleValue());	  final    double    z    =(n1    +    n2)/    VarU.multiply(VarU.doubleValue());    	non-compiled	[CE]  int  cannot  be  dereferenced	61	None	replace
135	[BUG]  [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.multiply(VarU.multiply(n1  +  n2));  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.multiply(VarU.multiply(n1  +  n2));  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n1  +  n2)/  VarU.multiply(VarU.multiply(n1  +  n2));	  final    double    z    =(n1    +    n2)/    VarU.multiply(VarU.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	61	None	replace
136	[BUG]  [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  n1,  n2);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  n1,  n2);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  n1,  n2);	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU,    n2);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	79	None	replace
137	[BUG]  [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  VarU,  n1,  n2);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  VarU,  n1,  n2);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  VarU,  n1,  n2);	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU,    n2);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	79	None	replace
138	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(Umin);  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(Umin);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(Umin);  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(Umin);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n1    +    n2)/    FastMath.sqrt(Umin);    final  double  z  =  (n1  +  n2)/  FastMath.sqrt(Umin);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	98	None	add
139	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(Umin);  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(Umin);  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n1    +    n2)/    FastMath.sqrt(Umin);    final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	98	None	add
140	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(Umin);  final  double  z  =  (n2  +  n2)/  FastMath.sqrt(Umin);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(Umin);  final  double  z  =  (n2  +  n2)/  FastMath.sqrt(Umin);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n1    +    n2)/    FastMath.sqrt(Umin);    final  double  z  =  (n2  +  n2)/  FastMath.sqrt(Umin);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	98	None	add
141	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  10.0)/  FastMath.sqrt(EU);  final  double  z  =  (VarU  -  10.0)/  FastMath.sqrt(EU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  10.0)/  FastMath.sqrt(EU);  final  double  z  =  (VarU  -  10.0)/  FastMath.sqrt(EU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (VarU    -    10.0)/    FastMath.sqrt(EU);    final  double  z  =  (VarU  -  10.0)/  FastMath.sqrt(EU);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	77	None	add
142	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  10.0)/  FastMath.sqrt(EU);  final  double  z  =  (VarU  -  20.0)/  FastMath.sqrt(EU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  10.0)/  FastMath.sqrt(EU);  final  double  z  =  (VarU  -  20.0)/  FastMath.sqrt(EU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (VarU    -    10.0)/    FastMath.sqrt(EU);    final  double  z  =  (VarU  -  20.0)/  FastMath.sqrt(EU);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	77	None	add
143	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  10.0)/  FastMath.sqrt(EU);  Final  double  z  =  (VarU  -  10.0)/  FastMath.sqrt(EU);  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  10.0)/  FastMath.sqrt(EU);  Final  double  z  =  (VarU  -  10.0)/  FastMath.sqrt(EU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (VarU    -    10.0)/    FastMath.sqrt(EU);    Final  double  z  =  (VarU  -  10.0)/  FastMath.sqrt(EU);	  	non-compiled	[CE]  not  a  statement	77	None	add
144	[BUG]  [BUGGY]  final  double  z  =  (EU  -  1)/  FastMath.sqrt(VarU);  final  double  z  =  (EU  -  1)/  FastMath.sqrt(VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (EU  -  1)/  FastMath.sqrt(VarU);  final  double  z  =  (EU  -  1)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (EU    -    1)/    FastMath.sqrt(VarU);    final  double  z  =  (EU  -  1)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	30	None	add
145	[BUG]  [BUGGY]  final  double  z  =  (EU  -  1)/  FastMath.sqrt(VarU);  Final  double  z  =  (EU  -  1)/  FastMath.sqrt(VarU);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (EU  -  1)/  FastMath.sqrt(VarU);  Final  double  z  =  (EU  -  1)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (EU    -    1)/    FastMath.sqrt(VarU);    Final  double  z  =  (EU  -  1)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  not  a  statement	30	None	add
146	[BUG]  [BUGGY]  final  double  z  =  (EU  -  1)/  FastMath.sqrt(VarU);  final  double  z  =  (UE  -  1)/  FastMath.sqrt(VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (EU  -  1)/  FastMath.sqrt(VarU);  final  double  z  =  (UE  -  1)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (EU    -    1)/    FastMath.sqrt(VarU);    final  double  z  =  (UE  -  1)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	30	None	add
147	[BUG]  [BUGGY]  final  double  n2  =  (n2  -  EU)/  FastMath.sqrt(VarU);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  n2  =  (n2  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  n2  =  (n2  -  EU)/  FastMath.sqrt(VarU);	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU);    final    double    n2    =    (n2    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	60	None	replace
148	[BUG]  [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU);  final  double  n2  =  (n2  -  EU)/  FastMath.sqrt(VarU);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU);  final  double  n2  =  (n2  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU);  final  double  n2  =  (n2  -  EU)/  FastMath.sqrt(VarU);	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU);    final    double    n2    =    (n2    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	60	None	replace
149	[BUG]  [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  n1);  final  double  n2  =  (n2  -  EU)/  FastMath.sqrt(VarU);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  n1);  final  double  n2  =  (n2  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  n1);  final  double  n2  =  (n2  -  EU)/  FastMath.sqrt(VarU);	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU);    final    double    n2    =    (n2    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	60	None	replace
150	[BUG]  [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU).0;  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU).0;  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU).0;	  final    double    z    =    (n1    -    EU)/    FastMath.sqrt(VarU);    final    double    z    =    (n1    -    EU)/    FastMath.sqrt(VarU).0;    	non-compiled	[CE]  ';'  expected	51	None	replace
151	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  +  n1)/  FastMath.sqrt(VarU);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (n2  +  n1)/  FastMath.sqrt(VarU);	  final    double    z    =    (n1    +    n2)/    FastMath.sqrt(Umin);    	compilable	  [FE]  AssertionError  	99	2	replace
152	[BUG]  [BUGGY]  final  double  z  =  (n2  +  n1)/  FastMath.sqrt(VarU);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  +  n1)/  FastMath.sqrt(VarU);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  +  n1)/  FastMath.sqrt(VarU);	  final    double    z    =    (n1    +    n2)/    FastMath.sqrt(Umin);    	compilable	  [FE]  AssertionError  	99	2	replace
153	[BUG]  [BUGGY]  final  double  z  =  (n1  *  n2)/  2.0;  final  double  z  =  (n1  *  n2)/  2.0;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  *  n2)/  2.0;  final  double  z  =  (n1  *  n2)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n1    *    n2)/    2.0;    final  double  z  =  (n1  *  n2)/  2.0;	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	83	None	add
154	[BUG]  [BUGGY]  final  double  z  =  (n1  *  n2)/  2.0;  final  double  z  =  (n2  *  n2)/  2.0;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  *  n2)/  2.0;  final  double  z  =  (n2  *  n2)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n1    *    n2)/    2.0;    final  double  z  =  (n2  *  n2)/  2.0;	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	83	None	add
155	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  -  1.0)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (n1  -  1.0)/  FastMath.sqrt(VarU);	  final    double    z    =    (n1    -    10.0)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	90	2	replace
156	[BUG]  [BUGGY]  final  double  z  =  (n1  -  1.0)/  FastMath.sqrt(VarU);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  -  1.0)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  -  1.0)/  FastMath.sqrt(VarU);	  final    double    z    =    (n1    -    10.0)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	90	2	replace
157	[BUG]  [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU,  VarU,  n2);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU,  VarU,  n2);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU,  VarU,  n2);	  final    double    z    =    (n1    -    EU)/    FastMath.sqrt(VarU,    n2);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	1	None	replace
158	[BUG]  [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU).0;  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU).0;  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU).0;	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU);    final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU).0;    	non-compiled	[CE]  ';'  expected	23	None	replace
159	[BUG]  [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU);  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU).0;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU);  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU).0;  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU);  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU).0;	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU);    final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU).0;    	non-compiled	[CE]  ';'  expected	23	None	replace
160	[BUG]  [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU).1;  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU).1;  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU).1;	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU);    final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU).0;    	non-compiled	[CE]  ';'  expected	23	None	replace
161	[BUG]  [BUGGY]  final  double  n2  =  n1  *  VarU.doubleValue()  /  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  n2  =  n1  *  VarU.doubleValue()  /  1;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  n2  =  n1  *  VarU.doubleValue()  /  1;	  final    double    n2    =    n1    *    VarU.doubleValue()    +    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	81	None	replace
162	[BUG]  [BUGGY]  final  double  standardNormal  =  new  NormalDistribution(0,  0);  [CE]  incompatible  types  [FE]                      AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  standardNormal  =  new  NormalDistribution(0,  0);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  standardNormal  =  new  NormalDistribution(0,  0);	  final    double    standardNormal    =    new    NormalDistribution(0,    1);    	non-compiled	[CE]  incompatible  types	44	None	replace
163	[BUG]  [BUGGY]  final  double  standardNormal  =  new  NormalDistribution(0,  2);  [CE]  incompatible  types  [FE]                        AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  standardNormal  =  new  NormalDistribution(0,  2);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  standardNormal  =  new  NormalDistribution(0,  2);	  final    double    standardNormal    =    new    NormalDistribution(0,    1);    	non-compiled	[CE]  incompatible  types	44	None	replace
164	[BUG]  [BUGGY]  final  double  standardNormal  =  new  NormalDistribution(0,  0,  1);  [CE]  incompatible  types  [FE]                          AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  standardNormal  =  new  NormalDistribution(0,  0,  1);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  standardNormal  =  new  NormalDistribution(0,  0,  1);	  final    double    standardNormal    =    new    NormalDistribution(0,    1);    	non-compiled	[CE]  incompatible  types	44	None	replace
165	[BUG]  [BUGGY]  final  double  z  =  (EU  -  2)/  FastMath.sqrt(VarU);  final  double  z  =  (EU  -  2)/  FastMath.sqrt(VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (EU  -  2)/  FastMath.sqrt(VarU);  final  double  z  =  (EU  -  2)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (EU    -    2)/    FastMath.sqrt(VarU);    final  double  z  =  (EU  -  2)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	41	None	add
166	[BUG]  [BUGGY]  final  double  z  =  (EU  -  2)/  FastMath.sqrt(VarU);  Final  double  z  =  (EU  -  2)/  FastMath.sqrt(VarU);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (EU  -  2)/  FastMath.sqrt(VarU);  Final  double  z  =  (EU  -  2)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (EU    -    2)/    FastMath.sqrt(VarU);    Final  double  z  =  (EU  -  2)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  not  a  statement	41	None	add
167	[BUG]  [BUGGY]  final  double  z  =  (EU  -  2)/  FastMath.sqrt(VarU);  final  double  z  =  (EU  -  2)/  FastMath.sqrt(VarU).0;  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (EU  -  2)/  FastMath.sqrt(VarU);  final  double  z  =  (EU  -  2)/  FastMath.sqrt(VarU).0;  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (EU    -    2)/    FastMath.sqrt(VarU);    final  double  z  =  (EU  -  2)/  FastMath.sqrt(VarU).0;	  	non-compiled	[CE]  ';'  expected	41	None	add
168	[BUG]  [BUGGY]  final  double  z  =  n1  *  n2;  final  double  z  =  n1  *  n2;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  n1  *  n2;  final  double  z  =  n1  *  n2;  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    n1    *    n2;    final  double  z  =  n1  *  n2;	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	94	None	add
169	[BUG]  [BUGGY]  final  double  z  =  n1  *  n2;  final  double  z  =  n1  *  n2);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  n1  *  n2;  final  double  z  =  n1  *  n2);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    n1    *    n2;    final  double  z  =  n1  *  n2);	  	non-compiled	[CE]  ';'  expected	94	None	add
170	[BUG]  [BUGGY]  final  double  z  =  n1  *  n2;  final  double  z  =  n2  *  n2;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  n1  *  n2;  final  double  z  =  n2  *  n2;  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    n1    *    n2;    final  double  z  =  n2  *  n2;	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	94	None	add
171	[BUG]  [BUGGY]  final  double  z  =  n1  *  n2;  final  double  z  =  n2  *  n1;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  n1  *  n2;  final  double  z  =  n2  *  n1;  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    n1    *    n2;    final  double  z  =  n2  *  n1;	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	94	None	add
172	[BUG]  [BUGGY]  final  double  n  =  (n2  -  EU)/  FastMath.sqrt(VarU);  [CE]  cannot  find  symbol  z  [FE]        AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  n  =  (n2  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  n  =  (n2  -  EU)/  FastMath.sqrt(VarU);	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU);    final    double    n    =    (n2    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  cannot  find  symbol  z	59	None	replace
173	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU);  final  double  n  =  (n2  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU);  final  double  n  =  (n2  -  EU)/  FastMath.sqrt(VarU);	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU);    final    double    n    =    (n2    -    EU)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	59	2	replace
174	[BUG]  [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU);  final  double  n  =  (n2  -  EU)/  FastMath.sqrt(VarU);  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU);  final  double  n  =  (n2  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU);  final  double  n  =  (n2  -  EU)/  FastMath.sqrt(VarU);	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU);    final    double    n    =    (n2    -    EU)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	59	2	replace
175	[BUG]  [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  n1);  final  double  n  =  (n2  -  EU)/  FastMath.sqrt(VarU);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  n1);  final  double  n  =  (n2  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  n1);  final  double  n  =  (n2  -  EU)/  FastMath.sqrt(VarU);	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU);    final    double    n    =    (n2    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	59	None	replace
176	[BUG]  [BUGGY]  final  double  z  =  (n1  -  UN)/  FastMath.sqrt(VarU);  [CE]  cannot  find  symbol  UN  [FE]        AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  -  UN)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  -  UN)/  FastMath.sqrt(VarU);	  final    double    z    =    (n1    -    EU)/    FastMath.sqrt(VarU);    final    double    z    =    (n1    -    UN)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  cannot  find  symbol  UN	93	None	replace
177	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  +  n2)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (n2  +  n2)/  2.0;	  final    double    z    =    (n2    +    n1)/    2.0;    	compilable	  [FE]  AssertionError  	14	1	replace
178	[BUG]  [BUGGY]  final  double  z  =  (n2  +  n2)/  2.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  +  n2)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  +  n2)/  2.0;	  final    double    z    =    (n2    +    n1)/    2.0;    	compilable	  [FE]  AssertionError  	14	1	replace
179	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  n2  *  n1;  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  n2  *  n1;	  final    double    z    =    n1    *    n2;    	compilable	  [FE]  AssertionError  	95	1	replace
180	[BUG]  [BUGGY]  final  double  z  =  n2  *  n1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  n2  *  n1;  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  n2  *  n1;	  final    double    z    =    n1    *    n2;    	compilable	  [FE]  AssertionError  	95	1	replace
181	[BUG]  [BUGGY]  final  double  z  =  n1  *  n2prod;  [CE]  cannot  find  symbol  n2prod  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  n1  *  n2prod;  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  n1  *  n2prod;	  final    double    z    =    n1    *    n2;    	non-compiled	[CE]  cannot  find  symbol  n2prod	95	None	replace
182	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  n1  *  n2  +  1;  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  n1  *  n2  +  1;	  final    double    z    =    n1    *    n2;    	compilable	  [FE]  AssertionError  	95	1	replace
183	[BUG]  [BUGGY]  final  double  z  =  n1  *  n2  +  1;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  n1  *  n2  +  1;  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  n1  *  n2  +  1;	  final    double    z    =    n1    *    n2;    	compilable	  [FE]  AssertionError  	95	1	replace
184	[BUG]  [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  n2,  n1);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  n2,  n1);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  n2,  n1);	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU,    n1);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	11	None	replace
185	[BUG]  [BUGGY]  final  double  EU  =  VarU.cumulativeProbability(z);  [CE]  variable  EU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                        AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  EU  =  VarU.cumulativeProbability(z);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  EU  =  VarU.cumulativeProbability(z);	  final    double    EU    =    VarU.cumulativeProbability(n1);    	non-compiled	[CE]  variable  EU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	45	None	replace
186	[BUG]  [BUGGY]  final  double  EU  =  VarU.cumulativeProbability(n2);  [CE]  variable  EU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                          AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  EU  =  VarU.cumulativeProbability(n2);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  EU  =  VarU.cumulativeProbability(n2);	  final    double    EU    =    VarU.cumulativeProbability(n1);    	non-compiled	[CE]  variable  EU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	45	None	replace
187	[BUG]  [BUGGY]  final  double  EU  =  VarU.cumulativeProbability(n2,  n1);  [CE]  variable  EU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                            AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  EU  =  VarU.cumulativeProbability(n2,  n1);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  EU  =  VarU.cumulativeProbability(n2,  n1);	  final    double    EU    =    VarU.cumulativeProbability(n1);    	non-compiled	[CE]  variable  EU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	45	None	replace
188	[BUG]  [BUGGY]  final  double  EU  =  VarU.cumulativeProbability(zero);  [CE]  variable  EU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                              AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  EU  =  VarU.cumulativeProbability(zero);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  EU  =  VarU.cumulativeProbability(zero);	  final    double    EU    =    VarU.cumulativeProbability(n1);    	non-compiled	[CE]  variable  EU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	45	None	replace
189	[BUG]  [BUGGY]  final  double  naturalRanking  =  VarU.cumulativeProbability(z);  [CE]  cannot  find  symbol  z  [FE]                      AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  naturalRanking  =  VarU.cumulativeProbability(z);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  naturalRanking  =  VarU.cumulativeProbability(z);	  final    double    naturalRanking    =    VarU.cumulativeProbability(n1);    	non-compiled	[CE]  cannot  find  symbol  z	67	None	replace
190	[BUG]  [BUGGY]  final  double  naturalRanking  =  VarU.cumulativeProbability(n2);  [CE]  double  cannot  be  dereferenced  [FE]                        AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  naturalRanking  =  VarU.cumulativeProbability(n2);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  naturalRanking  =  VarU.cumulativeProbability(n2);	  final    double    naturalRanking    =    VarU.cumulativeProbability(n1);    	non-compiled	[CE]  double  cannot  be  dereferenced	67	None	replace
191	[BUG]  [BUGGY]  final  double  naturalRanking  =  VarU.cumulativeProbability(n1,  n2);  [CE]  double  cannot  be  dereferenced  [FE]                          AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  naturalRanking  =  VarU.cumulativeProbability(n1,  n2);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  naturalRanking  =  VarU.cumulativeProbability(n1,  n2);	  final    double    naturalRanking    =    VarU.cumulativeProbability(n1);    	non-compiled	[CE]  double  cannot  be  dereferenced	67	None	replace
192	[BUG]  [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU);  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU);  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU);  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU);	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU);    final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	21	None	replace
193	[BUG]  [BUGGY]  final  double  z  =(n2  +  n1)/  VarU;  final  double  z  =(n2  +  n1)/  VarU;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n2  +  n1)/  VarU;  final  double  z  =(n2  +  n1)/  VarU;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =(n2    +    n1)/    VarU;    final  double  z  =(n2  +  n1)/  VarU;	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	55	None	add
194	[BUG]  [BUGGY]  final  double  z  =(n2  +  n1)/  VarU;  final  double  z  =(n2)  +  n1)/  VarU;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n2  +  n1)/  VarU;  final  double  z  =(n2)  +  n1)/  VarU;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =(n2    +    n1)/    VarU;    final  double  z  =(n2)  +  n1)/  VarU;	  	non-compiled	[CE]  ';'  expected	55	None	add
195	[BUG]  [BUGGY]  final  double  z  =(n2  +  n1)/  VarU;  Final  double  z  =(n2  +  n1)/  VarU;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n2  +  n1)/  VarU;  Final  double  z  =(n2  +  n1)/  VarU;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =(n2    +    n1)/    VarU;    Final  double  z  =(n2  +  n1)/  VarU;	  	non-compiled	[CE]  not  a  statement	55	None	add
196	[BUG]  [BUGGY]  final  double  z  =(n2  +  n1)/  VarU;  static  final  double  z  =(n2  +  n1)/  VarU;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n2  +  n1)/  VarU;  static  final  double  z  =(n2  +  n1)/  VarU;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =(n2    +    n1)/    VarU;    static  final  double  z  =(n2  +  n1)/  VarU;	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
197	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2)/  VarU.doubleValue(VarU);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  +  n2)/  VarU.doubleValue(VarU);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  +  n2)/  VarU.doubleValue(VarU);	  final    double    z    =    (n1    +    n2)/    VarU.intValue(VarU);    	non-compiled	[CE]  double  cannot  be  dereferenced	63	None	replace
198	[BUG]  [BUGGY]  final  double  z  =  (n2  +  n1)/  VarU.intValue(VarU);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  +  n1)/  VarU.intValue(VarU);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  +  n1)/  VarU.intValue(VarU);	  final    double    z    =    (n1    +    n2)/    VarU.intValue(VarU);    	non-compiled	[CE]  double  cannot  be  dereferenced	63	None	replace
199	[BUG]  [BUGGY]  final  double  n1  =  (n1  -  EU)/  FastMath.sqrt(VarU);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  n1  =  (n1  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  n1  =  (n1  -  EU)/  FastMath.sqrt(VarU);	  final    double    z    =    (n1    -    EU)/    FastMath.sqrt(VarU);    final    double    n1    =    (n1    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	70	None	replace
200	[BUG]  [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU,  n1);  final  double  n1  =  (n1  -  EU)/  FastMath.sqrt(VarU);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU,  n1);  final  double  n1  =  (n1  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU,  n1);  final  double  n1  =  (n1  -  EU)/  FastMath.sqrt(VarU);	  final    double    z    =    (n1    -    EU)/    FastMath.sqrt(VarU);    final    double    n1    =    (n1    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	70	None	replace
201	[BUG]  [BUGGY]  final  double  z  =(n2  +  n1)/  VarU.intValue();  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n2  +  n1)/  VarU.intValue();  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n2  +  n1)/  VarU.intValue();	  final    double    z    =(n1    +    n2)/    VarU.intValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	17	None	replace
202	[BUG]  [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.metricValue();  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.metricValue();  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n1  +  n2)/  VarU.metricValue();	  final    double    z    =(n1    +    n2)/    VarU.intValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	17	None	replace
203	[BUG]  [BUGGY]  final  double  n  =  (n1  -  EU)/  FastMath.sqrt(VarU);  [CE]  cannot  find  symbol  z  [FE]        AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  n  =  (n1  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  n  =  (n1  -  EU)/  FastMath.sqrt(VarU);	  final    double    z    =    (n1    -    EU)/    FastMath.sqrt(VarU);    final    double    n    =    (n1    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  cannot  find  symbol  z	69	None	replace
204	[BUG]  [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU,  n1);  final  double  n  =  (n1  -  EU)/  FastMath.sqrt(VarU);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU,  n1);  final  double  n  =  (n1  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU,  n1);  final  double  n  =  (n1  -  EU)/  FastMath.sqrt(VarU);	  final    double    z    =    (n1    -    EU)/    FastMath.sqrt(VarU);    final    double    n    =    (n1    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	69	None	replace
205	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n2  +  n2)/  VarU;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =(n2  +  n2)/  VarU;	  final    double    z    =(n2    +    n1)/    VarU;    	compilable	  [FE]  AssertionError  	56	1	replace
206	[BUG]  [BUGGY]  final  double  z  =(n2  +  n2)/  VarU;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n2  +  n2)/  VarU;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n2  +  n2)/  VarU;	  final    double    z    =(n2    +    n1)/    VarU;    	compilable	  [FE]  AssertionError  	56	1	replace
207	[BUG]  [BUGGY]  final  double  z  =  (EU  -  2.0)/  FastMath.sqrt(VarU);  final  double  z  =  (EU  -  2.0)/  FastMath.sqrt(VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (EU  -  2.0)/  FastMath.sqrt(VarU);  final  double  z  =  (EU  -  2.0)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (EU    -    2.0)/    FastMath.sqrt(VarU);    final  double  z  =  (EU  -  2.0)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	75	None	add
208	[BUG]  [BUGGY]  final  double  z  =  (EU  -  2.0)/  FastMath.sqrt(VarU);  Final  double  z  =  (EU  -  2.0)/  FastMath.sqrt(VarU);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (EU  -  2.0)/  FastMath.sqrt(VarU);  Final  double  z  =  (EU  -  2.0)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (EU    -    2.0)/    FastMath.sqrt(VarU);    Final  double  z  =  (EU  -  2.0)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  not  a  statement	75	None	add
209	[BUG]  [BUGGY]  final  double  z  =  (EU  -  2.0)/  FastMath.sqrt(VarU);  final  double  z  =  (EU  -  2.0)/  FastMath.sqrt(VarU).0;  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (EU  -  2.0)/  FastMath.sqrt(VarU);  final  double  z  =  (EU  -  2.0)/  FastMath.sqrt(VarU).0;  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (EU    -    2.0)/    FastMath.sqrt(VarU);    final  double  z  =  (EU  -  2.0)/  FastMath.sqrt(VarU).0;	  	non-compiled	[CE]  ';'  expected	75	None	add
210	[BUG]  [BUGGY]  final  double  z  =  (VarU  *  EU)/  FastMath.sqrt(VarU);  final  double  z  =  (VarU  *  EU)/  FastMath.sqrt(VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  *  EU)/  FastMath.sqrt(VarU);  final  double  z  =  (VarU  *  EU)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (VarU    *    EU)/    FastMath.sqrt(VarU);    final  double  z  =  (VarU  *  EU)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	73	None	add
211	[BUG]  [BUGGY]  final  double  z  =  (VarU  *  EU)/  FastMath.sqrt(VarU);  Final  double  z  =  (VarU  *  EU)/  FastMath.sqrt(VarU);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  *  EU)/  FastMath.sqrt(VarU);  Final  double  z  =  (VarU  *  EU)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (VarU    *    EU)/    FastMath.sqrt(VarU);    Final  double  z  =  (VarU  *  EU)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  not  a  statement	73	None	add
212	[BUG]  [BUGGY]  final  double  z  =  (VarU  *  EU)/  FastMath.sqrt(VarU);  final  double  z  =  (VarU  *  EU)/  FastMath.sqrt(VarU).cumulativeProbability(z);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  *  EU)/  FastMath.sqrt(VarU);  final  double  z  =  (VarU  *  EU)/  FastMath.sqrt(VarU).cumulativeProbability(z);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (VarU    *    EU)/    FastMath.sqrt(VarU);    final  double  z  =  (VarU  *  EU)/  FastMath.sqrt(VarU).cumulativeProbability(z);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	73	None	add
213	[BUG]  [BUGGY]  final  double  z  =  (n2  +  n1)/  VarU.instance.roundFloor(VarU);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  +  n1)/  VarU.instance.roundFloor(VarU);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  +  n1)/  VarU.instance.roundFloor(VarU);	  final    double    z    =    (n1    +    n2)/    VarU.instance.roundFloor(VarU);    	non-compiled	[CE]  double  cannot  be  dereferenced	101	None	replace
214	[BUG]  [BUGGY]  final  double  z  =  (VarU  *  EU)/  FastMath.sqrt(VarU,  VarU);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  *  EU)/  FastMath.sqrt(VarU,  VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (VarU  *  EU)/  FastMath.sqrt(VarU,  VarU);	  final    double    z    =    (VarU    *    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	74	None	replace
215	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  *  VarU)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (VarU  *  VarU)/  FastMath.sqrt(VarU);	  final    double    z    =    (VarU    *    EU)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	74	2	replace
216	[BUG]  [BUGGY]  final  double  z  =  (VarU  *  VarU)/  FastMath.sqrt(VarU);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  *  VarU)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (VarU  *  VarU)/  FastMath.sqrt(VarU);	  final    double    z    =    (VarU    *    EU)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	74	2	replace
217	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  *  EU)/  FastMath.rint(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (VarU  *  EU)/  FastMath.rint(VarU);	  final    double    z    =    (VarU    *    EU)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	74	1	replace
218	[BUG]  [BUGGY]  final  double  z  =  (VarU  *  EU)/  FastMath.rint(VarU);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  *  EU)/  FastMath.rint(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (VarU  *  EU)/  FastMath.rint(VarU);	  final    double    z    =    (VarU    *    EU)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	74	1	replace
219	[BUG]  [BUGGY]  final  double  z  =  (n2  -  n1)/  FastMath.sqrt(VarU);  final  double  z  =  (n2  -  n1)/  FastMath.sqrt(VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  n1)/  FastMath.sqrt(VarU);  final  double  z  =  (n2  -  n1)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n2    -    n1)/    FastMath.sqrt(VarU);    final  double  z  =  (n2  -  n1)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	85	None	add
220	[BUG]  [BUGGY]  final  double  z  =  (n2  -  n1)/  FastMath.sqrt(VarU);  final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  n1)/  FastMath.sqrt(VarU);  final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n2    -    n1)/    FastMath.sqrt(VarU);    final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	85	None	add
221	[BUG]  [BUGGY]  final  double  z  =  (n2  -  n1)/  FastMath.sqrt(VarU);  final  double  z  =  (n2  -  n1/  FastMath.sqrt(VarU);  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  n1)/  FastMath.sqrt(VarU);  final  double  z  =  (n2  -  n1/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n2    -    n1)/    FastMath.sqrt(VarU);    final  double  z  =  (n2  -  n1/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  ')'  expected	85	None	add
222	[BUG]  [BUGGY]  final  double  z  =  (0VarU  -  EU)/  FastMath.sqrt(VarU);  [CE]  ')'  expected  [FE]        AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (0VarU  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (0VarU  -  EU)/  FastMath.sqrt(VarU);	  final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU);    final    double    z    =    (0VarU    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  ')'  expected	65	None	replace
223	[BUG]  [BUGGY]  final  double  z  =  (n1  -  10.0)/  FastMath.sqrt(VarU);  final  double  z  =  (n1  -  10.0)/  FastMath.sqrt(VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  -  10.0)/  FastMath.sqrt(VarU);  final  double  z  =  (n1  -  10.0)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n1    -    10.0)/    FastMath.sqrt(VarU);    final  double  z  =  (n1  -  10.0)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	89	None	add
224	[BUG]  [BUGGY]  final  double  z  =  (n1  -  10.0)/  FastMath.sqrt(VarU);  Final  double  z  =  (n1  -  10.0)/  FastMath.sqrt(VarU);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  -  10.0)/  FastMath.sqrt(VarU);  Final  double  z  =  (n1  -  10.0)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n1    -    10.0)/    FastMath.sqrt(VarU);    Final  double  z  =  (n1  -  10.0)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  not  a  statement	89	None	add
225	[BUG]  [BUGGY]  final  double  z  =  (n1  -  10.0)/  FastMath.sqrt(VarU);  final  double  z  =  (n2  -  10.0)/  FastMath.sqrt(VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  -  10.0)/  FastMath.sqrt(VarU);  final  double  z  =  (n2  -  10.0)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n1    -    10.0)/    FastMath.sqrt(VarU);    final  double  z  =  (n2  -  10.0)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	89	None	add
226	[BUG]  [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU,  VarU);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU,  VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU,  VarU);	  final    double    z    =    (UE    -    EU)/    FastMath.sqrt(VarU,    VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	64	None	replace
227	[BUG]  [BUGGY]  final  VarU  =  VarU.doubleValue()  /  2.0;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  VarU  =  VarU.doubleValue()  /  2.0;  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  VarU  =  VarU.doubleValue()  /  2.0;	  final    VarU    =    VarU.doubleValue();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
228	[BUG]  [BUGGY]  final  VarU  =  z.doubleValue();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  VarU  =  z.doubleValue();  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  VarU  =  z.doubleValue();	  final    VarU    =    VarU.doubleValue();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
229	[BUG]  [BUGGY]  final  VarU  =  VarU.doubleValue()  *  EU;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  VarU  =  VarU.doubleValue()  *  EU;  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  VarU  =  VarU.doubleValue()  *  EU;	  final    VarU    =    VarU.doubleValue();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
230	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (EU  /  2.0)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (EU  /  2.0)/  FastMath.sqrt(VarU);	  final    double    z    =    (EU    -    2.0)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	76	2	replace
231	[BUG]  [BUGGY]  final  double  z  =  (EU  /  2.0)/  FastMath.sqrt(VarU);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (EU  /  2.0)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (EU  /  2.0)/  FastMath.sqrt(VarU);	  final    double    z    =    (EU    -    2.0)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	76	2	replace
232	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  -  2.0)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (n1  -  2.0)/  FastMath.sqrt(VarU);	  final    double    z    =    (EU    -    2.0)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	76	2	replace
233	[BUG]  [BUGGY]  final  double  z  =  (n1  -  2.0)/  FastMath.sqrt(VarU);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  -  2.0)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  -  2.0)/  FastMath.sqrt(VarU);	  final    double    z    =    (EU    -    2.0)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	76	2	replace
234	[BUG]  [BUGGY]  final  double  z  =  (UE  /  2.0)/  FastMath.sqrt(VarU);  [CE]  cannot  find  symbol  UE  [FE]        AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (UE  /  2.0)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (UE  /  2.0)/  FastMath.sqrt(VarU);	  final    double    z    =    (EU    -    2.0)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  cannot  find  symbol  UE	76	None	replace
235	[BUG]  [BUGGY]  final  double  z  =  (EU  -  2.0)/  FastMath.sqrt(VarU,  n1);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (EU  -  2.0)/  FastMath.sqrt(VarU,  n1);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (EU  -  2.0)/  FastMath.sqrt(VarU,  n1);	  final    double    z    =    (EU    -    2.0)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	76	None	replace
236	[BUG]  [BUGGY]  final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU);  final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU);  final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n2    -    n2)/    FastMath.sqrt(VarU);    final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	87	None	add
237	[BUG]  [BUGGY]  final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU);  Final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU);  Final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n2    -    n2)/    FastMath.sqrt(VarU);    Final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  not  a  statement	87	None	add
238	[BUG]  [BUGGY]  final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU);  final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU).0;  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU);  final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU).0;  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n2    -    n2)/    FastMath.sqrt(VarU);    final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU).0;	  	non-compiled	[CE]  ';'  expected	87	None	add
239	[BUG]  [BUGGY]  final  double  z  =  (EU  -  2)/  FastMath.sqrt(VarU,  n1);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (EU  -  2)/  FastMath.sqrt(VarU,  n1);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (EU  -  2)/  FastMath.sqrt(VarU,  n1);	  final    double    z    =    (EU    -    2)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	42	None	replace
240	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (EU  /  2)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (EU  /  2)/  FastMath.sqrt(VarU);	  final    double    z    =    (EU    -    2)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	42	2	replace
241	[BUG]  [BUGGY]  final  double  z  =  (EU  /  2)/  FastMath.sqrt(VarU);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (EU  /  2)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (EU  /  2)/  FastMath.sqrt(VarU);	  final    double    z    =    (EU    -    2)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	42	2	replace
242	[BUG]  [BUGGY]  final  double  z  =  (n2  -  n1)/  VarU.sqrt(Factory.sqrt(VarU));  [CE]  cannot  find  symbol  Factory  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  n1)/  VarU.sqrt(Factory.sqrt(VarU));  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  n1)/  VarU.sqrt(Factory.sqrt(VarU));	  final    double    z    =    (n2    -    n1)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  cannot  find  symbol  Factory	86	None	replace
243	[BUG]  [BUGGY]  final  double  z  =  (n2  -  n1)/  FastMath.sqrt(VarU,  EU);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  n1)/  FastMath.sqrt(VarU,  EU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  n1)/  FastMath.sqrt(VarU,  EU);	  final    double    z    =    (n2    -    n1)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	86	None	replace
244	[BUG]  [BUGGY]  final  double  z  =  VarU.cumulativeProbability(EU);  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  VarU.cumulativeProbability(EU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  VarU.cumulativeProbability(EU);	  final    double    z    =    VarU.cumulativeProbability(n1);    	non-compiled	[CE]  double  cannot  be  dereferenced	43	None	replace
245	[BUG]  [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU);  final  double  n1  =  (n1  -  EU)/  FastMath.sqrt(VarU);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU);  final  double  n1  =  (n1  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU);  final  double  n1  =  (n1  -  EU)/  FastMath.sqrt(VarU);	  final    double    z    =    (n1    -    EU)/    FastMath.sqrt(VarU);    final    double    n1    =    (n1    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	70	None	replace
246	[BUG]  [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU,  n2);  final  double  n1  =  (n1  -  EU)/  FastMath.sqrt(VarU);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU,  n2);  final  double  n1  =  (n1  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU,  n2);  final  double  n1  =  (n1  -  EU)/  FastMath.sqrt(VarU);	  final    double    z    =    (n1    -    EU)/    FastMath.sqrt(VarU);    final    double    n1    =    (n1    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	70	None	replace
247	[BUG]  [BUGGY]  final  double  z  =  (n2  +  n1  +  1)/  2.0;  final  double  z  =  (n2)  +  n1  +  1)/  2.0;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  +  n1  +  1)/  2.0;  final  double  z  =  (n2)  +  n1  +  1)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n2    +    n1    +    1)/    2.0;    final  double  z  =  (n2)  +  n1  +  1)/  2.0;	  	non-compiled	[CE]  ';'  expected	36	None	add
248	[BUG]  [BUGGY]  final  double  naturalRanking  =  VarU.cumulativeProbability(v1);  [CE]  cannot  find  symbol  v1  [FE]                      AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  naturalRanking  =  VarU.cumulativeProbability(v1);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  naturalRanking  =  VarU.cumulativeProbability(v1);	  final    double    naturalRanking    =    VarU.cumulativeProbability(n1);    	non-compiled	[CE]  cannot  find  symbol  v1	67	None	replace
249	[BUG]  [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU);  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU).0;  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU);  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU).0;  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU);  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU).0;	  final    double    z    =    (n1    -    EU)/    FastMath.sqrt(VarU);    final    double    z    =    (n1    -    EU)/    FastMath.sqrt(VarU).0;    	non-compiled	[CE]  ';'  expected	51	None	replace
250	[BUG]  [BUGGY]  final  double  z  =  (EU  -  2.0)/  FastMath.sqrt(VarU,  VarU);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (EU  -  2.0)/  FastMath.sqrt(VarU,  VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (EU  -  2.0)/  FastMath.sqrt(VarU,  VarU);	  final    double    z    =    (EU    -    2.0)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	76	None	replace
251	[BUG]  [BUGGY]  final  double  z  =  (EU  -  2)/  FastMath.sqrt(VarU,  VarU);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (EU  -  2)/  FastMath.sqrt(VarU,  VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (EU  -  2)/  FastMath.sqrt(VarU,  VarU);	  final    double    z    =    (EU    -    2)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	42	None	replace
252	[BUG]  [BUGGY]  final  double  n2  =  VarU  *  VarU.doubleValue();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  n2  =  VarU  *  VarU.doubleValue();  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  n2  =  VarU  *  VarU.doubleValue();	  final    double    n2    =    VarU    *    n1.doubleValue();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	62	None	replace
253	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  VarU,  NaturalRanking);  [CE]  cannot  find  symbol  NaturalRanking  [FE]        AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  VarU,  NaturalRanking);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  VarU,  NaturalRanking);	  final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU,    VarU);    	non-compiled	[CE]  cannot  find  symbol  NaturalRanking	38	None	replace
254	[BUG]  [BUGGY]  final  double  z  =  (EU  -  10.0)/  FastMath.sqrt(VarU,  VarU);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (EU  -  10.0)/  FastMath.sqrt(VarU,  VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (EU  -  10.0)/  FastMath.sqrt(VarU,  VarU);	  final    double    z    =    (EU    -    10.0)/    FastMath.sqrt(VarU);    final    double    z    =    (EU    -    10.0)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	6	None	replace
255	[BUG]  [BUGGY]  final  double  z  =  (n2  +  n1)/  2.0;  Final  double  z  =  (n2  +  n1)/  2.0;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  +  n1)/  2.0;  Final  double  z  =  (n2  +  n1)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n2    +    n1)/    2.0;    Final  double  z  =  (n2  +  n1)/  2.0;	  	non-compiled	[CE]  not  a  statement	13	None	add
256	[BUG]  [BUGGY]  final  double  z  =  n1  *  n2;  final  double  z  =  n1  *  n2.;  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  n1  *  n2;  final  double  z  =  n1  *  n2.;  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    n1    *    n2;    final  double  z  =  n1  *  n2.;	  	non-compiled	[CE]  <identifier>  expected	94	None	add
257	[BUG]  [BUGGY]  final  double  z  =  n1  *  n2;  final  double  z  =  n1  *  n2,  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  n1  *  n2;  final  double  z  =  n1  *  n2,  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    n1    *    n2;    final  double  z  =  n1  *  n2,	  	non-compiled	[CE]  <identifier>  expected	94	None	add
258	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n2  *  n1)/  VarU;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =(n2  *  n1)/  VarU;	  final    double    z    =(n2    +    n1)/    VarU;    	compilable	  [FE]  AssertionError  	56	1	replace
259	[BUG]  [BUGGY]  final  double  z  =(n2  *  n1)/  VarU;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n2  *  n1)/  VarU;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n2  *  n1)/  VarU;	  final    double    z    =(n2    +    n1)/    VarU;    	compilable	  [FE]  AssertionError  	56	1	replace
260	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  10.0)/  FastMath.sqrt(VarU.intValue());  [CE]  double  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  10.0)/  FastMath.sqrt(VarU.intValue());  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (VarU  -  10.0)/  FastMath.sqrt(VarU.intValue());	  final    double    z    =    (VarU    -    10.0)/    FastMath.sqrt(EU);    	non-compiled	[CE]  double  cannot  be  dereferenced	78	None	replace
261	[BUG]  [BUGGY]  final  double  z  =  (n1  -  10.0)/  FastMath.sqrt(VarU,  n2);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  -  10.0)/  FastMath.sqrt(VarU,  n2);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  -  10.0)/  FastMath.sqrt(VarU,  n2);	  final    double    z    =    (n1    -    10.0)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	90	None	replace
262	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU);  final  double  n  =  (n1  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU);  final  double  n  =  (n1  -  EU)/  FastMath.sqrt(VarU);	  final    double    z    =    (n1    -    EU)/    FastMath.sqrt(VarU);    final    double    n    =    (n1    -    EU)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	69	2	replace
263	[BUG]  [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU);  final  double  n  =  (n1  -  EU)/  FastMath.sqrt(VarU);  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU);  final  double  n  =  (n1  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU);  final  double  n  =  (n1  -  EU)/  FastMath.sqrt(VarU);	  final    double    z    =    (n1    -    EU)/    FastMath.sqrt(VarU);    final    double    n    =    (n1    -    EU)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	69	2	replace
264	[BUG]  [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU,  n2);  final  double  n  =  (n1  -  EU)/  FastMath.sqrt(VarU);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU,  n2);  final  double  n  =  (n1  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  -  EU)/  FastMath.sqrt(VarU,  n2);  final  double  n  =  (n1  -  EU)/  FastMath.sqrt(VarU);	  final    double    z    =    (n1    -    EU)/    FastMath.sqrt(VarU);    final    double    n    =    (n1    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	69	None	replace
265	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2)/  VarU.cumulativeProbability(VarU,  StandardNormal.class);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  +  n2)/  VarU.cumulativeProbability(VarU,  StandardNormal.class);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  +  n2)/  VarU.cumulativeProbability(VarU,  StandardNormal.class);	  final    double    z    =    (n1    +    n2)/    VarU.cumulativeProbability(VarU.class);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
266	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2)/  VarU.cumulativeProbability(VarU,  EU);  [CE]  double  cannot  be  dereferenced  [FE]                      AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  +  n2)/  VarU.cumulativeProbability(VarU,  EU);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  +  n2)/  VarU.cumulativeProbability(VarU,  EU);	  final    double    z    =    (n1    +    n2)/    VarU.cumulativeProbability(VarU.class);    	non-compiled	[CE]  double  cannot  be  dereferenced	20	None	replace
267	[BUG]  [BUGGY]  final  double  z  =  (n1  *  n2)/  2.0;  Final  double  z  =  (n1  *  n2)/  2.0;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  *  n2)/  2.0;  Final  double  z  =  (n1  *  n2)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n1    *    n2)/    2.0;    Final  double  z  =  (n1  *  n2)/  2.0;	  	non-compiled	[CE]  not  a  statement	83	None	add
268	[BUG]  [BUGGY]  final  double  z  =  (n1  *  n2)/  2.0;  final  double  z  =  (n1)  *  n2)/  2.0;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  *  n2)/  2.0;  final  double  z  =  (n1)  *  n2)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n1    *    n2)/    2.0;    final  double  z  =  (n1)  *  n2)/  2.0;	  	non-compiled	[CE]  ';'  expected	83	None	add
269	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  n1  *  n2  +  2;  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  n1  *  n2  +  2;	  final    double    z    =    n1    *    n2;    	compilable	  [FE]  AssertionError  	95	1	replace
270	[BUG]  [BUGGY]  final  double  z  =  n1  *  n2  +  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  n1  *  n2  +  2;  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  n1  *  n2  +  2;	  final    double    z    =    n1    *    n2;    	compilable	  [FE]  AssertionError  	95	1	replace
271	[BUG]  [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.multiply(VarU);  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.multiply(VarU);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n1  +  n2)/  VarU.multiply(VarU);	  final    double    z    =(n1    +    n2)/    VarU.multiply(VarU.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	61	None	replace
272	[BUG]  [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.multiply(VarU.multiply(n2  +  n1));  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.multiply(VarU.multiply(n2  +  n1));  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n1  +  n2)/  VarU.multiply(VarU.multiply(n2  +  n1));	  final    double    z    =(n1    +    n2)/    VarU.multiply(VarU.doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	61	None	replace
273	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  *  EU)/  FastMath.sqrt(VarU  +  1);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (VarU  *  EU)/  FastMath.sqrt(VarU  +  1);	  final    double    z    =    (VarU    *    EU)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	74	2	replace
274	[BUG]  [BUGGY]  final  double  z  =  (VarU  *  EU)/  FastMath.sqrt(VarU  +  1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  *  EU)/  FastMath.sqrt(VarU  +  1);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (VarU  *  EU)/  FastMath.sqrt(VarU  +  1);	  final    double    z    =    (VarU    *    EU)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	74	2	replace
275	[BUG]  [BUGGY]  final  double  n2  =  VarU.parseDouble(n2);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  n2  =  VarU.parseDouble(n2);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  n2  =  VarU.parseDouble(n2);	  final    double    n2    =    VarU.doubleValue();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	48	None	replace
276	[BUG]  [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.US_ASYMBOL;  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.US_ASYMBOL;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n1  +  n2)/  VarU.US_ASYMBOL;	  final    double    z    =(n1    +    n2)/    VarU.intValue;    	non-compiled	[CE]  double  cannot  be  dereferenced	80	None	replace
277	[BUG]  [BUGGY]  final  double  z  =(n1  +  n2)/  EU;  final  double  z  =(n1  +  n2)/  UN;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n1  +  n2)/  EU;  final  double  z  =(n1  +  n2)/  UN;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =(n1    +    n2)/    EU;    final  double  z  =(n1  +  n2)/  UN;	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	52	None	add
278	[BUG]  [BUGGY]  final  double  z  =(n1  +  n2)/  EU;  final  double  n  =(n1  +  n2)/  EU;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n1  +  n2)/  EU;  final  double  n  =(n1  +  n2)/  EU;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =(n1    +    n2)/    EU;    final  double  n  =(n1  +  n2)/  EU;	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	52	None	add
279	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  *  2);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  *  2);	  final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU    +    1);    	compilable	  [FE]  AssertionError  	72	2	replace
280	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  *  2);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  *  2);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU  *  2);	  final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU    +    1);    	compilable	  [FE]  AssertionError  	72	2	replace
281	[BUG]  [BUGGY]  final  double  z  =  (UE  *  EU)/  FastMath.sqrt(VarU,  VarU);  [CE]  cannot  find  symbol  UE  [FE]                AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (UE  *  EU)/  FastMath.sqrt(VarU,  VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (UE  *  EU)/  FastMath.sqrt(VarU,  VarU);	  final    double    z    =    (UE    -    EU)/    FastMath.sqrt(VarU,    VarU);    	non-compiled	[CE]  cannot  find  symbol  UE	64	None	replace
282	[BUG]  [BUGGY]  final  double  z  =  (n2  -  10.0)/  FastMath.sqrt(VarU);  final  double  n2  =  (n2  -  10.0)/  FastMath.sqrt(VarU);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  10.0)/  FastMath.sqrt(VarU);  final  double  n2  =  (n2  -  10.0)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n2    -    10.0)/    FastMath.sqrt(VarU);    final  double  n2  =  (n2  -  10.0)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	91	None	add
283	[BUG]  [BUGGY]  final  double  z  =  (n2  -  10.0)/  FastMath.sqrt(VarU);  final  double  z  =  (n2)  -  10.0)/  FastMath.sqrt(VarU);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  10.0)/  FastMath.sqrt(VarU);  final  double  z  =  (n2)  -  10.0)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n2    -    10.0)/    FastMath.sqrt(VarU);    final  double  z  =  (n2)  -  10.0)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  ';'  expected	91	None	add
284	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  +  n1)/  FastMath.sqrt(Umin);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (n2  +  n1)/  FastMath.sqrt(Umin);	  final    double    z    =    (n1    +    n2)/    FastMath.sqrt(Umin);    	compilable	  [FE]  AssertionError  	99	1	replace
285	[BUG]  [BUGGY]  final  double  z  =  (n2  +  n1)/  FastMath.sqrt(Umin);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  +  n1)/  FastMath.sqrt(Umin);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  +  n1)/  FastMath.sqrt(Umin);	  final    double    z    =    (n1    +    n2)/    FastMath.sqrt(Umin);    	compilable	  [FE]  AssertionError  	99	1	replace
286	[BUG]  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  VarU,  naturalRanking);  [CE]  cannot  find  symbol  UE  [FE]        AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  VarU,  naturalRanking);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  VarU,  naturalRanking);	  final    double    z    =    (EU    -    EU)/    FastMath.sqrt(VarU,    VarU);    	non-compiled	[CE]  cannot  find  symbol  UE	40	None	replace
287	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  VarU);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  VarU);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  VarU);	  final    double    z    =    (n1    +    n2)/    FastMath.sqrt(VarU,    n2);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	10	None	replace
288	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n1)/  VarU.roundFloor(VarU);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  +  n1)/  VarU.roundFloor(VarU);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  +  n1)/  VarU.roundFloor(VarU);	  final    double    z    =    (n2    +    n1)/    VarU.roundFloor(VarU);    	non-compiled	[CE]  double  cannot  be  dereferenced	24	None	replace
289	[BUG]  [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  n2)/  FastMath.sqrt(VarU);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  n2)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  n2)/  FastMath.sqrt(VarU);	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU);    final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	21	None	replace
290	[BUG]  [BUGGY]  final  double  z  =  (VarU  *  EU)/  FastMath.sqrt(VarU);  final  double  z  =  (0VarU  *  EU)/  FastMath.sqrt(VarU);  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  *  EU)/  FastMath.sqrt(VarU);  final  double  z  =  (0VarU  *  EU)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (VarU    *    EU)/    FastMath.sqrt(VarU);    final  double  z  =  (0VarU  *  EU)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  ')'  expected	73	None	add
291	[BUG]  [BUGGY]  final  double  z  =  (EU  -  2)/  FastMath.sqrt(VarU);  final  double  z  =  (UE  -  2)/  FastMath.sqrt(VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (EU  -  2)/  FastMath.sqrt(VarU);  final  double  z  =  (UE  -  2)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (EU    -    2)/    FastMath.sqrt(VarU);    final  double  z  =  (UE  -  2)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	41	None	add
292	[BUG]  [BUGGY]  final  double  z  =  (EU  -  10.0)/  FastMath.sqrt(VarU,  VarU,  n2);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (EU  -  10.0)/  FastMath.sqrt(VarU,  VarU,  n2);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (EU  -  10.0)/  FastMath.sqrt(VarU,  VarU,  n2);	  final    double    z    =    (EU    -    10.0)/    FastMath.sqrt(VarU,    n1);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	28	None	replace
293	[BUG]  [BUGGY]  final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU);  final  double  n  =  (n2  -  n2)/  FastMath.sqrt(VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU);  final  double  n  =  (n2  -  n2)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n2    -    n2)/    FastMath.sqrt(VarU);    final  double  n  =  (n2  -  n2)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	87	None	add
294	[BUG]  [BUGGY]  final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU);  final  double  z  =  (n2)/  FastMath.sqrt(VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU);  final  double  z  =  (n2)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n2    -    n2)/    FastMath.sqrt(VarU);    final  double  z  =  (n2)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	87	None	add
295	[BUG]  [BUGGY]  final  double  z  =  (n2  -  n1)/  FastMath.sqrt(VarU);  final  double  n  =  (n2  -  n1)/  FastMath.sqrt(VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  n1)/  FastMath.sqrt(VarU);  final  double  n  =  (n2  -  n1)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n2    -    n1)/    FastMath.sqrt(VarU);    final  double  n  =  (n2  -  n1)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	85	None	add
296	[BUG]  [BUGGY]  final  double  EU  =  VarU.cumulativeProbability(varU);  [CE]  variable  EU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                        AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  EU  =  VarU.cumulativeProbability(varU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  EU  =  VarU.cumulativeProbability(varU);	  final    double    EU    =    VarU.cumulativeProbability(n1);    	non-compiled	[CE]  variable  EU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	45	None	replace
297	[BUG]  [BUGGY]  final  double  z  =(n2  -  EU)/  FastMath.sqrt(VarU,  n1)/  FastMath.sqrt(VarU);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n2  -  EU)/  FastMath.sqrt(VarU,  n1)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n2  -  EU)/  FastMath.sqrt(VarU,  n1)/  FastMath.sqrt(VarU);	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU);    final    double    z    =    (0    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	96	None	replace
298	[BUG]  [BUGGY]  final  double  z  =  (EU  -  64)/  FastMath.sqrt(VarU);  final  double  z  =  (UE  -  64)/  FastMath.sqrt(VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (EU  -  64)/  FastMath.sqrt(VarU);  final  double  z  =  (UE  -  64)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (EU    -    64)/    FastMath.sqrt(VarU);    final  double  z  =  (UE  -  64)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	57	None	add
299	[BUG]  [BUGGY]  final  double  z  =  (EU  -  2.0)/  FastMath.sqrt(VarU);  final  double  z  =  (UE  -  2.0)/  FastMath.sqrt(VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (EU  -  2.0)/  FastMath.sqrt(VarU);  final  double  z  =  (UE  -  2.0)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (EU    -    2.0)/    FastMath.sqrt(VarU);    final  double  z  =  (UE  -  2.0)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	75	None	add
300	[BUG]  [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.metricToString(n2);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.metricToString(n2);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n1  +  n2)/  VarU.metricToString(n2);	  final    double    z    =(n1    +    n2)/    VarU.toString();    	non-compiled	[CE]  double  cannot  be  dereferenced	18	None	replace
301	[BUG]  [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.toString(n2);  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.toString(n2);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n1  +  n2)/  VarU.toString(n2);	  final    double    z    =(n1    +    n2)/    VarU.toString();    	non-compiled	[CE]  double  cannot  be  dereferenced	18	None	replace
302	[BUG]  [BUGGY]  final  double  z  =  (EU  -  1)/  FastMath.sqrt(VarU,  n2);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (EU  -  1)/  FastMath.sqrt(VarU,  n2);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (EU  -  1)/  FastMath.sqrt(VarU,  n2);	  final    double    z    =    (EU    -    1)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	31	None	replace
303	[BUG]  [BUGGY]  final  double  z  =  VarU.doubleValue()  +  1;  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  VarU.doubleValue()  +  1;  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  VarU.doubleValue()  +  1;	  final    double    z    =    VarU.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	66	None	replace
304	[BUG]  [BUGGY]  final  double  z  =  VarU.parseDouble(n2);  [CE]  double  cannot  be  dereferenced  [FE]                      AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  VarU.parseDouble(n2);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  VarU.parseDouble(n2);	  final    double    z    =    VarU.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	66	None	replace
305	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  10.0)/  FastMath.sqrt(EU);  final  double  z  =  (VarU  -  10.0)/  FastMath.sqrt(UE);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  10.0)/  FastMath.sqrt(EU);  final  double  z  =  (VarU  -  10.0)/  FastMath.sqrt(UE);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (VarU    -    10.0)/    FastMath.sqrt(EU);    final  double  z  =  (VarU  -  10.0)/  FastMath.sqrt(UE);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	77	None	add
306	[BUG]  [BUGGY]  final  double  z  =(n2  +  n1)/  VAR;  [CE]  cannot  find  symbol  VAR  [FE]                  AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n2  +  n1)/  VAR;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n2  +  n1)/  VAR;	  final    double    z    =(n1    +    n2)/    VAR;    	non-compiled	[CE]  cannot  find  symbol  VAR	54	None	replace
307	[BUG]  [BUGGY]  final  double  z  =  (n1  -  10.0)/  FastMath.sqrt(VarU);  final  double  n  =  (n1  -  10.0)/  FastMath.sqrt(VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  -  10.0)/  FastMath.sqrt(VarU);  final  double  n  =  (n1  -  10.0)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n1    -    10.0)/    FastMath.sqrt(VarU);    final  double  n  =  (n1  -  10.0)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	89	None	add
308	[BUG]  [BUGGY]  final  double  z  =  (n1  -  10.0)/  FastMath.sqrt(VarU);  final  double  n1  =  (n1  -  10.0)/  FastMath.sqrt(VarU);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  -  10.0)/  FastMath.sqrt(VarU);  final  double  n1  =  (n1  -  10.0)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n1    -    10.0)/    FastMath.sqrt(VarU);    final  double  n1  =  (n1  -  10.0)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	89	None	add
309	[BUG]  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  VarU.DEFAULT);  [CE]  cannot  find  symbol  UE  [FE]                AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  VarU.DEFAULT);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  VarU.DEFAULT);	  final    double    z    =    (UE    -    EU)/    FastMath.sqrt(VarU,    n1);    	non-compiled	[CE]  cannot  find  symbol  UE	27	None	replace
310	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(Umin);  final  double  n  =  (n1  +  n2)/  FastMath.sqrt(Umin);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(Umin);  final  double  n  =  (n1  +  n2)/  FastMath.sqrt(Umin);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n1    +    n2)/    FastMath.sqrt(Umin);    final  double  n  =  (n1  +  n2)/  FastMath.sqrt(Umin);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	98	None	add
311	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  64)/  FastMath.sqrt(EU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (VarU  -  64)/  FastMath.sqrt(EU);	  final    double    z    =    (EU    -    64)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	58	2	replace
312	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  64)/  FastMath.sqrt(EU);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  64)/  FastMath.sqrt(EU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (VarU  -  64)/  FastMath.sqrt(EU);	  final    double    z    =    (EU    -    64)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	58	2	replace
313	[BUG]  [BUGGY]  final  double  z  =  (EU  -  64)/  FastMath.sqrt(VarU,  VarU);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (EU  -  64)/  FastMath.sqrt(VarU,  VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (EU  -  64)/  FastMath.sqrt(VarU,  VarU);	  final    double    z    =    (EU    -    64)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	58	None	replace
314	[BUG]  [BUGGY]  final  VarU  =  VarU.doubleValue()  +  1;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  VarU  =  VarU.doubleValue()  +  1;  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  VarU  =  VarU.doubleValue()  +  1;	  final    VarU    =    VarU.doubleValue();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
315	[BUG]  [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.MAX_VALUE  *  VarU.MAX_VALUE;  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.MAX_VALUE  *  VarU.MAX_VALUE;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n1  +  n2)/  VarU.MAX_VALUE  *  VarU.MAX_VALUE;	  final    double    z    =(n1    +    n2)/    VarU.MAX_VALUE;    	non-compiled	[CE]  double  cannot  be  dereferenced	97	None	replace
316	[BUG]  [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  VarU,  null);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  VarU,  null);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  EU)/  FastMath.sqrt(VarU,  VarU,  null);	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU,    VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	12	None	replace
317	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2)/  VarU.longValue(VarU);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  +  n2)/  VarU.longValue(VarU);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  +  n2)/  VarU.longValue(VarU);	  final    double    z    =    (n1    +    n2)/    VarU.intValue(VarU);    	non-compiled	[CE]  double  cannot  be  dereferenced	63	None	replace
318	[BUG]  [BUGGY]  final  double  z  =(n1  +  n2)/  EU;  final  double  z  =(n1)  +  n2)/  EU;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n1  +  n2)/  EU;  final  double  z  =(n1)  +  n2)/  EU;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =(n1    +    n2)/    EU;    final  double  z  =(n1)  +  n2)/  EU;	  	non-compiled	[CE]  ';'  expected	52	None	add
319	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  n1  +  1);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  n1  +  1);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  n1  +  1);	  final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU    +    1);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	72	None	replace
320	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  n1)/  FastMath.sqrt(VarU);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  n1)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  n1)/  FastMath.sqrt(VarU);	  final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU);    final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	3	None	replace
321	[BUG]  [BUGGY]  final  double  z  =  (VarU  *  EU)/  FastMath.sqrt(VarU,  n2);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  *  EU)/  FastMath.sqrt(VarU,  n2);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (VarU  *  EU)/  FastMath.sqrt(VarU,  n2);	  final    double    z    =    (VarU    *    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	74	None	replace
322	[BUG]  [BUGGY]  final  double  z  =  (VarU  *  EU)/  FastMath.sqrt(VarU,  n1);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  *  EU)/  FastMath.sqrt(VarU,  n1);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (VarU  *  EU)/  FastMath.sqrt(VarU,  n1);	  final    double    z    =    (VarU    *    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	74	None	replace
323	[BUG]  [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.VARBIN_VALUE;  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.VARBIN_VALUE;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n1  +  n2)/  VarU.VARBIN_VALUE;	  final    double    z    =(n1    +    n2)/    VarU.intValue;    	non-compiled	[CE]  double  cannot  be  dereferenced	80	None	replace
324	[BUG]  [BUGGY]  final  double  z  =  (n2  -  10.0)/  FastMath.sqrt(VarU,  n1);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  10.0)/  FastMath.sqrt(VarU,  n1);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  10.0)/  FastMath.sqrt(VarU,  n1);	  final    double    z    =    (EU    -    10.0)/    FastMath.sqrt(VarU,    n1);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	28	None	replace
325	[BUG]  [BUGGY]  final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU,  VarU);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU,  VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU,  VarU);	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU,    VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	12	None	replace
326	[BUG]  [BUGGY]  final  double  z  =  (n2  -  n1)/  FastMath.sqrt(VarU,  VarU);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  n1)/  FastMath.sqrt(VarU,  VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  n1)/  FastMath.sqrt(VarU,  VarU);	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU,    VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	12	None	replace
327	[BUG]  [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.standard();  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.standard();  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n1  +  n2)/  VarU.standard();	  final    double    z    =(n1    +    n2)/    VarU.intValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	17	None	replace
328	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  n2)/  FastMath.sqrt(VarU);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  n2)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  n2)/  FastMath.sqrt(VarU);	  final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU);    Final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	4	None	replace
329	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  n1  *  EU;  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  n1  *  EU;	  final    double    z    =    n1    *    n2;    	compilable	  [FE]  AssertionError  	95	1	replace
330	[BUG]  [BUGGY]  final  double  z  =  n1  *  EU;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  n1  *  EU;  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  n1  *  EU;	  final    double    z    =    n1    *    n2;    	compilable	  [FE]  AssertionError  	95	1	replace
331	[BUG]  [BUGGY]  final  VarU  =  EU.doubleValue();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  VarU  =  EU.doubleValue();  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  VarU  =  EU.doubleValue();	  final    VarU    =    VarU.doubleValue();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
332	[BUG]  [BUGGY]  final  double  z  =  (n2  -  n1)/  FastMath.sqrt(VarU);  final  double  z  =  (n2)  -  n1)/  FastMath.sqrt(VarU);  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  n1)/  FastMath.sqrt(VarU);  final  double  z  =  (n2)  -  n1)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n2    -    n1)/    FastMath.sqrt(VarU);    final  double  z  =  (n2)  -  n1)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  ';'  expected	85	None	add
333	[BUG]  [BUGGY]  final  double  z  =  (n2  -  n1)/  FastMath.sqrt(VarU,  n1);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  n1)/  FastMath.sqrt(VarU,  n1);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  n1)/  FastMath.sqrt(VarU,  n1);	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU,    n1);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	11	None	replace
334	[BUG]  [BUGGY]  final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU,  n1,  n2);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU,  n1,  n2);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU,  n1,  n2);	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU,    n1);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	11	None	replace
335	[BUG]  [BUGGY]  final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU,  n1);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU,  n1);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU,  n1);	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU,    n1);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	11	None	replace
336	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(Umin);  final  double  z  =  (0n1  +  n2)/  FastMath.sqrt(Umin);  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(Umin);  final  double  z  =  (0n1  +  n2)/  FastMath.sqrt(Umin);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n1    +    n2)/    FastMath.sqrt(Umin);    final  double  z  =  (0n1  +  n2)/  FastMath.sqrt(Umin);	  	non-compiled	[CE]  ')'  expected	98	None	add
337	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(Umin);  final  double  z  =  (n0  +  n2)/  FastMath.sqrt(Umin);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(Umin);  final  double  z  =  (n0  +  n2)/  FastMath.sqrt(Umin);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n1    +    n2)/    FastMath.sqrt(Umin);    final  double  z  =  (n0  +  n2)/  FastMath.sqrt(Umin);	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	98	None	add
338	[BUG]  [BUGGY]  final  double  standardNormal  =  new  NormalDistribution(n1,  2);  [CE]  incompatible  types  [FE]                          AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  standardNormal  =  new  NormalDistribution(n1,  2);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  standardNormal  =  new  NormalDistribution(n1,  2);	  final    double    standardNormal    =    new    NormalDistribution(n1,    1);    	non-compiled	[CE]  incompatible  types	46	None	replace
339	[BUG]  [BUGGY]  final  double  z  =  (n2  +  n1)/  2.0;  final  double  z  =  (0n2  +  n1)/  2.0;  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  +  n1)/  2.0;  final  double  z  =  (0n2  +  n1)/  2.0;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n2    +    n1)/    2.0;    final  double  z  =  (0n2  +  n1)/  2.0;	  	non-compiled	[CE]  ')'  expected	13	None	add
340	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n1  +  n2)/  2;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =(n1  +  n2)/  2;	  final    double    z    =(n1    +    n2)/    EU;    	compilable	  [FE]  AssertionError  	53	1	replace
341	[BUG]  [BUGGY]  final  double  z  =(n1  +  n2)/  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n1  +  n2)/  2;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n1  +  n2)/  2;	  final    double    z    =(n1    +    n2)/    EU;    	compilable	  [FE]  AssertionError  	53	1	replace
342	[BUG]  [BUGGY]  final  double  z  =  n1  *  n2;  final  double  z  =  n0  *  n2;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  n1  *  n2;  final  double  z  =  n0  *  n2;  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    n1    *    n2;    final  double  z  =  n0  *  n2;	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	94	None	add
343	[BUG]  [BUGGY]  final  double  n2  =  n0  *  VarU.doubleValue()  +  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  n2  =  n0  *  VarU.doubleValue()  +  1;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  n2  =  n0  *  VarU.doubleValue()  +  1;	  final    double    n2    =    n0    *    VarU.doubleValue();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	82	None	replace
344	[BUG]  [BUGGY]  final  double  n2  =  n1,  VarU.doubleValue()  +  1;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  n2  =  n1,  VarU.doubleValue()  +  1;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  n2  =  n1,  VarU.doubleValue()  +  1;	  final    double    n2    =    n1    *    VarU.doubleValue()    +    1;    	non-compiled	[CE]  ';'  expected	81	None	replace
345	[BUG]  [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  n2);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  n2);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  n2);	  final    double    z    =    (UE    -    EU)/    FastMath.sqrt(VarU,    n1);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	27	None	replace
346	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  VarU)/  FastMath.sqrt(VarU,  VarU);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (VarU  -  VarU)/  FastMath.sqrt(VarU,  VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (VarU  -  VarU)/  FastMath.sqrt(VarU,  VarU);	  final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU,    VarU);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	38	None	replace
347	[BUG]  [BUGGY]  final  double  z  =  (n1  -  n2)/  FastMath.sqrt(VarU,  n1);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  -  n2)/  FastMath.sqrt(VarU,  n1);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  -  n2)/  FastMath.sqrt(VarU,  n1);	  final    double    z    =    (n1    -    EU)/    FastMath.sqrt(VarU,    n1);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	2	None	replace
348	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  -  2)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (n1  -  2)/  FastMath.sqrt(VarU);	  final    double    z    =    (EU    -    2)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	42	2	replace
349	[BUG]  [BUGGY]  final  double  z  =  (n1  -  2)/  FastMath.sqrt(VarU);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  -  2)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  -  2)/  FastMath.sqrt(VarU);	  final    double    z    =    (EU    -    2)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	42	2	replace
350	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  2)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (n2  -  2)/  FastMath.sqrt(VarU);	  final    double    z    =    (EU    -    2)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	42	2	replace
351	[BUG]  [BUGGY]  final  double  z  =  (n2  -  2)/  FastMath.sqrt(VarU);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  2)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  2)/  FastMath.sqrt(VarU);	  final    double    z    =    (EU    -    2)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	42	2	replace
352	[BUG]  [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.DEFAULT_VALUE;  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.DEFAULT_VALUE;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n1  +  n2)/  VarU.DEFAULT_VALUE;	  final    double    z    =(n1    +    n2)/    VarU.MAX_VALUE;    	non-compiled	[CE]  double  cannot  be  dereferenced	97	None	replace
353	[BUG]  [BUGGY]  final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU);  final  double  z  =  (n2)  -  n2)/  FastMath.sqrt(VarU);  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU);  final  double  z  =  (n2)  -  n2)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =    (n2    -    n2)/    FastMath.sqrt(VarU);    final  double  z  =  (n2)  -  n2)/  FastMath.sqrt(VarU);	  	non-compiled	[CE]  ';'  expected	87	None	add
354	[BUG]  [BUGGY]  final  double  z  =  (n2  -  n1)/  FastMath.sqrt(VarU,  n2);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  n1)/  FastMath.sqrt(VarU,  n2);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  n1)/  FastMath.sqrt(VarU,  n2);	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU,    n2);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	79	None	replace
355	[BUG]  [BUGGY]  final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU,  n2);  [CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU,  n2);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  n2)/  FastMath.sqrt(VarU,  n2);	  final    double    z    =    (n2    -    EU)/    FastMath.sqrt(VarU,    n2);    	non-compiled	[CE]  method  sqrt  in  class  FastMath  cannot  be  applied  to  given  types;	79	None	replace
356	[BUG]  [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.multiply(VarU.toString());  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n1  +  n2)/  VarU.multiply(VarU.toString());  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =(n1  +  n2)/  VarU.multiply(VarU.toString());	  final    double    z    =(n1    +    n2)/    VarU.toString();    	non-compiled	[CE]  double  cannot  be  dereferenced	18	None	replace
357	[BUG]  [BUGGY]  final  double  z  =(n2  +  n1)/  VarU;  final  double  z  =(n2  +  n2)/  VarU;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =(n2  +  n1)/  VarU;  final  double  z  =(n2  +  n2)/  VarU;  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final    double    z    =(n2    +    n1)/    VarU;    final  double  z  =(n2  +  n2)/  VarU;	  	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	55	None	add
358	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  *  n2)/  FastMath.sqrt(Umin);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (n1  *  n2)/  FastMath.sqrt(Umin);	  final    double    z    =    (n1    +    n2)/    FastMath.sqrt(Umin);    	compilable	  [FE]  AssertionError  	99	1	replace
359	[BUG]  [BUGGY]  final  double  z  =  (n1  *  n2)/  FastMath.sqrt(Umin);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n1  *  n2)/  FastMath.sqrt(Umin);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n1  *  n2)/  FastMath.sqrt(Umin);	  final    double    z    =    (n1    +    n2)/    FastMath.sqrt(Umin);    	compilable	  [FE]  AssertionError  	99	1	replace
360	[BUG]  [BUGGY]  final  double  z  =  (UE  -  2.0)/  FastMath.sqrt(VarU);  [CE]  cannot  find  symbol  UE  [FE]            AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (UE  -  2.0)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (UE  -  2.0)/  FastMath.sqrt(VarU);	  final    double    z    =    (EU    -    10.0)/    FastMath.sqrt(VarU);    final    double    z    =    (UE    -    10.0)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  cannot  find  symbol  UE	8	None	replace
361	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  *  n1)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (n2  *  n1)/  FastMath.sqrt(VarU);	  final    double    z    =    (n2    -    n1)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	86	2	replace
362	[BUG]  [BUGGY]  final  double  z  =  (n2  *  n1)/  FastMath.sqrt(VarU);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  *  n1)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  *  n1)/  FastMath.sqrt(VarU);	  final    double    z    =    (n2    -    n1)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	86	2	replace
363	[BUG]  [BUGGY]  final  double  n2  =  VarU.parseDouble(n1,  n2);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  n2  =  VarU.parseDouble(n1,  n2);  [BUGGY]      final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  n2  =  VarU.parseDouble(n1,  n2);	  final    double    n2    =    VarU.doubleValue();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	48	None	replace
364	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  1)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	final  double  z  =  (n2  -  1)/  FastMath.sqrt(VarU);	  final    double    z    =    (EU    -    1)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	31	2	replace
365	[BUG]  [BUGGY]  final  double  z  =  (n2  -  1)/  FastMath.sqrt(VarU);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  z  =  (n2  -  1)/  FastMath.sqrt(VarU);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  z  =  (n2  -  1)/  FastMath.sqrt(VarU);	  final    double    z    =    (EU    -    1)/    FastMath.sqrt(VarU);    	compilable	  [FE]  AssertionError  	31	2	replace
366	[BUG]  [BUGGY]  final  double  EU  =  VarU.cumulativeProbability(v);  [CE]  variable  EU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                        AssertionError      [CONTEXT]      final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;      [BUGGY]  final  double  EU  =  VarU.cumulativeProbability(v);  [BUGGY]        final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	final  double  EU  =  VarU.cumulativeProbability(v);	  final    double    EU    =    VarU.cumulativeProbability(n1);    	non-compiled	[CE]  variable  EU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	45	None	replace
