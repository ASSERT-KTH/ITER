bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  int  n2  =  (n1  *  Umin);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n2  =  (n1  *  Umin);  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  (n1  *  Umin);	      final    int    n2    =    (n1    *    n2);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	15	None	replace
2	[BUG]  [BUGGY]  final  int  n2  =  (n1  *  n2)+  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n2  =  (n1  *  n2)+  1;  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  (n1  *  n2)+  1;	      final    int    n2    =    (n1    *    n2);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	15	None	replace
3	[BUG]  [BUGGY]  final  int  n2  =  (n1  *  Umin)/  2;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n2  =  (n1  *  Umin)/  2;  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  (n1  *  Umin)/  2;	      final    int    n2    =    (n1    *    n2);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	15	None	replace
4	[BUG]  [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.MAX_VALUE);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.MAX_VALUE);  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.parseInt(Umin.MAX_VALUE);	      final    int    n1    =    Integer.parseInt(Umin);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	1	None	replace
5	[BUG]  [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.MIN_VALUE);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.MIN_VALUE);  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.parseInt(Umin.MIN_VALUE);	      final    int    n1    =    Integer.parseInt(Umin);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	1	None	replace
6	[BUG]  [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.class);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.class);  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.parseInt(Umin.class);	      final    int    n1    =    Integer.parseInt(Umin);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	1	None	replace
7	[BUG]  [BUGGY]  final  double  n2  =  n1  *  Umin;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  double  n2  =  n1  *  Umin;  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  n1  *  Umin;	      final    double    n2    =    n1    *    n2;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	17	None	replace
8	[BUG]  [BUGGY]  final  int  n2  =  n1  *  Umin.doubleValue();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n2  =  n1  *  Umin.doubleValue();  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  n1  *  Umin.doubleValue();	      final    double    n2    =    n1    *    Umin.doubleValue();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	16	None	replace
9	[BUG]  [BUGGY]  final  double  n2  =  n2  *  Umin.doubleValue();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  double  n2  =  n2  *  Umin.doubleValue();  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  n2  *  Umin.doubleValue();	      final    double    n2    =    n1    *    Umin.doubleValue();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	16	None	replace
10	[BUG]  [BUGGY]  final  double  n2  =  n1,  n2  *  Umin.doubleValue();  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  double  n2  =  n1,  n2  *  Umin.doubleValue();  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  n1,  n2  *  Umin.doubleValue();	      final    double    n2    =    n1    *    Umin.doubleValue();    	non-compiled	[CE]  ';'  expected	16	None	replace
11	[BUG]  [BUGGY]  final  int  n1  =  n1  *  n2  +  1;  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n1  =  n1  *  n2  +  1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  n1  *  n2  +  1;	  final    int    n2prod    =    n1    *    n2    +    1;    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	20	None	replace
12	[BUG]  [BUGGY]  final  int  n2prod  =  n1  +  n2  +  1;  [CE]  cannot  find  symbol  n1n2prod  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n2prod  =  n1  +  n2  +  1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2prod  =  n1  +  n2  +  1;	  final    int    n2prod    =    n1    *    n2    +    1;    	non-compiled	[CE]  cannot  find  symbol  n1n2prod	20	None	replace
13	[BUG]  [BUGGY]  final  double  n2  =  (n1  +  n2)/  Umin.doubleValue();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  double  n2  =  (n1  +  n2)/  Umin.doubleValue();  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  (n1  +  n2)/  Umin.doubleValue();	      final    int    n2    =    (n1    +    n2)/    Umin.doubleValue();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	14	None	replace
14	[BUG]  [BUGGY]  final  int  n2  =  (n1  *  n2)/  Umin.doubleValue();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n2  =  (n1  *  n2)/  Umin.doubleValue();  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  (n1  *  n2)/  Umin.doubleValue();	      final    int    n2    =    (n1    +    n2)/    Umin.doubleValue();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	14	None	replace
15	[BUG]  [BUGGY]  final  double  n2prod  =  n1  *  n2;  [CE]  cannot  find  symbol  n1n2prod  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  double  n2prod  =  n1  *  n2;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2prod  =  n1  *  n2;	  final    int    n2prod    =    n1    *    n2;    	non-compiled	[CE]  cannot  find  symbol  n1n2prod	6	None	replace
16	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  Umin.MAX_VALUE;  [CE]  double  cannot  be  dereferenced  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n2prod  =  n1  *  Umin.MAX_VALUE;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2prod  =  n1  *  Umin.MAX_VALUE;	  final    int    n2prod    =    n1    *    n2;    	non-compiled	[CE]  double  cannot  be  dereferenced	6	None	replace
17	[BUG]  [BUGGY]  final  double  n2  =  (n1  +  n2)/  2.0;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  double  n2  =  (n1  +  n2)/  2.0;  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  (n1  +  n2)/  2.0;	      final    int    n2    =    (n1    +    n2)/    2.0;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	13	None	replace
18	[BUG]  [BUGGY]  final  int  n2  =  (n1  *  n2)/  2.0;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n2  =  (n1  *  n2)/  2.0;  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  (n1  *  n2)/  2.0;	      final    int    n2    =    (n1    +    n2)/    2.0;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	13	None	replace
19	[BUG]  [BUGGY]  final  int  n2  =  Umin.parseDouble(n1,  n2);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n2  =  Umin.parseDouble(n1,  n2);  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  Umin.parseDouble(n1,  n2);	      final    double    n2    =    Umin.parseDouble(n1,    n2);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	11	None	replace
20	[BUG]  [BUGGY]  final  double  n2  =  Umin.parseDouble(n2,  n1);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  double  n2  =  Umin.parseDouble(n2,  n1);  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  Umin.parseDouble(n2,  n1);	      final    double    n2    =    Umin.parseDouble(n1,    n2);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	11	None	replace
21	[BUG]  [BUGGY]  final  double  n2  =  Umin.parseDouble(n2,  n1,  n2);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  double  n2  =  Umin.parseDouble(n2,  n1,  n2);  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  Umin.parseDouble(n2,  n1,  n2);	      final    double    n2    =    Umin.parseDouble(n1,    n2);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	11	None	replace
22	[BUG]  [BUGGY]  final  double  n2prod  =  n1  +  n2;  [CE]  cannot  find  symbol  n1n2prod  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  double  n2prod  =  n1  +  n2;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2prod  =  n1  +  n2;	  final    int    n2prod    =    n1    +    n2;    	non-compiled	[CE]  cannot  find  symbol  n1n2prod	10	None	replace
23	[BUG]  [BUGGY]  final  int  n1  =  n1  +  n2;  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n1  =  n1  +  n2;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  n1  +  n2;	  final    int    n2prod    =    n1    +    n2;    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	10	None	replace
24	[BUG]  [BUGGY]  final  int  n2prod  =  n1  +  n2);  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n2prod  =  n1  +  n2);  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2prod  =  n1  +  n2);	  final    int    n2prod    =    n1    +    n2;    	non-compiled	[CE]  ';'  expected	10	None	replace
25	[BUG]  [BUGGY]  final  double  n2  =  Umin.parseDouble(n2);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  double  n2  =  Umin.parseDouble(n2);  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  Umin.parseDouble(n2);	      final    double    n2    =    Umin.parseDouble(n1);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	12	None	replace
26	[BUG]  [BUGGY]  final  int  n2  =  Umin.parseDouble(n1);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n2  =  Umin.parseDouble(n1);  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  Umin.parseDouble(n1);	      final    double    n2    =    Umin.parseDouble(n1);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	12	None	replace
27	[BUG]  [BUGGY]  final  int  n2  =  n1  *  Umin.getNumber()  +  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n2  =  n1  *  Umin.getNumber()  +  1;  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  n1  *  Umin.getNumber()  +  1;	      final    int    n2    =    n1    *    Umin.getNumber();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	19	None	replace
28	[BUG]  [BUGGY]  final  int  n2  =  n1  *  Umin.getNumber()  -  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n2  =  n1  *  Umin.getNumber()  -  1;  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  n1  *  Umin.getNumber()  -  1;	      final    int    n2    =    n1    *    Umin.getNumber();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	19	None	replace
29	[BUG]  [BUGGY]  final  int  n2  =  n1  *  Umin.getLength();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n2  =  n1  *  Umin.getLength();  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  n1  *  Umin.getLength();	      final    int    n2    =    n1    *    Umin.getNumber();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	19	None	replace
30	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  double  n1n2prod  =  n1  *  n2  +  1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	add	final  double  n1n2prod  =  n1  *  n2  +  1;	  final    int    n1n2prod    =    n1    *    n2    +    1;    	compilable	  [FE]  AssertionError  	8	1	replace
31	[BUG]  [BUGGY]  final  double  n1n2prod  =  n1  *  n2  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  double  n1n2prod  =  n1  *  n2  +  1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n1n2prod  =  n1  *  n2  +  1;	  final    int    n1n2prod    =    n1    *    n2    +    1;    	compilable	  [FE]  AssertionError  	8	1	replace
32	[BUG]  [BUGGY]  final  int  n1  =  Integer.toHexString(n2);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n1  =  Integer.toHexString(n2);  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.toHexString(n2);	      final    int    n1    =    Integer.toHexString(n1);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	4	None	replace
33	[BUG]  [BUGGY]  final  int  n1  =  Integer.toHexString(umin);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n1  =  Integer.toHexString(umin);  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.toHexString(umin);	      final    int    n1    =    Integer.toHexString(n1);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	4	None	replace
34	[BUG]  [BUGGY]  final  int  n2  =  Integer.toHexString(n1);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n2  =  Integer.toHexString(n1);  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  Integer.toHexString(n1);	      final    int    n1    =    Integer.toHexString(n1);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	4	None	replace
35	[BUG]  [BUGGY]  final  double  n2prod  =  n1  *  Umin;  [CE]  cannot  find  symbol  n1n2prod  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  double  n2prod  =  n1  *  Umin;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2prod  =  n1  *  Umin;	  final    int    n2prod    =    n1    *    Umin;    	non-compiled	[CE]  cannot  find  symbol  n1n2prod	9	None	replace
36	[BUG]  [BUGGY]  final  long  n2prod  =  n1  *  Umin;  [CE]  possible  loss  of  precision  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  long  n2prod  =  n1  *  Umin;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  long  n2prod  =  n1  *  Umin;	  final    int    n2prod    =    n1    *    Umin;    	non-compiled	[CE]  possible  loss  of  precision	9	None	replace
37	[BUG]  [BUGGY]  final  double  n1prod  =  n1  *  Umin;  [CE]  cannot  find  symbol  n1n2prod  [FE]            AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  double  n1prod  =  n1  *  Umin;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n1prod  =  n1  *  Umin;	  final    int    n2prod    =    n1    *    Umin;    	non-compiled	[CE]  cannot  find  symbol  n1n2prod	9	None	replace
38	[BUG]  [BUGGY]  final  int  n2  =  getNumber()  -  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n2  =  getNumber()  -  1;  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  getNumber()  -  1;	      final    int    n2    =    getNumber();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	5	None	replace
39	[BUG]  [BUGGY]  final  int  n2  =  getNumber()  +  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n2  =  getNumber()  +  1;  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  getNumber()  +  1;	      final    int    n2    =    getNumber();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	5	None	replace
40	[BUG]  [BUGGY]  final  double  n2  =  getNumber();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  double  n2  =  getNumber();  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  getNumber();	      final    int    n2    =    getNumber();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	5	None	replace
41	[BUG]  [BUGGY]  final  int  n2  =  n1  *  Umin;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n2  =  n1  *  Umin;  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  n1  *  Umin;	      final    int    n2    =    n1    *    n2;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	18	None	replace
42	[BUG]  [BUGGY]  final  int  n2  =  n1  *  Umin.MAX_VALUE;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n2  =  n1  *  Umin.MAX_VALUE;  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  n1  *  Umin.MAX_VALUE;	      final    int    n2    =    n1    *    n2;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	18	None	replace
43	[BUG]  [BUGGY]  final  int  n2  =  n1  +  n2;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n2  =  n1  +  n2;  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  n1  +  n2;	      final    int    n2    =    n1    *    n2;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	18	None	replace
44	[BUG]  [BUGGY]  final  int  n1n2prod  =  n1  *  n2  +  1;  final  int  n1n2prod  =  n1  *  n2  +  1;  [CE]  variable  n1n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n1n2prod  =  n1  *  n2  +  1;  final  int  n1n2prod  =  n1  *  n2  +  1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final    int    n1n2prod    =    n1    *    n2    +    1;    final  int  n1n2prod  =  n1  *  n2  +  1;	  	non-compiled	[CE]  variable  n1n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	7	None	add
45	[BUG]  [BUGGY]  final  int  n1n2prod  =  n1  *  n2  +  1;  final  int  n1n2prod  =  n1  *  n2)  +  1;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n1n2prod  =  n1  *  n2  +  1;  final  int  n1n2prod  =  n1  *  n2)  +  1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final    int    n1n2prod    =    n1    *    n2    +    1;    final  int  n1n2prod  =  n1  *  n2)  +  1;	  	non-compiled	[CE]  ';'  expected	7	None	add
46	[BUG]  [BUGGY]  final  int  n1n2prod  =  n1  *  n2  +  1;  final  int  n1n2prod  =  n1  *  n2.  +  1;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n1n2prod  =  n1  *  n2  +  1;  final  int  n1n2prod  =  n1  *  n2.  +  1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final    int    n1n2prod    =    n1    *    n2    +    1;    final  int  n1n2prod  =  n1  *  n2.  +  1;	  	non-compiled	[CE]  <identifier>  expected	7	None	add
47	[BUG]  [BUGGY]  final  int  n1n2prod  =  n1  *  n2  +  1;  final  int  n2prod  =  n1  *  n2  +  1;  [CE]  variable  n1n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n1n2prod  =  n1  *  n2  +  1;  final  int  n2prod  =  n1  *  n2  +  1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final    int    n1n2prod    =    n1    *    n2    +    1;    final  int  n2prod  =  n1  *  n2  +  1;	  	non-compiled	[CE]  variable  n1n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	7	None	add
48	[BUG]  [BUGGY]  final  int  n1  =  Integer.parseInt(umin,  n2);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n1  =  Integer.parseInt(umin,  n2);  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.parseInt(umin,  n2);	      final    int    n1    =    Integer.parseInt(umin);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	2	None	replace
49	[BUG]  [BUGGY]  final  int  n2  =  Integer.parseInt(umin);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n2  =  Integer.parseInt(umin);  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  Integer.parseInt(umin);	      final    int    n1    =    Integer.parseInt(umin);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	2	None	replace
50	[BUG]  [BUGGY]  final  int  n1  =  Integer.parseInt(Number.MAX_VALUE);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n1  =  Integer.parseInt(Number.MAX_VALUE);  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.parseInt(Number.MAX_VALUE);	      final    int    n1    =    Integer.parseInt(int);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	3	None	replace
51	[BUG]  [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.doubleValue());  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.doubleValue());  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.parseInt(Umin.doubleValue());	      final    int    n1    =    Integer.parseInt(int);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	3	None	replace
52	[BUG]  [BUGGY]  final  double  n2  =  n0  *  Umin.doubleValue();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  double  n2  =  n0  *  Umin.doubleValue();  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  n0  *  Umin.doubleValue();	      final    double    n2    =    n1    *    Umin.doubleValue();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	16	None	replace
53	[BUG]  [BUGGY]  final  double  n2  =  n1  *  Umin.doubleValue()  +  n2.doubleValue();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  double  n2  =  n1  *  Umin.doubleValue()  +  n2.doubleValue();  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  n1  *  Umin.doubleValue()  +  n2.doubleValue();	      final    double    n2    =    n1    *    Umin.doubleValue();    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	16	None	replace
54	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  Umin  +  1;  [CE]  possible  loss  of  precision  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n2prod  =  n1  *  Umin  +  1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2prod  =  n1  *  Umin  +  1;	  final    int    n2prod    =    n1    *    n2    +    1;    	non-compiled	[CE]  possible  loss  of  precision	20	None	replace
55	[BUG]  [BUGGY]  final  double  n2prod  =  n1  *  n2  +  1;  [CE]  cannot  find  symbol  n1n2prod  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  double  n2prod  =  n1  *  n2  +  1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2prod  =  n1  *  n2  +  1;	  final    int    n2prod    =    n1    *    n2    +    1;    	non-compiled	[CE]  cannot  find  symbol  n1n2prod	20	None	replace
56	[BUG]  [BUGGY]  final  double  n2  =  Umin.parseDouble(n1)+  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  double  n2  =  Umin.parseDouble(n1)+  1;  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  Umin.parseDouble(n1)+  1;	      final    double    n2    =    Umin.parseDouble(n1);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	12	None	replace
57	[BUG]  [BUGGY]  final  int  n2  =  (n1  *  n2)-  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n2  =  (n1  *  n2)-  1;  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  (n1  *  n2)-  1;	      final    int    n2    =    (n1    *    n2);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	15	None	replace
58	[BUG]  [BUGGY]  final  int  n2  =  Integer.parseInt(Umin);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n2  =  Integer.parseInt(Umin);  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  Integer.parseInt(Umin);	      final    int    n1    =    Integer.parseInt(Umin);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	1	None	replace
59	[BUG]  [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.intValue());  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.intValue());  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.parseInt(Umin.intValue());	      final    int    n1    =    Integer.parseInt(Umin);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	1	None	replace
60	[BUG]  [BUGGY]  final  int  n2  =  n1  *  Token.NUMBER;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n2  =  n1  *  Token.NUMBER;  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  n1  *  Token.NUMBER;	      final    int    n2    =    n1    *    n2;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	18	None	replace
61	[BUG]  [BUGGY]  final  double  n2  =  n1  +  n2;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  double  n2  =  n1  +  n2;  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  n1  +  n2;	      final    double    n2    =    n1    *    n2;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	17	None	replace
62	[BUG]  [BUGGY]  final  int  n2prod  =  n1  +  Umin.MAX_VALUE;  [CE]  double  cannot  be  dereferenced  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n2prod  =  n1  +  Umin.MAX_VALUE;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2prod  =  n1  +  Umin.MAX_VALUE;	  final    int    n2prod    =    n1    +    n2;    	non-compiled	[CE]  double  cannot  be  dereferenced	10	None	replace
63	[BUG]  [BUGGY]  final  int  n1  =  Integer.toHexString(Umin);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n1  =  Integer.toHexString(Umin);  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.toHexString(Umin);	      final    int    n1    =    Integer.toHexString(n1);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	4	None	replace
64	[BUG]  [BUGGY]  final  int  n1  =  Integer.toHexString(User,  n1);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n1  =  Integer.toHexString(User,  n1);  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.toHexString(User,  n1);	      final    int    n1    =    Integer.toHexString(n1);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	4	None	replace
65	[BUG]  [BUGGY]  final  float  n2prod  =  n1  *  Umin;  [CE]  possible  loss  of  precision  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  float  n2prod  =  n1  *  Umin;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  float  n2prod  =  n1  *  Umin;	  final    int    n2prod    =    n1    *    Umin;    	non-compiled	[CE]  possible  loss  of  precision	9	None	replace
66	[BUG]  [BUGGY]  final  int  n1  =  Integer.parseInt(sumin);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n1  =  Integer.parseInt(sumin);  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.parseInt(sumin);	      final    int    n1    =    Integer.parseInt(int);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	3	None	replace
67	[BUG]  [BUGGY]  final  int  n1  =  Integer.parseInt(number);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n1  =  Integer.parseInt(number);  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.parseInt(number);	      final    int    n1    =    Integer.parseInt(int);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	3	None	replace
68	[BUG]  [BUGGY]  final  int  n1  =  Integer.parseInt(n2);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n1  =  Integer.parseInt(n2);  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.parseInt(n2);	      final    int    n1    =    Integer.parseInt(umin);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	2	None	replace
69	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n1n2prod  =  n1  +  n2  +  1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	add	final  int  n1n2prod  =  n1  +  n2  +  1;	  final    int    n1n2prod    =    n1    *    n2    +    1;    	compilable	  [FE]  AssertionError  	8	1	replace
70	[BUG]  [BUGGY]  final  int  n1n2prod  =  n1  +  n2  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n1n2prod  =  n1  +  n2  +  1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1n2prod  =  n1  +  n2  +  1;	  final    int    n1n2prod    =    n1    *    n2    +    1;    	compilable	  [FE]  AssertionError  	8	1	replace
71	[BUG]  [BUGGY]  final  int  n2prod  =  n1  +  n2.prod;  [CE]  int  cannot  be  dereferenced  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n2prod  =  n1  +  n2.prod;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2prod  =  n1  +  n2.prod;	  final    int    n2prod    =    n1    +    n2;    	non-compiled	[CE]  int  cannot  be  dereferenced	10	None	replace
72	[BUG]  [BUGGY]  final  int  n1  =  Integer.parseInt(n1);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n1  =  Integer.parseInt(n1);  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.parseInt(n1);	      final    int    n1    =    Integer.parseInt(int);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	3	None	replace
73	[BUG]  [BUGGY]  final  double  n1  =  Integer.parseInt(int);  [CE]  '.class'  expected  [FE]              AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  double  n1  =  Integer.parseInt(int);  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n1  =  Integer.parseInt(int);	      final    int    n1    =    Integer.parseInt(int);    	non-compiled	[CE]  '.class'  expected	3	None	replace
74	[BUG]  [BUGGY]  final  int  n2prod  =  n1.length  *  n2  +  1;  [CE]  int  cannot  be  dereferenced  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n2prod  =  n1.length  *  n2  +  1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2prod  =  n1.length  *  n2  +  1;	  final    int    n2prod    =    n1    *    n2    +    1;    	non-compiled	[CE]  int  cannot  be  dereferenced	20	None	replace
75	[BUG]  [BUGGY]  final  double  n1  =  Integer.toHexString(n1);  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  double  n1  =  Integer.toHexString(n1);  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n1  =  Integer.toHexString(n1);	      final    int    n1    =    Integer.toHexString(n1);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	4	None	replace
76	[BUG]  [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.toString());  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n1  =  Integer.parseInt(Umin.toString());  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n1  =  Integer.parseInt(Umin.toString());	      final    int    n1    =    Integer.parseInt(Umin);    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	1	None	replace
77	[BUG]  [BUGGY]  final  int  n2  =  n1  *  n2  +  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  int  n2  =  n1  *  n2  +  1;  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  int  n2  =  n1  *  n2  +  1;	      final    int    n2    =    n1    *    n2;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	18	None	replace
78	[BUG]  [BUGGY]  final  double  n2  =  n1  *  n2  +  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  double  n2  =  n1  *  n2  +  1;  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  n1  *  n2  +  1;	      final    double    n2    =    n1    *    n2;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	17	None	replace
79	[BUG]  [BUGGY]  final  double  n2  =  Umin.parseDouble(n1,  n1);  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {    [BUGGY]  final  double  n2  =  Umin.parseDouble(n1,  n1);  [BUGGY]    final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	final  double  n2  =  Umin.parseDouble(n1,  n1);	      final    double    n2    =    Umin.parseDouble(n1,    n2);    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	11	None	replace
