bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double  EU  =  n2prod  /  2.0  +  n2;  [CE]  cannot  find  symbol  n2prod  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n2prod  /  2.0  +  n2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  EU  =  n2prod  /  2.0  +  n2;	  final    double    EU    =    n1n2prod    /    2.0    +    n2;    final    double    EU    =    n2prod    /    2.0    +    n2;    	non-compiled	[CE]  cannot  find  symbol  n2prod	38	None	replace
2	[BUG]  [BUGGY]  final  double  n2  =  n1  +  n2prod  +  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                      AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n2  =  n1  +  n2prod  +  1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2  =  n1  +  n2prod  +  1;	  final    double    n2    =    n1    +    n2    +    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	12	None	replace
3	[BUG]  [BUGGY]  final  double  n2  =  n1  +  n2Prod  +  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n2  =  n1  +  n2Prod  +  1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2  =  n1  +  n2Prod  +  1;	  final    double    n2    =    n1    +    n2    +    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	12	None	replace
4	[BUG]  [BUGGY]  final  int  n2  =  n1  +  n2  +  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  int  n2  =  n1  +  n2  +  1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  int  n2  =  n1  +  n2  +  1;	  final    double    n2    =    n1    +    n2    +    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	12	None	replace
5	[BUG]  [BUGGY]  final  static  double  EU  =  n2prod  /  2.0;  [CE]  modifier  static  not  allowed  here  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  static  double  EU  =  n2prod  /  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  static  double  EU  =  n2prod  /  2.0;	  final    static    double    EU    =    n1n2prod    /    2.0;    	non-compiled	[CE]  modifier  static  not  allowed  here	9	None	replace
6	[BUG]  [BUGGY]  final  static  int  EU  =  n1n2prod  /  2.0;  [CE]  modifier  static  not  allowed  here  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  static  int  EU  =  n1n2prod  /  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  static  int  EU  =  n1n2prod  /  2.0;	  final    static    double    EU    =    n1n2prod    /    2.0;    	non-compiled	[CE]  modifier  static  not  allowed  here	9	None	replace
7	[BUG]  [BUGGY]  final  static  double  EU  =  n1n2prod  *  2.0;  [CE]  modifier  static  not  allowed  here  [FE]                    AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  static  double  EU  =  n1n2prod  *  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  static  double  EU  =  n1n2prod  *  2.0;	  final    static    double    EU    =    n1n2prod    /    2.0;    	non-compiled	[CE]  modifier  static  not  allowed  here	9	None	replace
8	[BUG]  [BUGGY]          final    double    n2prod    =    n1    +    n2;    final  double  n1prod  =  n1  +  n2;  final  double  n2prod  =  n1  +  n2;  final  double  n1prod  =  n1  +  n2;  [CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]          final    double    n2prod    =    n1    +    n2;    final  double  n1prod  =  n1  +  n2;  final  double  n2prod  =  n1  +  n2;  final  double  n1prod  =  n1  +  n2;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	                final        double        n2prod        =        n1        +        n2;        final    double    n1prod    =    n1    +    n2;    final  double  n2prod  =  n1  +  n2;  final  double  n1prod  =  n1  +  n2;	  	non-compiled	[CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	55	None	add
9	[BUG]  [BUGGY]          final    double    n2prod    =    n1    +    n2;    final  double  n1prod  =  n1  +  n2;  final  double  n2prod  =  n1  +  n2;  final  double  n2prod  =  n1  +  n2;  [CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]      AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]          final    double    n2prod    =    n1    +    n2;    final  double  n1prod  =  n1  +  n2;  final  double  n2prod  =  n1  +  n2;  final  double  n2prod  =  n1  +  n2;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	                final        double        n2prod        =        n1        +        n2;        final    double    n1prod    =    n1    +    n2;    final  double  n2prod  =  n1  +  n2;  final  double  n2prod  =  n1  +  n2;	  	non-compiled	[CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	55	None	add
10	[BUG]  [BUGGY]          final    double    n2prod    =    n1    +    n2;    final  double  n1prod  =  n1  +  n2;  final  double  n2prod  =  n1  +  n2;  final  double  n3prod  =  n1  +  n2;  [CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]          final    double    n2prod    =    n1    +    n2;    final  double  n1prod  =  n1  +  n2;  final  double  n2prod  =  n1  +  n2;  final  double  n3prod  =  n1  +  n2;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	                final        double        n2prod        =        n1        +        n2;        final    double    n1prod    =    n1    +    n2;    final  double  n2prod  =  n1  +  n2;  final  double  n3prod  =  n1  +  n2;	  	non-compiled	[CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	55	None	add
11	[BUG]  [BUGGY]          final    double    n2prod    =    n1    +    n2;    final  double  n1prod  =  n1  +  n2;  final  double  n2prod  =  n1  +  n2;  final  double  n0prod  =  n1  +  n2;  [CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]          final    double    n2prod    =    n1    +    n2;    final  double  n1prod  =  n1  +  n2;  final  double  n2prod  =  n1  +  n2;  final  double  n0prod  =  n1  +  n2;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	                final        double        n2prod        =        n1        +        n2;        final    double    n1prod    =    n1    +    n2;    final  double  n2prod  =  n1  +  n2;  final  double  n0prod  =  n1  +  n2;	  	non-compiled	[CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	55	None	add
12	[BUG]  [BUGGY]          final    double    n2prod    =    n1    +    n2;    final  double  n1prod  =  n1  +  n2;  final  double  n2prod  =  n1  +  n2;  final  double  nlprod  =  n1  +  n2;  [CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]          final    double    n2prod    =    n1    +    n2;    final  double  n1prod  =  n1  +  n2;  final  double  n2prod  =  n1  +  n2;  final  double  nlprod  =  n1  +  n2;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	                final        double        n2prod        =        n1        +        n2;        final    double    n1prod    =    n1    +    n2;    final  double  n2prod  =  n1  +  n2;  final  double  nlprod  =  n1  +  n2;	  	non-compiled	[CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	55	None	add
13	[BUG]  [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  +  n2.;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  +  n2.;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  EU  =  n1n2prod  /  2.0  +  n2.;	  final    double    EU    =    n1n2prod    /    2.0    +    n2;    final    double    EU    =    n1n2prod    /    2.0    +    n2.;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
14	[BUG]  [BUGGY]  final  double  EU  =  n2prod  /  2.0  +  n2.;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n2prod  /  2.0  +  n2.;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  EU  =  n2prod  /  2.0  +  n2.;	  final    double    EU    =    n1n2prod    /    2.0    +    n2;    final    double    EU    =    n1n2prod    /    2.0    +    n2.;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
15	[BUG]  [BUGGY]  final  int  EU  =  n1n2prod  *  2.0;  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  int  EU  =  n1n2prod  *  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  int  EU  =  n1n2prod  *  2.0;	  final    double    EU    =    n1n2prod    *    2.0;    Final    double    EU    =    n1n2prod    *    2.0;    	non-compiled	[CE]  possible  loss  of  precision	45	None	replace
16	[BUG]  [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  +  n2,  n1;  [CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  +  n2,  n1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  EU  =  n1n2prod  /  2.0  +  n2,  n1;	  final    double    EU    =    n1n2prod    /    2.0    +    n2;    final    double    EU    =    n1n2prod    /    2.0    +    n2,    n1;    	non-compiled	[CE]  variable  n1  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	52	None	replace
17	[BUG]  [BUGGY]  final  double  EU  =  n2prod  /  2.0  +  n2,  n1;  [CE]  cannot  find  symbol  n2prod  [FE]          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n2prod  /  2.0  +  n2,  n1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  EU  =  n2prod  /  2.0  +  n2,  n1;	  final    double    EU    =    n1n2prod    /    2.0    +    n2;    final    double    EU    =    n1n2prod    /    2.0    +    n2,    n1;    	non-compiled	[CE]  cannot  find  symbol  n2prod	52	None	replace
18	[BUG]  [BUGGY]  final  double  EU  =  n2prod  /  2.0  +  n1,  n1;  [CE]  cannot  find  symbol  n2prod  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n2prod  /  2.0  +  n1,  n1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  EU  =  n2prod  /  2.0  +  n1,  n1;	  final    double    EU    =    n1n2prod    /    2.0    +    n2;    final    double    EU    =    n1n2prod    /    2.0    +    n2,    n1;    	non-compiled	[CE]  cannot  find  symbol  n2prod	52	None	replace
19	[BUG]  [BUGGY]  final  int  n2  =  n1  *  Umin  +  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  int  n2  =  n1  *  Umin  +  1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  int  n2  =  n1  *  Umin  +  1;	  final    double    n2    =    n1    *    Umin    +    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	62	None	replace
20	[BUG]  [BUGGY]  final  double  n2  =  n1  *  Umin  +  2;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n2  =  n1  *  Umin  +  2;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2  =  n1  *  Umin  +  2;	  final    double    n2    =    n1    *    Umin    +    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	62	None	replace
21	[BUG]  [BUGGY]  final  double  n1prod  =  n1  *  n2;  [CE]  cannot  find  symbol  EU  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n1prod  =  n1  *  n2;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n1prod  =  n1  *  n2;	          final    double    n2prod    =    n1    *    n2;    final    double    n1prod    =    n1    *    n2;    	non-compiled	[CE]  cannot  find  symbol  EU	58	None	replace
22	[BUG]  [BUGGY]  final  int  n2prod  =  n2  *  n1  +  1;  [CE]  cannot  find  symbol  EU  [FE]          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  int  n2prod  =  n2  *  n1  +  1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  int  n2prod  =  n2  *  n1  +  1;	  final    double    n2prod    =    n2    *    n1    +    1;    	non-compiled	[CE]  cannot  find  symbol  EU	23	None	replace
23	[BUG]  [BUGGY]  final  double  n2prod  =  n2  *  n2  +  1;  [CE]  cannot  find  symbol  EU  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n2prod  =  n2  *  n2  +  1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2prod  =  n2  *  n2  +  1;	  final    double    n2prod    =    n2    *    n1    +    1;    	non-compiled	[CE]  cannot  find  symbol  EU	23	None	replace
24	[BUG]  [BUGGY]          final    double    n2prod    =    n1    *    n2;    final  double  n1prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;  final  double  n1prod  =  n1  *  n2;  [CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]          final    double    n2prod    =    n1    *    n2;    final  double  n1prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;  final  double  n1prod  =  n1  *  n2;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	                final        double        n2prod        =        n1        *        n2;        final    double    n1prod    =    n1    *    n2;    final  double  n2prod  =  n1  *  n2;  final  double  n1prod  =  n1  *  n2;	  	non-compiled	[CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	57	None	add
25	[BUG]  [BUGGY]          final    double    n2prod    =    n1    *    n2;    final  double  n1prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;  [CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]      AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]          final    double    n2prod    =    n1    *    n2;    final  double  n1prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	                final        double        n2prod        =        n1        *        n2;        final    double    n1prod    =    n1    *    n2;    final  double  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;	  	non-compiled	[CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	57	None	add
26	[BUG]  [BUGGY]          final    double    n2prod    =    n1    *    n2;    final  double  n1prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;  final  double  n3prod  =  n1  *  n2;  [CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]          final    double    n2prod    =    n1    *    n2;    final  double  n1prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;  final  double  n3prod  =  n1  *  n2;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	                final        double        n2prod        =        n1        *        n2;        final    double    n1prod    =    n1    *    n2;    final  double  n2prod  =  n1  *  n2;  final  double  n3prod  =  n1  *  n2;	  	non-compiled	[CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	57	None	add
27	[BUG]  [BUGGY]          final    double    n2prod    =    n1    *    n2;    final  double  n1prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;  final  double  n0prod  =  n1  *  n2;  [CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]          final    double    n2prod    =    n1    *    n2;    final  double  n1prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;  final  double  n0prod  =  n1  *  n2;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	                final        double        n2prod        =        n1        *        n2;        final    double    n1prod    =    n1    *    n2;    final  double  n2prod  =  n1  *  n2;  final  double  n0prod  =  n1  *  n2;	  	non-compiled	[CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	57	None	add
28	[BUG]  [BUGGY]          final    double    n2prod    =    n1    *    n2;    final  double  n1prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;  final  double  nlprod  =  n1  *  n2;  [CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]          final    double    n2prod    =    n1    *    n2;    final  double  n1prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;  final  double  nlprod  =  n1  *  n2;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	                final        double        n2prod        =        n1        *        n2;        final    double    n1prod    =    n1    *    n2;    final  double  n2prod  =  n1  *  n2;  final  double  nlprod  =  n1  *  n2;	  	non-compiled	[CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	57	None	add
29	[BUG]  [BUGGY]  final  double  n2prod  =  n1)+  n2;  [CE]  ';'  expected  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n2prod  =  n1)+  n2;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2prod  =  n1)+  n2;	          final    double    n2prod    =    n1    +    n2;    final    double    n2prod    =    n1)    +    n2;    	non-compiled	[CE]  ';'  expected	68	None	replace
30	[BUG]  [BUGGY]  final  double  n2prod  =  n1  *  n2.  +  1;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n2prod  =  n1  *  n2.  +  1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2prod  =  n1  *  n2.  +  1;	          final    double    n2prod    =    n1    *    n2    +    1;    final    double    n2prod    =    n1    *    n2.    +    1;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
31	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  n2.  +  1;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  int  n2prod  =  n1  *  n2.  +  1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  int  n2prod  =  n1  *  n2.  +  1;	          final    double    n2prod    =    n1    *    n2    +    1;    final    double    n2prod    =    n1    *    n2.    +    1;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
32	[BUG]  [BUGGY]  final  int  n1n2prod  =  n1  *  n2  +  1;  [CE]  variable  n1n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  int  n1n2prod  =  n1  *  n2  +  1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  int  n1n2prod  =  n1  *  n2  +  1;	          final    double    n2prod    =    n1    *    n2    +    1;    final    double    n2prod    =    n1    *    n2.    +    1;    	non-compiled	[CE]  variable  n1n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	29	None	replace
33	[BUG]  [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  *  n2;  final  double  EU  =  n1n2prod  /  2.0  *  n2;  [CE]  variable  EU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  *  n2;  final  double  EU  =  n1n2prod  /  2.0  *  n2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final    double    EU    =    n1n2prod    /    2.0    *    n2;    final  double  EU  =  n1n2prod  /  2.0  *  n2;	  	non-compiled	[CE]  variable  EU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	4	None	add
34	[BUG]  [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  *  n2;  final  double  EU  =  n1n2prod  /  2.0  *  n2);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  *  n2;  final  double  EU  =  n1n2prod  /  2.0  *  n2);  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final    double    EU    =    n1n2prod    /    2.0    *    n2;    final  double  EU  =  n1n2prod  /  2.0  *  n2);	  	non-compiled	[CE]  ';'  expected	4	None	add
35	[BUG]  [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  *  n2;  Final  double  EU  =  n1n2prod  /  2.0  *  n2;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  *  n2;  Final  double  EU  =  n1n2prod  /  2.0  *  n2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final    double    EU    =    n1n2prod    /    2.0    *    n2;    Final  double  EU  =  n1n2prod  /  2.0  *  n2;	  	non-compiled	[CE]  not  a  statement	4	None	add
36	[BUG]  [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  *  n2;  final  double  EU  =  n2prod  /  2.0  *  n2;  [CE]  variable  EU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  *  n2;  final  double  EU  =  n2prod  /  2.0  *  n2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final    double    EU    =    n1n2prod    /    2.0    *    n2;    final  double  EU  =  n2prod  /  2.0  *  n2;	  	non-compiled	[CE]  variable  EU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	4	None	add
37	[BUG]  [BUGGY]  final  int  n2prod  =  n1  +  n2  +  1;  [CE]  cannot  find  symbol  EU  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  int  n2prod  =  n1  +  n2  +  1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  int  n2prod  =  n1  +  n2  +  1;	  final    int    n2prod    =    n1    *    n2    +    1;    	non-compiled	[CE]  cannot  find  symbol  EU	22	None	replace
38	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  n2  +  2;  [CE]  cannot  find  symbol  EU  [FE]          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  int  n2prod  =  n1  *  n2  +  2;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  int  n2prod  =  n1  *  n2  +  2;	  final    int    n2prod    =    n1    *    n2    +    1;    	non-compiled	[CE]  cannot  find  symbol  EU	22	None	replace
39	[BUG]  [BUGGY]  final  int  n2prod  =  n1  /  n2;  [CE]  cannot  find  symbol  EU  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  int  n2prod  =  n1  /  n2;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  int  n2prod  =  n1  /  n2;	  final    double    n2prod    =    n1    /    n2;    	non-compiled	[CE]  cannot  find  symbol  EU	69	None	replace
40	[BUG]  [BUGGY]  final  double  n2prod  =  n2  /  n1;  [CE]  cannot  find  symbol  EU  [FE]          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n2prod  =  n2  /  n1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2prod  =  n2  /  n1;	  final    double    n2prod    =    n1    /    n2;    	non-compiled	[CE]  cannot  find  symbol  EU	69	None	replace
41	[BUG]  [BUGGY]  final  int  n2prod  =  n2  +  n1;  [CE]  cannot  find  symbol  EU  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  int  n2prod  =  n2  +  n1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  int  n2prod  =  n2  +  n1;	  final    double    n2prod    =    n2    +    n1;    	non-compiled	[CE]  cannot  find  symbol  EU	2	None	replace
42	[BUG]  [BUGGY]  final  double  n1prod  =  n1  +  n2;  [CE]  cannot  find  symbol  EU  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n1prod  =  n1  +  n2;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n1prod  =  n1  +  n2;	          final    double    n2prod    =    n1    +    n2;    final    double    n1prod    =    n1    +    n2;    	non-compiled	[CE]  cannot  find  symbol  EU	56	None	replace
43	[BUG]  [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  +  n2);  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  +  n2);  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  EU  =  n1n2prod  /  2.0  +  n2);	  final    double    EU    =    n1n2prod    /    2.0    +    n2;    final    double    EU    =    n1n2prod    /    2.0    +    n2);    	non-compiled	[CE]  ';'  expected	36	None	replace
44	[BUG]  [BUGGY]  final  double  EU  =  n2prod  /  2.0  *  n1;  [CE]  cannot  find  symbol  n2prod  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n2prod  /  2.0  *  n1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  EU  =  n2prod  /  2.0  *  n1;	  final    double    EU    =    n1n2prod    /    2.0    *    n2;    	non-compiled	[CE]  cannot  find  symbol  n2prod	5	None	replace
45	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  *  Umin;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	add	final  double  EU  =  n1n2prod  /  2.0  *  Umin;	  final    double    EU    =    n1n2prod    /    2.0    *    n2;    	compilable	  [FE]  AssertionError  	5	2	replace
46	[BUG]  [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  *  Umin;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  *  Umin;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  EU  =  n1n2prod  /  2.0  *  Umin;	  final    double    EU    =    n1n2prod    /    2.0    *    n2;    	compilable	  [FE]  AssertionError  	5	2	replace
47	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  +  n1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	add	final  double  EU  =  n1n2prod  /  2.0  +  n1;	  final    double    EU    =    n2prod    /    2.0    +    n1;    	compilable	  [FE]  AssertionError  	6	2	replace
48	[BUG]  [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  +  n1;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  +  n1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  EU  =  n1n2prod  /  2.0  +  n1;	  final    double    EU    =    n2prod    /    2.0    +    n1;    	compilable	  [FE]  AssertionError  	6	2	replace
49	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n1  /  2.0  +  n1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	add	final  double  EU  =  n1  /  2.0  +  n1;	  final    double    EU    =    n2prod    /    2.0    +    n1;    	compilable	  [FE]  AssertionError  	6	2	replace
50	[BUG]  [BUGGY]  final  double  EU  =  n1  /  2.0  +  n1;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n1  /  2.0  +  n1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  EU  =  n1  /  2.0  +  n1;	  final    double    EU    =    n2prod    /    2.0    +    n1;    	compilable	  [FE]  AssertionError  	6	2	replace
51	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n1  /  2.0  +  n2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	add	final  double  EU  =  n1  /  2.0  +  n2;	  final    double    EU    =    n2prod    /    2.0    +    n1;    	compilable	  [FE]  AssertionError  	6	2	replace
52	[BUG]  [BUGGY]  final  double  EU  =  n1  /  2.0  +  n2;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n1  /  2.0  +  n2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  EU  =  n1  /  2.0  +  n2;	  final    double    EU    =    n2prod    /    2.0    +    n1;    	compilable	  [FE]  AssertionError  	6	2	replace
53	[BUG]  [BUGGY]  final  double  n2prod  =  n1  *  n2)+  1;  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n2prod  =  n1  *  n2)+  1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2prod  =  n1  *  n2)+  1;	          final    double    n2prod    =    n1    *    n2    +    1;    final    double    n2prod    =    n1    *    n2)    +    1;    	non-compiled	[CE]  ';'  expected	28	None	replace
54	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  n2  +  1;  final  double  n2prod  =  n2  *  n1  +  1;  [CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  int  n2prod  =  n1  *  n2  +  1;  final  double  n2prod  =  n2  *  n1  +  1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  int  n2prod  =  n1  *  n2  +  1;  final  double  n2prod  =  n2  *  n1  +  1;	          final    double    n2prod    =    n1    *    n2    +    1;    final    double    n2prod    =    n1    *    n2)    +    1;    	non-compiled	[CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	28	None	replace
55	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  Umin;  [CE]  possible  loss  of  precision  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  int  n2prod  =  n1  *  Umin;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  int  n2prod  =  n1  *  Umin;	  final    int    n2prod    =    n1    *    n2;    	non-compiled	[CE]  possible  loss  of  precision	20	None	replace
56	[BUG]  [BUGGY]  final  int  n2  =  n1  *  Umin;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  int  n2  =  n1  *  Umin;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  int  n2  =  n1  *  Umin;	  final    int    n2    =    n1    *    n2;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	39	None	replace
57	[BUG]  [BUGGY]  final  int  n2  =  n1  *  n2prod;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  int  n2  =  n1  *  n2prod;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  int  n2  =  n1  *  n2prod;	  final    int    n2    =    n1    *    n2;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	39	None	replace
58	[BUG]  [BUGGY]  final  double  EU  =  n1  /  2.0;  final  double  EU  =  n1  /  2.0;  [CE]  variable  EU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n1  /  2.0;  final  double  EU  =  n1  /  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final    double    EU    =    n1    /    2.0;    final  double  EU  =  n1  /  2.0;	  	non-compiled	[CE]  variable  EU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	46	None	add
59	[BUG]  [BUGGY]  final  double  EU  =  n1  /  2.0;  Final  double  EU  =  n1  /  2.0;  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n1  /  2.0;  Final  double  EU  =  n1  /  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final    double    EU    =    n1    /    2.0;    Final  double  EU  =  n1  /  2.0;	  	non-compiled	[CE]  not  a  statement	46	None	add
60	[BUG]  [BUGGY]  final  double  EU  =  n1  /  2.0;  final  double  EU  =  n2  /  2.0;  [CE]  variable  EU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n1  /  2.0;  final  double  EU  =  n2  /  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final    double    EU    =    n1    /    2.0;    final  double  EU  =  n2  /  2.0;	  	non-compiled	[CE]  variable  EU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	46	None	add
61	[BUG]  [BUGGY]  final  double  EU  =  n1  /  2.0;  final  double  EU  =  n1.  /  2.0;  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n1  /  2.0;  final  double  EU  =  n1.  /  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final    double    EU    =    n1    /    2.0;    final  double  EU  =  n1.  /  2.0;	  	non-compiled	[CE]  <identifier>  expected	46	None	add
62	[BUG]  [BUGGY]  final  double  n2prod  =  n1  *  n2  +  2;  [CE]  cannot  find  symbol  EU  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n2prod  =  n1  *  n2  +  2;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2prod  =  n1  *  n2  +  2;	          final    double    n2prod    =    n1    *    n2    +    1;    final    double    n2prod    =    n1    *    n2    +    2;    	non-compiled	[CE]  cannot  find  symbol  EU	30	None	replace
63	[BUG]  [BUGGY]  final  double  n2prod  =  n2  *  Umin;  [CE]  cannot  find  symbol  EU  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n2prod  =  n2  *  Umin;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2prod  =  n2  *  Umin;	  final    double    n2prod    =    n1    *    Umin;    	non-compiled	[CE]  cannot  find  symbol  EU	51	None	replace
64	[BUG]  [BUGGY]  final  int  n2  =  n1  *  n2prod  +  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  int  n2  =  n1  *  n2prod  +  1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  int  n2  =  n1  *  n2prod  +  1;	  final    int    n2    =    n1    *    n2    +    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	11	None	replace
65	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n2  /  2.0  *  n1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	add	final  double  EU  =  n2  /  2.0  *  n1;	  final    double    EU    =    n2    /    2.0    +    n1;    	compilable	  [FE]  AssertionError  	50	1	replace
66	[BUG]  [BUGGY]  final  double  EU  =  n2  /  2.0  *  n1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n2  /  2.0  *  n1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  EU  =  n2  /  2.0  *  n1;	  final    double    EU    =    n2    /    2.0    +    n1;    	compilable	  [FE]  AssertionError  	50	1	replace
67	[BUG]  [BUGGY]  final  double  n2  =  n2  *  Umin;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n2  =  n2  *  Umin;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2  =  n2  *  Umin;	  final    double    n2    =    n1    *    Umin;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	41	None	replace
68	[BUG]  [BUGGY]  final  double  EU  =  n1prod  *  2.0;  [CE]  cannot  find  symbol  n1prod  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n1prod  *  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  EU  =  n1prod  *  2.0;	  final    double    EU    =    n2prod    *    2.0;    	non-compiled	[CE]  cannot  find  symbol  n1prod	1	None	replace
69	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n1  *  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	add	final  double  EU  =  n1  *  2.0;	  final    double    EU    =    n2prod    *    2.0;    	compilable	  [FE]  AssertionError  	1	1	replace
70	[BUG]  [BUGGY]  final  double  EU  =  n1  *  2.0;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n1  *  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  EU  =  n1  *  2.0;	  final    double    EU    =    n2prod    *    2.0;    	compilable	  [FE]  AssertionError  	1	1	replace
71	[BUG]  [BUGGY]  final  double  n2prod  =  n1  *  n2,  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n2prod  =  n1  *  n2,  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2prod  =  n1  *  n2,	          final    double    n2prod    =    n1    *    n2;    final    double    n2prod    =    n1    *    n2,    	non-compiled	[CE]  <identifier>  expected	59	None	replace
72	[BUG]  [BUGGY]  static  final  double  EU  =  n2prod  *  2.0;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  static  final  double  EU  =  n2prod  *  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	static  final  double  EU  =  n2prod  *  2.0;	  static    final    double    EU    =    n1n2prod    *    2.0;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
73	[BUG]  [BUGGY]  final  int  n2prod  =  n1  +  n2  *  n2;  [CE]  cannot  find  symbol  EU  [FE]          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  int  n2prod  =  n1  +  n2  *  n2;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  int  n2prod  =  n1  +  n2  *  n2;	  final    int    n2prod    =    n1    +    n2;    	non-compiled	[CE]  cannot  find  symbol  EU	3	None	replace
74	[BUG]  [BUGGY]  final  long  n2prod  =  (n1  +  n2)/  2.0;  [CE]  possible  loss  of  precision  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  long  n2prod  =  (n1  +  n2)/  2.0;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  long  n2prod  =  (n1  +  n2)/  2.0;	  final    int    n2prod    =    (n1    +    n2)/    2.0;    	non-compiled	[CE]  possible  loss  of  precision	42	None	replace
75	[BUG]  [BUGGY]  final  double  n2Prod  =  n1  +  n2Prod;  [CE]  cannot  find  symbol  EU  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n2Prod  =  n1  +  n2Prod;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2Prod  =  n1  +  n2Prod;	  final    double    n2    =    n1    +    n2Prod;    	non-compiled	[CE]  cannot  find  symbol  EU	18	None	replace
76	[BUG]  [BUGGY]  final  double  n2prod  =  n1.  *  n2;  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n2prod  =  n1.  *  n2;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2prod  =  n1.  *  n2;	          final    double    n2prod    =    n1    *    n2;    final    double    n2prod    =    n1.    *    n2;    	non-compiled	[CE]  <identifier>  expected	71	None	replace
77	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1.  *  n2;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  int  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1.  *  n2;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  int  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1.  *  n2;	          final    double    n2prod    =    n1    *    n2;    final    double    n2prod    =    n1.    *    n2;    	non-compiled	[CE]  <identifier>  expected	71	None	replace
78	[BUG]  [BUGGY]  final  double  n2prod  =  n0  *  n2;  [CE]  cannot  find  symbol  n0  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n2prod  =  n0  *  n2;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2prod  =  n0  *  n2;	          final    double    n2prod    =    n1    *    n2;    final    double    n2prod    =    n0    *    n2;    	non-compiled	[CE]  cannot  find  symbol  n0	70	None	replace
79	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  n2;  final  double  n2prod  =  n0  *  n2;  [CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  int  n2prod  =  n1  *  n2;  final  double  n2prod  =  n0  *  n2;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  int  n2prod  =  n1  *  n2;  final  double  n2prod  =  n0  *  n2;	          final    double    n2prod    =    n1    *    n2;    final    double    n2prod    =    n0    *    n2;    	non-compiled	[CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	70	None	replace
80	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  n2;  final  int  n2prod  =  n0  *  n2;  [CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  int  n2prod  =  n1  *  n2;  final  int  n2prod  =  n0  *  n2;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  int  n2prod  =  n1  *  n2;  final  int  n2prod  =  n0  *  n2;	          final    double    n2prod    =    n1    *    n2;    final    double    n2prod    =    n0    *    n2;    	non-compiled	[CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	70	None	replace
81	[BUG]  [BUGGY]  final  double  n2prod  =  n1  +  n2);  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n2prod  =  n1  +  n2);  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2prod  =  n1  +  n2);	          final    double    n2prod    =    n1    +    n2;    final    double    n2prod    =    n1    +    n2);    	non-compiled	[CE]  ';'  expected	14	None	replace
82	[BUG]  [BUGGY]  final  double  EU  =  n2  /  2.0  +  n1;  final  double  EU  =  n2  /  2.0  +  n1;  [CE]  variable  EU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n2  /  2.0  +  n1;  final  double  EU  =  n2  /  2.0  +  n1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final    double    EU    =    n2    /    2.0    +    n1;    final  double  EU  =  n2  /  2.0  +  n1;	  	non-compiled	[CE]  variable  EU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	49	None	add
83	[BUG]  [BUGGY]  final  double  EU  =  n2  /  2.0  +  n1;  final  double  EU  =  n2  /  2.0  +  n1);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n2  /  2.0  +  n1;  final  double  EU  =  n2  /  2.0  +  n1);  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final    double    EU    =    n2    /    2.0    +    n1;    final  double  EU  =  n2  /  2.0  +  n1);	  	non-compiled	[CE]  ';'  expected	49	None	add
84	[BUG]  [BUGGY]  final  double  EU  =  n2  /  2.0  +  n1;  final  double  EU  =  n2  /  2.0  +  n1.;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n2  /  2.0  +  n1;  final  double  EU  =  n2  /  2.0  +  n1.;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final    double    EU    =    n2    /    2.0    +    n1;    final  double  EU  =  n2  /  2.0  +  n1.;	  	non-compiled	[CE]  <identifier>  expected	49	None	add
85	[BUG]  [BUGGY]  final  double  EU  =  n2  /  2.0  +  n1;  Final  double  EU  =  n2  /  2.0  +  n1;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n2  /  2.0  +  n1;  Final  double  EU  =  n2  /  2.0  +  n1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final    double    EU    =    n2    /    2.0    +    n1;    Final  double  EU  =  n2  /  2.0  +  n1;	  	non-compiled	[CE]  not  a  statement	49	None	add
86	[BUG]  [BUGGY]  final  double  n2prod  =  n1  *  n2.;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n2prod  =  n1  *  n2.;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2prod  =  n1  *  n2.;	          final    double    n2prod    =    n1    *    n2;    final    double    n2prod    =    n1    *    n2.;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
87	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  n2.;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  int  n2prod  =  n1  *  n2.;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  int  n2prod  =  n1  *  n2.;	          final    double    n2prod    =    n1    *    n2;    final    double    n2prod    =    n1    *    n2.;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
88	[BUG]  [BUGGY]  final  double  n2  =  n2prod  +  n1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n2  =  n2prod  +  n1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2  =  n2prod  +  n1;	  final    double    n2    =    n2    +    n1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	65	None	replace
89	[BUG]  [BUGGY]  final  int  n2  =  n2  +  n1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  int  n2  =  n2  +  n1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  int  n2  =  n2  +  n1;	  final    double    n2    =    n2    +    n1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	65	None	replace
90	[BUG]  [BUGGY]  final  int  n2prod  =  (n2  +  n1)/  2.0;  [CE]  possible  loss  of  precision  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  int  n2prod  =  (n2  +  n1)/  2.0;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  int  n2prod  =  (n2  +  n1)/  2.0;	  final    double    n2prod    =    (n2    +    n1)/    2.0;    	non-compiled	[CE]  possible  loss  of  precision	53	None	replace
91	[BUG]  [BUGGY]  final  double  n2prod  =  n1  *  n2);  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n2prod  =  n1  *  n2);  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2prod  =  n1  *  n2);	          final    double    n2prod    =    n1    *    n2;    final    double    n2prod    =    n1    *    n2);    	non-compiled	[CE]  ';'  expected	32	None	replace
92	[BUG]  [BUGGY]  final  double  EU  =  n1N2prod  *  2.0;  [CE]  cannot  find  symbol  n1N2prod  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n1N2prod  *  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  EU  =  n1N2prod  *  2.0;	  final    double    EU    =    n1n2prod    *    2.0;    final    double    EU    =    n1N2prod    *    2.0;    	non-compiled	[CE]  cannot  find  symbol  n1N2prod	64	None	replace
93	[BUG]  [BUGGY]  final  double  n2  =  n1  *  n2prod  +  2;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n2  =  n1  *  n2prod  +  2;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2  =  n1  *  n2prod  +  2;	  final    double    n2    =    n1    *    n2prod    +    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	10	None	replace
94	[BUG]  [BUGGY]  static  final  double  EU  =  n1prod  /  2.0;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  static  final  double  EU  =  n1prod  /  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	static  final  double  EU  =  n1prod  /  2.0;	  static    final    double    EU    =    n2prod    /    2.0;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
95	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n2  /  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	add	final  double  EU  =  n2  /  2.0;	  final    double    EU    =    n1prod    /    2.0;    	compilable	  [FE]  AssertionError  	48	2	replace
96	[BUG]  [BUGGY]  final  double  EU  =  n2  /  2.0;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n2  /  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  EU  =  n2  /  2.0;	  final    double    EU    =    n1prod    /    2.0;    	compilable	  [FE]  AssertionError  	48	2	replace
97	[BUG]  [BUGGY]  final  static  final  double  EU  =  n1n2prod  *  2.0;  [CE]  repeated  modifier  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  static  final  double  EU  =  n1n2prod  *  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  static  final  double  EU  =  n1n2prod  *  2.0;	  final    double    EU    =    n1n2prod    *    2.0;    static    final    double    EU    =    n1n2prod    *    2.0;    	non-compiled	[CE]  repeated  modifier	54	None	replace
98	[BUG]  [BUGGY]  final  int  n2  =  n1  +  n2prod;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  int  n2  =  n1  +  n2prod;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  int  n2  =  n1  +  n2prod;	  final    double    n2    =    n1    +    n2prod;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	17	None	replace
99	[BUG]  [BUGGY]  final  int  n2  =  n1  +  n2Prod;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  int  n2  =  n1  +  n2Prod;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  int  n2  =  n1  +  n2Prod;	  final    int    n2    =    n1    +    n2;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	19	None	replace
100	[BUG]  [BUGGY]  final  double  n2prod  =  n1  +  n2.;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n2prod  =  n1  +  n2.;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2prod  =  n1  +  n2.;	          final    double    n2prod    =    n1    +    n2;    final    double    n2prod    =    n1    +    n2.;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
101	[BUG]  [BUGGY]  final  int  n2prod  =  n1  +  n2.;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  int  n2prod  =  n1  +  n2.;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  int  n2prod  =  n1  +  n2.;	          final    double    n2prod    =    n1    +    n2;    final    double    n2prod    =    n1    +    n2.;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
102	[BUG]  [BUGGY]  final  double  n2prod  =  (n1)+  n2)/  2.0;  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n2prod  =  (n1)+  n2)/  2.0;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2prod  =  (n1)+  n2)/  2.0;	          final    double    n2prod    =    (n1    +    n2)/    2.0;    final    double    n2prod    =    (n1)    +    n2)/    2.0;    	non-compiled	[CE]  ';'  expected	26	None	replace
103	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n1  /  2.0  *  n2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	add	final  double  EU  =  n1  /  2.0  *  n2;	  final    double    EU    =    n1    /    2.0;    	compilable	  [FE]  AssertionError  	47	1	replace
104	[BUG]  [BUGGY]  final  double  EU  =  n1  /  2.0  *  n2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n1  /  2.0  *  n2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  EU  =  n1  /  2.0  *  n2;	  final    double    EU    =    n1    /    2.0;    	compilable	  [FE]  AssertionError  	47	1	replace
105	[BUG]  [BUGGY]  final  double  n2  =  n2prod  *  n1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n2  =  n2prod  *  n1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2  =  n2prod  *  n1;	  final    double    n2    =    n2    *    n1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	60	None	replace
106	[BUG]  [BUGGY]  final  int  n2  =  n2  *  n1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  int  n2  =  n2  *  n1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  int  n2  =  n2  *  n1;	  final    double    n2    =    n2    *    n1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	60	None	replace
107	[BUG]  [BUGGY]  final  int  n2prod  =  n2  *  n1;  [CE]  cannot  find  symbol  EU  [FE]          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  int  n2prod  =  n2  *  n1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  int  n2prod  =  n2  *  n1;	  final    double    n2prod    =    n2    *    n1;    	non-compiled	[CE]  cannot  find  symbol  EU	21	None	replace
108	[BUG]  [BUGGY]  final  double  n2prod  =  n2  *  n2;  [CE]  cannot  find  symbol  EU  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n2prod  =  n2  *  n2;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2prod  =  n2  *  n2;	  final    double    n2prod    =    n2    *    n1;    	non-compiled	[CE]  cannot  find  symbol  EU	21	None	replace
109	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  Umin  +  1;  [CE]  possible  loss  of  precision  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  int  n2prod  =  n1  *  Umin  +  1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  int  n2prod  =  n1  *  Umin  +  1;	  final    int    n2prod    =    n1    *    n2    +    1;    	non-compiled	[CE]  possible  loss  of  precision	22	None	replace
110	[BUG]  [BUGGY]          final    double    n2prod    =    n1    *    n2;    final  double  n1prod  =  n1  *  n2;  final  double  n1prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;  [CE]  variable  n1prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]          final    double    n2prod    =    n1    *    n2;    final  double  n1prod  =  n1  *  n2;  final  double  n1prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	                final        double        n2prod        =        n1        *        n2;        final    double    n1prod    =    n1    *    n2;    final  double  n1prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;	  	non-compiled	[CE]  variable  n1prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	57	None	add
111	[BUG]  [BUGGY]  static  final  double  EU  =  n2prod  /  2.0  +  n1n2prod;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  static  final  double  EU  =  n2prod  /  2.0  +  n1n2prod;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	static  final  double  EU  =  n2prod  /  2.0  +  n1n2prod;	  static    final    double    EU    =    n2prod    /    2.0;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
112	[BUG]  [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  *  n2.;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  *  n2.;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  EU  =  n1n2prod  /  2.0  *  n2.;	  final    double    EU    =    n1n2prod    /    2.0    +    n2;    final    double    EU    =    n1n2prod    /    2.0    +    n2.;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
113	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n2  *  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	add	final  double  EU  =  n2  *  2.0;	  final    double    EU    =    n2prod    *    2.0;    	compilable	  [FE]  AssertionError  	1	2	replace
114	[BUG]  [BUGGY]  final  double  EU  =  n2  *  2.0;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n2  *  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  EU  =  n2  *  2.0;	  final    double    EU    =    n2prod    *    2.0;    	compilable	  [FE]  AssertionError  	1	2	replace
115	[BUG]  [BUGGY]  final  double  n2prod  =  n1  +  n2  *  1;  [CE]  cannot  find  symbol  EU  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n2prod  =  n1  +  n2  *  1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2prod  =  n1  +  n2  *  1;	  final    double    n2prod    =    n1    +    n2    +    1;    	non-compiled	[CE]  cannot  find  symbol  EU	66	None	replace
116	[BUG]  [BUGGY]  final  double  n2prod  =  n1  +  n2Prod;  [CE]  cannot  find  symbol  n2Prod  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n2prod  =  n1  +  n2Prod;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2prod  =  n1  +  n2Prod;	  final    double    n2    =    n1    +    n2Prod;    	non-compiled	[CE]  cannot  find  symbol  n2Prod	18	None	replace
117	[BUG]  [BUGGY]  final  double  n2prod  =  n1  +  n2prod;  [CE]  cannot  find  symbol  EU  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n2prod  =  n1  +  n2prod;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2prod  =  n1  +  n2prod;	  final    double    n2    =    n1    +    n2prod;    	non-compiled	[CE]  cannot  find  symbol  EU	17	None	replace
118	[BUG]  [BUGGY]  final  double  n2  =  n2  +  n1prod;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n2  =  n2  +  n1prod;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2  =  n2  +  n1prod;	  final    double    n2    =    n1    +    n2prod;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	17	None	replace
119	[BUG]  [BUGGY]  Final  double  EU  =  n1n2prod  *  2.0;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  Final  double  EU  =  n1n2prod  *  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	Final  double  EU  =  n1n2prod  *  2.0;	  final    double    EU    =    n1n2prod    *    2.0;    Final    double    EU    =    n1n2prod    *    2.0;    	non-compiled	[CE]  not  a  statement	45	None	replace
120	[BUG]  [BUGGY]  final  double  n2  =  n1  *  Umin  +  3;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n2  =  n1  *  Umin  +  3;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2  =  n1  *  Umin  +  3;	  final    double    n2    =    n1    *    Umin    +    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	62	None	replace
121	[BUG]  [BUGGY]  final  double  EU  =  n1N2prod  /  2.0;  [CE]  cannot  find  symbol  n1N2prod  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n1N2prod  /  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  EU  =  n1N2prod  /  2.0;	  final    double    EU    =    n1n2prod    *    2.0;    final    double    EU    =    n1N2prod    *    2.0;    	non-compiled	[CE]  cannot  find  symbol  n1N2prod	64	None	replace
122	[BUG]  [BUGGY]          final    double    n2prod    =    n1    +    n2;    final  double  n1prod  =  n1  +  n2;  final  double  n2prod  =  n1  +  n2;  final  double  n1prod  =  n1  +  n2);  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]          final    double    n2prod    =    n1    +    n2;    final  double  n1prod  =  n1  +  n2;  final  double  n2prod  =  n1  +  n2;  final  double  n1prod  =  n1  +  n2);  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	                final        double        n2prod        =        n1        +        n2;        final    double    n1prod    =    n1    +    n2;    final  double  n2prod  =  n1  +  n2;  final  double  n1prod  =  n1  +  n2);	  	non-compiled	[CE]  ';'  expected	55	None	add
123	[BUG]  [BUGGY]  final  double  n2  =  n1  *  Umin.doubleValue();  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n2  =  n1  *  Umin.doubleValue();  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2  =  n1  *  Umin.doubleValue();	  final    double    n2    =    n1    *    Umin;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	41	None	replace
124	[BUG]  [BUGGY]  Final  double  EU  =  n1n2prod  /  2.0  +  n2;  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  Final  double  EU  =  n1n2prod  /  2.0  +  n2;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	Final  double  EU  =  n1n2prod  /  2.0  +  n2;	  final    double    EU    =    n1n2prod    /    2.0    +    n2;    Final    double    EU    =    n1n2prod    /    2.0    +    n2;    	non-compiled	[CE]  not  a  statement	67	None	replace
125	[BUG]  [BUGGY]  final  float  n2prod  =  (n1  +  n2)/  2.0;  [CE]  possible  loss  of  precision  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  float  n2prod  =  (n1  +  n2)/  2.0;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  float  n2prod  =  (n1  +  n2)/  2.0;	  final    int    n2prod    =    (n1    +    n2)/    2.0;    	non-compiled	[CE]  possible  loss  of  precision	42	None	replace
126	[BUG]  [BUGGY]  final  static  final  double  EU  =  n2prod  *  2.0;  [CE]  repeated  modifier  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  static  final  double  EU  =  n2prod  *  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  static  final  double  EU  =  n2prod  *  2.0;	  final    double    EU    =    n1n2prod    *    2.0;    static    final    double    EU    =    n1n2prod    *    2.0;    	non-compiled	[CE]  repeated  modifier	54	None	replace
127	[BUG]  [BUGGY]  final  double  EU  =  n1  /  2.0;  final  double  EU  =  n1)  /  2.0;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n1  /  2.0;  final  double  EU  =  n1)  /  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final    double    EU    =    n1    /    2.0;    final  double  EU  =  n1)  /  2.0;	  	non-compiled	[CE]  ';'  expected	46	None	add
128	[BUG]  [BUGGY]  final  double  EU  =  n1  /  2.0;  final  double  Ukrainian  =  n1  /  2.0;  [CE]  variable  EU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]      AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n1  /  2.0;  final  double  Ukrainian  =  n1  /  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final    double    EU    =    n1    /    2.0;    final  double  Ukrainian  =  n1  /  2.0;	  	non-compiled	[CE]  variable  EU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	46	None	add
129	[BUG]  [BUGGY]  final  double  n2prod  =  n2.  *  n1;  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n2prod  =  n2.  *  n1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2prod  =  n2.  *  n1;	          final    double    n2prod    =    n1    *    n2;    final    double    n2prod    =    n1.    *    n2;    	non-compiled	[CE]  <identifier>  expected	71	None	replace
130	[BUG]  [BUGGY]  final  double  n2prod  =  (n2  +  n2)/  2.0;  [CE]  cannot  find  symbol  EU  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n2prod  =  (n2  +  n2)/  2.0;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2prod  =  (n2  +  n2)/  2.0;	  final    double    n2prod    =    (n2    +    n1)/    2.0;    	non-compiled	[CE]  cannot  find  symbol  EU	53	None	replace
131	[BUG]  [BUGGY]  final  double  n2prod  =  (n1  *  n2)/  2.0;  [CE]  cannot  find  symbol  EU  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n2prod  =  (n1  *  n2)/  2.0;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2prod  =  (n1  *  n2)/  2.0;	          final    double    n2prod    =    (n1    +    n2)/    2.0;    final    double    n2)prod    =    (n1    +    n2)/    2.0;    	non-compiled	[CE]  cannot  find  symbol  EU	61	None	replace
132	[BUG]  [BUGGY]  final  double  n2  =  n2  +  Umin;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n2  =  n2  +  Umin;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2  =  n2  +  Umin;	  final    double    n2    =    n2    +    n1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	65	None	replace
133	[BUG]  [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  *  n2;  final  double  EU  =  n1n2prod  /  2.0  *  n2.;  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  *  n2;  final  double  EU  =  n1n2prod  /  2.0  *  n2.;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final    double    EU    =    n1n2prod    /    2.0    *    n2;    final  double  EU  =  n1n2prod  /  2.0  *  n2.;	  	non-compiled	[CE]  <identifier>  expected	4	None	add
134	[BUG]  [BUGGY]  final  double  n2prod  =  n1  *  Umin  +  1;  [CE]  cannot  find  symbol  EU  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n2prod  =  n1  *  Umin  +  1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2prod  =  n1  *  Umin  +  1;	  final    double    n2prod    =    n1    *    Umin;    	non-compiled	[CE]  cannot  find  symbol  EU	51	None	replace
135	[BUG]  [BUGGY]  final  static  final  double  EU  =  n1n2prod  /  2.0;  [CE]  repeated  modifier  [FE]              AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  static  final  double  EU  =  n1n2prod  /  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  static  final  double  EU  =  n1n2prod  /  2.0;	  static    final    double    EU    =    n1n2prod    *    2.0;    	non-compiled	[CE]  repeated  modifier	8	None	replace
136	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n1  +  n2  /  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	add	final  double  EU  =  n1  +  n2  /  2.0;	  final    double    EU    =    n1    /    2.0;    	compilable	  [FE]  AssertionError  	47	2	replace
137	[BUG]  [BUGGY]  final  double  EU  =  n1  +  n2  /  2.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n1  +  n2  /  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  EU  =  n1  +  n2  /  2.0;	  final    double    EU    =    n1    /    2.0;    	compilable	  [FE]  AssertionError  	47	2	replace
138	[BUG]  [BUGGY]  final  int  n2prod  =  n1  /  n2  +  1;  [CE]  cannot  find  symbol  EU  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  int  n2prod  =  n1  /  n2  +  1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  int  n2prod  =  n1  /  n2  +  1;	  final    int    n2prod    =    n1    *    n2    +    1;    	non-compiled	[CE]  cannot  find  symbol  EU	22	None	replace
139	[BUG]  [BUGGY]          final    double    n2prod    =    n1    *    n2;    final  double  n1prod  =  n1  *  n2;  final  double  n2prod  =  n0  *  n2;  final  double  n1prod  =  n0  *  n2;  [CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]          final    double    n2prod    =    n1    *    n2;    final  double  n1prod  =  n1  *  n2;  final  double  n2prod  =  n0  *  n2;  final  double  n1prod  =  n0  *  n2;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	                final        double        n2prod        =        n1        *        n2;        final    double    n1prod    =    n1    *    n2;    final  double  n2prod  =  n0  *  n2;  final  double  n1prod  =  n0  *  n2;	  	non-compiled	[CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	57	None	add
140	[BUG]  [BUGGY]          final    double    n2prod    =    n1    *    n2;    final  double  n1prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;  [CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]      AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]          final    double    n2prod    =    n1    *    n2;    final  double  n1prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	                final        double        n2prod        =        n1        *        n2;        final    double    n1prod    =    n1    *    n2;    final  double  n2prod  =  n1  *  n2;	  	non-compiled	[CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	57	None	add
141	[BUG]  [BUGGY]          final    double    n2prod    =    n1    +    n2;    final  double  n1prod  =  n1  +  n2;  final  double  n2prod  =  n1  *  n2;  final  double  n1prod  =  n1  +  n2;  [CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]          final    double    n2prod    =    n1    +    n2;    final  double  n1prod  =  n1  +  n2;  final  double  n2prod  =  n1  *  n2;  final  double  n1prod  =  n1  +  n2;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	                final        double        n2prod        =        n1        +        n2;        final    double    n1prod    =    n1    +    n2;    final  double  n2prod  =  n1  *  n2;  final  double  n1prod  =  n1  +  n2;	  	non-compiled	[CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	55	None	add
142	[BUG]  [BUGGY]          final    double    n2prod    =    n1    +    n2;    final  double  n1prod  =  n1  +  n2;  final  double  n2prod  =  n0  +  n2;  final  double  n1prod  =  n0  +  n2;  [CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]      AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]          final    double    n2prod    =    n1    +    n2;    final  double  n1prod  =  n1  +  n2;  final  double  n2prod  =  n0  +  n2;  final  double  n1prod  =  n0  +  n2;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	                final        double        n2prod        =        n1        +        n2;        final    double    n1prod    =    n1    +    n2;    final  double  n2prod  =  n0  +  n2;  final  double  n1prod  =  n0  +  n2;	  	non-compiled	[CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	55	None	add
143	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n1  +  n2  *  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	add	final  double  EU  =  n1  +  n2  *  2.0;	  final    double    EU    =    n2prod    *    2.0;    	compilable	  [FE]  AssertionError  	1	2	replace
144	[BUG]  [BUGGY]  final  double  EU  =  n1  +  n2  *  2.0;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n1  +  n2  *  2.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  EU  =  n1  +  n2  *  2.0;	  final    double    EU    =    n2prod    *    2.0;    	compilable	  [FE]  AssertionError  	1	2	replace
145	[BUG]  [BUGGY]  final  double  n2prod  =  n0  *  n1;  [CE]  cannot  find  symbol  n0  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n2prod  =  n0  *  n1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2prod  =  n0  *  n1;	          final    double    n2prod    =    n1    *    n2;    final    double    n2prod    =    n0    *    n2;    	non-compiled	[CE]  cannot  find  symbol  n0	70	None	replace
146	[BUG]  [BUGGY]  final  double  n1prod  =  n2  *  n1;  [CE]  cannot  find  symbol  EU  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n1prod  =  n2  *  n1;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n1prod  =  n2  *  n1;	          final    double    n2prod    =    n1    *    n2;    final    double    n1prod    =    n1    *    n2;    	non-compiled	[CE]  cannot  find  symbol  EU	58	None	replace
147	[BUG]  [BUGGY]  final  double  n2prod  =  n1  +  n2  +  2;  [CE]  cannot  find  symbol  EU  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n2prod  =  n1  +  n2  +  2;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2prod  =  n1  +  n2  +  2;	  final    double    n2prod    =    n1    +    n2    +    1;    	non-compiled	[CE]  cannot  find  symbol  EU	66	None	replace
148	[BUG]  [BUGGY]  n2prod  =  (n1  +  n2)/  2.0;  [CE]  cannot  find  symbol  n2prod  [FE]        AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  n2prod  =  (n1  +  n2)/  2.0;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	n2prod  =  (n1  +  n2)/  2.0;	          final    double    n2prod    =    (n1    +    n2)/    2.0;    final    double    n2)prod    =    (n1    +    n2)/    2.0;    	non-compiled	[CE]  cannot  find  symbol  n2prod	61	None	replace
149	[BUG]  [BUGGY]  final  double  EU  =  n2  /  2.0  +  n1;  final  double  EU  =  n2  /  2.0  +  n1.0;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n2  /  2.0  +  n1;  final  double  EU  =  n2  /  2.0  +  n1.0;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final    double    EU    =    n2    /    2.0    +    n1;    final  double  EU  =  n2  /  2.0  +  n1.0;	  	non-compiled	[CE]  ';'  expected	49	None	add
150	[BUG]  [BUGGY]  final  double  EU  =  n2  /  2.0  +  n1;  final  double  EU  =  n2)  /  2.0  +  n1;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n2  /  2.0  +  n1;  final  double  EU  =  n2)  /  2.0  +  n1;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final    double    EU    =    n2    /    2.0    +    n1;    final  double  EU  =  n2)  /  2.0  +  n1;	  	non-compiled	[CE]  ';'  expected	49	None	add
151	[BUG]  [BUGGY]  final  double  EU  =  n2prod  /  2.0  +  n1.;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  EU  =  n2prod  /  2.0  +  n1.;  [BUGGY]      final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  EU  =  n2prod  /  2.0  +  n1.;	  final    double    EU    =    n1n2prod    /    2.0    +    n2;    final    double    EU    =    n1n2prod    /    2.0    +    n2.;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
152	[BUG]  [BUGGY]  final  double  n2  =  n2  +  n1Prod;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError      [CONTEXT]      private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;        [BUGGY]  final  double  n2  =  n2  +  n1Prod;  [BUGGY]      final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2  =  n2  +  n1Prod;	  final    double    n2    =    n1    +    n2Prod;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	18	None	replace
