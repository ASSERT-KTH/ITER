bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double  EU  =  n2prod  *  2.0;  [CE]  cannot  find  symbol  n2prod  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  double  EU  =  n2prod  *  2.0;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  EU  =  n2prod  *  2.0;	  final    double    EU    =    n1n2prod    *    2.0;    	non-compiled	[CE]  cannot  find  symbol  n2prod	10	None	replace
2	[BUG]  [BUGGY]  final  double  n2prod  =  n2  +  n1;  [CE]  cannot  find  symbol  EU  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  double  n2prod  =  n2  +  n1;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2prod  =  n2  +  n1;	      final    double    n2prod    =    n1    +    n2;    	non-compiled	[CE]  cannot  find  symbol  EU	7	None	replace
3	[BUG]  [BUGGY]  final  int  n2prod  =  n1  +  n2;  [CE]  cannot  find  symbol  EU  [FE]      AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  int  n2prod  =  n1  +  n2;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  int  n2prod  =  n1  +  n2;	      final    double    n2prod    =    n1    +    n2;    	non-compiled	[CE]  cannot  find  symbol  EU	7	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  *  n2;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	add	final  double  EU  =  n1n2prod  /  2.0  *  n2;	  final    double    EU    =    n1n2prod    /    2.0    +    n2;    	compilable	  [FE]  AssertionError  	12	2	replace
5	[BUG]  [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  *  n2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  *  n2;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  EU  =  n1n2prod  /  2.0  *  n2;	  final    double    EU    =    n1n2prod    /    2.0    +    n2;    	compilable	  [FE]  AssertionError  	12	2	replace
6	[BUG]  [BUGGY]  final  double  EU  =  n2prod  /  2.0  +  n1;  [CE]  cannot  find  symbol  n2prod  [FE]      AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  double  EU  =  n2prod  /  2.0  +  n1;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  EU  =  n2prod  /  2.0  +  n1;	  final    double    EU    =    n1n2prod    /    2.0    +    n2;    	non-compiled	[CE]  cannot  find  symbol  n2prod	12	None	replace
7	[BUG]  [BUGGY]  static  final  double  EU  =  n2prod  /  2.0;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  static  final  double  EU  =  n2prod  /  2.0;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	static  final  double  EU  =  n2prod  /  2.0;	  static    final    double    EU    =    n1n2prod    /    2.0;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
8	[BUG]  [BUGGY]  static  final  double  EU  =  n1n2prod  *  2.0;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  static  final  double  EU  =  n1n2prod  *  2.0;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	static  final  double  EU  =  n1n2prod  *  2.0;	  static    final    double    EU    =    n1n2prod    /    2.0;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
9	[BUG]  [BUGGY]  final  static  double  EU  =  n1n2prod  /  2.0;  [CE]  modifier  static  not  allowed  here  [FE]            AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  static  double  EU  =  n1n2prod  /  2.0;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  static  double  EU  =  n1n2prod  /  2.0;	  static    final    double    EU    =    n1n2prod    /    2.0;    	non-compiled	[CE]  modifier  static  not  allowed  here	15	None	replace
10	[BUG]  [BUGGY]  final  double  n2  =  n1  *  n2prod  +  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  double  n2  =  n1  *  n2prod  +  1;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2  =  n1  *  n2prod  +  1;	      final    double    n2    =    n1    *    n2    +    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	5	None	replace
11	[BUG]  [BUGGY]  final  int  n2  =  n1  *  n2  +  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  int  n2  =  n1  *  n2  +  1;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  int  n2  =  n1  *  n2  +  1;	      final    double    n2    =    n1    *    n2    +    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	5	None	replace
12	[BUG]  [BUGGY]  final  double  n2  =  n1  +  n2  +  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  double  n2  =  n1  +  n2  +  1;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2  =  n1  +  n2  +  1;	      final    double    n2    =    n1    *    n2    +    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	5	None	replace
13	[BUG]  [BUGGY]      final  double  n2prod  =  n1  +  n2;  final  double  n2prod  =  n1  +  n2;  [CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]      final  double  n2prod  =  n1  +  n2;  final  double  n2prod  =  n1  +  n2;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	        final    double    n2prod    =    n1    +    n2;    final  double  n2prod  =  n1  +  n2;	  	non-compiled	[CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	6	None	add
14	[BUG]  [BUGGY]      final  double  n2prod  =  n1  +  n2;  final  double  n2prod  =  n1  +  n2);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]      final  double  n2prod  =  n1  +  n2;  final  double  n2prod  =  n1  +  n2);  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	        final    double    n2prod    =    n1    +    n2;    final  double  n2prod  =  n1  +  n2);	  	non-compiled	[CE]  ';'  expected	6	None	add
15	[BUG]  [BUGGY]      final  double  n2prod  =  n1  +  n2;  final  double  n2prod  =  n1  +  n2.;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]      final  double  n2prod  =  n1  +  n2;  final  double  n2prod  =  n1  +  n2.;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	        final    double    n2prod    =    n1    +    n2;    final  double  n2prod  =  n1  +  n2.;	  	non-compiled	[CE]  <identifier>  expected	6	None	add
16	[BUG]  [BUGGY]      final  double  n2prod  =  n1  +  n2;  Final  double  n2prod  =  n1  +  n2;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]      final  double  n2prod  =  n1  +  n2;  Final  double  n2prod  =  n1  +  n2;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	        final    double    n2prod    =    n1    +    n2;    Final  double  n2prod  =  n1  +  n2;	  	non-compiled	[CE]  not  a  statement	6	None	add
17	[BUG]  [BUGGY]  final  double  n2  =  n1  +  n2prod;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  double  n2  =  n1  +  n2prod;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2  =  n1  +  n2prod;	      final    double    n2    =    n1    +    n2;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	4	None	replace
18	[BUG]  [BUGGY]  final  double  n2  =  n1  +  n2Prod;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  double  n2  =  n1  +  n2Prod;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2  =  n1  +  n2Prod;	      final    double    n2    =    n1    +    n2;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	4	None	replace
19	[BUG]  [BUGGY]  final  int  n2  =  n1  +  n2;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  int  n2  =  n1  +  n2;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  int  n2  =  n1  +  n2;	      final    double    n2    =    n1    +    n2;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	4	None	replace
20	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  n2;  [CE]  cannot  find  symbol  EU  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  int  n2prod  =  n1  *  n2;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  int  n2prod  =  n1  *  n2;	      final    double    n2prod    =    n1    *    n2;    	non-compiled	[CE]  cannot  find  symbol  EU	3	None	replace
21	[BUG]  [BUGGY]  final  double  n2prod  =  n2  *  n1;  [CE]  cannot  find  symbol  EU  [FE]      AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  double  n2prod  =  n2  *  n1;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2prod  =  n2  *  n1;	      final    double    n2prod    =    n1    *    n2;    	non-compiled	[CE]  cannot  find  symbol  EU	3	None	replace
22	[BUG]  [BUGGY]  final  int  n2prod  =  n1  *  n2  +  1;  [CE]  cannot  find  symbol  EU  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  int  n2prod  =  n1  *  n2  +  1;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  int  n2prod  =  n1  *  n2  +  1;	      final    double    n2prod    =    n1    *    n2    +    1;    	non-compiled	[CE]  cannot  find  symbol  EU	17	None	replace
23	[BUG]  [BUGGY]  final  double  n2prod  =  n2  *  n1  +  1;  [CE]  cannot  find  symbol  EU  [FE]      AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  double  n2prod  =  n2  *  n1  +  1;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2prod  =  n2  *  n1  +  1;	      final    double    n2prod    =    n1    *    n2    +    1;    	non-compiled	[CE]  cannot  find  symbol  EU	17	None	replace
24	[BUG]  [BUGGY]      final  double  n2prod  =  (n1  +  n2)/  2.0;  final  double  n2prod  =  (n1  +  n2)/  2.0;  [CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]      final  double  n2prod  =  (n1  +  n2)/  2.0;  final  double  n2prod  =  (n1  +  n2)/  2.0;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	        final    double    n2prod    =    (n1    +    n2)/    2.0;    final  double  n2prod  =  (n1  +  n2)/  2.0;	  	non-compiled	[CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	13	None	add
25	[BUG]  [BUGGY]      final  double  n2prod  =  (n1  +  n2)/  2.0;  Final  double  n2prod  =  (n1  +  n2)/  2.0;  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]      final  double  n2prod  =  (n1  +  n2)/  2.0;  Final  double  n2prod  =  (n1  +  n2)/  2.0;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	        final    double    n2prod    =    (n1    +    n2)/    2.0;    Final  double  n2prod  =  (n1  +  n2)/  2.0;	  	non-compiled	[CE]  not  a  statement	13	None	add
26	[BUG]  [BUGGY]      final  double  n2prod  =  (n1  +  n2)/  2.0;  final  double  n2prod  =  (n1)  +  n2)/  2.0;  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]      final  double  n2prod  =  (n1  +  n2)/  2.0;  final  double  n2prod  =  (n1)  +  n2)/  2.0;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	        final    double    n2prod    =    (n1    +    n2)/    2.0;    final  double  n2prod  =  (n1)  +  n2)/  2.0;	  	non-compiled	[CE]  ';'  expected	13	None	add
27	[BUG]  [BUGGY]      final  double  n2prod  =  n1  *  n2  +  1;  final  double  n2prod  =  n1  *  n2  +  1;  [CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]      final  double  n2prod  =  n1  *  n2  +  1;  final  double  n2prod  =  n1  *  n2  +  1;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	        final    double    n2prod    =    n1    *    n2    +    1;    final  double  n2prod  =  n1  *  n2  +  1;	  	non-compiled	[CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	16	None	add
28	[BUG]  [BUGGY]      final  double  n2prod  =  n1  *  n2  +  1;  final  double  n2prod  =  n1  *  n2)  +  1;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]      final  double  n2prod  =  n1  *  n2  +  1;  final  double  n2prod  =  n1  *  n2)  +  1;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	        final    double    n2prod    =    n1    *    n2    +    1;    final  double  n2prod  =  n1  *  n2)  +  1;	  	non-compiled	[CE]  ';'  expected	16	None	add
29	[BUG]  [BUGGY]      final  double  n2prod  =  n1  *  n2  +  1;  final  double  n2prod  =  n1  *  n2.  +  1;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]      final  double  n2prod  =  n1  *  n2  +  1;  final  double  n2prod  =  n1  *  n2.  +  1;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	        final    double    n2prod    =    n1    *    n2    +    1;    final  double  n2prod  =  n1  *  n2.  +  1;	  	non-compiled	[CE]  <identifier>  expected	16	None	add
30	[BUG]  [BUGGY]      final  double  n2prod  =  n1  *  n2  +  1;  final  double  n2prod  =  n1  *  n2  +  2;  [CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]      final  double  n2prod  =  n1  *  n2  +  1;  final  double  n2prod  =  n1  *  n2  +  2;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	        final    double    n2prod    =    n1    *    n2    +    1;    final  double  n2prod  =  n1  *  n2  +  2;	  	non-compiled	[CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	16	None	add
31	[BUG]  [BUGGY]      final  double  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;  [CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]      final  double  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	        final    double    n2prod    =    n1    *    n2;    final  double  n2prod  =  n1  *  n2;	  	non-compiled	[CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	2	None	add
32	[BUG]  [BUGGY]      final  double  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]      final  double  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2);  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	        final    double    n2prod    =    n1    *    n2;    final  double  n2prod  =  n1  *  n2);	  	non-compiled	[CE]  ';'  expected	2	None	add
33	[BUG]  [BUGGY]      final  double  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2.;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]      final  double  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2.;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	        final    double    n2prod    =    n1    *    n2;    final  double  n2prod  =  n1  *  n2.;	  	non-compiled	[CE]  <identifier>  expected	2	None	add
34	[BUG]  [BUGGY]      final  double  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2  +  1;  [CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]      final  double  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2  +  1;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	        final    double    n2prod    =    n1    *    n2;    final  double  n2prod  =  n1  *  n2  +  1;	  	non-compiled	[CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	2	None	add
35	[BUG]  [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  +  n2;  final  double  EU  =  n1n2prod  /  2.0  +  n2;  [CE]  variable  EU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  +  n2;  final  double  EU  =  n1n2prod  /  2.0  +  n2;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final    double    EU    =    n1n2prod    /    2.0    +    n2;    final  double  EU  =  n1n2prod  /  2.0  +  n2;	  	non-compiled	[CE]  variable  EU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	11	None	add
36	[BUG]  [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  +  n2;  final  double  EU  =  n1n2prod  /  2.0  +  n2);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  +  n2;  final  double  EU  =  n1n2prod  /  2.0  +  n2);  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final    double    EU    =    n1n2prod    /    2.0    +    n2;    final  double  EU  =  n1n2prod  /  2.0  +  n2);	  	non-compiled	[CE]  ';'  expected	11	None	add
37	[BUG]  [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  +  n2;  final  double  EU  =  n1n2prod  /  2.0  +  n2.;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  +  n2;  final  double  EU  =  n1n2prod  /  2.0  +  n2.;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final    double    EU    =    n1n2prod    /    2.0    +    n2;    final  double  EU  =  n1n2prod  /  2.0  +  n2.;	  	non-compiled	[CE]  <identifier>  expected	11	None	add
38	[BUG]  [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  +  n2;  final  double  EU  =  n2prod  /  2.0  +  n2;  [CE]  variable  EU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  +  n2;  final  double  EU  =  n2prod  /  2.0  +  n2;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final    double    EU    =    n1n2prod    /    2.0    +    n2;    final  double  EU  =  n2prod  /  2.0  +  n2;	  	non-compiled	[CE]  variable  EU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	11	None	add
39	[BUG]  [BUGGY]  final  int  n2  =  n1  *  n2;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  int  n2  =  n1  *  n2;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  int  n2  =  n1  *  n2;	      final    double    n2    =    n1    *    n2;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	1	None	replace
40	[BUG]  [BUGGY]  final  double  n2  =  n1  *  n2prod;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  double  n2  =  n1  *  n2prod;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2  =  n1  *  n2prod;	      final    double    n2    =    n1    *    n2;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	1	None	replace
41	[BUG]  [BUGGY]  final  double  n2  =  n1  *  Umin;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  double  n2  =  n1  *  Umin;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2  =  n1  *  Umin;	      final    double    n2    =    n1    *    n2;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	1	None	replace
42	[BUG]  [BUGGY]  final  int  n2prod  =  (n1  +  n2)/  2.0;  [CE]  possible  loss  of  precision  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  int  n2prod  =  (n1  +  n2)/  2.0;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  int  n2prod  =  (n1  +  n2)/  2.0;	      final    double    n2prod    =    (n1    +    n2)/    2.0;    	non-compiled	[CE]  possible  loss  of  precision	14	None	replace
43	[BUG]  [BUGGY]  final  double  EU  =  n1n2prod  *  2.0;  final  double  EU  =  n1n2prod  *  2.0;  [CE]  variable  EU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  double  EU  =  n1n2prod  *  2.0;  final  double  EU  =  n1n2prod  *  2.0;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final    double    EU    =    n1n2prod    *    2.0;    final  double  EU  =  n1n2prod  *  2.0;	  	non-compiled	[CE]  variable  EU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	9	None	add
44	[BUG]  [BUGGY]  final  double  EU  =  n1n2prod  *  2.0;  final  double  EU  =  n2prod  *  2.0;  [CE]  variable  EU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]      AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  double  EU  =  n1n2prod  *  2.0;  final  double  EU  =  n2prod  *  2.0;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final    double    EU    =    n1n2prod    *    2.0;    final  double  EU  =  n2prod  *  2.0;	  	non-compiled	[CE]  variable  EU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	9	None	add
45	[BUG]  [BUGGY]  final  double  EU  =  n1n2prod  *  2.0;  Final  double  EU  =  n1n2prod  *  2.0;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  double  EU  =  n1n2prod  *  2.0;  Final  double  EU  =  n1n2prod  *  2.0;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final    double    EU    =    n1n2prod    *    2.0;    Final  double  EU  =  n1n2prod  *  2.0;	  	non-compiled	[CE]  not  a  statement	9	None	add
46	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  double  EU  =  n1  /  2.0;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	add	final  double  EU  =  n1  /  2.0;	  final    double    EU    =    n2prod    /    2.0;    	compilable	  [FE]  AssertionError  	8	2	replace
47	[BUG]  [BUGGY]  final  double  EU  =  n1  /  2.0;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  double  EU  =  n1  /  2.0;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  EU  =  n1  /  2.0;	  final    double    EU    =    n2prod    /    2.0;    	compilable	  [FE]  AssertionError  	8	2	replace
48	[BUG]  [BUGGY]  final  double  EU  =  n1prod  /  2.0;  [CE]  cannot  find  symbol  n1prod  [FE]          AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  double  EU  =  n1prod  /  2.0;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  EU  =  n1prod  /  2.0;	  final    double    EU    =    n2prod    /    2.0;    	non-compiled	[CE]  cannot  find  symbol  n1prod	8	None	replace
49	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  double  EU  =  n2  /  2.0  +  n1;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	add	final  double  EU  =  n2  /  2.0  +  n1;	  final    double    EU    =    n1n2prod    /    2.0    +    n2;    	compilable	  [FE]  AssertionError  	12	2	replace
50	[BUG]  [BUGGY]  final  double  EU  =  n2  /  2.0  +  n1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  double  EU  =  n2  /  2.0  +  n1;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  EU  =  n2  /  2.0  +  n1;	  final    double    EU    =    n1n2prod    /    2.0    +    n2;    	compilable	  [FE]  AssertionError  	12	2	replace
51	[BUG]  [BUGGY]  final  double  n2prod  =  n1  *  Umin;  [CE]  cannot  find  symbol  EU  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  double  n2prod  =  n1  *  Umin;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2prod  =  n1  *  Umin;	      final    double    n2prod    =    n1    *    n2;    	non-compiled	[CE]  cannot  find  symbol  EU	3	None	replace
52	[BUG]  [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  +  n2;  final  double  EU  =  n1n2prod  /  2.0  +  n2,  n1;  [CE]  variable  EU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  +  n2;  final  double  EU  =  n1n2prod  /  2.0  +  n2,  n1;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final    double    EU    =    n1n2prod    /    2.0    +    n2;    final  double  EU  =  n1n2prod  /  2.0  +  n2,  n1;	  	non-compiled	[CE]  variable  EU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	11	None	add
53	[BUG]  [BUGGY]  final  double  n2prod  =  (n2  +  n1)/  2.0;  [CE]  cannot  find  symbol  EU  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  double  n2prod  =  (n2  +  n1)/  2.0;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2prod  =  (n2  +  n1)/  2.0;	      final    double    n2prod    =    (n1    +    n2)/    2.0;    	non-compiled	[CE]  cannot  find  symbol  EU	14	None	replace
54	[BUG]  [BUGGY]  final  double  EU  =  n1n2prod  *  2.0;  static  final  double  EU  =  n1n2prod  *  2.0;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  double  EU  =  n1n2prod  *  2.0;  static  final  double  EU  =  n1n2prod  *  2.0;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final    double    EU    =    n1n2prod    *    2.0;    static  final  double  EU  =  n1n2prod  *  2.0;	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
55	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]      final  double  n2prod  =  n1  +  n2;  final  double  n1prod  =  n1  +  n2;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	add	        final    double    n2prod    =    n1    +    n2;    final  double  n1prod  =  n1  +  n2;	  	compilable	  [FE]  AssertionError  	6	1	add
56	[BUG]  [BUGGY]      final  double  n2prod  =  n1  +  n2;  final  double  n1prod  =  n1  +  n2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]      final  double  n2prod  =  n1  +  n2;  final  double  n1prod  =  n1  +  n2;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	        final    double    n2prod    =    n1    +    n2;    final  double  n1prod  =  n1  +  n2;	  	compilable	  [FE]  AssertionError  	6	1	add
57	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]      final  double  n2prod  =  n1  *  n2;  final  double  n1prod  =  n1  *  n2;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	add	        final    double    n2prod    =    n1    *    n2;    final  double  n1prod  =  n1  *  n2;	  	compilable	  [FE]  AssertionError  	2	1	add
58	[BUG]  [BUGGY]      final  double  n2prod  =  n1  *  n2;  final  double  n1prod  =  n1  *  n2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]      final  double  n2prod  =  n1  *  n2;  final  double  n1prod  =  n1  *  n2;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	        final    double    n2prod    =    n1    *    n2;    final  double  n1prod  =  n1  *  n2;	  	compilable	  [FE]  AssertionError  	2	1	add
59	[BUG]  [BUGGY]      final  double  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2,  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]      final  double  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1  *  n2,  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	        final    double    n2prod    =    n1    *    n2;    final  double  n2prod  =  n1  *  n2,	  	non-compiled	[CE]  <identifier>  expected	2	None	add
60	[BUG]  [BUGGY]  final  double  n2  =  n2  *  n1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  double  n2  =  n2  *  n1;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2  =  n2  *  n1;	      final    double    n2    =    n1    *    n2;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	1	None	replace
61	[BUG]  [BUGGY]      final  double  n2prod  =  (n1  +  n2)/  2.0;  final  double  n2)prod  =  (n1  +  n2)/  2.0;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]      final  double  n2prod  =  (n1  +  n2)/  2.0;  final  double  n2)prod  =  (n1  +  n2)/  2.0;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	        final    double    n2prod    =    (n1    +    n2)/    2.0;    final  double  n2)prod  =  (n1  +  n2)/  2.0;	  	non-compiled	[CE]  ';'  expected	13	None	add
62	[BUG]  [BUGGY]  final  double  n2  =  n1  *  Umin  +  1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  double  n2  =  n1  *  Umin  +  1;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2  =  n1  *  Umin  +  1;	      final    double    n2    =    n1    *    n2    +    1;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	5	None	replace
63	[BUG]  [BUGGY]  final  double  EU  =  n2Prod  /  2.0;  [CE]  cannot  find  symbol  n2Prod  [FE]        AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  double  EU  =  n2Prod  /  2.0;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  EU  =  n2Prod  /  2.0;	  final    double    EU    =    n2prod    /    2.0;    	non-compiled	[CE]  cannot  find  symbol  n2Prod	8	None	replace
64	[BUG]  [BUGGY]  final  double  EU  =  n1n2prod  *  2.0;  final  double  EU  =  n1N2prod  *  2.0;  [CE]  variable  EU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  double  EU  =  n1n2prod  *  2.0;  final  double  EU  =  n1N2prod  *  2.0;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final    double    EU    =    n1n2prod    *    2.0;    final  double  EU  =  n1N2prod  *  2.0;	  	non-compiled	[CE]  variable  EU  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	9	None	add
65	[BUG]  [BUGGY]  final  double  n2  =  n2  +  n1;  [CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  double  n2  =  n2  +  n1;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2  =  n2  +  n1;	      final    double    n2    =    n1    +    n2;    	non-compiled	[CE]  variable  n2  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	4	None	replace
66	[BUG]  [BUGGY]  final  double  n2prod  =  n1  +  n2  +  1;  [CE]  cannot  find  symbol  EU  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  double  n2prod  =  n1  +  n2  +  1;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2prod  =  n1  +  n2  +  1;	      final    double    n2prod    =    n1    *    n2    +    1;    	non-compiled	[CE]  cannot  find  symbol  EU	17	None	replace
67	[BUG]  [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  +  n2;  Final  double  EU  =  n1n2prod  /  2.0  +  n2;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  double  EU  =  n1n2prod  /  2.0  +  n2;  Final  double  EU  =  n1n2prod  /  2.0  +  n2;  [BUGGY]    final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final    double    EU    =    n1n2prod    /    2.0    +    n2;    Final  double  EU  =  n1n2prod  /  2.0  +  n2;	  	non-compiled	[CE]  not  a  statement	11	None	add
68	[BUG]  [BUGGY]      final  double  n2prod  =  n1  +  n2;  final  double  n2prod  =  n1)  +  n2;  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]      final  double  n2prod  =  n1  +  n2;  final  double  n2prod  =  n1)  +  n2;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	        final    double    n2prod    =    n1    +    n2;    final  double  n2prod  =  n1)  +  n2;	  	non-compiled	[CE]  ';'  expected	6	None	add
69	[BUG]  [BUGGY]  final  double  n2prod  =  n1  /  n2;  [CE]  cannot  find  symbol  EU  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]  final  double  n2prod  =  n1  /  n2;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	final  double  n2prod  =  n1  /  n2;	      final    double    n2prod    =    n1    *    n2;    	non-compiled	[CE]  cannot  find  symbol  EU	3	None	replace
70	[BUG]  [BUGGY]      final  double  n2prod  =  n1  *  n2;  final  double  n2prod  =  n0  *  n2;  [CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]      final  double  n2prod  =  n1  *  n2;  final  double  n2prod  =  n0  *  n2;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	        final    double    n2prod    =    n1    *    n2;    final  double  n2prod  =  n0  *  n2;	  	non-compiled	[CE]  variable  n2prod  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	2	None	add
71	[BUG]  [BUGGY]      final  double  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1.  *  n2;  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]    private  double  calculateAsymptoticPValue(final  double  Umin,  final  int  n1,  final  int  n2)  throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;      [BUGGY]      final  double  n2prod  =  n1  *  n2;  final  double  n2prod  =  n1.  *  n2;  [BUGGY]    final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	        final    double    n2prod    =    n1    *    n2;    final  double  n2prod  =  n1.  *  n2;	  	non-compiled	[CE]  <identifier>  expected	2	None	add
