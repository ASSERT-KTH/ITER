bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] } [FE] AssertionError [CONTEXT] throws NullArgumentException, NoDataException { if (x == null || y == null) { throw new NullArgumentException(); } if (x.length == 0 || y.length == 0) { throw new NoDataException(); } [BUGGY] } [BUGGY]  [CLASS] MannWhitneyUTest [METHOD] ensureDataConformance [RETURN_TYPE] void  final double[] x final double[] y [VARIABLES] double[] x y NaturalRanking naturalRanking boolean  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	82	82	1	replace	
2	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] throws NullArgumentException, NoDataException { if (x == null || y == null) { throw new NullArgumentException(); } if (x.length == 0 || y.length == 0) { throw new NoDataException(); } [BUGGY] [BUGGY] } [CLASS] MannWhitneyUTest [METHOD] ensureDataConformance [RETURN_TYPE] void  final double[] x final double[] y [VARIABLES] double[] x y NaturalRanking naturalRanking boolean  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	82	82	1	add	
3	[BUG] [BUGGY] final double[] z = new double[x.length + y.length]; [FE] AssertionError [CONTEXT] private double[] concatenateSamples(final double[] x, final double[] y) { [BUGGY] final double[] z = new double[x.length + y.length]; [BUGGY]  System.arraycopy(x, 0, z, 0, x.length); System.arraycopy(y, 0, z, x.length, y.length); return z; } [CLASS] MannWhitneyUTest [METHOD] concatenateSamples [RETURN_TYPE] double[]  final double[] x final double[] y [VARIABLES] double[] x y z NaturalRanking naturalRanking boolean  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	90	90	1	replace	
4	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private double[] concatenateSamples(final double[] x, final double[] y) { [BUGGY] [BUGGY] final double[] z = new double[x.length + y.length]; System.arraycopy(x, 0, z, 0, x.length); System.arraycopy(y, 0, z, x.length, y.length); return z; } [CLASS] MannWhitneyUTest [METHOD] concatenateSamples [RETURN_TYPE] double[]  final double[] x final double[] y [VARIABLES] double[] x y z NaturalRanking naturalRanking boolean  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	90	90	1	add	
5	[BUG] [BUGGY] System.arraycopy(x, 0, z, 0, x.length); [FE] AssertionError [CONTEXT] private double[] concatenateSamples(final double[] x, final double[] y) { final double[] z = new double[x.length + y.length]; [BUGGY] System.arraycopy(x, 0, z, 0, x.length); [BUGGY] System.arraycopy(y, 0, z, x.length, y.length); return z; } [CLASS] MannWhitneyUTest [METHOD] concatenateSamples [RETURN_TYPE] double[]  final double[] x final double[] y [VARIABLES] double[] x y z NaturalRanking naturalRanking boolean  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	92	92	1	replace	
6	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private double[] concatenateSamples(final double[] x, final double[] y) { final double[] z = new double[x.length + y.length]; [BUGGY] [BUGGY] System.arraycopy(x, 0, z, 0, x.length); System.arraycopy(y, 0, z, x.length, y.length); return z; } [CLASS] MannWhitneyUTest [METHOD] concatenateSamples [RETURN_TYPE] double[]  final double[] x final double[] y [VARIABLES] double[] x y z NaturalRanking naturalRanking boolean  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	92	92	1	add	
7	[BUG] [BUGGY] System.arraycopy(y, 0, z, x.length, y.length); [FE] AssertionError [CONTEXT] private double[] concatenateSamples(final double[] x, final double[] y) { final double[] z = new double[x.length + y.length]; System.arraycopy(x, 0, z, 0, x.length); [BUGGY] System.arraycopy(y, 0, z, x.length, y.length); [BUGGY]  return z; } [CLASS] MannWhitneyUTest [METHOD] concatenateSamples [RETURN_TYPE] double[]  final double[] x final double[] y [VARIABLES] double[] x y z NaturalRanking naturalRanking boolean  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	93	93	1	replace	
8	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private double[] concatenateSamples(final double[] x, final double[] y) { final double[] z = new double[x.length + y.length]; System.arraycopy(x, 0, z, 0, x.length); [BUGGY] [BUGGY] System.arraycopy(y, 0, z, x.length, y.length); return z; } [CLASS] MannWhitneyUTest [METHOD] concatenateSamples [RETURN_TYPE] double[]  final double[] x final double[] y [VARIABLES] double[] x y z NaturalRanking naturalRanking boolean  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	93	93	1	add	
9	[BUG] [BUGGY] return z; [FE] AssertionError [CONTEXT] private double[] concatenateSamples(final double[] x, final double[] y) { final double[] z = new double[x.length + y.length]; System.arraycopy(x, 0, z, 0, x.length); System.arraycopy(y, 0, z, x.length, y.length); [BUGGY] return z; [BUGGY] } [CLASS] MannWhitneyUTest [METHOD] concatenateSamples [RETURN_TYPE] double[]  final double[] x final double[] y [VARIABLES] double[] x y z NaturalRanking naturalRanking boolean  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	95	95	1	replace	
10	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private double[] concatenateSamples(final double[] x, final double[] y) { final double[] z = new double[x.length + y.length]; System.arraycopy(x, 0, z, 0, x.length); System.arraycopy(y, 0, z, x.length, y.length); [BUGGY] [BUGGY] return z; } [CLASS] MannWhitneyUTest [METHOD] concatenateSamples [RETURN_TYPE] double[]  final double[] x final double[] y [VARIABLES] double[] x y z NaturalRanking naturalRanking boolean  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	95	95	1	add	
11	[BUG] [BUGGY] ensureDataConformance(x, y); [FE] AssertionError [CONTEXT] throws NullArgumentException, NoDataException { [BUGGY] ensureDataConformance(x, y); [BUGGY]  final double[] z = concatenateSamples(x, y); final double[] ranks = naturalRanking.rank(z); double sumRankX = 0;      [CLASS] MannWhitneyUTest [METHOD] mannWhitneyU [RETURN_TYPE] double  final double[] x final double[] y [VARIABLES] NaturalRanking naturalRanking boolean double[] ranks x y z double U1 U2 sumRankX int i  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	129	129	1	replace	
12	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] throws NullArgumentException, NoDataException { [BUGGY] [BUGGY] ensureDataConformance(x, y); final double[] z = concatenateSamples(x, y); final double[] ranks = naturalRanking.rank(z); double sumRankX = 0;      [CLASS] MannWhitneyUTest [METHOD] mannWhitneyU [RETURN_TYPE] double  final double[] x final double[] y [VARIABLES] NaturalRanking naturalRanking boolean double[] ranks x y z double U1 U2 sumRankX int i  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	129	129	1	add	
13	[BUG] [BUGGY] final double[] z = concatenateSamples(x, y); [FE] AssertionError [CONTEXT] throws NullArgumentException, NoDataException { ensureDataConformance(x, y); [BUGGY] final double[] z = concatenateSamples(x, y); [BUGGY] final double[] ranks = naturalRanking.rank(z); double sumRankX = 0;     for (int i = 0; i < x.length; ++i) { sumRankX += ranks[i]; [CLASS] MannWhitneyUTest [METHOD] mannWhitneyU [RETURN_TYPE] double  final double[] x final double[] y [VARIABLES] NaturalRanking naturalRanking boolean double[] ranks x y z double U1 U2 sumRankX int i  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	131	131	1	replace	
14	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] throws NullArgumentException, NoDataException { ensureDataConformance(x, y); [BUGGY] [BUGGY] final double[] z = concatenateSamples(x, y); final double[] ranks = naturalRanking.rank(z); double sumRankX = 0;     for (int i = 0; i < x.length; ++i) { sumRankX += ranks[i]; [CLASS] MannWhitneyUTest [METHOD] mannWhitneyU [RETURN_TYPE] double  final double[] x final double[] y [VARIABLES] NaturalRanking naturalRanking boolean double[] ranks x y z double U1 U2 sumRankX int i  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	131	131	1	add	
15	[BUG] [BUGGY] final double[] ranks = naturalRanking.rank(z); [FE] AssertionError [CONTEXT] throws NullArgumentException, NoDataException { ensureDataConformance(x, y); final double[] z = concatenateSamples(x, y); [BUGGY] final double[] ranks = naturalRanking.rank(z); [BUGGY]  double sumRankX = 0;     for (int i = 0; i < x.length; ++i) { sumRankX += ranks[i]; } [CLASS] MannWhitneyUTest [METHOD] mannWhitneyU [RETURN_TYPE] double  final double[] x final double[] y [VARIABLES] NaturalRanking naturalRanking boolean double[] ranks x y z double U1 U2 sumRankX int i  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	132	132	1	replace	
16	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] throws NullArgumentException, NoDataException { ensureDataConformance(x, y); final double[] z = concatenateSamples(x, y); [BUGGY] [BUGGY] final double[] ranks = naturalRanking.rank(z); double sumRankX = 0;     for (int i = 0; i < x.length; ++i) { sumRankX += ranks[i]; } [CLASS] MannWhitneyUTest [METHOD] mannWhitneyU [RETURN_TYPE] double  final double[] x final double[] y [VARIABLES] NaturalRanking naturalRanking boolean double[] ranks x y z double U1 U2 sumRankX int i  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	132	132	1	add	
17	[BUG] [BUGGY] double sumRankX = 0; [FE] AssertionError [CONTEXT] throws NullArgumentException, NoDataException { ensureDataConformance(x, y); final double[] z = concatenateSamples(x, y); final double[] ranks = naturalRanking.rank(z); [BUGGY] double sumRankX = 0; [BUGGY]      for (int i = 0; i < x.length; ++i) { sumRankX += ranks[i]; }   [CLASS] MannWhitneyUTest [METHOD] mannWhitneyU [RETURN_TYPE] double  final double[] x final double[] y [VARIABLES] NaturalRanking naturalRanking boolean double[] ranks x y z double U1 U2 sumRankX int i  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	134	134	1	replace	
18	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] throws NullArgumentException, NoDataException { ensureDataConformance(x, y); final double[] z = concatenateSamples(x, y); final double[] ranks = naturalRanking.rank(z); [BUGGY] [BUGGY] double sumRankX = 0;     for (int i = 0; i < x.length; ++i) { sumRankX += ranks[i]; }   [CLASS] MannWhitneyUTest [METHOD] mannWhitneyU [RETURN_TYPE] double  final double[] x final double[] y [VARIABLES] NaturalRanking naturalRanking boolean double[] ranks x y z double U1 U2 sumRankX int i  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	134	134	1	add	
19	[BUG] [BUGGY] for (int i = 0; i < x.length; ++i) { [FE] AssertionError [CONTEXT] final double[] z = concatenateSamples(x, y); final double[] ranks = naturalRanking.rank(z); double sumRankX = 0;     [BUGGY] for (int i = 0; i < x.length; ++i) { [BUGGY] sumRankX += ranks[i]; }     final double U1 = sumRankX - (x.length * (x.length + 1)) / 2;   [CLASS] MannWhitneyUTest [METHOD] mannWhitneyU [RETURN_TYPE] double  final double[] x final double[] y [VARIABLES] NaturalRanking naturalRanking boolean double[] ranks x y z double U1 U2 sumRankX int i  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	140	140	1	replace	
20	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] final double[] z = concatenateSamples(x, y); final double[] ranks = naturalRanking.rank(z); double sumRankX = 0;     [BUGGY] [BUGGY] for (int i = 0; i < x.length; ++i) { sumRankX += ranks[i]; }     final double U1 = sumRankX - (x.length * (x.length + 1)) / 2;   [CLASS] MannWhitneyUTest [METHOD] mannWhitneyU [RETURN_TYPE] double  final double[] x final double[] y [VARIABLES] NaturalRanking naturalRanking boolean double[] ranks x y z double U1 U2 sumRankX int i  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	140	140	1	add	
21	[BUG] [BUGGY] sumRankX += ranks[i]; [FE] AssertionError [CONTEXT] final double[] z = concatenateSamples(x, y); final double[] ranks = naturalRanking.rank(z); double sumRankX = 0;     for (int i = 0; i < x.length; ++i) { [BUGGY] sumRankX += ranks[i]; [BUGGY] }     final double U1 = sumRankX - (x.length * (x.length + 1)) / 2;    [CLASS] MannWhitneyUTest [METHOD] mannWhitneyU [RETURN_TYPE] double  final double[] x final double[] y [VARIABLES] NaturalRanking naturalRanking boolean double[] ranks x y z double U1 U2 sumRankX int i  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	141	141	1	replace	
22	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] final double[] z = concatenateSamples(x, y); final double[] ranks = naturalRanking.rank(z); double sumRankX = 0;     for (int i = 0; i < x.length; ++i) { [BUGGY] [BUGGY] sumRankX += ranks[i]; }     final double U1 = sumRankX - (x.length * (x.length + 1)) / 2;    [CLASS] MannWhitneyUTest [METHOD] mannWhitneyU [RETURN_TYPE] double  final double[] x final double[] y [VARIABLES] NaturalRanking naturalRanking boolean double[] ranks x y z double U1 U2 sumRankX int i  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	141	141	1	add	
23	[BUG] [BUGGY] final double U1 = sumRankX - (x.length * (x.length + 1)) / 2; [FE] AssertionError [CONTEXT]   for (int i = 0; i < x.length; ++i) { sumRankX += ranks[i]; }     [BUGGY] final double U1 = sumRankX - (x.length * (x.length + 1)) / 2; [BUGGY]     final double U2 = x.length * y.length - U1; return FastMath.max(U1, U2); } [CLASS] MannWhitneyUTest [METHOD] mannWhitneyU [RETURN_TYPE] double  final double[] x final double[] y [VARIABLES] NaturalRanking naturalRanking boolean double[] ranks x y z double U1 U2 sumRankX int i  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	148	148	1	replace	
24	[BUG] [BUGGY] [FE] AssertionError [CONTEXT]   for (int i = 0; i < x.length; ++i) { sumRankX += ranks[i]; }     [BUGGY] [BUGGY] final double U1 = sumRankX - (x.length * (x.length + 1)) / 2;    final double U2 = x.length * y.length - U1; return FastMath.max(U1, U2); } [CLASS] MannWhitneyUTest [METHOD] mannWhitneyU [RETURN_TYPE] double  final double[] x final double[] y [VARIABLES] NaturalRanking naturalRanking boolean double[] ranks x y z double U1 U2 sumRankX int i  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	148	148	1	add	
25	[BUG] [BUGGY] final double U2 = x.length * y.length - U1; [FE] AssertionError [CONTEXT]     final double U1 = sumRankX - (x.length * (x.length + 1)) / 2;    [BUGGY] final double U2 = x.length * y.length - U1; [BUGGY]  return FastMath.max(U1, U2); } [CLASS] MannWhitneyUTest [METHOD] mannWhitneyU [RETURN_TYPE] double  final double[] x final double[] y [VARIABLES] NaturalRanking naturalRanking boolean double[] ranks x y z double U1 U2 sumRankX int i  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	153	153	1	replace	
26	[BUG] [BUGGY] [FE] AssertionError [CONTEXT]     final double U1 = sumRankX - (x.length * (x.length + 1)) / 2;    [BUGGY] [BUGGY] final double U2 = x.length * y.length - U1; return FastMath.max(U1, U2); } [CLASS] MannWhitneyUTest [METHOD] mannWhitneyU [RETURN_TYPE] double  final double[] x final double[] y [VARIABLES] NaturalRanking naturalRanking boolean double[] ranks x y z double U1 U2 sumRankX int i  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	153	153	1	add	
27	[BUG] [BUGGY] return FastMath.max(U1, U2); [FE] AssertionError [CONTEXT]    final double U1 = sumRankX - (x.length * (x.length + 1)) / 2;    final double U2 = x.length * y.length - U1; [BUGGY] return FastMath.max(U1, U2); [BUGGY] } [CLASS] MannWhitneyUTest [METHOD] mannWhitneyU [RETURN_TYPE] double  final double[] x final double[] y [VARIABLES] NaturalRanking naturalRanking boolean double[] ranks x y z double U1 U2 sumRankX int i  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	155	155	1	replace	
28	[BUG] [BUGGY] [FE] AssertionError [CONTEXT]    final double U1 = sumRankX - (x.length * (x.length + 1)) / 2;    final double U2 = x.length * y.length - U1; [BUGGY] [BUGGY] return FastMath.max(U1, U2); } [CLASS] MannWhitneyUTest [METHOD] mannWhitneyU [RETURN_TYPE] double  final double[] x final double[] y [VARIABLES] NaturalRanking naturalRanking boolean double[] ranks x y z double U1 U2 sumRankX int i  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	155	155	1	add	
29	[BUG] [BUGGY] final int n1n2prod = n1 * n2; [FE] AssertionError [CONTEXT] private double calculateAsymptoticPValue(final double Umin, final int n1, final int n2) throws ConvergenceException, MaxCountExceededException { [BUGGY] final int n1n2prod = n1 * n2; [BUGGY]   final double EU = n1n2prod / 2.0; final double VarU = n1n2prod * (n1 + n2 + 1) / 12.0; final double z = (Umin - EU) / FastMath.sqrt(VarU); final NormalDistribution standardNormal = new NormalDistribution(0, 1); return 2 * standardNormal.cumulativeProbability(z); [CLASS] MannWhitneyUTest [METHOD] calculateAsymptoticPValue [RETURN_TYPE] double  final double Umin final int n1 final int n2 [VARIABLES] NaturalRanking naturalRanking boolean NormalDistribution standardNormal double EU Umin VarU z int n1 n1n2prod n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	replace	
30	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private double calculateAsymptoticPValue(final double Umin, final int n1, final int n2) throws ConvergenceException, MaxCountExceededException { [BUGGY] [BUGGY] final int n1n2prod = n1 * n2;  final double EU = n1n2prod / 2.0; final double VarU = n1n2prod * (n1 + n2 + 1) / 12.0; final double z = (Umin - EU) / FastMath.sqrt(VarU); final NormalDistribution standardNormal = new NormalDistribution(0, 1); return 2 * standardNormal.cumulativeProbability(z); [CLASS] MannWhitneyUTest [METHOD] calculateAsymptoticPValue [RETURN_TYPE] double  final double Umin final int n1 final int n2 [VARIABLES] NaturalRanking naturalRanking boolean NormalDistribution standardNormal double EU Umin VarU z int n1 n1n2prod n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	173	173	1	add	
31	[BUG] [BUGGY] final double EU = n1n2prod / 2.0; [FE] AssertionError [CONTEXT] private double calculateAsymptoticPValue(final double Umin, final int n1, final int n2) throws ConvergenceException, MaxCountExceededException { final int n1n2prod = n1 * n2;  [BUGGY] final double EU = n1n2prod / 2.0; [BUGGY] final double VarU = n1n2prod * (n1 + n2 + 1) / 12.0; final double z = (Umin - EU) / FastMath.sqrt(VarU); final NormalDistribution standardNormal = new NormalDistribution(0, 1); return 2 * standardNormal.cumulativeProbability(z); } [CLASS] MannWhitneyUTest [METHOD] calculateAsymptoticPValue [RETURN_TYPE] double  final double Umin final int n1 final int n2 [VARIABLES] NaturalRanking naturalRanking boolean NormalDistribution standardNormal double EU Umin VarU z int n1 n1n2prod n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	replace	
32	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private double calculateAsymptoticPValue(final double Umin, final int n1, final int n2) throws ConvergenceException, MaxCountExceededException { final int n1n2prod = n1 * n2;  [BUGGY] [BUGGY] final double EU = n1n2prod / 2.0; final double VarU = n1n2prod * (n1 + n2 + 1) / 12.0; final double z = (Umin - EU) / FastMath.sqrt(VarU); final NormalDistribution standardNormal = new NormalDistribution(0, 1); return 2 * standardNormal.cumulativeProbability(z); } [CLASS] MannWhitneyUTest [METHOD] calculateAsymptoticPValue [RETURN_TYPE] double  final double Umin final int n1 final int n2 [VARIABLES] NaturalRanking naturalRanking boolean NormalDistribution standardNormal double EU Umin VarU z int n1 n1n2prod n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	176	176	1	add	
33	[BUG] [BUGGY] final double VarU = n1n2prod * (n1 + n2 + 1) / 12.0; [FE] AssertionError [CONTEXT] private double calculateAsymptoticPValue(final double Umin, final int n1, final int n2) throws ConvergenceException, MaxCountExceededException { final int n1n2prod = n1 * n2;  final double EU = n1n2prod / 2.0; [BUGGY] final double VarU = n1n2prod * (n1 + n2 + 1) / 12.0; [BUGGY]  final double z = (Umin - EU) / FastMath.sqrt(VarU); final NormalDistribution standardNormal = new NormalDistribution(0, 1); return 2 * standardNormal.cumulativeProbability(z); } [CLASS] MannWhitneyUTest [METHOD] calculateAsymptoticPValue [RETURN_TYPE] double  final double Umin final int n1 final int n2 [VARIABLES] NaturalRanking naturalRanking boolean NormalDistribution standardNormal double EU Umin VarU z int n1 n1n2prod n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	replace	
34	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private double calculateAsymptoticPValue(final double Umin, final int n1, final int n2) throws ConvergenceException, MaxCountExceededException { final int n1n2prod = n1 * n2;  final double EU = n1n2prod / 2.0; [BUGGY] [BUGGY] final double VarU = n1n2prod * (n1 + n2 + 1) / 12.0; final double z = (Umin - EU) / FastMath.sqrt(VarU); final NormalDistribution standardNormal = new NormalDistribution(0, 1); return 2 * standardNormal.cumulativeProbability(z); } [CLASS] MannWhitneyUTest [METHOD] calculateAsymptoticPValue [RETURN_TYPE] double  final double Umin final int n1 final int n2 [VARIABLES] NaturalRanking naturalRanking boolean NormalDistribution standardNormal double EU Umin VarU z int n1 n1n2prod n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	177	177	1	add	
35	[BUG] [BUGGY] final double z = (Umin - EU) / FastMath.sqrt(VarU); [FE] AssertionError [CONTEXT] final int n1, final int n2) throws ConvergenceException, MaxCountExceededException { final int n1n2prod = n1 * n2;  final double EU = n1n2prod / 2.0; final double VarU = n1n2prod * (n1 + n2 + 1) / 12.0; [BUGGY] final double z = (Umin - EU) / FastMath.sqrt(VarU); [BUGGY]  final NormalDistribution standardNormal = new NormalDistribution(0, 1); return 2 * standardNormal.cumulativeProbability(z); } [CLASS] MannWhitneyUTest [METHOD] calculateAsymptoticPValue [RETURN_TYPE] double  final double Umin final int n1 final int n2 [VARIABLES] NaturalRanking naturalRanking boolean NormalDistribution standardNormal double EU Umin VarU z int n1 n1n2prod n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	replace	
36	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] final int n1, final int n2) throws ConvergenceException, MaxCountExceededException { final int n1n2prod = n1 * n2;  final double EU = n1n2prod / 2.0; final double VarU = n1n2prod * (n1 + n2 + 1) / 12.0; [BUGGY] [BUGGY] final double z = (Umin - EU) / FastMath.sqrt(VarU); final NormalDistribution standardNormal = new NormalDistribution(0, 1); return 2 * standardNormal.cumulativeProbability(z); } [CLASS] MannWhitneyUTest [METHOD] calculateAsymptoticPValue [RETURN_TYPE] double  final double Umin final int n1 final int n2 [VARIABLES] NaturalRanking naturalRanking boolean NormalDistribution standardNormal double EU Umin VarU z int n1 n1n2prod n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	179	179	1	add	
37	[BUG] [BUGGY] final NormalDistribution standardNormal = new NormalDistribution(0, 1); [FE] AssertionError [CONTEXT] throws ConvergenceException, MaxCountExceededException { final int n1n2prod = n1 * n2;  final double EU = n1n2prod / 2.0; final double VarU = n1n2prod * (n1 + n2 + 1) / 12.0; final double z = (Umin - EU) / FastMath.sqrt(VarU); [BUGGY] final NormalDistribution standardNormal = new NormalDistribution(0, 1); [BUGGY]  return 2 * standardNormal.cumulativeProbability(z); } [CLASS] MannWhitneyUTest [METHOD] calculateAsymptoticPValue [RETURN_TYPE] double  final double Umin final int n1 final int n2 [VARIABLES] NaturalRanking naturalRanking boolean NormalDistribution standardNormal double EU Umin VarU z int n1 n1n2prod n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	
38	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] throws ConvergenceException, MaxCountExceededException { final int n1n2prod = n1 * n2;  final double EU = n1n2prod / 2.0; final double VarU = n1n2prod * (n1 + n2 + 1) / 12.0; final double z = (Umin - EU) / FastMath.sqrt(VarU); [BUGGY] [BUGGY] final NormalDistribution standardNormal = new NormalDistribution(0, 1); return 2 * standardNormal.cumulativeProbability(z); } [CLASS] MannWhitneyUTest [METHOD] calculateAsymptoticPValue [RETURN_TYPE] double  final double Umin final int n1 final int n2 [VARIABLES] NaturalRanking naturalRanking boolean NormalDistribution standardNormal double EU Umin VarU z int n1 n1n2prod n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	add	
39	[BUG] [BUGGY] return 2 * standardNormal.cumulativeProbability(z); [FE] AssertionError [CONTEXT] final int n1n2prod = n1 * n2;  final double EU = n1n2prod / 2.0; final double VarU = n1n2prod * (n1 + n2 + 1) / 12.0; final double z = (Umin - EU) / FastMath.sqrt(VarU); final NormalDistribution standardNormal = new NormalDistribution(0, 1); [BUGGY] return 2 * standardNormal.cumulativeProbability(z); [BUGGY] } [CLASS] MannWhitneyUTest [METHOD] calculateAsymptoticPValue [RETURN_TYPE] double  final double Umin final int n1 final int n2 [VARIABLES] NaturalRanking naturalRanking boolean NormalDistribution standardNormal double EU Umin VarU z int n1 n1n2prod n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	183	183	1	replace	
40	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] final int n1n2prod = n1 * n2;  final double EU = n1n2prod / 2.0; final double VarU = n1n2prod * (n1 + n2 + 1) / 12.0; final double z = (Umin - EU) / FastMath.sqrt(VarU); final NormalDistribution standardNormal = new NormalDistribution(0, 1); [BUGGY] [BUGGY] return 2 * standardNormal.cumulativeProbability(z); } [CLASS] MannWhitneyUTest [METHOD] calculateAsymptoticPValue [RETURN_TYPE] double  final double Umin final int n1 final int n2 [VARIABLES] NaturalRanking naturalRanking boolean NormalDistribution standardNormal double EU Umin VarU z int n1 n1n2prod n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	183	183	1	add	
41	[BUG] [BUGGY] final double Umax = mannWhitneyU(x, y); [FE] AssertionError [CONTEXT] public double mannWhitneyUTest(final double[] x, final double[] y) throws NullArgumentException, NoDataException, ConvergenceException, MaxCountExceededException { ensureDataConformance(x, y); [BUGGY] final double Umax = mannWhitneyU(x, y); [BUGGY]     final double Umin = x.length * y.length - Umax; return calculateAsymptoticPValue(Umin, x.length, y.length); } [CLASS] MannWhitneyUTest [METHOD] mannWhitneyUTest [RETURN_TYPE] double  final double[] x final double[] y [VARIABLES] NaturalRanking naturalRanking boolean double[] x y double Umax Umin  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	224	224	1	replace	
42	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public double mannWhitneyUTest(final double[] x, final double[] y) throws NullArgumentException, NoDataException, ConvergenceException, MaxCountExceededException { ensureDataConformance(x, y); [BUGGY] [BUGGY] final double Umax = mannWhitneyU(x, y);    final double Umin = x.length * y.length - Umax; return calculateAsymptoticPValue(Umin, x.length, y.length); } [CLASS] MannWhitneyUTest [METHOD] mannWhitneyUTest [RETURN_TYPE] double  final double[] x final double[] y [VARIABLES] NaturalRanking naturalRanking boolean double[] x y double Umax Umin  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	224	224	1	add	
43	[BUG] [BUGGY] final double Umin = x.length * y.length - Umax; [FE] AssertionError [CONTEXT] throws NullArgumentException, NoDataException, ConvergenceException, MaxCountExceededException { ensureDataConformance(x, y); final double Umax = mannWhitneyU(x, y);    [BUGGY] final double Umin = x.length * y.length - Umax; [BUGGY]  return calculateAsymptoticPValue(Umin, x.length, y.length); } [CLASS] MannWhitneyUTest [METHOD] mannWhitneyUTest [RETURN_TYPE] double  final double[] x final double[] y [VARIABLES] NaturalRanking naturalRanking boolean double[] x y double Umax Umin  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	229	229	1	replace	
44	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] throws NullArgumentException, NoDataException, ConvergenceException, MaxCountExceededException { ensureDataConformance(x, y); final double Umax = mannWhitneyU(x, y);    [BUGGY] [BUGGY] final double Umin = x.length * y.length - Umax; return calculateAsymptoticPValue(Umin, x.length, y.length); } [CLASS] MannWhitneyUTest [METHOD] mannWhitneyUTest [RETURN_TYPE] double  final double[] x final double[] y [VARIABLES] NaturalRanking naturalRanking boolean double[] x y double Umax Umin  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	229	229	1	add	
45	[BUG] [BUGGY] return calculateAsymptoticPValue(Umin, x.length, y.length); [FE] AssertionError [CONTEXT] ensureDataConformance(x, y); final double Umax = mannWhitneyU(x, y);    final double Umin = x.length * y.length - Umax; [BUGGY] return calculateAsymptoticPValue(Umin, x.length, y.length); [BUGGY] } [CLASS] MannWhitneyUTest [METHOD] mannWhitneyUTest [RETURN_TYPE] double  final double[] x final double[] y [VARIABLES] NaturalRanking naturalRanking boolean double[] x y double Umax Umin  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	231	231	1	replace	
46	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] ensureDataConformance(x, y); final double Umax = mannWhitneyU(x, y);    final double Umin = x.length * y.length - Umax; [BUGGY] [BUGGY] return calculateAsymptoticPValue(Umin, x.length, y.length); } [CLASS] MannWhitneyUTest [METHOD] mannWhitneyUTest [RETURN_TYPE] double  final double[] x final double[] y [VARIABLES] NaturalRanking naturalRanking boolean double[] x y double Umax Umin  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	231	231	1	add	
47	[BUG] [BUGGY] public MannWhitneyUTest() { [FE] AssertionError [CONTEXT] [BUGGY] public MannWhitneyUTest() { [BUGGY] naturalRanking = new NaturalRanking(NaNStrategy.FIXED, TiesStrategy.AVERAGE); } [CLASS] MannWhitneyUTest [METHOD] <init> [RETURN_TYPE] MannWhitneyUTest()  [VARIABLES] NaturalRanking naturalRanking boolean  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.5773502691896258	44	44	1	replace	
48	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] [BUGGY] [BUGGY] public MannWhitneyUTest() { naturalRanking = new NaturalRanking(NaNStrategy.FIXED, TiesStrategy.AVERAGE); } [CLASS] MannWhitneyUTest [METHOD] <init> [RETURN_TYPE] MannWhitneyUTest()  [VARIABLES] NaturalRanking naturalRanking boolean  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.5773502691896258	44	44	1	add	
49	[BUG] [BUGGY] naturalRanking = new NaturalRanking(NaNStrategy.FIXED, TiesStrategy.AVERAGE); [FE] AssertionError [CONTEXT] public MannWhitneyUTest() { [BUGGY] naturalRanking = new NaturalRanking(NaNStrategy.FIXED,    TiesStrategy.AVERAGE); [BUGGY] TiesStrategy.AVERAGE); } [CLASS] MannWhitneyUTest [METHOD] <init> [RETURN_TYPE] MannWhitneyUTest()  [VARIABLES] NaturalRanking naturalRanking boolean  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.5773502691896258	45	46	1	replace	
50	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public MannWhitneyUTest() { [BUGGY] [BUGGY] naturalRanking = new NaturalRanking(NaNStrategy.FIXED,    TiesStrategy.AVERAGE); TiesStrategy.AVERAGE); } [CLASS] MannWhitneyUTest [METHOD] <init> [RETURN_TYPE] MannWhitneyUTest()  [VARIABLES] NaturalRanking naturalRanking boolean  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.5773502691896258	45	46	1	add	
51	[BUG] [BUGGY] } [FE] AssertionError [CONTEXT] public MannWhitneyUTest() { naturalRanking = new NaturalRanking(NaNStrategy.FIXED, TiesStrategy.AVERAGE); [BUGGY] } [BUGGY]  [CLASS] MannWhitneyUTest [METHOD] <init> [RETURN_TYPE] MannWhitneyUTest()  [VARIABLES] NaturalRanking naturalRanking boolean  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.5773502691896258	47	47	1	replace	
52	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public MannWhitneyUTest() { naturalRanking = new NaturalRanking(NaNStrategy.FIXED, TiesStrategy.AVERAGE); [BUGGY] [BUGGY] } [CLASS] MannWhitneyUTest [METHOD] <init> [RETURN_TYPE] MannWhitneyUTest()  [VARIABLES] NaturalRanking naturalRanking boolean  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.5773502691896258	47	47	1	add	
53	[BUG] [BUGGY] if (x == null || y == null) { [FE] AssertionError [CONTEXT] private void ensureDataConformance(final double[] x, final double[] y) throws NullArgumentException, NoDataException { [BUGGY] if (x == null ||   y == null) { [BUGGY] y == null) { throw new NullArgumentException(); } if (x.length == 0 || y.length == 0) { throw new NoDataException(); } } [CLASS] MannWhitneyUTest [METHOD] ensureDataConformance [RETURN_TYPE] void  final double[] x final double[] y [VARIABLES] double[] x y NaturalRanking naturalRanking boolean  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.5773502691896258	74	75	1	replace	
54	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private void ensureDataConformance(final double[] x, final double[] y) throws NullArgumentException, NoDataException { [BUGGY] [BUGGY] if (x == null ||   y == null) { y == null) { throw new NullArgumentException(); } if (x.length == 0 || y.length == 0) { throw new NoDataException(); } } [CLASS] MannWhitneyUTest [METHOD] ensureDataConformance [RETURN_TYPE] void  final double[] x final double[] y [VARIABLES] double[] x y NaturalRanking naturalRanking boolean  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.5773502691896258	74	75	1	add	
55	[BUG] [BUGGY] if (x.length == 0 || y.length == 0) { [FE] AssertionError [CONTEXT] private void ensureDataConformance(final double[] x, final double[] y) throws NullArgumentException, NoDataException { if (x == null || y == null) { throw new NullArgumentException(); } [BUGGY] if (x.length == 0 ||   y.length == 0) { [BUGGY] y.length == 0) { throw new NoDataException(); } } [CLASS] MannWhitneyUTest [METHOD] ensureDataConformance [RETURN_TYPE] void  final double[] x final double[] y [VARIABLES] double[] x y NaturalRanking naturalRanking boolean  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.5773502691896258	78	79	1	replace	
56	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private void ensureDataConformance(final double[] x, final double[] y) throws NullArgumentException, NoDataException { if (x == null || y == null) { throw new NullArgumentException(); } [BUGGY] [BUGGY] if (x.length == 0 ||   y.length == 0) { y.length == 0) { throw new NoDataException(); } } [CLASS] MannWhitneyUTest [METHOD] ensureDataConformance [RETURN_TYPE] void  final double[] x final double[] y [VARIABLES] double[] x y NaturalRanking naturalRanking boolean  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.5773502691896258	78	79	1	add	
57	[BUG] [BUGGY] ensureDataConformance(x, y); [FE] AssertionError [CONTEXT] public double mannWhitneyUTest(final double[] x, final double[] y) throws NullArgumentException, NoDataException, ConvergenceException, MaxCountExceededException { [BUGGY] ensureDataConformance(x, y); [BUGGY]  final double Umax = mannWhitneyU(x, y);    final double Umin = x.length * y.length - Umax; return calculateAsymptoticPValue(Umin, x.length, y.length); } [CLASS] MannWhitneyUTest [METHOD] mannWhitneyUTest [RETURN_TYPE] double  final double[] x final double[] y [VARIABLES] NaturalRanking naturalRanking boolean double[] x y double Umax Umin  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.5773502691896258	222	222	1	replace	
58	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public double mannWhitneyUTest(final double[] x, final double[] y) throws NullArgumentException, NoDataException, ConvergenceException, MaxCountExceededException { [BUGGY] [BUGGY] ensureDataConformance(x, y); final double Umax = mannWhitneyU(x, y);    final double Umin = x.length * y.length - Umax; return calculateAsymptoticPValue(Umin, x.length, y.length); } [CLASS] MannWhitneyUTest [METHOD] mannWhitneyUTest [RETURN_TYPE] double  final double[] x final double[] y [VARIABLES] NaturalRanking naturalRanking boolean double[] x y double Umax Umin  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.5773502691896258	222	222	1	add	
