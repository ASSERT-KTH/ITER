bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  VarU.class);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  VarU.class);  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  VarU.class);	      final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU,    z);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	5	None	replace
2	[BUG]  [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  VarU);  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  VarU);	      final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU,    z);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	5	None	replace
3	[BUG]  [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  VarU.valueOf(n1n2prod));  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                    AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  VarU.valueOf(n1n2prod));  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  VarU.valueOf(n1n2prod));	      final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU,    z);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	5	None	replace
4	[BUG]  [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  VarU.intValue());  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                      AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  VarU.intValue());  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  VarU.intValue());	      final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU,    z);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	5	None	replace
5	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  VarU);  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  VarU);	      final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	13	None	replace
6	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  1);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  1);  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  1);	      final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	13	None	replace
7	[BUG]  [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.toLowerCase());  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.toLowerCase());  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.toLowerCase());	      final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU.toUpperCase());    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	23	None	replace
8	[BUG]  [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU.toUpperCase());  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU.toUpperCase());  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU.toUpperCase());	      final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU.toUpperCase());    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	23	None	replace
9	[BUG]  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.toUpperCase());  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.toUpperCase());  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.toUpperCase());	      final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU.toUpperCase());    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	23	None	replace
10	[BUG]  [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.sqrt(n1n2prod));  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.sqrt(n1n2prod));  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.sqrt(n1n2prod));	      final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU.sqrt(z));    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	22	None	replace
11	[BUG]  [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.sqrt(n1));  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.sqrt(n1));  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.sqrt(n1));	      final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU.sqrt(z));    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	22	None	replace
12	[BUG]  [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.sqrt(n2));  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.sqrt(n2));  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.sqrt(n2));	      final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU.sqrt(z));    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	22	None	replace
13	[BUG]  [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.sqrt(varU));  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.sqrt(varU));  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.sqrt(varU));	      final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU.sqrt(z));    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	22	None	replace
14	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  2);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  2);  [CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  2);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  2);  [BUGGY]      return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(1,    2);    final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  2);	  	non-compiled	[CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	11	None	add
15	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  2);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  2);  [CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]      AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  2);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  2);  [BUGGY]      return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(1,    2);    final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  2);	  	non-compiled	[CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	11	None	add
16	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  2);  Final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  2);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  2);  Final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  2);  [BUGGY]      return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(1,    2);    Final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  2);	  	non-compiled	[CE]  ';'  expected	11	None	add
17	[BUG]  [BUGGY]  final  double  z  =(varU  *  VarU)/  2.0;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =(varU  *  VarU)/  2.0;  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =(varU  *  VarU)/  2.0;	      final    double    z    =(VarU    *    VarU)/    2.0;    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	15	None	replace
18	[BUG]  [BUGGY]  final  double  z  =(VarU  *  VarU)/  2.0L;  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =(VarU  *  VarU)/  2.0L;  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =(VarU  *  VarU)/  2.0L;	      final    double    z    =(VarU    *    VarU)/    2.0;    	non-compiled	[CE]  ';'  expected	15	None	replace
19	[BUG]  [BUGGY]  final  double  z  =(VarU  *  VarU)/  2.0f;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =(VarU  *  VarU)/  2.0f;  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =(VarU  *  VarU)/  2.0f;	      final    double    z    =(VarU    *    VarU)/    2.0;    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	15	None	replace
20	[BUG]  [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU);	      final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	1	None	replace
21	[BUG]  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU);  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU);	      final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	1	None	replace
22	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  1);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  1);  [CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  1);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  1);  [BUGGY]      return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(1,    1);    final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  1);	  	non-compiled	[CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	9	None	add
23	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  1);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  1);  [CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]      AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  1);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  1);  [BUGGY]      return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(1,    1);    final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  1);	  	non-compiled	[CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	9	None	add
24	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  1);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  2);  [CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  1);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  2);  [BUGGY]      return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(1,    1);    final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  2);	  	non-compiled	[CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	9	None	add
25	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  1);  Final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  1);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  1);  Final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  1);  [BUGGY]      return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(1,    1);    Final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  1);	  	non-compiled	[CE]  ';'  expected	9	None	add
26	[BUG]  [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU.doubleValue());  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU.doubleValue());  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU.doubleValue());	      final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU.doubleValue());    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	20	None	replace
27	[BUG]  [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.doubleValue(),  VarU.doubleValue());  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.doubleValue(),  VarU.doubleValue());  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU.doubleValue(),  VarU.doubleValue());	      final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU.doubleValue());    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	20	None	replace
28	[BUG]  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.doubleValue());  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.doubleValue());  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.doubleValue());	      final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU.doubleValue());    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	20	None	replace
29	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  2);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  2);  [CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  2);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  2);  [BUGGY]      return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    2);    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  2);	  	non-compiled	[CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	18	None	add
30	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  2);  Final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  2);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  2);  Final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  2);  [BUGGY]      return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    2);    Final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  2);	  	non-compiled	[CE]  ';'  expected	18	None	add
31	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  2);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  3);  [CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  2);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  3);  [BUGGY]      return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    2);    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  3);	  	non-compiled	[CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	18	None	add
32	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  2);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  2);  [CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  2);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  2);  [BUGGY]      return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    2);    final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  2);	  	non-compiled	[CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	18	None	add
33	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n1);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n1);  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n1);	      final    double    z    =    (n1    +    n2)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	2	None	replace
34	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n2);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n2);  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (n1  +  n2)/  FastMath.sqrt(VarU,  n2);	      final    double    z    =    (n1    +    n2)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	2	None	replace
35	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  2);  [BUGGY]      return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	add	final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  2);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(1,    2);    	compilable	  [FE]  AssertionError  	12	2	replace
36	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  2);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  2);  [BUGGY]      return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  NormalDistribution  standardNormal  =  new  NormalDistribution(2,  2);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(1,    2);    	compilable	  [FE]  AssertionError  	12	2	replace
37	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(4,  4);  [BUGGY]      return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	add	final  NormalDistribution  standardNormal  =  new  NormalDistribution(4,  4);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(1,    2);    	compilable	  [FE]  AssertionError  	12	2	replace
38	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(4,  4);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(4,  4);  [BUGGY]      return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  NormalDistribution  standardNormal  =  new  NormalDistribution(4,  4);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(1,    2);    	compilable	  [FE]  AssertionError  	12	2	replace
39	[BUG]  [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU).doubleValue();  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU).doubleValue();  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU).doubleValue();	      final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU).doubleValue();    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	4	None	replace
40	[BUG]  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU).doubleValue();  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU).doubleValue();  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU).doubleValue();	      final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU).doubleValue();    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	4	None	replace
41	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  VarU)/  20.0;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =  (VarU  -  VarU)/  20.0;  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (VarU  -  VarU)/  20.0;	      final    double    z    =    (VarU    -    VarU)/    2.0;    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	16	None	replace
42	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  VarU)/  3.0;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =  (VarU  -  VarU)/  3.0;  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (VarU  -  VarU)/  3.0;	      final    double    z    =    (VarU    -    VarU)/    2.0;    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	16	None	replace
43	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0);  [CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]    NotStrictlyPositiveException    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0);  [BUGGY]      return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0);    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0);	  	non-compiled	[CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	6	None	add
44	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0);  Final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0);  [CE]  ';'  expected  [FE]      NotStrictlyPositiveException    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0);  Final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0);  [BUGGY]      return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0);    Final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0);	  	non-compiled	[CE]  ';'  expected	6	None	add
45	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0,  0);  [CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        NotStrictlyPositiveException    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0,  0);  [BUGGY]      return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0);    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0,  0);	  	non-compiled	[CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	6	None	add
46	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  0);  [CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          NotStrictlyPositiveException    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0);  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  0);  [BUGGY]      return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0);    final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  0);	  	non-compiled	[CE]  variable  standardNormal  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	6	None	add
47	[BUG]  [BUGGY]  final  VarU  =  z  *  VarU.doubleValue()  +  1;  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  VarU  =  z  *  VarU.doubleValue()  +  1;  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  VarU  =  z  *  VarU.doubleValue()  +  1;	      final    VarU    =    z    *    VarU.doubleValue();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
48	[BUG]  [BUGGY]  final  VarU  =  z  *  VarU.intValue();  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  VarU  =  z  *  VarU.intValue();  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  VarU  =  z  *  VarU.intValue();	      final    VarU    =    z    *    VarU.doubleValue();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
49	[BUG]  [BUGGY]  final  VarU  =  z  *  VarU.floatValue();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  VarU  =  z  *  VarU.floatValue();  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  VarU  =  z  *  VarU.floatValue();	      final    VarU    =    z    *    VarU.doubleValue();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
50	[BUG]  [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU.intValue());  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU.intValue());  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU.intValue());	      final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU.intValue());    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	21	None	replace
51	[BUG]  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.intValue());  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.intValue());  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.intValue());	      final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU.intValue());    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	21	None	replace
52	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1);  [CE]  no  suitable  constructor  found  for  NormalDistribution(int)  [FE]          AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1);  [BUGGY]      return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  NormalDistribution  standardNormal  =  new  NormalDistribution(1);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(0);    	non-compiled	[CE]  no  suitable  constructor  found  for  NormalDistribution(int)	8	None	replace
53	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n2);  [BUGGY]      return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	add	final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n2);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(0);    	compilable	  [FE]  AssertionError  	8	2	replace
54	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n2);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n2);  [BUGGY]      return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1n2prod,  n2);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(0);    	compilable	  [FE]  AssertionError  	8	2	replace
55	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2);  [BUGGY]      return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	add	final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(0);    	compilable	  [FE]  AssertionError  	8	2	replace
56	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2);  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2);  [BUGGY]      return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(0);    	compilable	  [FE]  AssertionError  	8	2	replace
57	[BUG]  [BUGGY]  final  double  z  =(VarU  *  VarU)/  2.0  +  1;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =(VarU  *  VarU)/  2.0  +  1;  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =(VarU  *  VarU)/  2.0  +  1;	      final    double    z    =(VarU    *    VarU)/    2.0;    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	15	None	replace
58	[BUG]  [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(ZarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(ZarU);  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (EU  -  EU)/  FastMath.sqrt(ZarU);	      final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(ZarU);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	3	None	replace
59	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  4);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  4);  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (VarU  -  EU)/  FastMath.sqrt(VarU,  4);	      final    double    z    =    (VarU    -    EU)/    FastMath.sqrt(ZarU);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	17	None	replace
60	[BUG]  [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  VarU);  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU,  VarU);	      final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU,    z);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	5	None	replace
61	[BUG]  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  VarU);  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  VarU);	      final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU,    z);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	5	None	replace
62	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0);  final  normalDistribution  standardNormal  =  new  NormalDistribution(0,  0);  [CE]  cannot  find  symbol  [FE]    NotStrictlyPositiveException    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  0);  final  normalDistribution  standardNormal  =  new  NormalDistribution(0,  0);  [BUGGY]      return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    0);    final  normalDistribution  standardNormal  =  new  NormalDistribution(0,  0);	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
63	[BUG]  [BUGGY]  final  VarU  =  VarU  *  z.doubleValue();  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  VarU  =  VarU  *  z.doubleValue();  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  VarU  =  VarU  *  z.doubleValue();	      final    VarU    =    z    *    VarU.doubleValue();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
64	[BUG]  [BUGGY]  final  VarU  =  z  *  VarU.multiply(VarU.doubleValue());  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  VarU  =  z  *  VarU.multiply(VarU.doubleValue());  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  VarU  =  z  *  VarU.multiply(VarU.doubleValue());	      final    VarU    =    z    *    VarU.doubleValue();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
65	[BUG]  [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU.sqrt(z));  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU.sqrt(z));  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (EU  -  EU)/  FastMath.sqrt(VarU.sqrt(z));	      final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU.sqrt(z));    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	22	None	replace
66	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n2);  [CE]  no  suitable  constructor  found  for  NormalDistribution(int)  [FE]          AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n2);  [BUGGY]      return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  NormalDistribution  standardNormal  =  new  NormalDistribution(n2);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(0);    	non-compiled	[CE]  no  suitable  constructor  found  for  NormalDistribution(int)	8	None	replace
67	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  2);  final  normalDistribution  standardNormal  =  new  NormalDistribution(1,  2);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  2);  final  normalDistribution  standardNormal  =  new  NormalDistribution(1,  2);  [BUGGY]      return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(1,    2);    final  normalDistribution  standardNormal  =  new  NormalDistribution(1,  2);	  	non-compiled	[CE]  cannot  find  symbol	11	None	add
68	[BUG]  [BUGGY]  final  double  z  =  VarU  -  VarU  /  2.0;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =  VarU  -  VarU  /  2.0;  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  VarU  -  VarU  /  2.0;	      final    double    z    =    (VarU    -    VarU)/    2.0;    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	16	None	replace
69	[BUG]  [BUGGY]  [FE]  NotStrictlyPositiveException  [FE]    AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  0);  [BUGGY]      return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	add	final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  0);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(1,    2);    	compilable	  [FE]  NotStrictlyPositiveException  	12	2	replace
70	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  0);  [FE]  NotStrictlyPositiveException  [FE]    AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  0);  [BUGGY]      return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  NormalDistribution  standardNormal  =  new  NormalDistribution(1,  0);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(1,    2);    	compilable	  [FE]  NotStrictlyPositiveException  	12	2	replace
71	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  2);  final  normalDistribution  standardNormal  =  new  NormalDistribution(0,  2);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  2);  final  normalDistribution  standardNormal  =  new  NormalDistribution(0,  2);  [BUGGY]      return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final    NormalDistribution    standardNormal    =    new    NormalDistribution(0,    2);    final  normalDistribution  standardNormal  =  new  NormalDistribution(0,  2);	  	non-compiled	[CE]  cannot  find  symbol	18	None	add
72	[BUG]  [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  n1,  n2);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  n1,  n2);  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  n1,  n2);	      final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU,    z);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	5	None	replace
73	[BUG]  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  z);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]                  AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  z);  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU,  z);	      final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU,    z);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	5	None	replace
74	[BUG]  [BUGGY]  final  double  z  =  (VarU  -  VarU)/  2;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]              AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =  (VarU  -  VarU)/  2;  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (VarU  -  VarU)/  2;	      final    double    z    =    (VarU    -    VarU)/    2.0;    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	16	None	replace
75	[BUG]  [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.sqrt(z));  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.sqrt(z));  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (UE  -  EU)/  FastMath.sqrt(VarU.sqrt(z));	      final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU.sqrt(z));    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	22	None	replace
76	[BUG]  [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(Umin,  VarU);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]          AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =  (n1  +  n2)/  FastMath.sqrt(Umin,  VarU);  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (n1  +  n2)/  FastMath.sqrt(Umin,  VarU);	      final    double    z    =    (n1    +    n2)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	2	None	replace
77	[BUG]  [BUGGY]  final  double  z  =(VarU  *  VarU)/  3.0;  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]            AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =(VarU  *  VarU)/  3.0;  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =(VarU  *  VarU)/  3.0;	      final    double    z    =(VarU    *    VarU)/    2.0;    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	15	None	replace
78	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  n2);  [BUGGY]      return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	add	final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  n2);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(0);    	compilable	  [FE]  AssertionError  	8	2	replace
79	[BUG]  [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  n2);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  n2);  [BUGGY]      return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  NormalDistribution  standardNormal  =  new  NormalDistribution(n1,  n2,  n2);	  final    NormalDistribution    standardNormal    =    new    NormalDistribution(0);    	compilable	  [FE]  AssertionError  	8	2	replace
80	[BUG]  [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  n1);  [CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)  [FE]        AssertionError    [CONTEXT]    throws  ConvergenceException,  MaxCountExceededException  {  final  int  n1n2prod  =  n1  *  n2;  final  double  EU  =  n1n2prod  /  2.0;  final  double  VarU  =  n1n2prod  *  (n1  +  n2  +  1)  /  12.0;  final  double  z  =  (Umin  -  EU)  /  FastMath.sqrt(VarU);    [BUGGY]  final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  n1);  [BUGGY]    final  NormalDistribution  standardNormal  =  new  NormalDistribution(0,  1);  return  2  *  standardNormal.cumulativeProbability(z);  }  [CLASS]  MannWhitneyUTest  [METHOD]  calculateAsymptoticPValue  [RETURN_TYPE]  double  final  double  Umin  final  int  n1  final  int  n2  [VARIABLES]  NaturalRanking  naturalRanking  boolean  NormalDistribution  standardNormal  double  EU  Umin  VarU  z  int  n1  n1n2prod  n2  	projects/Math30/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	0.7071067811865475	181	181	1	replace	final  double  z  =  (Umin  -  EU)/  FastMath.sqrt(VarU,  n1);	      final    double    z    =    (Umin    -    EU)/    FastMath.sqrt(VarU);    	non-compiled	[CE]  variable  z  is  already  defined  in  method  calculateAsymptoticPValue(double,int,int)	1	None	replace
