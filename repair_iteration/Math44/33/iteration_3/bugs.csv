bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousSize()  *  2;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.getPreviousSize()  *  2;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getPreviousSize()  *  2;	  double    previousT    =    interpolator.getPreviousSize()    /    2;    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
2	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getGlobalCurrentTime();  [CE]  variable  currentT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  final  double  currentT  =  interpolator.getGlobalCurrentTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	final  double  currentT  =  interpolator.getGlobalCurrentTime();	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    	non-compiled	[CE]  variable  currentT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	51	None	replace
3	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getCurrentTime();  [CE]  variable  currentT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  final  double  currentT  =  interpolator.getCurrentTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	final  double  currentT  =  interpolator.getCurrentTime();	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    	non-compiled	[CE]  variable  currentT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	51	None	replace
4	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getStandardStep();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  final  double  currentT  =  interpolator.getStandardStep();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	final  double  currentT  =  interpolator.getStandardStep();	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
5	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime();  [CE]  variable  currentT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  final  double  currentT  =  interpolator.getPreviousTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	final  double  currentT  =  interpolator.getPreviousTime();	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    	non-compiled	[CE]  variable  currentT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	51	None	replace
6	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousSign()  /  1;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.getPreviousSign()  /  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getPreviousSign()  /  1;	  double    previousT    =    interpolator.getPreviousSign()    +    1;    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
7	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousSign()  *  1;  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.getPreviousSign()  *  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getPreviousSign()  *  1;	  double    previousT    =    interpolator.getPreviousSign()    +    1;    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
8	[BUG]  [BUGGY]  final  int  stepStart  =  getStep(currentT.getStep());  [CE]  cannot  find  symbol  currentT  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  final  int  stepStart  =  getStep(currentT.getStep());  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	final  int  stepStart  =  getStep(currentT.getStep());	  final    int    stepStart    =    getStep(currentEvent.getStep());    	non-compiled	[CE]  cannot  find  symbol  currentT	59	None	replace
9	[BUG]  [BUGGY]  final  int  stepStart  =  getStep(interpolator.getStep());  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  final  int  stepStart  =  getStep(interpolator.getStep());  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	final  int  stepStart  =  getStep(interpolator.getStep());	  final    int    stepStart    =    getStep(currentEvent.getStep());    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
10	[BUG]  [BUGGY]  final  int  stepStart  =  getStep(event.getStep());  [CE]  cannot  find  symbol  event  [FE]                          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  final  int  stepStart  =  getStep(event.getStep());  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	final  int  stepStart  =  getStep(event.getStep());	  final    int    stepStart    =    getStep(currentEvent.getStep());    	non-compiled	[CE]  cannot  find  symbol  event	59	None	replace
11	[BUG]  [BUGGY]  Iterator  iterator  =  stepHandlers.values().iterator();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Iterator  iterator  =  stepHandlers.values().iterator();  [BUGGY]      double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  iterator  =  stepHandlers.values().iterator();	  Iterator    iterator    =    this.stepHandlers.values().iterator();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
12	[BUG]  [BUGGY]  Iterator  iterator  =  steps.values().iterator();  [CE]  cannot  find  symbol  steps  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Iterator  iterator  =  steps.values().iterator();  [BUGGY]      double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  iterator  =  steps.values().iterator();	  Iterator    iterator    =    this.stepHandlers.values().iterator();    	non-compiled	[CE]  cannot  find  symbol  steps	6	None	replace
13	[BUG]  [BUGGY]  Double  previousT  =  interpolator.getPreviousCurrentTime()  -  1;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Double  previousT  =  interpolator.getPreviousCurrentTime()  -  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Double  previousT  =  interpolator.getPreviousCurrentTime()  -  1;	  Double    previousT    =    interpolator.getPreviousCurrentTime();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
14	[BUG]  [BUGGY]  Double  previousT  =  this.interpolator.getPreviousCurrentTime();  [CE]  cannot  find  symbol  interpolator  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Double  previousT  =  this.interpolator.getPreviousCurrentTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Double  previousT  =  this.interpolator.getPreviousCurrentTime();	  Double    previousT    =    interpolator.getPreviousCurrentTime();    	non-compiled	[CE]  cannot  find  symbol  interpolator	26	None	replace
15	[BUG]  [BUGGY]  Double  previousT  =  interpolator.getPreviousCurrentTime()  +  1;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Double  previousT  =  interpolator.getPreviousCurrentTime()  +  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Double  previousT  =  interpolator.getPreviousCurrentTime()  +  1;	  Double    previousT    =    interpolator.getPreviousCurrentTime();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
16	[BUG]  [BUGGY]  state.reinitializeBegin(eventT);  [CE]  cannot  find  symbol  eventT  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  state.reinitializeBegin(eventT);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	state.reinitializeBegin(eventT);	  state.reinitializeBegin(currentT);    	non-compiled	[CE]  cannot  find  symbol  eventT	38	None	replace
17	[BUG]  [BUGGY]  state.reinitializeBegin(expandableODE);  [CE]  cannot  find  symbol  expandableODE  [FE]                          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  state.reinitializeBegin(expandableODE);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	state.reinitializeBegin(expandableODE);	  state.reinitializeBegin(currentT);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	38	None	replace
18	[BUG]  [BUGGY]  state.reinitializeBegin(currentEvent);  [CE]  cannot  find  symbol  currentEvent  [FE]                            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  state.reinitializeBegin(currentEvent);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	state.reinitializeBegin(currentEvent);	  state.reinitializeBegin(currentT);    	non-compiled	[CE]  cannot  find  symbol  currentEvent	38	None	replace
19	[BUG]  [BUGGY]  Iterator  <  EventState>  iterator  =  steps.iterator();  [CE]  cannot  find  symbol  steps  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Iterator  <  EventState>  iterator  =  steps.iterator();  [BUGGY]      double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  <  EventState>  iterator  =  steps.iterator();	  Iterator    <    EventState>    iterator    =    stepHandlers.iterator();    	non-compiled	[CE]  cannot  find  symbol  steps	40	None	replace
20	[BUG]  [BUGGY]  Iterator  iterator  =  eventsStates.values().iterator();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Iterator  iterator  =  eventsStates.values().iterator();  [BUGGY]      double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  iterator  =  eventsStates.values().iterator();	  Iterator    iterator    =    this.eventsStates.values().iterator();    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
21	[BUG]  [BUGGY]  Iterator  iterator  =  events.values().iterator();  [CE]  cannot  find  symbol  events  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Iterator  iterator  =  events.values().iterator();  [BUGGY]      double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  iterator  =  events.values().iterator();	  Iterator    iterator    =    this.eventsStates.values().iterator();    	non-compiled	[CE]  cannot  find  symbol  events	49	None	replace
22	[BUG]  [BUGGY]  Iterator  <  E>  iterator  =  this.eventsStates.values().iterator();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Iterator  <  E>  iterator  =  this.eventsStates.values().iterator();  [BUGGY]      double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  <  E>  iterator  =  this.eventsStates.values().iterator();	  Iterator    <    E>    iterator    =    eventsStates.values().iterator();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
23	[BUG]  [BUGGY]  Iterator  <  E>  iterator  =  events.values().iterator();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Iterator  <  E>  iterator  =  events.values().iterator();  [BUGGY]      double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  <  E>  iterator  =  events.values().iterator();	  Iterator    <    E>    iterator    =    eventsStates.values().iterator();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
24	[BUG]  [BUGGY]  double  previousT  =  interpolator.getNextTime();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.getNextTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getNextTime();	  double    previousT    =    interpolator.getPreviousTime();    double    previousT    =    interpolator.getNextTime();    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
25	[BUG]  [BUGGY]  long  previousT  =  interpolator.getPreviousTime();  [CE]  possible  loss  of  precision  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  long  previousT  =  interpolator.getPreviousTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	long  previousT  =  interpolator.getPreviousTime();	  double    previousT    =    interpolator.getPreviousTime();    double    previousT    =    interpolator.getNextTime();    	non-compiled	[CE]  possible  loss  of  precision	21	None	replace
26	[BUG]  [BUGGY]  double  previousT  =  currentEvent.getPreviousCurrentTime();  [CE]  cannot  find  symbol  currentEvent  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  currentEvent.getPreviousCurrentTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  currentEvent.getPreviousCurrentTime();	  double    previousT    =    this.interpolator.getPreviousCurrentTime();    	non-compiled	[CE]  cannot  find  symbol  currentEvent	42	None	replace
27	[BUG]  [BUGGY]  double  previousT  =  state.getPreviousCurrentTime();  [CE]  cannot  find  symbol  state  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  state.getPreviousCurrentTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  state.getPreviousCurrentTime();	  double    previousT    =    this.interpolator.getPreviousCurrentTime();    	non-compiled	[CE]  cannot  find  symbol  state	42	None	replace
28	[BUG]  [BUGGY]  final  int  stepSize  =  getStepSize()  -  1;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  final  int  stepSize  =  getStepSize()  -  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	final  int  stepSize  =  getStepSize()  -  1;	  final    int    stepSize    =    getStepSize();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
29	[BUG]  [BUGGY]  final  int  stepSize  =  getStepSize()  +  1;  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  final  int  stepSize  =  getStepSize()  +  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	final  int  stepSize  =  getStepSize()  +  1;	  final    int    stepSize    =    getStepSize();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
30	[BUG]  [BUGGY]  final  double  stepSize  =  getStepSize();  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  final  double  stepSize  =  getStepSize();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	final  double  stepSize  =  getStepSize();	  final    int    stepSize    =    getStepSize();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
31	[BUG]  [BUGGY]  double  previousT  =  interface.getCurrentTime();  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interface.getCurrentTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interface.getCurrentTime();	  double    previousT    =    interpolator.getCurrentTime();    double    previousT    =    interface.getCurrentTime();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
32	[BUG]  [BUGGY]  lastCheckInterval  =  interpolator.getLastStep();  [CE]  cannot  find  symbol  lastCheckInterval  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  lastCheckInterval  =  interpolator.getLastStep();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	lastCheckInterval  =  interpolator.getLastStep();	  double    previousT    =    interpolator.getCurrentTime();    double    previousT    =    interface.getCurrentTime();    	non-compiled	[CE]  cannot  find  symbol  lastCheckInterval	48	None	replace
33	[BUG]  [BUGGY]  State  state  =  this.currentEvent.getState();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  State  state  =  this.currentEvent.getState();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	State  state  =  this.currentEvent.getState();	  State    state    =    currentEvent.getState();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
34	[BUG]  [BUGGY]  State  state  =  event.getState();  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  State  state  =  event.getState();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	State  state  =  event.getState();	  State    state    =    currentEvent.getState();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
35	[BUG]  [BUGGY]  State  state  =  es1.getState();  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  State  state  =  es1.getState();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	State  state  =  es1.getState();	  State    state    =    currentEvent.getState();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
36	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Double  previousT  =  interpolator.getCurrentTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	add	Double  previousT  =  interpolator.getCurrentTime();	  double    previousT    =    interpolator.getCurrentTime();    Double    previousT    =    interpolator.getCurrentTime();    	compilable	  [FE]  AssertionError  	14	1	replace
37	[BUG]  [BUGGY]  Double  previousT  =  interpolator.getCurrentTime();  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Double  previousT  =  interpolator.getCurrentTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Double  previousT  =  interpolator.getCurrentTime();	  double    previousT    =    interpolator.getCurrentTime();    Double    previousT    =    interpolator.getCurrentTime();    	compilable	  [FE]  AssertionError  	14	1	replace
38	[BUG]  [BUGGY]  long  previousT  =  interpolator.getCurrentTime();  [CE]  possible  loss  of  precision  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  long  previousT  =  interpolator.getCurrentTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	long  previousT  =  interpolator.getCurrentTime();	  double    previousT    =    interpolator.getCurrentTime();    Double    previousT    =    interpolator.getCurrentTime();    	non-compiled	[CE]  possible  loss  of  precision	14	None	replace
39	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousTTime()  -  1;  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.getPreviousTTime()  -  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getPreviousTTime()  -  1;	  double    previousT    =    interpolator.getPreviousTTime();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
40	[BUG]  [BUGGY]  Double  previousT  =  interpolator.getPreviousTTime();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Double  previousT  =  interpolator.getPreviousTTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Double  previousT  =  interpolator.getPreviousTTime();	  double    previousT    =    interpolator.getPreviousTTime();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
41	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousTTime()  +  1;  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.getPreviousTTime()  +  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getPreviousTTime()  +  1;	  double    previousT    =    interpolator.getPreviousTTime();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
42	[BUG]  [BUGGY]  state.reinitializeBegin(eventsInitialized);  [CE]  cannot  find  symbol  eventsInitialized  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  state.reinitializeBegin(eventsInitialized);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	state.reinitializeBegin(eventsInitialized);	  state.reinitializeBegin(interpolator);    	non-compiled	[CE]  cannot  find  symbol  eventsInitialized	36	None	replace
43	[BUG]  [BUGGY]  state.reinitializeBegin(eventState);  [CE]  cannot  find  symbol  eventState  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  state.reinitializeBegin(eventState);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	state.reinitializeBegin(eventState);	  state.reinitializeBegin(interpolator);    	non-compiled	[CE]  cannot  find  symbol  eventState	36	None	replace
44	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousT()  -  1;  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.getPreviousT()  -  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getPreviousT()  -  1;	  double    previousT    =    interpolator.getPreviousT();    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
45	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousT()  +  1;  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.getPreviousT()  +  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getPreviousT()  +  1;	  double    previousT    =    interpolator.getPreviousT();    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
46	[BUG]  [BUGGY]  Double  previousT  =  interpolator.getPreviousT();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Double  previousT  =  interpolator.getPreviousT();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Double  previousT  =  interpolator.getPreviousT();	  double    previousT    =    interpolator.getPreviousT();    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
47	[BUG]  [BUGGY]  double  previousT  =  interpolator.getCurrentTTime()  -  1;  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.getCurrentTTime()  -  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getCurrentTTime()  -  1;	  double    previousT    =    interpolator.getCurrentTTime();    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
48	[BUG]  [BUGGY]  double  previousT  =  interpolator.getCurrentTTime()  +  1;  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.getCurrentTTime()  +  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getCurrentTTime()  +  1;	  double    previousT    =    interpolator.getCurrentTTime();    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
49	[BUG]  [BUGGY]  Double  previousT  =  interpolator.getCurrentTTime();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Double  previousT  =  interpolator.getCurrentTTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Double  previousT  =  interpolator.getCurrentTTime();	  double    previousT    =    interpolator.getCurrentTTime();    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
50	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousSize()  /  1;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.getPreviousSize()  /  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getPreviousSize()  /  1;	  double    previousT    =    interpolator.getPreviousSize()    +    1;    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
51	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousSize()  *  1;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.getPreviousSize()  *  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getPreviousSize()  *  1;	  double    previousT    =    interpolator.getPreviousSize()    +    1;    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
52	[BUG]  [BUGGY]  int  stepSize  =  getStepSize()  -  1;  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  int  stepSize  =  getStepSize()  -  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	int  stepSize  =  getStepSize()  -  1;	  int    stepSize    =    getStepSize();    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
53	[BUG]  [BUGGY]  int  stepSize  =  getStepSize()  +  1;  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  int  stepSize  =  getStepSize()  +  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	int  stepSize  =  getStepSize()  +  1;	  int    stepSize    =    getStepSize();    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
54	[BUG]  [BUGGY]  int  stepSize  =  getStepSize()  /  2;  [CE]  cannot  find  symbol  [FE]                              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  int  stepSize  =  getStepSize()  /  2;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	int  stepSize  =  getStepSize()  /  2;	  int    stepSize    =    getStepSize();    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
55	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPrevious();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.getPrevious();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getPrevious();	  double    previousT    =    interpolator.getNext();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
56	[BUG]  [BUGGY]  double  previousT  =  interpolator.getNext()  -  1;  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.getNext()  -  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getNext()  -  1;	  double    previousT    =    interpolator.getNext();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
57	[BUG]  [BUGGY]  Double  previousT  =  interpolator.getNext();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Double  previousT  =  interpolator.getNext();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Double  previousT  =  interpolator.getNext();	  double    previousT    =    interpolator.getNext();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
58	[BUG]  [BUGGY]  int  previousT  =  interpolator.getCurrentTime();  [CE]  possible  loss  of  precision  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  int  previousT  =  interpolator.getCurrentTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	int  previousT  =  interpolator.getCurrentTime();	  double    previousT    =    interpolator.getCurrentTime();    int    previousT    =    interpolator.getCurrentTime();    	non-compiled	[CE]  possible  loss  of  precision	15	None	replace
59	[BUG]  [BUGGY]  lastCheckInterval  =  interpolator.getPreviousTime();  [CE]  cannot  find  symbol  lastCheckInterval  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  lastCheckInterval  =  interpolator.getPreviousTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	lastCheckInterval  =  interpolator.getPreviousTime();	  double    previousT    =    interpolator.getPreviousTime();    final    double    previousT    =    interpolator.getPreviousTime();    	non-compiled	[CE]  cannot  find  symbol  lastCheckInterval	18	None	replace
60	[BUG]  [BUGGY]  static  final  double  previousT  =  interpolator.getCurrentTime();  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  static  final  double  previousT  =  interpolator.getCurrentTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	static  final  double  previousT  =  interpolator.getCurrentTime();	  double    previousT    =    interpolator.getCurrentTime();    final    double    previousT    =    interpolator.getCurrentTime();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
61	[BUG]  [BUGGY]  Iterator  <  E>  iterator  =  this.events.iterator();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Iterator  <  E>  iterator  =  this.events.iterator();  [BUGGY]      double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  <  E>  iterator  =  this.events.iterator();	  Iterator    <    E>    iterator    =    eventStates.iterator();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
62	[BUG]  [BUGGY]  Iterator  <  E>  iterator  =  this.stepHandlers.iterator();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Iterator  <  E>  iterator  =  this.stepHandlers.iterator();  [BUGGY]      double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  <  E>  iterator  =  this.stepHandlers.iterator();	  Iterator    <    E>    iterator    =    stepHandlers.iterator();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
63	[BUG]  [BUGGY]  Iterator  <  E>  iterator  =  steps.iterator();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Iterator  <  E>  iterator  =  steps.iterator();  [BUGGY]      double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  <  E>  iterator  =  steps.iterator();	  Iterator    <    E>    iterator    =    stepHandlers.iterator();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
64	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousCurrentTime()  /  1;  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.getPreviousCurrentTime()  /  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getPreviousCurrentTime()  /  1;	  double    previousT    =    interpolator.getPreviousCurrentTime()    -    1;    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
65	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousCurrentTime()  *  1;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.getPreviousCurrentTime()  *  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getPreviousCurrentTime()  *  1;	  double    previousT    =    interpolator.getPreviousCurrentTime()    -    1;    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
66	[BUG]  [BUGGY]  Double  previousT  =  interpolator.getPreviousSign()  -  1;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Double  previousT  =  interpolator.getPreviousSign()  -  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Double  previousT  =  interpolator.getPreviousSign()  -  1;	  Double    previousT    =    interpolator.getPreviousSign();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
67	[BUG]  [BUGGY]  Double  previousT  =  interpolator.getNextSign();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Double  previousT  =  interpolator.getNextSign();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Double  previousT  =  interpolator.getNextSign();	  Double    previousT    =    interpolator.getPreviousSign();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
68	[BUG]  [BUGGY]  int  previousT  =  interpolator.getPreviousTime();  [CE]  possible  loss  of  precision  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  int  previousT  =  interpolator.getPreviousTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	int  previousT  =  interpolator.getPreviousTime();	  double    previousT    =    interpolator.getPreviousTime();    int    previousT    =    interpolator.getPreviousTime();    	non-compiled	[CE]  possible  loss  of  precision	20	None	replace
69	[BUG]  [BUGGY]  double  previousT  =  state.getPreviousSize()  -  interpolator.getGlobalCurrentTime();  [CE]  cannot  find  symbol  state  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  state.getPreviousSize()  -  interpolator.getGlobalCurrentTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  state.getPreviousSize()  -  interpolator.getGlobalCurrentTime();	  double    previousT    =    interpolator.getPreviousSize()    -    state.getGlobalCurrentTime();    	non-compiled	[CE]  cannot  find  symbol  state	54	None	replace
70	[BUG]  [BUGGY]  double  previousT  =  currentEvent.getPreviousSize()  -  state.getGlobalCurrentTime();  [CE]  cannot  find  symbol  currentEvent  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  currentEvent.getPreviousSize()  -  state.getGlobalCurrentTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  currentEvent.getPreviousSize()  -  state.getGlobalCurrentTime();	  double    previousT    =    interpolator.getPreviousSize()    -    state.getGlobalCurrentTime();    	non-compiled	[CE]  cannot  find  symbol  currentEvent	54	None	replace
71	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousSize()  /  state.getGlobalCurrentTime();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.getPreviousSize()  /  state.getGlobalCurrentTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getPreviousSize()  /  state.getGlobalCurrentTime();	  double    previousT    =    interpolator.getPreviousSize()    -    state.getGlobalCurrentTime();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
72	[BUG]  [BUGGY]  Double  previousT  =  interpolator.getPreviousSize()  -  1;  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Double  previousT  =  interpolator.getPreviousSize()  -  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Double  previousT  =  interpolator.getPreviousSize()  -  1;	  Double    previousT    =    interpolator.getPreviousSize();    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
73	[BUG]  [BUGGY]  Double  previousT  =  interpolator.getPreviousSize()  +  1;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Double  previousT  =  interpolator.getPreviousSize()  +  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Double  previousT  =  interpolator.getPreviousSize()  +  1;	  Double    previousT    =    interpolator.getPreviousSize();    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
74	[BUG]  [BUGGY]  Double  previousT  =  interpolator.getPreviousSize()  /  2;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Double  previousT  =  interpolator.getPreviousSize()  /  2;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Double  previousT  =  interpolator.getPreviousSize()  /  2;	  Double    previousT    =    interpolator.getPreviousSize();    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
75	[BUG]  [BUGGY]  double  previousT  =  interpolator.getCurrentSize();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.getCurrentSize();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getCurrentSize();	  double    previousT    =    interpolator.getCurrentTime();    double    previousT    =    interpolator.getCurrentSize();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
76	[BUG]  [BUGGY]  final  double  previousT  =  interpolator.getCurrentSize();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  final  double  previousT  =  interpolator.getCurrentSize();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	final  double  previousT  =  interpolator.getCurrentSize();	  double    previousT    =    interpolator.getCurrentTime();    double    previousT    =    interpolator.getCurrentSize();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
77	[BUG]  [BUGGY]  final  int  stepStart  =  getStep(currentT,  tEnd);  [CE]  cannot  find  symbol  currentT  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  final  int  stepStart  =  getStep(currentT,  tEnd);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	final  int  stepStart  =  getStep(currentT,  tEnd);	  final    int    stepStart    =    getStep(currentT,    yDot);    	non-compiled	[CE]  cannot  find  symbol  currentT	60	None	replace
78	[BUG]  [BUGGY]  final  int  stepStart  =  getStep(currentT,  yEnd);  [CE]  cannot  find  symbol  currentT  [FE]                          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  final  int  stepStart  =  getStep(currentT,  yEnd);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	final  int  stepStart  =  getStep(currentT,  yEnd);	  final    int    stepStart    =    getStep(currentT,    yDot);    	non-compiled	[CE]  cannot  find  symbol  currentT	60	None	replace
79	[BUG]  [BUGGY]  final  int  stepStart  =  getStep(currentY,  yDot);  [CE]  cannot  find  symbol  currentY  [FE]                            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  final  int  stepStart  =  getStep(currentY,  yDot);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	final  int  stepStart  =  getStep(currentY,  yDot);	  final    int    stepStart    =    getStep(currentT,    yDot);    	non-compiled	[CE]  cannot  find  symbol  currentY	60	None	replace
80	[BUG]  [BUGGY]  final  int  stepStart  =  getStep(currentEvent,  yDot);  [CE]  cannot  find  symbol  currentEvent  [FE]                              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  final  int  stepStart  =  getStep(currentEvent,  yDot);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	final  int  stepStart  =  getStep(currentEvent,  yDot);	  final    int    stepStart    =    getStep(currentT,    yDot);    	non-compiled	[CE]  cannot  find  symbol  currentEvent	60	None	replace
81	[BUG]  [BUGGY]  Iterator  <  EventState>  iterator  =  otherEvents.iterator();  [CE]  cannot  find  symbol  otherEvents  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Iterator  <  EventState>  iterator  =  otherEvents.iterator();  [BUGGY]      double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  <  EventState>  iterator  =  otherEvents.iterator();	  Iterator    <    EventState>    iterator    =    this.events.iterator();    	non-compiled	[CE]  cannot  find  symbol  otherEvents	7	None	replace
82	[BUG]  [BUGGY]  Iterator  <  E>  iterator  =  otherEvents.iterator();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Iterator  <  E>  iterator  =  otherEvents.iterator();  [BUGGY]      double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  <  E>  iterator  =  otherEvents.iterator();	  Iterator    <    E>    iterator    =    events.iterator();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
83	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Double  previousT  =  interpolator.getPreviousTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	add	Double  previousT  =  interpolator.getPreviousTime();	  double    previousT    =    interpolator.getPreviousTime();    Double    previousT    =    interpolator.getPreviousTime();    	compilable	  [FE]  AssertionError  	19	1	replace
84	[BUG]  [BUGGY]  Double  previousT  =  interpolator.getPreviousTime();  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Double  previousT  =  interpolator.getPreviousTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Double  previousT  =  interpolator.getPreviousTime();	  double    previousT    =    interpolator.getPreviousTime();    Double    previousT    =    interpolator.getPreviousTime();    	compilable	  [FE]  AssertionError  	19	1	replace
85	[BUG]  [BUGGY]  lastStep  =  interpolator.getPreviousTime();  [CE]  cannot  find  symbol  lastStep  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  lastStep  =  interpolator.getPreviousTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	lastStep  =  interpolator.getPreviousTime();	  double    previousT    =    interpolator.getPreviousTime();    Double    previousT    =    interpolator.getPreviousTime();    	non-compiled	[CE]  cannot  find  symbol  lastStep	19	None	replace
86	[BUG]  [BUGGY]  double  previousT  =  interface.getPreviousTime();  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interface.getPreviousTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interface.getPreviousTime();	  double    previousT    =    interpolator.getPreviousTime();    double    previousT    =    interface.getPreviousTime();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
87	[BUG]  [BUGGY]  lastStep  =  interpolator.getPreviousTime();  previousT  =  interface.getPreviousTime();  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  lastStep  =  interpolator.getPreviousTime();  previousT  =  interface.getPreviousTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	lastStep  =  interpolator.getPreviousTime();  previousT  =  interface.getPreviousTime();	  double    previousT    =    interpolator.getPreviousTime();    double    previousT    =    interface.getPreviousTime();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
88	[BUG]  [BUGGY]  final  double  previousT  =  interpolator.getStandardStep();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  final  double  previousT  =  interpolator.getStandardStep();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	final  double  previousT  =  interpolator.getStandardStep();	  final    double    previousT    =    interpolator.getGlobalCurrentTime();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
89	[BUG]  [BUGGY]  final  double  previousT  =  interface.getPreviousCurrentTime();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  final  double  previousT  =  interface.getPreviousCurrentTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	final  double  previousT  =  interface.getPreviousCurrentTime();	  double    previousT    =    interface.getPreviousCurrentTime();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
90	[BUG]  [BUGGY]  double  previousT  =  interpolator.getNextCurrentTime();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.getNextCurrentTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getNextCurrentTime();	  double    previousT    =    interface.getPreviousCurrentTime();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
91	[BUG]  [BUGGY]  double  previousT  =  interpolator.getNextSign()  -  1;  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.getNextSign()  -  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getNextSign()  -  1;	  double    previousT    =    interpolator.getNextSign();    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
92	[BUG]  [BUGGY]  double  previousT  =  interpolator.getNextSign()  +  1;  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.getNextSign()  +  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getNextSign()  +  1;	  double    previousT    =    interpolator.getNextSign();    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
93	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousTime()  +  1;  double  previousT  =  interpolator.getPreviousTime()  +  1;  [CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.getPreviousTime()  +  1;  double  previousT  =  interpolator.getPreviousTime()  +  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double    previousT    =    interpolator.getPreviousTime()    +    1;    double  previousT  =  interpolator.getPreviousTime()  +  1;	  	non-compiled	[CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	10	None	add
94	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousTime()  +  1;  Double  previousT  =  interpolator.getPreviousTime()  +  1;  [CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]      AssertionError    [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.getPreviousTime()  +  1;  Double  previousT  =  interpolator.getPreviousTime()  +  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double    previousT    =    interpolator.getPreviousTime()    +    1;    Double  previousT  =  interpolator.getPreviousTime()  +  1;	  	non-compiled	[CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	10	None	add
95	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousTime()  +  1;  final  double  previousT  =  interpolator.getPreviousTime()  +  1;  [CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]        AssertionError    [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.getPreviousTime()  +  1;  final  double  previousT  =  interpolator.getPreviousTime()  +  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double    previousT    =    interpolator.getPreviousTime()    +    1;    final  double  previousT  =  interpolator.getPreviousTime()  +  1;	  	non-compiled	[CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	10	None	add
96	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousTime()  +  1;  int  previousT  =  interpolator.getPreviousTime()  +  1;  [CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]          AssertionError    [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.getPreviousTime()  +  1;  int  previousT  =  interpolator.getPreviousTime()  +  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double    previousT    =    interpolator.getPreviousTime()    +    1;    int  previousT  =  interpolator.getPreviousTime()  +  1;	  	non-compiled	[CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	10	None	add
97	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousTime()  +  1;  double  previousT  =  Interpolator.getPreviousTime()  +  1;  [CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]            AssertionError    [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.getPreviousTime()  +  1;  double  previousT  =  Interpolator.getPreviousTime()  +  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double    previousT    =    interpolator.getPreviousTime()    +    1;    double  previousT  =  Interpolator.getPreviousTime()  +  1;	  	non-compiled	[CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	10	None	add
98	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.getPreviousTime()  /  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	add	double  previousT  =  interpolator.getPreviousTime()  /  1;	  double    previousT    =    interpolator.getPreviousTime()    +    1;    	compilable	  [FE]  AssertionError  	11	1	replace
99	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousTime()  /  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.getPreviousTime()  /  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getPreviousTime()  /  1;	  double    previousT    =    interpolator.getPreviousTime()    +    1;    	compilable	  [FE]  AssertionError  	11	1	replace
100	[BUG]  [BUGGY]  Iterator  <  EventState>  iterator  =  events.stepHandlers.iterator();  [CE]  package  events  does  not  exist  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Iterator  <  EventState>  iterator  =  events.stepHandlers.iterator();  [BUGGY]      double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  <  EventState>  iterator  =  events.stepHandlers.iterator();	  Iterator    <    EventState>    iterator    =    this.stepHandlers.iterator();    	non-compiled	[CE]  package  events  does  not  exist	9	None	replace
101	[BUG]  [BUGGY]  final  double  currentT  =  interpolator.getPreviousCurrentTime();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  final  double  currentT  =  interpolator.getPreviousCurrentTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	final  double  currentT  =  interpolator.getPreviousCurrentTime();	  final    double    previousT    =    interpolator.getPreviousCurrentTime();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
102	[BUG]  [BUGGY]  final  double  previousT  =  interpolator.getPreviousCurrentTime()  -  1;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  final  double  previousT  =  interpolator.getPreviousCurrentTime()  -  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	final  double  previousT  =  interpolator.getPreviousCurrentTime()  -  1;	  final    double    previousT    =    interpolator.getPreviousCurrentTime();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
103	[BUG]  [BUGGY]  final  double  previousT  =  previousCurrentTime.getPreviousCurrentTime();  [CE]  cannot  find  symbol  previousCurrentTime  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  final  double  previousT  =  previousCurrentTime.getPreviousCurrentTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	final  double  previousT  =  previousCurrentTime.getPreviousCurrentTime();	  final    double    previousT    =    interpolator.getPreviousCurrentTime();    	non-compiled	[CE]  cannot  find  symbol  previousCurrentTime	4	None	replace
104	[BUG]  [BUGGY]  boolean  isLastStep  =  interpolator.isInitialized();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  boolean  isLastStep  =  interpolator.isInitialized();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	boolean  isLastStep  =  interpolator.isInitialized();	  double    previousT    =    interpolator.getPreviousTime();    boolean    isLastStep    =    interpolator.isInitialized();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
105	[BUG]  [BUGGY]  final  double  previousT  =  interpolator.getPreviousTime();  boolean  isLastStep  =  interpolator.isInitialized();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  final  double  previousT  =  interpolator.getPreviousTime();  boolean  isLastStep  =  interpolator.isInitialized();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	final  double  previousT  =  interpolator.getPreviousTime();  boolean  isLastStep  =  interpolator.isInitialized();	  double    previousT    =    interpolator.getPreviousTime();    boolean    isLastStep    =    interpolator.isInitialized();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
106	[BUG]  [BUGGY]  int  previousT  =  interpolator.getPreviousTime();  boolean  isLastStep  =  interpolator.isInitialized();  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  int  previousT  =  interpolator.getPreviousTime();  boolean  isLastStep  =  interpolator.isInitialized();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	int  previousT  =  interpolator.getPreviousTime();  boolean  isLastStep  =  interpolator.isInitialized();	  double    previousT    =    interpolator.getPreviousTime();    boolean    isLastStep    =    interpolator.isInitialized();    	non-compiled	[CE]  possible  loss  of  precision	57	None	replace
107	[BUG]  [BUGGY]  double  previousT  =  interface.getPreviousTTime();  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interface.getPreviousTTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interface.getPreviousTTime();	  double    previousT    =    interpolator.getPreviousTTime();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
108	[BUG]  [BUGGY]  double  previousT  =  this.interpolator.getCurrentTTime();  [CE]  cannot  find  symbol  interpolator  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  this.interpolator.getCurrentTTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  this.interpolator.getCurrentTTime();	  double    previousT    =    interpolator.getCurrentTTime();    	non-compiled	[CE]  cannot  find  symbol  interpolator	28	None	replace
109	[BUG]  [BUGGY]  Iterator  <  EventState>  iterator  =  this.eventsStates.values().iterator();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Iterator  <  EventState>  iterator  =  this.eventsStates.values().iterator();  [BUGGY]      double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  <  EventState>  iterator  =  this.eventsStates.values().iterator();	  Iterator    <    EventState>    iterator    =    this.eventsStates.iterator();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
110	[BUG]  [BUGGY]  lastStep  =  interpolator.getLastStep();  [CE]  cannot  find  symbol  lastStep  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  lastStep  =  interpolator.getLastStep();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	lastStep  =  interpolator.getLastStep();	  double    previousT    =    interpolator.getCurrentTime();    final    double    previousT    =    interpolator.getCurrentTime();    	non-compiled	[CE]  cannot  find  symbol  lastStep	13	None	replace
111	[BUG]  [BUGGY]  final  double  previousT  =  interpolator.getVarState();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  final  double  previousT  =  interpolator.getVarState();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	final  double  previousT  =  interpolator.getVarState();	  final    double    previousT    =    interpolator.getGlobalCurrentTime();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
112	[BUG]  [BUGGY]  final  double  previousT  =  interpolator.getStandardValue();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  final  double  previousT  =  interpolator.getStandardValue();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	final  double  previousT  =  interpolator.getStandardValue();	  final    double    previousT    =    interpolator.getGlobalCurrentTime();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
113	[BUG]  [BUGGY]  double  previousT  =  iterator.getPreviousCurrentTime();  [CE]  cannot  find  symbol  iterator  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  iterator.getPreviousCurrentTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  iterator.getPreviousCurrentTime();	  double    previousT    =    this.interpolator.getPreviousCurrentTime();    	non-compiled	[CE]  cannot  find  symbol  iterator	42	None	replace
114	[BUG]  [BUGGY]  double  previousT  =  this.interpolator.getNextCurrentTime();  [CE]  cannot  find  symbol  interpolator  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  this.interpolator.getNextCurrentTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  this.interpolator.getNextCurrentTime();	  double    previousT    =    this.interpolator.getPreviousCurrentTime();    	non-compiled	[CE]  cannot  find  symbol  interpolator	42	None	replace
115	[BUG]  [BUGGY]  final  double  previousT  =  this.interpolator.getPreviousCurrentTime();  [CE]  cannot  find  symbol  interpolator  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  final  double  previousT  =  this.interpolator.getPreviousCurrentTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	final  double  previousT  =  this.interpolator.getPreviousCurrentTime();	  final    double    previousT    =    interpolator.getPreviousCurrentTime();    	non-compiled	[CE]  cannot  find  symbol  interpolator	4	None	replace
116	[BUG]  [BUGGY]  Iterator  <  EventState>  iterator  =  es.stepHandlers.iterator();  [CE]  package  es  does  not  exist  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Iterator  <  EventState>  iterator  =  es.stepHandlers.iterator();  [BUGGY]      double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  <  EventState>  iterator  =  es.stepHandlers.iterator();	  Iterator    <    EventState>    iterator    =    stepHandlers.iterator();    	non-compiled	[CE]  package  es  does  not  exist	40	None	replace
117	[BUG]  [BUGGY]  Iterator  <  EventState>  iterator  =  this.stepHandlers.values().iterator();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Iterator  <  EventState>  iterator  =  this.stepHandlers.values().iterator();  [BUGGY]      double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  <  EventState>  iterator  =  this.stepHandlers.values().iterator();	  Iterator    <    EventState>    iterator    =    this.stepHandlers.iterator();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
118	[BUG]  [BUGGY]  if(interpolator!=  null)  {  double  previousT  =  interpolator.getPreviousTime();  final  double  previousT  =  interpolator.getPreviousTime();  }  [CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  if(interpolator!=  null)  {  double  previousT  =  interpolator.getPreviousTime();  final  double  previousT  =  interpolator.getPreviousTime();  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	if(interpolator!=  null)  {  double  previousT  =  interpolator.getPreviousTime();  final  double  previousT  =  interpolator.getPreviousTime();  }	  double    previousT    =    interpolator.getPreviousTime();    final    double    previousT    =    interpolator.getPreviousTime();    	non-compiled	[CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	18	None	replace
119	[BUG]  [BUGGY]  if(interpolator!=  null)  {  double  previousT  =  interpolator.getPreviousTime();  final  double  previousT  =  interpolator.getPreviousTime();  }  else  {  throw  new  MathIllegalStateException( " ");  }  [CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  if(interpolator!=  null)  {  double  previousT  =  interpolator.getPreviousTime();  final  double  previousT  =  interpolator.getPreviousTime();  }  else  {  throw  new  MathIllegalStateException( " ");  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	if(interpolator!=  null)  {  double  previousT  =  interpolator.getPreviousTime();  final  double  previousT  =  interpolator.getPreviousTime();  }  else  {  throw  new  MathIllegalStateException( " ");  }	  double    previousT    =    interpolator.getPreviousTime();    final    double    previousT    =    interpolator.getPreviousTime();    	non-compiled	[CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	18	None	replace
120	[BUG]  [BUGGY]  if(interpolator!=  null)  {  double  previousT  =  interpolator.getPreviousTime();  final  double  previousT  =  interpolator.getPreviousTime();  }  else  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  if(interpolator!=  null)  {  double  previousT  =  interpolator.getPreviousTime();  final  double  previousT  =  interpolator.getPreviousTime();  }  else  {  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	if(interpolator!=  null)  {  double  previousT  =  interpolator.getPreviousTime();  final  double  previousT  =  interpolator.getPreviousTime();  }  else  {	  double    previousT    =    interpolator.getPreviousTime();    final    double    previousT    =    interpolator.getPreviousTime();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
121	[BUG]  [BUGGY]  final  double  previousT  =  interpolator.getPreviousState();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  final  double  previousT  =  interpolator.getPreviousState();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	final  double  previousT  =  interpolator.getPreviousState();	  final    double    previousT    =    interpolator.getPreviousTime();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
122	[BUG]  [BUGGY]  Double  previousT  =  interpolator.getPreviousSign()  +  1;  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Double  previousT  =  interpolator.getPreviousSign()  +  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Double  previousT  =  interpolator.getPreviousSign()  +  1;	  Double    previousT    =    interpolator.getPreviousSign();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
123	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousSize()  /  2  +  1;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.getPreviousSize()  /  2  +  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getPreviousSize()  /  2  +  1;	  double    previousT    =    interpolator.getPreviousSize()    /    2;    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
124	[BUG]  [BUGGY]  final  double  previousT  =  interface.getCurrentTime();  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  final  double  previousT  =  interface.getCurrentTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	final  double  previousT  =  interface.getCurrentTime();	  double    previousT    =    interpolator.getCurrentTime();    double    previousT    =    interface.getCurrentTime();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
125	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousTime()  +  1;  double  previousT  =  interfaceator.getPreviousTime()  +  1;  [CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.getPreviousTime()  +  1;  double  previousT  =  interfaceator.getPreviousTime()  +  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double    previousT    =    interpolator.getPreviousTime()    +    1;    double  previousT  =  interfaceator.getPreviousTime()  +  1;	  	non-compiled	[CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	10	None	add
126	[BUG]  [BUGGY]  Iterator  iterator  =  eventStates.iterator();  [CE]  cannot  find  symbol  eventStates  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Iterator  iterator  =  eventStates.iterator();  [BUGGY]      double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  iterator  =  eventStates.iterator();	  Iterator    iterator    =    this.eventStates.iterator();    	non-compiled	[CE]  cannot  find  symbol  eventStates	62	None	replace
127	[BUG]  [BUGGY]  Iterator  <  E>  iterator  =  eventStates.values().iterator();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Iterator  <  E>  iterator  =  eventStates.values().iterator();  [BUGGY]      double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  <  E>  iterator  =  eventStates.values().iterator();	  Iterator    <    E>    iterator    =    eventsStates.values().iterator();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
128	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.getPreviousTime()  -  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	add	double  previousT  =  interpolator.getPreviousTime()  -  1;	  double    previousT    =    interpolator.getPreviousTime();    Double    previousT    =    interpolator.getPreviousTime();    	compilable	  [FE]  AssertionError  	19	1	replace
129	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousTime()  -  1;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.getPreviousTime()  -  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getPreviousTime()  -  1;	  double    previousT    =    interpolator.getPreviousTime();    Double    previousT    =    interpolator.getPreviousTime();    	compilable	  [FE]  AssertionError  	19	1	replace
130	[BUG]  [BUGGY]  double  previousT  =  interpolator.getCurrentStep();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.getCurrentStep();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getCurrentStep();	  double    previousT    =    interpolator.getCurrentTime();    double    previousT    =    interpolator.getCurrentSize();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
131	[BUG]  [BUGGY]  final  double  previousT  =  interpolator.getCurrentState();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  final  double  previousT  =  interpolator.getCurrentState();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	final  double  previousT  =  interpolator.getCurrentState();	  final    double    previousT    =    interpolator.getCurrentTime();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
132	[BUG]  [BUGGY]  Double  previousT  =  interpolator.getPreviousTime();  boolean  isLastStep  =  interpolator.isInitialized();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Double  previousT  =  interpolator.getPreviousTime();  boolean  isLastStep  =  interpolator.isInitialized();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Double  previousT  =  interpolator.getPreviousTime();  boolean  isLastStep  =  interpolator.isInitialized();	  double    previousT    =    interpolator.getPreviousTime();    boolean    isLastStep    =    interpolator.isInitialized();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
133	[BUG]  [BUGGY]  int  stepSize  =  getStepStart();  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  int  stepSize  =  getStepStart();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	int  stepSize  =  getStepStart();	  int    stepSize    =    getStepSize();    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
134	[BUG]  [BUGGY]  Double  previousT  =  interface.getPreviousCurrentTime();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Double  previousT  =  interface.getPreviousCurrentTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Double  previousT  =  interface.getPreviousCurrentTime();	  Double    previousT    =    interpolator.getPreviousCurrentTime();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
135	[BUG]  [BUGGY]  Iterator  <  E>  iterator  =  stepHandlers.values().iterator();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Iterator  <  E>  iterator  =  stepHandlers.values().iterator();  [BUGGY]      double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  <  E>  iterator  =  stepHandlers.values().iterator();	  Iterator    <    E>    iterator    =    stepHandlers.iterator();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
136	[BUG]  [BUGGY]  double  previousT  =  interface.getPreviousT();  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interface.getPreviousT();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interface.getPreviousT();	  double    previousT    =    interpolator.getPreviousT();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
137	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousCurrentTime()  +  1;  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.getPreviousCurrentTime()  +  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getPreviousCurrentTime()  +  1;	  double    previousT    =    interpolator.getPreviousCurrentTime()    -    1;    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
138	[BUG]  [BUGGY]  Double  previousT  =  interpolator.getPreviousSize()  -  state.getGlobalCurrentTime();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Double  previousT  =  interpolator.getPreviousSize()  -  state.getGlobalCurrentTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Double  previousT  =  interpolator.getPreviousSize()  -  state.getGlobalCurrentTime();	  double    previousT    =    interpolator.getPreviousSize()    -    state.getGlobalCurrentTime();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
139	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousSign()  +  2;  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.getPreviousSign()  +  2;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getPreviousSign()  +  2;	  double    previousT    =    interpolator.getPreviousSign()    +    1;    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
140	[BUG]  [BUGGY]  if(interpolator!=  null)  {  double  previousT  =  interpolator.getPreviousTime();  double  previousT  =  interface.getPreviousTime();  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  if(interpolator!=  null)  {  double  previousT  =  interpolator.getPreviousTime();  double  previousT  =  interface.getPreviousTime();  }  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	if(interpolator!=  null)  {  double  previousT  =  interpolator.getPreviousTime();  double  previousT  =  interface.getPreviousTime();  }	  double    previousT    =    interpolator.getPreviousTime();    double    previousT    =    interface.getPreviousTime();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
141	[BUG]  [BUGGY]  final  int  stepSize  =  getStepStart();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  final  int  stepSize  =  getStepStart();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	final  int  stepSize  =  getStepStart();	  final    int    stepSize    =    getStepSize();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
142	[BUG]  [BUGGY]  double  previousT  =  this.interpolator.getPreviousCurrentTime()  -  1;  [CE]  cannot  find  symbol  interpolator  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  this.interpolator.getPreviousCurrentTime()  -  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  this.interpolator.getPreviousCurrentTime()  -  1;	  double    previousT    =    this.interpolator.getPreviousCurrentTime();    	non-compiled	[CE]  cannot  find  symbol  interpolator	42	None	replace
143	[BUG]  [BUGGY]  double  previousT  =  interpolator.reset();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.reset();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.reset();	  double    previousT    =    interpolator.getNext();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
144	[BUG]  [BUGGY]  final  double  stepStart  =  getStep(currentT,  yDot);  [CE]  cannot  find  symbol  currentT  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  final  double  stepStart  =  getStep(currentT,  yDot);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	final  double  stepStart  =  getStep(currentT,  yDot);	  final    int    stepStart    =    getStep(currentT,    yDot);    	non-compiled	[CE]  cannot  find  symbol  currentT	60	None	replace
145	[BUG]  [BUGGY]  double  previousT  =  interpolator.getPreviousTime()  +  1;  double  previousT  =  interfacepolator.getPreviousTime()  +  1;  [CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)  [FE]    AssertionError    [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.getPreviousTime()  +  1;  double  previousT  =  interfacepolator.getPreviousTime()  +  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double    previousT    =    interpolator.getPreviousTime()    +    1;    double  previousT  =  interfacepolator.getPreviousTime()  +  1;	  	non-compiled	[CE]  variable  previousT  is  already  defined  in  method  acceptStep(AbstractStepInterpolator,double[],double[],double)	10	None	add
146	[BUG]  [BUGGY]  Iterator  <  EventState>  iterator  =  this.eventStates.iterator();  [CE]  cannot  find  symbol  eventStates  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Iterator  <  EventState>  iterator  =  this.eventStates.iterator();  [BUGGY]      double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  <  EventState>  iterator  =  this.eventStates.iterator();	  Iterator    <    EventState>    iterator    =    eventStates.iterator();    	non-compiled	[CE]  cannot  find  symbol  eventStates	41	None	replace
147	[BUG]  [BUGGY]  Double  previousT  =  interpolator.previousSign();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Double  previousT  =  interpolator.previousSign();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Double  previousT  =  interpolator.previousSign();	  Double    previousT    =    interpolator.getPreviousSign();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
148	[BUG]  [BUGGY]  double  previousT  =  this.interpolator.getPreviousTTime();  [CE]  cannot  find  symbol  interpolator  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  this.interpolator.getPreviousTTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  this.interpolator.getPreviousTTime();	  double    previousT    =    interpolator.getPreviousTTime();    	non-compiled	[CE]  cannot  find  symbol  interpolator	50	None	replace
149	[BUG]  [BUGGY]  State  state  =  currentEvent.isState()?  null  :  currentEvent.getState();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  State  state  =  currentEvent.isState()?  null  :  currentEvent.getState();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	State  state  =  currentEvent.isState()?  null  :  currentEvent.getState();	  State    state    =    currentEvent.getState();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
150	[BUG]  [BUGGY]  double  previousT  =  this.interpolator.getPreviousSize()  -  state.getGlobalCurrentTime();  [CE]  cannot  find  symbol  interpolator  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  this.interpolator.getPreviousSize()  -  state.getGlobalCurrentTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  this.interpolator.getPreviousSize()  -  state.getGlobalCurrentTime();	  double    previousT    =    interpolator.getPreviousSize()    -    state.getGlobalCurrentTime();    	non-compiled	[CE]  cannot  find  symbol  interpolator	54	None	replace
151	[BUG]  [BUGGY]  Iterator  <  E>  iterator  =  events.eventStates.iterator();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Iterator  <  E>  iterator  =  events.eventStates.iterator();  [BUGGY]      double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  <  E>  iterator  =  events.eventStates.iterator();	  Iterator    <    E>    iterator    =    this.eventStates.iterator();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
152	[BUG]  [BUGGY]  Iterator  <  E>  iterator  =  events.eventsStates.iterator();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Iterator  <  E>  iterator  =  events.eventsStates.iterator();  [BUGGY]      double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  <  E>  iterator  =  events.eventsStates.iterator();	  Iterator    <    E>    iterator    =    this.eventsStates.iterator();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
153	[BUG]  [BUGGY]  state.reinitializeBegin(es1);  [CE]  cannot  find  symbol  es1  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  state.reinitializeBegin(es1);  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	state.reinitializeBegin(es1);	  state.reinitializeBegin(currentT);    	non-compiled	[CE]  cannot  find  symbol  es1	38	None	replace
154	[BUG]  [BUGGY]  double  previousT  =  interface.getPreviousCurrentTime()  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interface.getPreviousCurrentTime()  -  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interface.getPreviousCurrentTime()  -  1;	  double    previousT    =    interface.getPreviousCurrentTime();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
155	[BUG]  [BUGGY]  static  final  double  currentT  =  interpolator.getGlobalPreviousTime();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  static  final  double  currentT  =  interpolator.getGlobalPreviousTime();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	static  final  double  currentT  =  interpolator.getGlobalPreviousTime();	  final    double    currentT    =    interpolator.getGlobalPreviousTime();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
156	[BUG]  [BUGGY]  Iterator  <  EventState>  iterator  =  events.events.iterator();  [CE]  package  events  does  not  exist  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Iterator  <  EventState>  iterator  =  events.events.iterator();  [BUGGY]      double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  <  EventState>  iterator  =  events.events.iterator();	  Iterator    <    EventState>    iterator    =    this.events.iterator();    	non-compiled	[CE]  package  events  does  not  exist	7	None	replace
157	[BUG]  [BUGGY]  Double  previousT  =  this.interpolator.getPreviousSize();  [CE]  cannot  find  symbol  interpolator  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Double  previousT  =  this.interpolator.getPreviousSize();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Double  previousT  =  this.interpolator.getPreviousSize();	  Double    previousT    =    interpolator.getPreviousSize();    	non-compiled	[CE]  cannot  find  symbol  interpolator	39	None	replace
158	[BUG]  [BUGGY]  Iterator  iterator  =  eventStates.events.iterator();  [CE]  package  eventStates  does  not  exist  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Iterator  iterator  =  eventStates.events.iterator();  [BUGGY]      double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  iterator  =  eventStates.events.iterator();	  Iterator    iterator    =    events.events.iterator();    	non-compiled	[CE]  package  eventStates  does  not  exist	52	None	replace
159	[BUG]  [BUGGY]  Iterator  iterator  =(this.stepHandlers!=  null)?  this.stepHandlers.values().iterator()  :  null;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Iterator  iterator  =(this.stepHandlers!=  null)?  this.stepHandlers.values().iterator()  :  null;  [BUGGY]      double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  iterator  =(this.stepHandlers!=  null)?  this.stepHandlers.values().iterator()  :  null;	  Iterator    iterator    =    this.stepHandlers.values().iterator();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
160	[BUG]  [BUGGY]  Iterator  iterator  =(this.stepHandlers!=  null?  this.stepHandlers.values().iterator()  :  null);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  Iterator  iterator  =(this.stepHandlers!=  null?  this.stepHandlers.values().iterator()  :  null);  [BUGGY]      double  previousT  =  interpolator.getGlobalPreviousTime();  final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	Iterator  iterator  =(this.stepHandlers!=  null?  this.stepHandlers.values().iterator()  :  null);	  Iterator    iterator    =    this.stepHandlers.values().iterator();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
161	[BUG]  [BUGGY]  double  previousT  =  this.interpolator.getPreviousT();  [CE]  cannot  find  symbol  interpolator  [FE]        AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  this.interpolator.getPreviousT();  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  this.interpolator.getPreviousT();	  double    previousT    =    interpolator.getPreviousT();    	non-compiled	[CE]  cannot  find  symbol  interpolator	47	None	replace
162	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.getCurrentTime()  -  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	add	double  previousT  =  interpolator.getCurrentTime()  -  1;	  double    previousT    =    interpolator.getCurrentTime();    Double    previousT    =    interpolator.getCurrentTime();    	compilable	  [FE]  AssertionError  	14	1	replace
163	[BUG]  [BUGGY]  double  previousT  =  interpolator.getCurrentTime()  -  1;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException  {      [BUGGY]  double  previousT  =  interpolator.getCurrentTime()  -  1;  [BUGGY]      final  double  currentT  =  interpolator.getGlobalCurrentTime();  resetOccurred  =  false;  if  (!  statesInitialized)  {  for  (EventState  state  :  eventsStates)  {  state.reinitializeBegin(interpolator);  }  statesInitialized  =  true;  }  [CLASS]  AbstractIntegrator  1  [METHOD]  acceptStep  [RETURN_TYPE]  double  AbstractStepInterpolator  interpolator  final  double[]  y  final  double[]  yDot  final  double  tEnd  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  EventState  currentEvent  es0  es1  state  double  convergence  currentT  eventT  maxCheckInterval  previousT  stepSize  stepStart  t  t0  tEnd  Incrementor  evaluations  StepHandler  handler  String  name  SortedSet  occuringEvents  int  orderingSign  boolean  isLastStep  resetOccurred  stateInitialized  statesInitialized  double[]  currentY  eventY  y  yDot  Iterator  iterator  Collection  eventsStates  stepHandlers  AbstractStepInterpolator  interpolator  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	278	278	1	replace	double  previousT  =  interpolator.getCurrentTime()  -  1;	  double    previousT    =    interpolator.getCurrentTime();    Double    previousT    =    interpolator.getCurrentTime();    	compilable	  [FE]  AssertionError  	14	1	replace
