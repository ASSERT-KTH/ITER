bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  System.arraycopy(equations.getDimension(),  0,  y0,  0,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]        ArrayStoreException      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(equations.getDimension(),  0,  y0,  0,  t.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equations.getDimension(),  0,  y0,  0,  t.length);	  System.arraycopy(equations.getDimension(),    0,    y0,    0,    y.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	86	None	replace
2	[BUG]  [BUGGY]  final  int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  break;  }  [CE]  >  expected  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  break;  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  break;  }	  int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    break;    }    	non-compiled	[CE]  >  expected	31	None	replace
3	[BUG]  [BUGGY]  if(equations!=  null)  {  int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  break;  }  [CE]  >  expected  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  if(equations!=  null)  {  int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  break;  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	if(equations!=  null)  {  int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  break;  }	  int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    break;    }    	non-compiled	[CE]  >  expected	31	None	replace
4	[BUG]  [BUGGY]  if(equations!=  null)  {  int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  break;  }  }  [CE]  >  expected  [FE]                          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  if(equations!=  null)  {  int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  break;  }  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	if(equations!=  null)  {  int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  break;  }  }	  int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    break;    }    	non-compiled	[CE]  >  expected	31	None	replace
5	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  0,  y,  0,  expandableODE.length);  [CE]  cannot  find  symbol  expandableODE  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(expandableODE,  0,  y,  0,  expandableODE.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(expandableODE,  0,  y,  0,  expandableODE.length);	  System.arraycopy(expandableODE,    0,    y,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	1	None	replace
6	[BUG]  [BUGGY]  System.arraycopy(expandeableODE,  0,  y,  0,  expandableODE.length);  [CE]  cannot  find  symbol  expandeableODE  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(expandeableODE,  0,  y,  0,  expandableODE.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(expandeableODE,  0,  y,  0,  expandableODE.length);	  System.arraycopy(expandableODE,    0,    y,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expandeableODE	1	None	replace
7	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  [CE]  cannot  find  symbol  expandableODE  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(expandableODE,  0,  expandableODE,  0,  y.length);	  System.arraycopy(expandableODE,    0,    y,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	1	None	replace
8	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  0,  t,  0,  y.length);  [CE]  cannot  find  symbol  expandableODE  [FE]                          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(expandableODE,  0,  t,  0,  y.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(expandableODE,  0,  t,  0,  y.length);	  System.arraycopy(expandableODE,    0,    y,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	1	None	replace
9	[BUG]  [BUGGY]  Integrator  t0  =  equations.getIntegrator1();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Integrator  t0  =  equations.getIntegrator1();  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integrator  t0  =  equations.getIntegrator1();	  Integrator    t0    =    equations.getIntegrator2();    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
10	[BUG]  [BUGGY]  Integrator  t0  =  equations,  equations.getIntegrator2();  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Integrator  t0  =  equations,  equations.getIntegrator2();  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integrator  t0  =  equations,  equations.getIntegrator2();	  Integrator    t0    =    equations.getIntegrator2();    	non-compiled	[CE]  ';'  expected	100	None	replace
11	[BUG]  [BUGGY]  Integrator  t1  =  equations.getIntegrator2();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Integrator  t1  =  equations.getIntegrator2();  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integrator  t1  =  equations.getIntegrator2();	  Integrator    t0    =    equations.getIntegrator2();    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
12	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	add	                System.arraycopy(equations.getDimension(),        0,        y,        0,        y.length);        System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	15	1	add
13	[BUG]  [BUGGY]          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	                System.arraycopy(equations.getDimension(),        0,        y,        0,        y.length);        System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	15	1	add
14	[BUG]  [BUGGY]          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  y.length);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]      ArrayStoreException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  y.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	                System.arraycopy(equations.getDimension(),        0,        y,        0,        y.length);        System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  y.length);	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	15	None	add
15	[BUG]  [BUGGY]          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  system.arraycopy(equations.getDimension(),  0,  y.length);  [CE]  cannot  find  symbol  system  [FE]        ArrayStoreException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  system.arraycopy(equations.getDimension(),  0,  y.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	                System.arraycopy(equations.getDimension(),        0,        y,        0,        y.length);        System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  system.arraycopy(equations.getDimension(),  0,  y.length);	  	non-compiled	[CE]  cannot  find  symbol  system	15	None	add
16	[BUG]  [BUGGY]  Integrator  t0  =  equations.getIntegrator(1);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Integrator  t0  =  equations.getIntegrator(1);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integrator  t0  =  equations.getIntegrator(1);	  Integrator    t0    =    equations.getIntegrator(0);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
17	[BUG]  [BUGGY]  System.arraycopy(equivalents.getDimension(),  0,  t0,  0,  equations.length);  [CE]  cannot  find  symbol  equivalents  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(equivalents.getDimension(),  0,  t0,  0,  equations.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equivalents.getDimension(),  0,  t0,  0,  equations.length);	  System.arraycopy(equations.getDimension(),    0,    t0,    0,    equations.length);    	non-compiled	[CE]  cannot  find  symbol  equivalents	36	None	replace
18	[BUG]  [BUGGY]  System.arraycopy(equivalences.getDimension(),  0,  t0,  0,  equations.length);  [CE]  cannot  find  symbol  equivalences  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(equivalences.getDimension(),  0,  t0,  0,  equations.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equivalences.getDimension(),  0,  t0,  0,  equations.length);	  System.arraycopy(equations.getDimension(),    0,    t0,    0,    equations.length);    	non-compiled	[CE]  cannot  find  symbol  equivalences	36	None	replace
19	[BUG]  [BUGGY]  System.arraycopy(equations.getDimension(),  0,  t0,  1,  equations.length);  [CE]  cannot  find  symbol  length  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(equations.getDimension(),  0,  t0,  1,  equations.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equations.getDimension(),  0,  t0,  1,  equations.length);	  System.arraycopy(equations.getDimension(),    0,    t0,    0,    equations.length);    	non-compiled	[CE]  cannot  find  symbol  length	36	None	replace
20	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y.length,  expandable);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y.length,  expandable);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y.length,  expandable);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    expandable);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	19	None	replace
21	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  expandable);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  expandable);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  expandable);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    expandable);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	19	None	replace
22	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  expandable);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  expandable);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  expandable);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    expandable);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	19	None	replace
23	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y1,  t);  [CE]  cannot  find  symbol  y1  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y1,  t);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y1,  t);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y1,    equations);    	non-compiled	[CE]  cannot  find  symbol  y1	93	None	replace
24	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t1,  equations);  [CE]  cannot  find  symbol  t1  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t1,  equations);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t1,  equations);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y1,    equations);    	non-compiled	[CE]  cannot  find  symbol  t1	93	None	replace
25	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  equations.size();  y++)  {  if(t0  ==  null)  {  throw  new  DimensionMismatchException(t1,  t);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  for(int  y  =  0;  y  <  equations.size();  y++)  {  if(t0  ==  null)  {  throw  new  DimensionMismatchException(t1,  t);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  0;  y  <  equations.size();  y++)  {  if(t0  ==  null)  {  throw  new  DimensionMismatchException(t1,  t);  }	  for(int    y    =    0;    y    <    equations.size();    y++)    {    if(t0!=    null)    {    throw    new    DimensionMismatchException(t1,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
26	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  equations.size();  y++)  {  if(t0!=  null)  {  throw  new  DimensionMismatchException(t1,  t);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  for(int  y  =  1;  y  <  equations.size();  y++)  {  if(t0!=  null)  {  throw  new  DimensionMismatchException(t1,  t);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  1;  y  <  equations.size();  y++)  {  if(t0!=  null)  {  throw  new  DimensionMismatchException(t1,  t);  }	  for(int    y    =    0;    y    <    equations.size();    y++)    {    if(t0!=    null)    {    throw    new    DimensionMismatchException(t1,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
27	[BUG]  [BUGGY]  For(int  y  =  0;  y  <  equations.size();  y++)  {  if(t0!=  null)  {  throw  new  DimensionMismatchException(t1,  t);  }  [CE]  '.class'  expected  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  For(int  y  =  0;  y  <  equations.size();  y++)  {  if(t0!=  null)  {  throw  new  DimensionMismatchException(t1,  t);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	For(int  y  =  0;  y  <  equations.size();  y++)  {  if(t0!=  null)  {  throw  new  DimensionMismatchException(t1,  t);  }	  for(int    y    =    0;    y    <    equations.size();    y++)    {    if(t0!=    null)    {    throw    new    DimensionMismatchException(t1,    t);    }    	non-compiled	[CE]  '.class'  expected	66	None	replace
28	[BUG]  [BUGGY]  static  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  static  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	static  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(y0,    t0);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
29	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t1);  [CE]  cannot  find  symbol  t1  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t1);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t1);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    t1);    	non-compiled	[CE]  cannot  find  symbol  t1	64	None	replace
30	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(x0,  y1);  [CE]  cannot  find  symbol  x0  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(x0,  y1);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(x0,  y1);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    t1);    	non-compiled	[CE]  cannot  find  symbol  x0	64	None	replace
31	[BUG]  [BUGGY]  Integer  t0  =(int)equations.get(0);  [CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Integer  t0  =(int)equations.get(0);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integer  t0  =(int)equations.get(0);	  Integer    t0    =(Integer)equations.get(0);    	non-compiled	[CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])	33	None	replace
32	[BUG]  [BUGGY]  Integer  t0  =(Integer)equations.get(1);  [CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Integer  t0  =(Integer)equations.get(1);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integer  t0  =(Integer)equations.get(1);	  Integer    t0    =(Integer)equations.get(0);    	non-compiled	[CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])	33	None	replace
33	[BUG]  [BUGGY]  Integer  t0  =(Integer)equivalences.get(0);  [CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Integer  t0  =(Integer)equivalences.get(0);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integer  t0  =(Integer)equivalences.get(0);	  Integer    t0    =(Integer)equations.get(0);    	non-compiled	[CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])	33	None	replace
34	[BUG]  [BUGGY]  Integer  t0  =(Integer)equations.get(y0.length);  [CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Integer  t0  =(Integer)equations.get(y0.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integer  t0  =(Integer)equations.get(y0.length);	  Integer    t0    =(Integer)equations.get(y0);    	non-compiled	[CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])	32	None	replace
35	[BUG]  [BUGGY]  Integer  t0  =(Integer)equivalences.get(y0);  [CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Integer  t0  =(Integer)equivalences.get(y0);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integer  t0  =(Integer)equivalences.get(y0);	  Integer    t0    =(Integer)equations.get(y0);    	non-compiled	[CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])	32	None	replace
36	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y.length,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y.length,  t.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y.length,  t.length);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	22	None	replace
37	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t.length);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	22	None	replace
38	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y.length,  t);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y.length,  t);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y.length,  t);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y.length);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	22	None	replace
39	[BUG]  [BUGGY]  System.arraycopy(expandeableODE,  t0);  [CE]  cannot  find  symbol  expandeableODE  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(expandeableODE,  t0);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(expandeableODE,  t0);	  System.arraycopy(expandableODE,    t0);    	non-compiled	[CE]  cannot  find  symbol  expandeableODE	75	None	replace
40	[BUG]  [BUGGY]  System.arraycopy(expansion,  t0);  [CE]  cannot  find  symbol  expansion  [FE]                          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(expansion,  t0);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(expansion,  t0);	  System.arraycopy(expandableODE,    t0);    	non-compiled	[CE]  cannot  find  symbol  expansion	75	None	replace
41	[BUG]  [BUGGY]  System.arraycopy(expansionableODE,  t0);  [CE]  cannot  find  symbol  expansionableODE  [FE]                            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(expansionableODE,  t0);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(expansionableODE,  t0);	  System.arraycopy(expandableODE,    t0);    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	75	None	replace
42	[BUG]  [BUGGY]  System.arraycopy(equivalences.getDimension(),  0,  y,  0,  t.length);  [CE]  cannot  find  symbol  equivalences  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(equivalences.getDimension(),  0,  y,  0,  t.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equivalences.getDimension(),  0,  y,  0,  t.length);	  System.arraycopy(t0.getDimension(),    0,    y,    0,    t.length);    	non-compiled	[CE]  cannot  find  symbol  equivalences	102	None	replace
43	[BUG]  [BUGGY]  System.arraycopy(equivalents.getDimension(),  0,  y,  0,  t.length);  [CE]  cannot  find  symbol  equivalents  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(equivalents.getDimension(),  0,  y,  0,  t.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equivalents.getDimension(),  0,  y,  0,  t.length);	  System.arraycopy(t0.getDimension(),    0,    y,    0,    t.length);    	non-compiled	[CE]  cannot  find  symbol  equivalents	102	None	replace
44	[BUG]  [BUGGY]  Arrays.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  [CE]  cannot  find  symbol  Arrays  [FE]    ArrayStoreException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Arrays.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Arrays.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);	          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  Arrays	16	None	replace
45	[BUG]  [BUGGY]  System.arraycopy(equations.getDimension(),  0,  y1,  0,  y.length);  [CE]  cannot  find  symbol  y1  [FE]      ArrayStoreException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(equations.getDimension(),  0,  y1,  0,  y.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equations.getDimension(),  0,  y1,  0,  y.length);	          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  y1	16	None	replace
46	[BUG]  [BUGGY]  System.arraycopy(equations.getDimension(),  0,  t,  0,  equations.length);  [CE]  cannot  find  symbol  length  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(equations.getDimension(),  0,  t,  0,  equations.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equations.getDimension(),  0,  t,  0,  equations.length);	  System.arraycopy(equations.getDimension(),    0,    y,    0,    equations.length);    	non-compiled	[CE]  cannot  find  symbol  length	10	None	replace
47	[BUG]  [BUGGY]  System.arraycopy(equivalents.getDimension(),  0,  y,  0,  equations.length);  [CE]  cannot  find  symbol  equivalents  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(equivalents.getDimension(),  0,  y,  0,  equations.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equivalents.getDimension(),  0,  y,  0,  equations.length);	  System.arraycopy(equations.getDimension(),    0,    y,    0,    equations.length);    	non-compiled	[CE]  cannot  find  symbol  equivalents	10	None	replace
48	[BUG]  [BUGGY]  System.arraycopy(equivalences.getDimension(),  0,  y,  0,  equations.length);  [CE]  cannot  find  symbol  equivalences  [FE]                          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(equivalences.getDimension(),  0,  y,  0,  equations.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equivalences.getDimension(),  0,  y,  0,  equations.length);	  System.arraycopy(equations.getDimension(),    0,    y,    0,    equations.length);    	non-compiled	[CE]  cannot  find  symbol  equivalences	10	None	replace
49	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  t0);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  t0);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  t0);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    equations,    t0);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	94	None	replace
50	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  equations,  y);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  equations,  y);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  equations,  y);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    equations,    t0);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	94	None	replace
51	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y1,  t0);  [CE]  cannot  find  symbol  y1  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y1,  t0);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y1,  t0);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    equations,    t0);    	non-compiled	[CE]  cannot  find  symbol  y1	94	None	replace
52	[BUG]  [BUGGY]  expandableODE.setPrimaryState(t0);  [CE]  cannot  find  symbol  expandableODE  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  expandableODE.setPrimaryState(t0);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	expandableODE.setPrimaryState(t0);	  t0    =    equations.getDimension();    expandableODE.setPrimaryState(t0);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	90	None	replace
53	[BUG]  [BUGGY]  null  =  equations.getDimension();  expandableODE.setPrimaryState(t0);  [CE]  unexpected  type  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  null  =  equations.getDimension();  expandableODE.setPrimaryState(t0);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	null  =  equations.getDimension();  expandableODE.setPrimaryState(t0);	  t0    =    equations.getDimension();    expandableODE.setPrimaryState(t0);    	non-compiled	[CE]  unexpected  type	90	None	replace
54	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  for(int  y  =  1;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  1;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }	  for(int    y    =    1;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
55	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  equations.size();  y++)  {  if(t0  ==  null)  {  throw  new  DimensionMismatchException(t0,  t);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  for(int  y  =  1;  y  <  equations.size();  y++)  {  if(t0  ==  null)  {  throw  new  DimensionMismatchException(t0,  t);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  1;  y  <  equations.size();  y++)  {  if(t0  ==  null)  {  throw  new  DimensionMismatchException(t0,  t);  }	  for(int    y    =    1;    y    <    equations.size();    y++)    {    if(t0!=    null)    {    throw    new    DimensionMismatchException(t0,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
56	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  t0,  y,  0,  expandableODE.length);  [CE]  cannot  find  symbol  expandableODE  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(expandableODE,  t0,  y,  0,  expandableODE.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(expandableODE,  t0,  y,  0,  expandableODE.length);	  System.arraycopy(expandableODE,    t0,    y,    0,    t.length);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	73	None	replace
57	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  t0,  expandable,  0,  t.length);  [CE]  cannot  find  symbol  expandableODE  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(expandableODE,  t0,  expandable,  0,  t.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(expandableODE,  t0,  expandable,  0,  t.length);	  System.arraycopy(expandableODE,    t0,    y,    0,    t.length);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	73	None	replace
58	[BUG]  [BUGGY]  System.arraycopy(expandeableODE,  t0,  y,  0,  expandableODE.length);  [CE]  cannot  find  symbol  expandeableODE  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(expandeableODE,  t0,  y,  0,  expandableODE.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(expandeableODE,  t0,  y,  0,  expandableODE.length);	  System.arraycopy(expandableODE,    t0,    y,    0,    t.length);    	non-compiled	[CE]  cannot  find  symbol  expandeableODE	73	None	replace
59	[BUG]  [BUGGY]  System.arraycopy(expansionableODE,  t0,  y,  0,  t.length);  [CE]  cannot  find  symbol  expansionableODE  [FE]                          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(expansionableODE,  t0,  y,  0,  t.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(expansionableODE,  t0,  y,  0,  t.length);	  System.arraycopy(expandableODE,    t0,    y,    0,    t.length);    	non-compiled	[CE]  cannot  find  symbol  expansionableODE	73	None	replace
60	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  elements.size();  y++)  {  if(isLastStep)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  for(int  y  =  0;  y  <  elements.size();  y++)  {  if(isLastStep)  {  break;  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  0;  y  <  elements.size();  y++)  {  if(isLastStep)  {  break;  }	  for(int    y    =    0;    y    <    elements.size();    y++)    {    if(!isLastStep)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
61	[BUG]  [BUGGY]  t0  =  equations,  equations.getMaxCheckInterval();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  t0  =  equations,  equations.getMaxCheckInterval();  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	t0  =  equations,  equations.getMaxCheckInterval();	  t0    =    equations,    equations.getT0();    	non-compiled	[CE]  ';'  expected	62	None	replace
62	[BUG]  [BUGGY]  t0  =  t0,  equations.getT0();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  t0  =  t0,  equations.getT0();  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	t0  =  t0,  equations.getT0();	  t0    =    equations,    equations.getT0();    	non-compiled	[CE]  ';'  expected	62	None	replace
63	[BUG]  [BUGGY]  t0  =  Math.max(t0.length,  y.length);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  t0  =  Math.max(t0.length,  y.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	t0  =  Math.max(t0.length,  y.length);	  t0    =    Math.max(y0.length,    t.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	95	None	replace
64	[BUG]  [BUGGY]  t0  =  Math.max(t,  y.length);  [CE]  cannot  find  symbol  expandableODE  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  t0  =  Math.max(t,  y.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	t0  =  Math.max(t,  y.length);	  t0    =    Math.max(y0.length,    t.length);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	95	None	replace
65	[BUG]  [BUGGY]  Arrays.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);  [CE]  cannot  find  symbol  Arrays  [FE]    ArrayStoreException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Arrays.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Arrays.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);	          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),    0,    t,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  Arrays	70	None	replace
66	[BUG]  [BUGGY]  System.arraycopy(equates.getDimension(),  0,  t,  0,  y.length);  [CE]  cannot  find  symbol  equates  [FE]      ArrayStoreException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(equates.getDimension(),  0,  t,  0,  y.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equates.getDimension(),  0,  t,  0,  y.length);	          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),    0,    t,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  equates	70	None	replace
67	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  t,  t);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  t,  t);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  t,  t);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y,    t);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	11	None	replace
68	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  t,  expansion);  [CE]  cannot  find  symbol  expansion  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  t,  expansion);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  t,  expansion);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y,    t);    	non-compiled	[CE]  cannot  find  symbol  expansion	11	None	replace
69	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t,  expandable);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t,  expandable);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t,  expandable);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(expandable,    t);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	20	None	replace
70	[BUG]  [BUGGY]  Integrator  t0  =  equations,  equations.getIntegrator(0);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Integrator  t0  =  equations,  equations.getIntegrator(0);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integrator  t0  =  equations,  equations.getIntegrator(0);	  Integrator    t0    =    equations,    equations.getIntegrator();    	non-compiled	[CE]  ';'  expected	79	None	replace
71	[BUG]  [BUGGY]  Integrator  t0  =  equations,  equations.getInitializing();  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Integrator  t0  =  equations,  equations.getInitializing();  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integrator  t0  =  equations,  equations.getInitializing();	  Integrator    t0    =    equations,    equations.getIntegrator();    	non-compiled	[CE]  ';'  expected	79	None	replace
72	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  t0,  expandable,  0,  y.length);  [CE]  cannot  find  symbol  expandableODE  [FE]                          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(expandableODE,  t0,  expandable,  0,  y.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(expandableODE,  t0,  expandable,  0,  y.length);	  System.arraycopy(expandableODE,    t0,    y,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	4	None	replace
73	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  t0,  expandedable,  0,  y.length);  [CE]  cannot  find  symbol  expandableODE  [FE]                            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(expandableODE,  t0,  expandedable,  0,  y.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(expandableODE,  t0,  expandedable,  0,  y.length);	  System.arraycopy(expandableODE,    t0,    y,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	4	None	replace
74	[BUG]  [BUGGY]  System.arraycopy(equations.getDimension(),  0,  x,  0,  y.length);  [CE]  cannot  find  symbol  x  [FE]          ArrayStoreException      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(equations.getDimension(),  0,  x,  0,  y.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equations.getDimension(),  0,  x,  0,  y.length);	          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),    0,    x,    0,    x.length);    	non-compiled	[CE]  cannot  find  symbol  x	68	None	replace
75	[BUG]  [BUGGY]  For(int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y0);  }  [CE]  '.class'  expected  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  For(int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y0);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	For(int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y0);  }	  for(int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    y0);    }    	non-compiled	[CE]  '.class'  expected	87	None	replace
76	[BUG]  [BUGGY]  Integer  t0  =(Integer)equations.get(y1);  [CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Integer  t0  =(Integer)equations.get(y1);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integer  t0  =(Integer)equations.get(y1);	  Integer    t0    =(Integer)equations.get(x0);    	non-compiled	[CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])	77	None	replace
77	[BUG]  [BUGGY]  System.arraycopy(t0,  0,  y,  0,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(t0,  0,  y,  0,  t.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(t0,  0,  y,  0,  t.length);	  System.arraycopy(expandableODE,    0,    y,    0,    t.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	2	None	replace
78	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t1,  t1);  [CE]  cannot  find  symbol  t1  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t1,  t1);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t1,  t1);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y,    t1);    	non-compiled	[CE]  cannot  find  symbol  t1	106	None	replace
79	[BUG]  [BUGGY]  t0  =  y,  equations.getT0();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  t0  =  y,  equations.getT0();  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	t0  =  y,  equations.getT0();	  t0    =    equations,    y.getT0();    	non-compiled	[CE]  ';'  expected	103	None	replace
80	[BUG]  [BUGGY]  t0  =  y0,  equations.getT0();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  t0  =  y0,  equations.getT0();  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	t0  =  y0,  equations.getT0();	  t0    =    equations,    y.getT0();    	non-compiled	[CE]  ';'  expected	103	None	replace
81	[BUG]  [BUGGY]  t0  =  t0,  y.getT0();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  t0  =  t0,  y.getT0();  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	t0  =  t0,  y.getT0();	  t0    =    equations,    y.getT0();    	non-compiled	[CE]  ';'  expected	103	None	replace
82	[BUG]  [BUGGY]  t0  =  equations,  y.getMaxCheckInterval();  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  t0  =  equations,  y.getMaxCheckInterval();  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	t0  =  equations,  y.getMaxCheckInterval();	  t0    =    equations,    y.getT0();    	non-compiled	[CE]  ';'  expected	103	None	replace
83	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  equations,  y.length);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  equations,  y.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  equations,  y.length);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    equations,    expansion);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	60	None	replace
84	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  equations,  t);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  equations,  t);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  equations,  t);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    equations,    expansion);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	60	None	replace
85	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  equations.size();  y++)  {  if(isLastStep)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  for(int  y  =  1;  y  <  equations.size();  y++)  {  if(isLastStep)  {  break;  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  1;  y  <  equations.size();  y++)  {  if(isLastStep)  {  break;  }	  for(int    y    =    0;    y    <    equations.size();    y++)    {    if(isLastStep)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
86	[BUG]  [BUGGY]  int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  break;  }  [CE]  >  expected  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  break;  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  break;  }	  for(int    y    =    0;    y    <    equations.size();    y++)    {    if(isLastStep)    {    break;    }    	non-compiled	[CE]  >  expected	29	None	replace
87	[BUG]  [BUGGY]  For(int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  break;  }  [CE]  '.class'  expected  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  For(int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  break;  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	For(int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  break;  }	  for(int    y    =    0;    y    <    equations.size();    y++)    {    if(isLastStep)    {    break;    }    	non-compiled	[CE]  '.class'  expected	29	None	replace
88	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  y0);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  for(int  y  =  1;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  y0);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  1;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  y0);  }	  for(int    y    =    0;    y    <    equations.size();    y++)    {    if(isLastStep)    {    throw    new    DimensionMismatchException(t0,    y0);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
89	[BUG]  [BUGGY]  For(int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  y0);  }  [CE]  '.class'  expected  [FE]                          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  For(int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  y0);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	For(int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  y0);  }	  for(int    y    =    0;    y    <    equations.size();    y++)    {    if(isLastStep)    {    throw    new    DimensionMismatchException(t0,    y0);    }    	non-compiled	[CE]  '.class'  expected	89	None	replace
90	[BUG]  [BUGGY]  t0  =  equations,  y.getT1();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  t0  =  equations,  y.getT1();  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	t0  =  equations,  y.getT1();	  t0    =    equations.getT1();    	non-compiled	[CE]  ';'  expected	25	None	replace
91	[BUG]  [BUGGY]  t1  =  equations.getT1();  [CE]  cannot  find  symbol  t1  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  t1  =  equations.getT1();  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	t1  =  equations.getT1();	  t0    =    equations.getT1();    	non-compiled	[CE]  cannot  find  symbol  t1	25	None	replace
92	[BUG]  [BUGGY]  For(int  y  =  0;  y  <  equations.size();  y++)  {  if(t0  ==  null)  {  throw  new  DimensionMismatchException(t0,  t);  }  [CE]  '.class'  expected  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  For(int  y  =  0;  y  <  equations.size();  y++)  {  if(t0  ==  null)  {  throw  new  DimensionMismatchException(t0,  t);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	For(int  y  =  0;  y  <  equations.size();  y++)  {  if(t0  ==  null)  {  throw  new  DimensionMismatchException(t0,  t);  }	  for(int    y    =    0;    y    <    equations.size();    y++)    {    if(t0    ==    null)    {    throw    new    DimensionMismatchException(t0,    t);    }    	non-compiled	[CE]  '.class'  expected	52	None	replace
93	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(expandable,  y);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(expandable,  y);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(expandable,  y);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(expandable,    t1);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	99	None	replace
94	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(expandable,  y.length);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(expandable,  y.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(expandable,  y.length);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(expandable,    t1);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	99	None	replace
95	[BUG]  [BUGGY]  System.arraycopy(t0,  equations.getDimension(),  0,  t0,  0,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(t0,  equations.getDimension(),  0,  t0,  0,  t.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(t0,  equations.getDimension(),  0,  t0,  0,  t.length);	  System.arraycopy(equations,    equations.getDimension(),    0,    t0,    0,    t.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	110	None	replace
96	[BUG]  [BUGGY]  System.arraycopy(equivalents,  equations.getDimension(),  0,  t0,  0,  t.length);  [CE]  cannot  find  symbol  equivalents  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(equivalents,  equations.getDimension(),  0,  t0,  0,  t.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equivalents,  equations.getDimension(),  0,  t0,  0,  t.length);	  System.arraycopy(equations,    equations.getDimension(),    0,    t0,    0,    t.length);    	non-compiled	[CE]  cannot  find  symbol  equivalents	110	None	replace
97	[BUG]  [BUGGY]  System.arraycopy(equivalences,  equations.getDimension(),  0,  t0,  0,  t.length);  [CE]  cannot  find  symbol  equivalences  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(equivalences,  equations.getDimension(),  0,  t0,  0,  t.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equivalences,  equations.getDimension(),  0,  t0,  0,  t.length);	  System.arraycopy(equations,    equations.getDimension(),    0,    t0,    0,    t.length);    	non-compiled	[CE]  cannot  find  symbol  equivalences	110	None	replace
98	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y,  t0.length);  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y,  t0.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y,  t0.length);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y,    t.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	12	None	replace
99	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y,  t.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y,  t.length);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y,    t.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	12	None	replace
100	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(x0,  y,  t.length);  [CE]  cannot  find  symbol  x0  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(x0,  y,  t.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(x0,  y,  t.length);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y,    t.length);    	non-compiled	[CE]  cannot  find  symbol  x0	12	None	replace
101	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y.length,  t,  equations);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y.length,  t,  equations);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y.length,  t,  equations);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y.length,    equations);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	57	None	replace
102	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  t.length,  equations);  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  t.length,  equations);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  t.length,  equations);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y.length,    equations);    	non-compiled	[CE]  double  cannot  be  dereferenced	57	None	replace
103	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t.length,  equations);  [CE]  double  cannot  be  dereferenced  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t.length,  equations);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t.length,  equations);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y.length,    equations);    	non-compiled	[CE]  double  cannot  be  dereferenced	57	None	replace
104	[BUG]  [BUGGY]  System.arraycopy(t0.getDimension(),  0,  y0,  0,  equations.length);  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(t0.getDimension(),  0,  y0,  0,  equations.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(t0.getDimension(),  0,  y0,  0,  equations.length);	  System.arraycopy(equations.getDimension(),    0,    y0,    0,    t0.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	72	None	replace
105	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  t.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  t.length);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y0,    t);    	non-compiled	[CE]  double  cannot  be  dereferenced	82	None	replace
106	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t0,  t);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t0,  t);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t0,  t);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y0,    t);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	82	None	replace
107	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  t,  t);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  t,  t);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  t,  t);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y0,    t);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	82	None	replace
108	[BUG]  [BUGGY]  System.arraycopy(equations.getDimension(),  0,  t1,  0,  t.length);  [CE]  cannot  find  symbol  t1  [FE]        ArrayStoreException      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(equations.getDimension(),  0,  t1,  0,  t.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equations.getDimension(),  0,  t1,  0,  t.length);	          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),    0,    t0,    0,    t.length);    	non-compiled	[CE]  cannot  find  symbol  t1	96	None	replace
109	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  equations,  t1);  [CE]  cannot  find  symbol  t1  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  equations,  t1);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  equations,  t1);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    equations,    t1);    	non-compiled	[CE]  cannot  find  symbol  t1	59	None	replace
110	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y.length,  t0.length);  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y.length,  t0.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y.length,  t0.length);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0.length,    y.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	47	None	replace
111	[BUG]  [BUGGY]  System.arraycopy(equaredEquations.getDimension(),  0,  t0,  0,  t.length);  [CE]  cannot  find  symbol  equaredEquations  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(equaredEquations.getDimension(),  0,  t0,  0,  t.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equaredEquations.getDimension(),  0,  t0,  0,  t.length);	  System.arraycopy(equivalents.getDimension(),    0,    t0,    0,    t.length);    	non-compiled	[CE]  cannot  find  symbol  equaredEquations	38	None	replace
112	[BUG]  [BUGGY]          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  t,  0,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]    ArrayStoreException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  t,  0,  t.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	                System.arraycopy(equations.getDimension(),        0,        y,        0,        y.length);        System.arraycopy(equations.getDimension(),    0,    t,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  t,  0,  t.length);	  	non-compiled	[CE]  double  cannot  be  dereferenced	69	None	add
113	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	add	                System.arraycopy(equations.getDimension(),        0,        y,        0,        y.length);        System.arraycopy(equations.getDimension(),    0,    t,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	69	1	add
114	[BUG]  [BUGGY]          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	                System.arraycopy(equations.getDimension(),        0,        y,        0,        y.length);        System.arraycopy(equations.getDimension(),    0,    t,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	69	1	add
115	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]        ArrayStoreException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	add	                System.arraycopy(equations.getDimension(),        0,        y,        0,        y.length);        System.arraycopy(equations.getDimension(),    0,    t,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	69	1	add
116	[BUG]  [BUGGY]          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  [FE]  ArrayStoreException  [FE]        ArrayStoreException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	                System.arraycopy(equations.getDimension(),        0,        y,        0,        y.length);        System.arraycopy(equations.getDimension(),    0,    t,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	69	1	add
117	[BUG]  [BUGGY]          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  y,  0,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]          ArrayStoreException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  y,  0,  t.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	                System.arraycopy(equations.getDimension(),        0,        y,        0,        y.length);        System.arraycopy(equations.getDimension(),    0,    t,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  y,  0,  t.length);	  	non-compiled	[CE]  double  cannot  be  dereferenced	69	None	add
118	[BUG]  [BUGGY]  System.arraycopy(t.getDimension(),  0,  equations,  0,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(t.getDimension(),  0,  equations,  0,  t.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(t.getDimension(),  0,  equations,  0,  t.length);	  System.arraycopy(equations.getDimension(),    0,    t,    0,    t.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	81	None	replace
119	[BUG]  [BUGGY]  System.arraycopy(t.getDimension(),  0,  t,  0,  equations.length);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(t.getDimension(),  0,  t,  0,  equations.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(t.getDimension(),  0,  t,  0,  equations.length);	  System.arraycopy(equations.getDimension(),    0,    t,    0,    t.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	81	None	replace
120	[BUG]  [BUGGY]  final  int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }  [CE]  >  expected  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }	  int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    t);    }    	non-compiled	[CE]  >  expected	109	None	replace
121	[BUG]  [BUGGY]  if(equations!=  null)  {  int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }  [CE]  >  expected  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  if(equations!=  null)  {  int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	if(equations!=  null)  {  int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }	  int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    t);    }    	non-compiled	[CE]  >  expected	109	None	replace
122	[BUG]  [BUGGY]  int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }  [CE]  >  expected  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }	  int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    t);    }    	non-compiled	[CE]  >  expected	109	None	replace
123	[BUG]  [BUGGY]  System.arraycopy(equivalences.getDimension(),  0,  t0,  0,  t.length);  [CE]  cannot  find  symbol  equivalences  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(equivalences.getDimension(),  0,  t0,  0,  t.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equivalences.getDimension(),  0,  t0,  0,  t.length);	  System.arraycopy(t1.getDimension(),    0,    t0,    0,    t.length);    	non-compiled	[CE]  cannot  find  symbol  equivalences	111	None	replace
124	[BUG]  [BUGGY]  System.arraycopy(variables.getDimension(),  0,  t0,  0,  t.length);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(variables.getDimension(),  0,  t0,  0,  t.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(variables.getDimension(),  0,  t0,  0,  t.length);	  System.arraycopy(t1.getDimension(),    0,    t0,    0,    t.length);    	non-compiled	[CE]  cannot  find  symbol  	111	None	replace
125	[BUG]  [BUGGY]  double  t0  =  equations.getDimension();  [CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  double  t0  =  equations.getDimension();  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	double  t0  =  equations.getDimension();	  int    t0    =    equations.getDimension();    	non-compiled	[CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])	91	None	replace
126	[BUG]  [BUGGY]  int  t0  =  equations.getDimension()  +  1;  [CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  int  t0  =  equations.getDimension()  +  1;  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	int  t0  =  equations.getDimension()  +  1;	  int    t0    =    equations.getDimension();    	non-compiled	[CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])	91	None	replace
127	[BUG]  [BUGGY]  int  t0  =  equations.getSize();  [CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])  [FE]                          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  int  t0  =  equations.getSize();  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	int  t0  =  equations.getSize();	  int    t0    =    equations.getDimension();    	non-compiled	[CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])	91	None	replace
128	[BUG]  [BUGGY]  Integrator  t0  =  equations.getIntegrator(t0,  y.length);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Integrator  t0  =  equations.getIntegrator(t0,  y.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integrator  t0  =  equations.getIntegrator(t0,  y.length);	  Integrator    t0    =    equations.getIntegrator(t0);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
129	[BUG]  [BUGGY]  Integrator  t0  =  equations.getIntegrator(t1);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Integrator  t0  =  equations.getIntegrator(t1);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integrator  t0  =  equations.getIntegrator(t1);	  Integrator    t0    =    equations.getIntegrator(t0);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
130	[BUG]  [BUGGY]  Integrator  t0  =  equations.getIntegrator(t0,  y);  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Integrator  t0  =  equations.getIntegrator(t0,  y);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integrator  t0  =  equations.getIntegrator(t0,  y);	  Integrator    t0    =    equations.getIntegrator(t0);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
131	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(expandable,  t0,  y.length);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(expandable,  t0,  y.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(expandable,  t0,  y.length);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(expandable,    t0);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	21	None	replace
132	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t0,  t1);  [CE]  cannot  find  symbol  t1  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t0,  t1);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t0,  t1);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y0,    t1);    	non-compiled	[CE]  cannot  find  symbol  t1	83	None	replace
133	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(x0,  y0,  x1);  [CE]  cannot  find  symbol  x0  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(x0,  y0,  x1);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(x0,  y0,  x1);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y0,    t1);    	non-compiled	[CE]  cannot  find  symbol  x0	83	None	replace
134	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  t,  equations);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  t,  equations);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  t,  equations);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y,    equations);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	56	None	replace
135	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  values,  equations);  [CE]  cannot  find  symbol  values  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  values,  equations);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  values,  equations);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y,    equations);    	non-compiled	[CE]  cannot  find  symbol  values	56	None	replace
136	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  equations.length);  [CE]  cannot  find  symbol  length  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  equations.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  equations.length);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y,    equations);    	non-compiled	[CE]  cannot  find  symbol  length	56	None	replace
137	[BUG]  [BUGGY]  Arrays.arraycopy(equations.getDimension(),  0,  y0,  0,  y.length);  [CE]  cannot  find  symbol  Arrays  [FE]        ArrayStoreException      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Arrays.arraycopy(equations.getDimension(),  0,  y0,  0,  y.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Arrays.arraycopy(equations.getDimension(),  0,  y0,  0,  y.length);	          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    Arrays.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  Arrays	67	None	replace
138	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y.length  -  1);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y.length  -  1);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y.length  -  1);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0.length    -    1);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	48	None	replace
139	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y.length  -  1);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y.length  -  1);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y.length  -  1);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0.length    -    1);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	48	None	replace
140	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0.length  -  1,  y.length);  [CE]  double  cannot  be  dereferenced  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0.length  -  1,  y.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0.length  -  1,  y.length);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0.length    -    1);    	non-compiled	[CE]  double  cannot  be  dereferenced	48	None	replace
141	[BUG]  [BUGGY]  System.arraycopy(equivalents.getDimension(),  0,  t0,  0,  t0.length);  [CE]  cannot  find  symbol  equivalents  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(equivalents.getDimension(),  0,  t0,  0,  t0.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equivalents.getDimension(),  0,  t0,  0,  t0.length);	  System.arraycopy(equations.getDimension(),    0,    t0,    0,    t0.length);    	non-compiled	[CE]  cannot  find  symbol  equivalents	71	None	replace
142	[BUG]  [BUGGY]  For(int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }  [CE]  '.class'  expected  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  For(int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	For(int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }	  for(int    y    =    0;    y    <    equations.size();    y++)    {    if(isLastStep)    {    throw    new    DimensionMismatchException(t0,    t);    }    	non-compiled	[CE]  '.class'  expected	44	None	replace
143	[BUG]  [BUGGY]  System.arraycopy(equaries.getDimension(),  0,  y,  0,  t.length);  [CE]  cannot  find  symbol  equaries  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(equaries.getDimension(),  0,  y,  0,  t.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equaries.getDimension(),  0,  y,  0,  t.length);	  System.arraycopy(t.getDimension(),    0,    y,    0,    t.length);    	non-compiled	[CE]  cannot  find  symbol  equaries	5	None	replace
144	[BUG]  [BUGGY]  Integrator  t0  =  equations.getIntegrator(y);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Integrator  t0  =  equations.getIntegrator(y);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integrator  t0  =  equations.getIntegrator(y);	  Integrator    t0    =    equations.getIntegrator(t);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
145	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  elements.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  for(int  y  =  0;  y  <  elements.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  0;  y  <  elements.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }	  for(int    y    =    0;    y    <    elements.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
146	[BUG]  [BUGGY]  ExpandableODE  t0  =  equations,  y.getDimension();  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  ExpandableODE  t0  =  equations,  y.getDimension();  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	ExpandableODE  t0  =  equations,  y.getDimension();	  ExpandableODE    t0    =    equations.getDimension();    	non-compiled	[CE]  ';'  expected	74	None	replace
147	[BUG]  [BUGGY]  ExpandableODE  t0  =  equations.elements.getDimension();  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  ExpandableODE  t0  =  equations.elements.getDimension();  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	ExpandableODE  t0  =  equations.elements.getDimension();	  ExpandableODE    t0    =    equations.getDimension();    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
148	[BUG]  [BUGGY]  expandableODE  =  equations.getDimension();  [CE]  cannot  find  symbol  expandableODE  [FE]                          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  expandableODE  =  equations.getDimension();  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	expandableODE  =  equations.getDimension();	  ExpandableODE    t0    =    equations.getDimension();    	non-compiled	[CE]  cannot  find  symbol  expandableODE	74	None	replace
149	[BUG]  [BUGGY]  null.setTime(t0);  expandableODE.setPrimaryState(t0);  [CE]  <null>  cannot  be  dereferenced  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  null.setTime(t0);  expandableODE.setPrimaryState(t0);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	null.setTime(t0);  expandableODE.setPrimaryState(t0);	  t0.setTime(t0);    expandableODE.setPrimaryState(t0);    	non-compiled	[CE]  <null>  cannot  be  dereferenced	3	None	replace
150	[BUG]  [BUGGY]  int  y  =  0;  y  <  elements.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  int  y  =  0;  y  <  elements.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	int  y  =  0;  y  <  elements.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }	  for(int    y    =    0;    y    <    elements.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    t);    }    	non-compiled	[CE]  >  expected	108	None	replace
151	[BUG]  [BUGGY]  t0  =  Math.max(t0,  y,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  t0  =  Math.max(t0,  y,  t.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	t0  =  Math.max(t0,  y,  t.length);	  t0    =    Math.max(t0,    y);    	non-compiled	[CE]  double  cannot  be  dereferenced	76	None	replace
152	[BUG]  [BUGGY]  t0  =  Math.max(t0,  y,  tSize);  [CE]  cannot  find  symbol  tSize  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  t0  =  Math.max(t0,  y,  tSize);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	t0  =  Math.max(t0,  y,  tSize);	  t0    =    Math.max(t0,    y);    	non-compiled	[CE]  cannot  find  symbol  tSize	76	None	replace
153	[BUG]  [BUGGY]  t0  =  Math.max(t0,  y,  ts.length);  [CE]  cannot  find  symbol  ts  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  t0  =  Math.max(t0,  y,  ts.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	t0  =  Math.max(t0,  y,  ts.length);	  t0    =    Math.max(t0,    y);    	non-compiled	[CE]  cannot  find  symbol  ts	76	None	replace
154	[BUG]  [BUGGY]  t0  =  Math.max(t0,  y,  convergence);  [CE]  cannot  find  symbol  convergence  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  t0  =  Math.max(t0,  y,  convergence);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	t0  =  Math.max(t0,  y,  convergence);	  t0    =    Math.max(t0,    y);    	non-compiled	[CE]  cannot  find  symbol  convergence	76	None	replace
155	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  for(int  y  =  1;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  1;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }	  for(int    y    =    1;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
156	[BUG]  [BUGGY]  System.arraycopy(equivalences.getDimension(),  0,  y,  0,  t0.length);  [CE]  cannot  find  symbol  equivalences  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(equivalences.getDimension(),  0,  y,  0,  t0.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equivalences.getDimension(),  0,  y,  0,  t0.length);	  System.arraycopy(t0.getDimension(),    0,    y,    0,    t0.length);    	non-compiled	[CE]  cannot  find  symbol  equivalences	9	None	replace
157	[BUG]  [BUGGY]  System.arraycopy(equivalents.getDimension(),  0,  y,  0,  t0.length);  [CE]  cannot  find  symbol  equivalents  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(equivalents.getDimension(),  0,  y,  0,  t0.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equivalents.getDimension(),  0,  y,  0,  t0.length);	  System.arraycopy(t0.getDimension(),    0,    y,    0,    t0.length);    	non-compiled	[CE]  cannot  find  symbol  equivalents	9	None	replace
158	[BUG]  [BUGGY]  if(isLastStep)  {  int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }  [CE]  >  expected  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  if(isLastStep)  {  int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	if(isLastStep)  {  int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }	  int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    y);    }    	non-compiled	[CE]  >  expected	97	None	replace
159	[BUG]  [BUGGY]  final  int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }  [CE]  >  expected  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }	  int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    y);    }    	non-compiled	[CE]  >  expected	97	None	replace
160	[BUG]  [BUGGY]  int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }  [CE]  >  expected  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }	  int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    y);    }    	non-compiled	[CE]  >  expected	97	None	replace
161	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(y0,  t);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  for(int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(y0,  t);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(y0,  t);  }	  for(int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(y0,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
162	[BUG]  [BUGGY]  For(int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(y0,  t);  }  [CE]  '.class'  expected  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  For(int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(y0,  t);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	For(int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(y0,  t);  }	  for(int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(y0,    t);    }    	non-compiled	[CE]  '.class'  expected	63	None	replace
163	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(y0,  t);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  for(int  y  =  1;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(y0,  t);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  1;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(y0,  t);  }	  for(int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(y0,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
164	[BUG]  [BUGGY]  For(int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }  [CE]  '.class'  expected  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  For(int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	For(int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }	  for(int    y    =    0;    y    <    equations.size();    y++)    {    if(isLastStep)    {    throw    new    DimensionMismatchException(t0,    y);    }    	non-compiled	[CE]  '.class'  expected	41	None	replace
165	[BUG]  [BUGGY]  Integrator  t0  =  Equations.getIntegrator(y);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Integrator  t0  =  Equations.getIntegrator(y);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integrator  t0  =  Equations.getIntegrator(y);	  Integrator    t0    =    Equations.getIntegrator(equations);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
166	[BUG]  [BUGGY]  Integrator  t0  =  Equations.getIntegrator(variants);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Integrator  t0  =  Equations.getIntegrator(variants);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integrator  t0  =  Equations.getIntegrator(variants);	  Integrator    t0    =    Equations.getIntegrator(equations);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
167	[BUG]  [BUGGY]  Integrator  t0  =  Equations.getIntegrator(y,  equations);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Integrator  t0  =  Equations.getIntegrator(y,  equations);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integrator  t0  =  Equations.getIntegrator(y,  equations);	  Integrator    t0    =    Equations.getIntegrator(equations);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
168	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  t,  equations);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  t,  equations);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  t,  equations);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y0,    equations);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	55	None	replace
169	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  equations,  y0);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  equations,  y0);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  equations,  y0);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y0,    equations);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	55	None	replace
170	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t0,  equations);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t0,  equations);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t0,  equations);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y0,    equations);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	55	None	replace
171	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  ts,  equations);  [CE]  cannot  find  symbol  ts  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  ts,  equations);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  ts,  equations);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y0,    equations);    	non-compiled	[CE]  cannot  find  symbol  ts	55	None	replace
172	[BUG]  [BUGGY]  t0  =  equations.getDimension();  expandableODE.setPrimaryState(y);  [CE]  cannot  find  symbol  expandableODE  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  t0  =  equations.getDimension();  expandableODE.setPrimaryState(y);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	t0  =  equations.getDimension();  expandableODE.setPrimaryState(y);	  t0    =    equations.getDimension();    expandableODE.setPrimaryState(y0);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	92	None	replace
173	[BUG]  [BUGGY]  expandableODE.setPrimaryState(y0);  [CE]  cannot  find  symbol  expandableODE  [FE]                          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  expandableODE.setPrimaryState(y0);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	expandableODE.setPrimaryState(y0);	  t0    =    equations.getDimension();    expandableODE.setPrimaryState(y0);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	92	None	replace
174	[BUG]  [BUGGY]  null  =  equations.getDimension();  expandableODE.setPrimaryState(y0);  [CE]  unexpected  type  [FE]                            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  null  =  equations.getDimension();  expandableODE.setPrimaryState(y0);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	null  =  equations.getDimension();  expandableODE.setPrimaryState(y0);	  t0    =    equations.getDimension();    expandableODE.setPrimaryState(y0);    	non-compiled	[CE]  unexpected  type	92	None	replace
175	[BUG]  [BUGGY]  t0  =  Math.max(t0,  equations.length);  [CE]  cannot  find  symbol  length  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  t0  =  Math.max(t0,  equations.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	t0  =  Math.max(t0,  equations.length);	  t0    =    Math.max(t0,    ts.length);    	non-compiled	[CE]  cannot  find  symbol  length	39	None	replace
176	[BUG]  [BUGGY]  static  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  static  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	static  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(y,    t0);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
177	[BUG]  [BUGGY]  System.arraycopy(t0.getDimension(),  0,  t0,  1,  equations.length);  [CE]  double  cannot  be  dereferenced  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(t0.getDimension(),  0,  t0,  1,  equations.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(t0.getDimension(),  0,  t0,  1,  equations.length);	  System.arraycopy(equations.getDimension(),    0,    t0,    1,    t.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	85	None	replace
178	[BUG]  [BUGGY]  System.arraycopy(equivalents.getDimension(),  0,  t0,  1,  t.length);  [CE]  cannot  find  symbol  equivalents  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(equivalents.getDimension(),  0,  t0,  1,  t.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equivalents.getDimension(),  0,  t0,  1,  t.length);	  System.arraycopy(equations.getDimension(),    0,    t0,    1,    t.length);    	non-compiled	[CE]  cannot  find  symbol  equivalents	85	None	replace
179	[BUG]  [BUGGY]  Integer  t0  =(Integer)equivalences.get(y);  [CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Integer  t0  =(Integer)equivalences.get(y);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integer  t0  =(Integer)equivalences.get(y);	  Integer    t0    =(Integer)equations.get(y);    	non-compiled	[CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])	34	None	replace
180	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t,  t.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t,  t.length);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    t.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	65	None	replace
181	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  ts.length);  [CE]  cannot  find  symbol  ts  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  ts.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  ts.length);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    t.length);    	non-compiled	[CE]  cannot  find  symbol  ts	65	None	replace
182	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  equations,  y1);  [CE]  cannot  find  symbol  y1  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  equations,  y1);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  equations,  y1);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    equations,    t0);    	non-compiled	[CE]  cannot  find  symbol  y1	94	None	replace
183	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  [CE]  cannot  find  symbol  expandableODE  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(expandableODE,  0,  y0,  0,  y.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(expandableODE,  0,  y0,  0,  y.length);	  System.arraycopy(expandableODE,    0,    y,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	1	None	replace
184	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  0,  y,  0,  expansionableODE.length);  [CE]  cannot  find  symbol  expandableODE  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(expandableODE,  0,  y,  0,  expansionableODE.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(expandableODE,  0,  y,  0,  expansionableODE.length);	  System.arraycopy(expandableODE,    0,    y,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	1	None	replace
185	[BUG]  [BUGGY]  for(int  y  =  2;  y  <  equations.size();  y++)  {  if(t0!=  null)  {  throw  new  DimensionMismatchException(t0,  t);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  for(int  y  =  2;  y  <  equations.size();  y++)  {  if(t0!=  null)  {  throw  new  DimensionMismatchException(t0,  t);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  2;  y  <  equations.size();  y++)  {  if(t0!=  null)  {  throw  new  DimensionMismatchException(t0,  t);  }	  for(int    y    =    1;    y    <    equations.size();    y++)    {    if(t0!=    null)    {    throw    new    DimensionMismatchException(t0,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
186	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  expandable,  t1);  [CE]  cannot  find  symbol  t1  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  expandable,  t1);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  expandable,  t1);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    expandable);    	non-compiled	[CE]  cannot  find  symbol  t1	19	None	replace
187	[BUG]  [BUGGY]  Integer  t0  =(Integer)equations.get(i);  [CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Integer  t0  =(Integer)equations.get(i);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integer  t0  =(Integer)equations.get(i);	  Integer    t0    =(Integer)equations.get(0);    	non-compiled	[CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])	33	None	replace
188	[BUG]  [BUGGY]  Integrator  t0  =  equations,  equations.getIntegrator()  +  1;  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Integrator  t0  =  equations,  equations.getIntegrator()  +  1;  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integrator  t0  =  equations,  equations.getIntegrator()  +  1;	  Integrator    t0    =    equations,    equations.getIntegrator();    	non-compiled	[CE]  ';'  expected	79	None	replace
189	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  t0,  expandedable,  0,  t.length);  [CE]  cannot  find  symbol  expandableODE  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(expandableODE,  t0,  expandedable,  0,  t.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(expandableODE,  t0,  expandedable,  0,  t.length);	  System.arraycopy(expandableODE,    t0,    y,    0,    t.length);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	73	None	replace
190	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0.length);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0.length);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y.length);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	22	None	replace
191	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t0.length);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t0.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t0.length);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	22	None	replace
192	[BUG]  [BUGGY]  System.arraycopy(Equations.getDimension(),  0,  t,  0,  t.length);  [CE]  cannot  find  symbol  Equations  [FE]          ArrayStoreException      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(Equations.getDimension(),  0,  t,  0,  t.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(Equations.getDimension(),  0,  t,  0,  t.length);	          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),    0,    t,    0,    t.length);    	non-compiled	[CE]  cannot  find  symbol  Equations	17	None	replace
193	[BUG]  [BUGGY]  System.arraycopy(t0.getDimension(),  0,  t0,  0,  t0.length);  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(t0.getDimension(),  0,  t0,  0,  t0.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(t0.getDimension(),  0,  t0,  0,  t0.length);	  System.arraycopy(equations.getDimension(),    0,    t0,    0,    t0.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	71	None	replace
194	[BUG]  [BUGGY]  t0  =  equations,  equations.getT1();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  t0  =  equations,  equations.getT1();  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	t0  =  equations,  equations.getT1();	  t0    =    equations.getT1();    	non-compiled	[CE]  ';'  expected	25	None	replace
195	[BUG]  [BUGGY]  T0  =  equations.getT1();  [CE]  cannot  find  symbol  T0  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  T0  =  equations.getT1();  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	T0  =  equations.getT1();	  t0    =    equations.getT1();    	non-compiled	[CE]  cannot  find  symbol  T0	25	None	replace
196	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  elements.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  y0);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  for(int  y  =  0;  y  <  elements.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  y0);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  0;  y  <  elements.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  y0);  }	  for(int    y    =    0;    y    <    equations.size();    y++)    {    if(isLastStep)    {    throw    new    DimensionMismatchException(t0,    y0);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
197	[BUG]  [BUGGY]  Integrator  t0  =  equations.getIntegrator(t2);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Integrator  t0  =  equations.getIntegrator(t2);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integrator  t0  =  equations.getIntegrator(t2);	  Integrator    t0    =    equations.getIntegrator(t);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
198	[BUG]  [BUGGY]  t0.setTime(t1);  expandableODE.setPrimaryState(t0);  [CE]  cannot  find  symbol  t1  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  t0.setTime(t1);  expandableODE.setPrimaryState(t0);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	t0.setTime(t1);  expandableODE.setPrimaryState(t0);	  t0.setTime(t0);    expandableODE.setPrimaryState(t0);    	non-compiled	[CE]  cannot  find  symbol  t1	3	None	replace
199	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y2,  equations);  [CE]  cannot  find  symbol  y2  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y2,  equations);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y2,  equations);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y1,    equations);    	non-compiled	[CE]  cannot  find  symbol  y2	93	None	replace
200	[BUG]  [BUGGY]  Integrator  t0  =  Equations.getIntegrator(equations,  equations.getDimension());  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Integrator  t0  =  Equations.getIntegrator(equations,  equations.getDimension());  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integrator  t0  =  Equations.getIntegrator(equations,  equations.getDimension());	  Integrator    t0    =    Equations.getIntegrator(equations);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
201	[BUG]  [BUGGY]  Integrator  t0  =  Equations.getIntegrator(equations,  1);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Integrator  t0  =  Equations.getIntegrator(equations,  1);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integrator  t0  =  Equations.getIntegrator(equations,  1);	  Integrator    t0    =    Equations.getIntegrator(equations);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
202	[BUG]  [BUGGY]  System.arraycopy(expandable,  t0);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(expandable,  t0);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(expandable,  t0);	  System.arraycopy(expandableODE,    t0);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	75	None	replace
203	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  t2);  [CE]  cannot  find  symbol  t2  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  t2);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  t2);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y0);    	non-compiled	[CE]  cannot  find  symbol  t2	24	None	replace
204	[BUG]  [BUGGY]  Integer  t0  =(Integer)equations.get(x0,  y0);  [CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Integer  t0  =(Integer)equations.get(x0,  y0);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integer  t0  =(Integer)equations.get(x0,  y0);	  Integer    t0    =(Integer)equations.get(x0);    	non-compiled	[CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])	77	None	replace
205	[BUG]  [BUGGY]  Integer  t0  =(Integer)equations.get(value);  [CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Integer  t0  =(Integer)equations.get(value);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integer  t0  =(Integer)equations.get(value);	  Integer    t0    =(Integer)equations.get(x0);    	non-compiled	[CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])	77	None	replace
206	[BUG]  [BUGGY]  Integrator  t0  =  equations.getIntegrator(t0,  equations.getDimension());  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Integrator  t0  =  equations.getIntegrator(t0,  equations.getDimension());  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integrator  t0  =  equations.getIntegrator(t0,  equations.getDimension());	  Integrator    t0    =    equations.getIntegrator(t0);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
207	[BUG]  [BUGGY]  Integrator  t0  =  equations.getIntegrator(y0);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Integrator  t0  =  equations.getIntegrator(y0);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integrator  t0  =  equations.getIntegrator(y0);	  Integrator    t0    =    equations.getIntegrator(t0);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
208	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(x0,  y);  [CE]  cannot  find  symbol  x0  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(x0,  y);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(x0,  y);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(y,    t0);    	non-compiled	[CE]  cannot  find  symbol  x0	14	None	replace
209	[BUG]  [BUGGY]  t0  =  equations,  equations.getT0()  +  1;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  t0  =  equations,  equations.getT0()  +  1;  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	t0  =  equations,  equations.getT0()  +  1;	  t0    =    equations,    equations.getT0();    	non-compiled	[CE]  ';'  expected	62	None	replace
210	[BUG]  [BUGGY]  t0  =  equations,  equations.getDimension();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  t0  =  equations,  equations.getDimension();  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	t0  =  equations,  equations.getDimension();	  t0    =    equations,    equations.getT0();    	non-compiled	[CE]  ';'  expected	62	None	replace
211	[BUG]  [BUGGY]  System.arraycopy(t.getDimension(),  0,  t,  0,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(t.getDimension(),  0,  t,  0,  t.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(t.getDimension(),  0,  t,  0,  t.length);	  System.arraycopy(equations.getDimension(),    0,    t,    0,    t.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	81	None	replace
212	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  children.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  for(int  y  =  0;  y  <  children.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  0;  y  <  children.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }	  for(int    y    =    0;    y    <    elements.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
213	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  elements.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  for(int  y  =  0;  y  <  elements.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  0;  y  <  elements.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }	  for(int    y    =    0;    y    <    elements.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
214	[BUG]  [BUGGY]  t0  =  Math.max(t0,  y0);  [CE]  no  suitable  method  found  for  max(double,double[])  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  t0  =  Math.max(t0,  y0);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	t0  =  Math.max(t0,  y0);	  t0    =    Math.max(t0,    y);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double[])	76	None	replace
215	[BUG]  [BUGGY]  t0  =  Math.max(t0,  y0,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  t0  =  Math.max(t0,  y0,  t.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	t0  =  Math.max(t0,  y0,  t.length);	  t0    =    Math.max(t0,    y);    	non-compiled	[CE]  double  cannot  be  dereferenced	76	None	replace
216	[BUG]  [BUGGY]  System.arraycopy(t0.getDimension(),  0,  t0,  1,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(t0.getDimension(),  0,  t0,  1,  t.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(t0.getDimension(),  0,  t0,  1,  t.length);	  System.arraycopy(equations.getDimension(),    0,    t0,    1,    t.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	85	None	replace
217	[BUG]  [BUGGY]  System.arraycopy(equations.getDimension(),  0,  t0,  2,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(equations.getDimension(),  0,  t0,  2,  t.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equations.getDimension(),  0,  t0,  2,  t.length);	  System.arraycopy(equations.getDimension(),    0,    t0,    1,    t.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	85	None	replace
218	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t0,  y);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t0,  y);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t0,  y);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y,    t);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	11	None	replace
219	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(x0,  y,  t);  [CE]  cannot  find  symbol  x0  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(x0,  y,  t);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(x0,  y,  t);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y,    t);    	non-compiled	[CE]  cannot  find  symbol  x0	11	None	replace
220	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(expandable,  y0);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(expandable,  y0);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(expandable,  y0);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(expandable,    t1);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	99	None	replace
221	[BUG]  [BUGGY]  for(int  y  =  2;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  for(int  y  =  2;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  break;  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  2;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  break;  }	  for(int    y    =    1;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
222	[BUG]  [BUGGY]  for(int  y  =  2;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  for(int  y  =  2;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y0);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  2;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y0);  }	  for(int    y    =    1;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    y0);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
223	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t,  t.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t,  t.length);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y,    t.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	12	None	replace
224	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  ts.length);  [CE]  cannot  find  symbol  ts  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  ts.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  ts.length);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y,    t.length);    	non-compiled	[CE]  cannot  find  symbol  ts	12	None	replace
225	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(expandable.length  -  1);  [CE]  cannot  find  symbol  length  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(expandable.length  -  1);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(expandable.length  -  1);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0.length    -    1);    	non-compiled	[CE]  cannot  find  symbol  length	48	None	replace
226	[BUG]  [BUGGY]  System.arraycopy(Equations.getDimension(),  0,  y,  0,  equations.length);  [CE]  cannot  find  symbol  Equations  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(Equations.getDimension(),  0,  y,  0,  equations.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(Equations.getDimension(),  0,  y,  0,  equations.length);	  System.arraycopy(t.getDimension(),    0,    y,    0,    equations.length);    	non-compiled	[CE]  cannot  find  symbol  Equations	7	None	replace
227	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(expandable,  t0,  t1);  [CE]  cannot  find  symbol  t1  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(expandable,  t0,  t1);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(expandable,  t0,  t1);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(expandable,    t0);    	non-compiled	[CE]  cannot  find  symbol  t1	21	None	replace
228	[BUG]  [BUGGY]  System.arraycopy(equations.getDimension(),  0,  x,  0,  x.length);  [CE]  cannot  find  symbol  x  [FE]          ArrayStoreException      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(equations.getDimension(),  0,  x,  0,  x.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equations.getDimension(),  0,  x,  0,  x.length);	          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),    0,    x,    0,    x.length);    	non-compiled	[CE]  cannot  find  symbol  x	68	None	replace
229	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(expandable,  equations,  t0);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(expandable,  equations,  t0);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(expandable,  equations,  t0);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    equations,    t1);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	59	None	replace
230	[BUG]  [BUGGY]          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  ArrayStoreException  exponents  =  new  ArrayStoreException(equations.getDimension());  [CE]  no  suitable  constructor  found  for  ArrayStoreException(int)  [FE]    ArrayStoreException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  ArrayStoreException  exponents  =  new  ArrayStoreException(equations.getDimension());  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	                System.arraycopy(equations.getDimension(),        0,        y,        0,        y.length);        System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    ArrayStoreException  exponents  =  new  ArrayStoreException(equations.getDimension());	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayStoreException(int)	15	None	add
231	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  y0,  0,  y.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	add	                System.arraycopy(equations.getDimension(),        0,        y,        0,        y.length);        System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  y0,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	15	1	add
232	[BUG]  [BUGGY]          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  y0,  0,  y.length);  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  y0,  0,  y.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	                System.arraycopy(equations.getDimension(),        0,        y,        0,        y.length);        System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  y0,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	15	1	add
233	[BUG]  [BUGGY]          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  ArrayStoreException  ex  =  new  ArrayStoreException(equations.getDimension());  [CE]  no  suitable  constructor  found  for  ArrayStoreException(int)  [FE]        ArrayStoreException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  ArrayStoreException  ex  =  new  ArrayStoreException(equations.getDimension());  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	                System.arraycopy(equations.getDimension(),        0,        y,        0,        y.length);        System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    ArrayStoreException  ex  =  new  ArrayStoreException(equations.getDimension());	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayStoreException(int)	15	None	add
234	[BUG]  [BUGGY]  Integer  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  break;  }  [CE]  >  expected  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Integer  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  break;  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integer  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  break;  }	  int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    break;    }    	non-compiled	[CE]  >  expected	31	None	replace
235	[BUG]  [BUGGY]  int  y  =  1;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  break;  }  [CE]  >  expected  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  int  y  =  1;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  break;  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	int  y  =  1;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  break;  }	  int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    break;    }    	non-compiled	[CE]  >  expected	31	None	replace
236	[BUG]  [BUGGY]  System.arraycopy(equates.getDimension(),  0,  t0,  0,  equations.length);  [CE]  cannot  find  symbol  equates  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(equates.getDimension(),  0,  t0,  0,  equations.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equates.getDimension(),  0,  t0,  0,  equations.length);	  System.arraycopy(equations.getDimension(),    0,    t0,    0,    equations.length);    	non-compiled	[CE]  cannot  find  symbol  equates	36	None	replace
237	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(expandable,  y0,  t1);  [CE]  cannot  find  symbol  t1  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(expandable,  y0,  t1);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(expandable,  y0,  t1);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y0,    t1);    	non-compiled	[CE]  cannot  find  symbol  t1	83	None	replace
238	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  elements.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y0);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  for(int  y  =  0;  y  <  elements.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y0);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  0;  y  <  elements.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y0);  }	  for(int    y    =    0;    y    <    elements.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
239	[BUG]  [BUGGY]  Integer  t0  =(Integer)equations.get(y0  +  1);  [CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Integer  t0  =(Integer)equations.get(y0  +  1);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integer  t0  =(Integer)equations.get(y0  +  1);	  Integer    t0    =(Integer)equations.get(y0);    	non-compiled	[CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])	32	None	replace
240	[BUG]  [BUGGY]  T0  =  equations.getDimension();  [CE]  cannot  find  symbol  T0  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  T0  =  equations.getDimension();  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	T0  =  equations.getDimension();	  t0    =    equations.getDimension()    +    2;    	non-compiled	[CE]  cannot  find  symbol  T0	104	None	replace
241	[BUG]  [BUGGY]  t0  =  equations,  y.getDimension();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  t0  =  equations,  y.getDimension();  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	t0  =  equations,  y.getDimension();	  t0    =    equations,    y.getT0();    	non-compiled	[CE]  ';'  expected	103	None	replace
242	[BUG]  [BUGGY]  t0  =  equations,  y.getTime();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  t0  =  equations,  y.getTime();  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	t0  =  equations,  y.getTime();	  t0    =    equations,    y.getT0();    	non-compiled	[CE]  ';'  expected	103	None	replace
243	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(x0,  y,  x1);  [CE]  cannot  find  symbol  x0  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(x0,  y,  x1);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(x0,  y,  x1);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y,    t1);    	non-compiled	[CE]  cannot  find  symbol  x0	106	None	replace
244	[BUG]  [BUGGY]  expandableODE  t0  =  equations.getDimension();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  expandableODE  t0  =  equations.getDimension();  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	expandableODE  t0  =  equations.getDimension();	  ExpandableODE    t0    =    equations.getDimension();    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
245	[BUG]  [BUGGY]  ExpandableODE  t0  =  Equations.getDimension();  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  ExpandableODE  t0  =  Equations.getDimension();  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	ExpandableODE  t0  =  Equations.getDimension();	  ExpandableODE    t0    =    equations.getDimension();    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
246	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  EQUANTS.size();  y++)  {  if(t0!=  null)  {  throw  new  DimensionMismatchException(t0,  t);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  for(int  y  =  0;  y  <  EQUANTS.size();  y++)  {  if(t0!=  null)  {  throw  new  DimensionMismatchException(t0,  t);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  0;  y  <  EQUANTS.size();  y++)  {  if(t0!=  null)  {  throw  new  DimensionMismatchException(t0,  t);  }	  for(int    y    =    0;    y    <    elements.size();    y++)    {    if(t0!=    null)    {    throw    new    DimensionMismatchException(t0,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
247	[BUG]  [BUGGY]          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);  ArrayStoreException  exponents  =  new  ArrayStoreException(equations.getDimension());  [CE]  no  suitable  constructor  found  for  ArrayStoreException(int)  [FE]    ArrayStoreException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);  ArrayStoreException  exponents  =  new  ArrayStoreException(equations.getDimension());  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	                System.arraycopy(equations.getDimension(),        0,        y,        0,        y.length);        System.arraycopy(equations.getDimension(),    0,    t,    0,    y.length);    ArrayStoreException  exponents  =  new  ArrayStoreException(equations.getDimension());	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayStoreException(int)	69	None	add
248	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  0,  t0,  0,  t.length);  [CE]  cannot  find  symbol  expandableODE  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(expandableODE,  0,  t0,  0,  t.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(expandableODE,  0,  t0,  0,  t.length);	  System.arraycopy(expandableODE,    0,    y,    0,    t.length);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	2	None	replace
249	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  arrays);  [CE]  cannot  find  symbol  arrays  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  arrays);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  arrays);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y0,    equations);    	non-compiled	[CE]  cannot  find  symbol  arrays	55	None	replace
250	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  equations.length);  [CE]  cannot  find  symbol  length  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  equations.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  equations.length);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y0,    equations);    	non-compiled	[CE]  cannot  find  symbol  length	55	None	replace
251	[BUG]  [BUGGY]  int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y0);  }  [CE]  >  expected  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y0);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y0);  }	  int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    y);    }    	non-compiled	[CE]  >  expected	97	None	replace
252	[BUG]  [BUGGY]  Integer  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }  [CE]  >  expected  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Integer  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integer  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }	  int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    t);    }    	non-compiled	[CE]  >  expected	109	None	replace
253	[BUG]  [BUGGY]  int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t1,  t);  }  [CE]  >  expected  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t1,  t);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t1,  t);  }	  int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    t);    }    	non-compiled	[CE]  >  expected	109	None	replace
254	[BUG]  [BUGGY]  for(int  y  =  2;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  for(int  y  =  2;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  2;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  t);  }	  for(int    y    =    1;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
255	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0.length,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0.length,  t.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0.length,  t.length);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0.length,    y.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	47	None	replace
256	[BUG]  [BUGGY]  int  t0  =  equations.getStartDimension();  [CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  int  t0  =  equations.getStartDimension();  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	int  t0  =  equations.getStartDimension();	  int    t0    =    equations.getDimension();    	non-compiled	[CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])	91	None	replace
257	[BUG]  [BUGGY]  System.arraycopy(t0.getDimension(),  0,  y0,  0,  t0.length);  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(t0.getDimension(),  0,  y0,  0,  t0.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(t0.getDimension(),  0,  y0,  0,  t0.length);	  System.arraycopy(equations.getDimension(),    0,    y0,    0,    t0.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	72	None	replace
258	[BUG]  [BUGGY]  System.arraycopy(equates,  equations.getDimension(),  0,  t0,  0,  t.length);  [CE]  cannot  find  symbol  equates  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(equates,  equations.getDimension(),  0,  t0,  0,  t.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equates,  equations.getDimension(),  0,  t0,  0,  t.length);	  System.arraycopy(equations,    equations.getDimension(),    0,    t0,    0,    t.length);    	non-compiled	[CE]  cannot  find  symbol  equates	110	None	replace
259	[BUG]  [BUGGY]  System.arraycopy(equases,  equations.getDimension(),  0,  t0,  0,  t.length);  [CE]  cannot  find  symbol  equases  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(equases,  equations.getDimension(),  0,  t0,  0,  t.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equases,  equations.getDimension(),  0,  t0,  0,  t.length);	  System.arraycopy(equations,    equations.getDimension(),    0,    t0,    0,    t.length);    	non-compiled	[CE]  cannot  find  symbol  equases	110	None	replace
260	[BUG]  [BUGGY]  System.arraycopy(equaredEquations.getDimension(),  0,  y,  0,  t0.length);  [CE]  cannot  find  symbol  equaredEquations  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(equaredEquations.getDimension(),  0,  y,  0,  t0.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equaredEquations.getDimension(),  0,  y,  0,  t0.length);	  System.arraycopy(t0.getDimension(),    0,    y,    0,    t0.length);    	non-compiled	[CE]  cannot  find  symbol  equaredEquations	9	None	replace
261	[BUG]  [BUGGY]  System.arraycopy(equations.getDimension(),  0,  y0,  0,  equations.length);  [CE]  cannot  find  symbol  length  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(equations.getDimension(),  0,  y0,  0,  equations.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equations.getDimension(),  0,  y0,  0,  equations.length);	  System.arraycopy(equations.getDimension(),    0,    y,    0,    equations.length);    	non-compiled	[CE]  cannot  find  symbol  length	10	None	replace
262	[BUG]  [BUGGY]  System.arraycopy(equations.getDimension(),  0,  x,  0,  equations.length);  [CE]  cannot  find  symbol  x  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(equations.getDimension(),  0,  x,  0,  equations.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equations.getDimension(),  0,  x,  0,  equations.length);	  System.arraycopy(equations.getDimension(),    0,    y,    0,    equations.length);    	non-compiled	[CE]  cannot  find  symbol  x	10	None	replace
263	[BUG]  [BUGGY]  T0  t0  =  Equations.getT0();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  T0  t0  =  Equations.getT0();  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	T0  t0  =  Equations.getT0();	  T0    t0    =    equations.getT0();    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
264	[BUG]  [BUGGY]  Integrator  t0  =  Equations.getIntegrator2();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Integrator  t0  =  Equations.getIntegrator2();  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integrator  t0  =  Equations.getIntegrator2();	  Integrator    t0    =    equations.getIntegrator2();    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
265	[BUG]  [BUGGY]  System.arraycopy(equaredEquations.getDimension(),  0,  y,  0,  t.length);  [CE]  cannot  find  symbol  equaredEquations  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(equaredEquations.getDimension(),  0,  y,  0,  t.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equaredEquations.getDimension(),  0,  y,  0,  t.length);	  System.arraycopy(t0.getDimension(),    0,    y,    0,    t.length);    	non-compiled	[CE]  cannot  find  symbol  equaredEquations	102	None	replace
266	[BUG]  [BUGGY]  System.arraycopy(t.getDimension(),  0,  y0,  0,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(t.getDimension(),  0,  y0,  0,  t.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(t.getDimension(),  0,  y0,  0,  t.length);	  System.arraycopy(t.getDimension(),    0,    y,    0,    t.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	5	None	replace
267	[BUG]  [BUGGY]  Integrator  t0  =  equations.getIntegrator1(0);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Integrator  t0  =  equations.getIntegrator1(0);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integrator  t0  =  equations.getIntegrator1(0);	  Integrator    t0    =    equations.getIntegrator(0);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
268	[BUG]  [BUGGY]  ExpandableODE  t0  =  equations.getDimension();  expandableODE.setPrimaryState(t0);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  ExpandableODE  t0  =  equations.getDimension();  expandableODE.setPrimaryState(t0);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	ExpandableODE  t0  =  equations.getDimension();  expandableODE.setPrimaryState(t0);	  t0    =    equations.getDimension();    expandableODE.setPrimaryState(t0);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
269	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  Equations.size();  y++)  {  if(t0!=  null)  {  throw  new  DimensionMismatchException(t1,  t);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  for(int  y  =  0;  y  <  Equations.size();  y++)  {  if(t0!=  null)  {  throw  new  DimensionMismatchException(t1,  t);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  0;  y  <  Equations.size();  y++)  {  if(t0!=  null)  {  throw  new  DimensionMismatchException(t1,  t);  }	  for(int    y    =    0;    y    <    equations.size();    y++)    {    if(t0!=    null)    {    throw    new    DimensionMismatchException(t1,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
270	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  elements.size();  y++)  {  if(t0!=  null)  {  throw  new  DimensionMismatchException(t1,  t);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  for(int  y  =  0;  y  <  elements.size();  y++)  {  if(t0!=  null)  {  throw  new  DimensionMismatchException(t1,  t);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  0;  y  <  elements.size();  y++)  {  if(t0!=  null)  {  throw  new  DimensionMismatchException(t1,  t);  }	  for(int    y    =    0;    y    <    equations.size();    y++)    {    if(t0!=    null)    {    throw    new    DimensionMismatchException(t1,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
271	[BUG]  [BUGGY]  System.arraycopy(t.getDimension(),  0,  t0,  1,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(t.getDimension(),  0,  t0,  1,  t.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(t.getDimension(),  0,  t0,  1,  t.length);	  System.arraycopy(equations.getDimension(),    0,    t0,    1,    t.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	85	None	replace
272	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  t0,  y,  0,  expansionableODE.length);  [CE]  cannot  find  symbol  expandableODE  [FE]                          AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(expandableODE,  t0,  y,  0,  expansionableODE.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(expandableODE,  t0,  y,  0,  expansionableODE.length);	  System.arraycopy(expandableODE,    t0,    y,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	4	None	replace
273	[BUG]  [BUGGY]  for(int  y  =  2;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  for(int  y  =  2;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  2;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }	  for(int    y    =    1;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
274	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0.length  -  1,  t0);  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0.length  -  1,  t0);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0.length  -  1,  t0);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0.length    -    1);    	non-compiled	[CE]  double  cannot  be  dereferenced	48	None	replace
275	[BUG]  [BUGGY]  int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  y0);  }  [CE]  >  expected  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  y0);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	int  y  =  0;  y  <  equations.size();  y++)  {  if(isLastStep)  {  throw  new  DimensionMismatchException(t0,  y0);  }	  for(int    y    =    0;    y    <    equations.size();    y++)    {    if(isLastStep)    {    throw    new    DimensionMismatchException(t0,    y0);    }    	non-compiled	[CE]  >  expected	89	None	replace
276	[BUG]  [BUGGY]  t0.setTime(t0);  [CE]  double  cannot  be  dereferenced  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  t0.setTime(t0);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	t0.setTime(t0);	  t0.setTime(t0);    expandableODE.setPrimaryState(t0);    	non-compiled	[CE]  double  cannot  be  dereferenced	3	None	replace
277	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  t1,  equations);  [CE]  cannot  find  symbol  t1  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  t1,  equations);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y0,  t1,  equations);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y0,    equations);    	non-compiled	[CE]  cannot  find  symbol  t1	55	None	replace
278	[BUG]  [BUGGY]  T0  t0  =  equations,  y.getT0();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  T0  t0  =  equations,  y.getT0();  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	T0  t0  =  equations,  y.getT0();	  T0    t0    =    equations.getT0();    	non-compiled	[CE]  ';'  expected	61	None	replace
279	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t0,  t0);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t0,  t0);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y0,  t0,  t0);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(y0,    t0);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	13	None	replace
280	[BUG]  [BUGGY]  int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(y0,  t);  }  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(y0,  t);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(y0,  t);  }	  for(int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(y0,    t);    }    	non-compiled	[CE]  >  expected	63	None	replace
281	[BUG]  [BUGGY]  Integer  t0  =(Integer)equations.get(y.length);  [CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Integer  t0  =(Integer)equations.get(y.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integer  t0  =(Integer)equations.get(y.length);	  Integer    t0    =(Integer)equations.get(y);    	non-compiled	[CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])	34	None	replace
282	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y.length,  t0);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y.length,  t0);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y.length,  t0);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y.length);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	22	None	replace
283	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y.length,  t0.length);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y.length,  t0.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y.length,  t0.length);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	22	None	replace
284	[BUG]  [BUGGY]  System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  [CE]  cannot  find  symbol  expandableODE  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(expandableODE,  0,  t0,  0,  y.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(expandableODE,  0,  t0,  0,  y.length);	  System.arraycopy(expandableODE,    0,    y,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	1	None	replace
285	[BUG]  [BUGGY]  System.arraycopy(t0.getDimension(),  0,  y,  1,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(t0.getDimension(),  0,  y,  1,  t.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(t0.getDimension(),  0,  y,  1,  t.length);	  System.arraycopy(t0.getDimension(),    0,    y,    0,    t.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	102	None	replace
286	[BUG]  [BUGGY]  System.arraycopy(t0.getDimension(),  0,  y,  0,  t1.length);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(t0.getDimension(),  0,  y,  0,  t1.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(t0.getDimension(),  0,  y,  0,  t1.length);	  System.arraycopy(t0.getDimension(),    0,    y,    0,    t.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	102	None	replace
287	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  elements.size();  y++)  {  if(t0  ==  null)  {  throw  new  DimensionMismatchException(t0,  t);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  for(int  y  =  0;  y  <  elements.size();  y++)  {  if(t0  ==  null)  {  throw  new  DimensionMismatchException(t0,  t);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  0;  y  <  elements.size();  y++)  {  if(t0  ==  null)  {  throw  new  DimensionMismatchException(t0,  t);  }	  for(int    y    =    0;    y    <    elements.size();    y++)    {    if(t0!=    null)    {    throw    new    DimensionMismatchException(t0,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
288	[BUG]  [BUGGY]  For(int  y  =  0;  y  <  elements.size();  y++)  {  if(t0!=  null)  {  throw  new  DimensionMismatchException(t0,  t);  }  [CE]  '.class'  expected  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  For(int  y  =  0;  y  <  elements.size();  y++)  {  if(t0!=  null)  {  throw  new  DimensionMismatchException(t0,  t);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	For(int  y  =  0;  y  <  elements.size();  y++)  {  if(t0!=  null)  {  throw  new  DimensionMismatchException(t0,  t);  }	  for(int    y    =    0;    y    <    elements.size();    y++)    {    if(t0!=    null)    {    throw    new    DimensionMismatchException(t0,    t);    }    	non-compiled	[CE]  '.class'  expected	101	None	replace
289	[BUG]  [BUGGY]  if(t0!=  equations.getDimension())  {  System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);  }  [CE]  cannot  find  symbol  expandableODE  [FE]    ArrayStoreException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  if(t0!=  equations.getDimension())  {  System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	if(t0!=  equations.getDimension())  {  System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);  }	          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),    0,    t,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	70	None	replace
290	[BUG]  [BUGGY]  if(t0  ==  null)  {  System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);  }  [CE]  incomparable  types:  double  and  <null>  [FE]      ArrayStoreException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  if(t0  ==  null)  {  System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	if(t0  ==  null)  {  System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);  }	          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),    0,    t,    0,    y.length);    	non-compiled	[CE]  incomparable  types:  double  and  <null>	70	None	replace
291	[BUG]  [BUGGY]  if(t0!=  equations.getDimension())  {  System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  }  else  {  System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);  }  [CE]  cannot  find  symbol  expandableODE  [FE]        ArrayStoreException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  if(t0!=  equations.getDimension())  {  System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  }  else  {  System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	if(t0!=  equations.getDimension())  {  System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  }  else  {  System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);  }	          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),    0,    t,    0,    y.length);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	70	None	replace
292	[BUG]  [BUGGY]  System.arraycopy(t0,  0,  expandableODE,  0,  t.length);  [CE]  cannot  find  symbol  expandableODE  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(t0,  0,  expandableODE,  0,  t.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(t0,  0,  expandableODE,  0,  t.length);	  System.arraycopy(expandableODE,    0,    y,    0,    t.length);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	2	None	replace
293	[BUG]  [BUGGY]  int  t0  =  equations.getTimension();  [CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  int  t0  =  equations.getTimension();  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	int  t0  =  equations.getTimension();	  int    t0    =    equations.getDimension();    	non-compiled	[CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])	91	None	replace
294	[BUG]  [BUGGY]  For(int  y  =  0;  y  <  elements.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }  [CE]  '.class'  expected  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  For(int  y  =  0;  y  <  elements.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	For(int  y  =  0;  y  <  elements.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }	  For(int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    y);    }    	non-compiled	[CE]  '.class'  expected	42	None	replace
295	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  t0);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  t0);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  t0);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y,    t);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	11	None	replace
296	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  t1,  t1);  [CE]  cannot  find  symbol  t1  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  t1,  t1);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  t1,  t1);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y,    t);    	non-compiled	[CE]  cannot  find  symbol  t1	11	None	replace
297	[BUG]  [BUGGY]          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);  ArrayStoreException  exponents  =  new  ArrayStoreException(t0.length,  equations.getDimension());  [CE]  double  cannot  be  dereferenced  [FE]    ArrayStoreException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);  ArrayStoreException  exponents  =  new  ArrayStoreException(t0.length,  equations.getDimension());  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	                System.arraycopy(equations.getDimension(),        0,        y,        0,        y.length);        System.arraycopy(equations.getDimension(),    0,    t,    0,    y.length);    ArrayStoreException  exponents  =  new  ArrayStoreException(t0.length,  equations.getDimension());	  	non-compiled	[CE]  double  cannot  be  dereferenced	69	None	add
298	[BUG]  [BUGGY]          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);  ArrayStoreException  exponents  =  equations.getDimension();  [CE]  incompatible  types  [FE]      ArrayStoreException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);  ArrayStoreException  exponents  =  equations.getDimension();  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	                System.arraycopy(equations.getDimension(),        0,        y,        0,        y.length);        System.arraycopy(equations.getDimension(),    0,    t,    0,    y.length);    ArrayStoreException  exponents  =  equations.getDimension();	  	non-compiled	[CE]  incompatible  types	69	None	add
299	[BUG]  [BUGGY]          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);  t0  =  equations.getDimension();  [CE]  final  parameter  t0  may  not  be  assigned  [FE]        ArrayStoreException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  t,  0,  y.length);  t0  =  equations.getDimension();  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	                System.arraycopy(equations.getDimension(),        0,        y,        0,        y.length);        System.arraycopy(equations.getDimension(),    0,    t,    0,    y.length);    t0  =  equations.getDimension();	  	non-compiled	[CE]  final  parameter  t0  may  not  be  assigned	69	None	add
300	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(d0,  t);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  for(int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(d0,  t);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(d0,  t);  }	  For(int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
301	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t1,  t);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  for(int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t1,  t);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t1,  t);  }	  For(int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
302	[BUG]  [BUGGY]  ExpandableODE  t0  =  equations,  state.getDimension();  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  ExpandableODE  t0  =  equations,  state.getDimension();  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	ExpandableODE  t0  =  equations,  state.getDimension();	  ExpandableODE    t0    =    equations.getDimension();    	non-compiled	[CE]  ';'  expected	74	None	replace
303	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y2);  [CE]  cannot  find  symbol  y2  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y2);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y2);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    arrays);    	non-compiled	[CE]  cannot  find  symbol  y2	58	None	replace
304	[BUG]  [BUGGY]  System.arraycopy(t0.getDimension(),  0,  t,  0,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(t0.getDimension(),  0,  t,  0,  t.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(t0.getDimension(),  0,  t,  0,  t.length);	  System.arraycopy(equations.getDimension(),    0,    t,    0,    t.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	81	None	replace
305	[BUG]  [BUGGY]  System.arraycopy(equations.getDimension(),  0,  t0,  0,  x.length);  [CE]  cannot  find  symbol  x  [FE]          ArrayStoreException      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(equations.getDimension(),  0,  t0,  0,  x.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(equations.getDimension(),  0,  t0,  0,  x.length);	          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),    0,    x,    0,    x.length);    	non-compiled	[CE]  cannot  find  symbol  x	68	None	replace
306	[BUG]  [BUGGY]  System.arraycopy(variables.getDimension(),  0,  y,  0,  t0.length);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(variables.getDimension(),  0,  y,  0,  t0.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(variables.getDimension(),  0,  y,  0,  t0.length);	  System.arraycopy(t0.getDimension(),    0,    y,    0,    t0.length);    	non-compiled	[CE]  cannot  find  symbol  	9	None	replace
307	[BUG]  [BUGGY]  System.arraycopy(t0.toString(),  0,  y,  0,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]        ArrayStoreException      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(t0.toString(),  0,  y,  0,  t.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(t0.toString(),  0,  y,  0,  t.length);	          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),    0,    t0,    0,    t.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	96	None	replace
308	[BUG]  [BUGGY]  Integer  t0  =(Integer)equations.get(x0.length);  [CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])  [FE]            AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Integer  t0  =(Integer)equations.get(x0.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integer  t0  =(Integer)equations.get(x0.length);	  Integer    t0    =(Integer)equations.get(x0);    	non-compiled	[CE]  variable  t0  is  already  defined  in  method  integrate(FirstOrderDifferentialEquations,double,double[],double,double[])	77	None	replace
309	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  elements.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  d);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  for(int  y  =  0;  y  <  elements.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  d);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	for(int  y  =  0;  y  <  elements.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  d);  }	  for(int    y    =    0;    y    <    elements.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    t);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
310	[BUG]  [BUGGY]  int  y  =  0;  y  <  equations.size();  y++)  {  if(t0  ==  null)  {  throw  new  DimensionMismatchException(t0,  t);  }  [CE]  >  expected  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  int  y  =  0;  y  <  equations.size();  y++)  {  if(t0  ==  null)  {  throw  new  DimensionMismatchException(t0,  t);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	int  y  =  0;  y  <  equations.size();  y++)  {  if(t0  ==  null)  {  throw  new  DimensionMismatchException(t0,  t);  }	  for(int    y    =    0;    y    <    equations.size();    y++)    {    if(t0    ==    null)    {    throw    new    DimensionMismatchException(t0,    t);    }    	non-compiled	[CE]  >  expected	52	None	replace
311	[BUG]  [BUGGY]  T0  =  t0.getT0();  [CE]  cannot  find  symbol  T0  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  T0  =  t0.getT0();  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	T0  =  t0.getT0();	  T0    =    equations.getT0();    	non-compiled	[CE]  cannot  find  symbol  T0	26	None	replace
312	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y,  t0,  t1);  [CE]  cannot  find  symbol  t1  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y,  t0,  t1);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y,  t0,  t1);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y,    t1);    	non-compiled	[CE]  cannot  find  symbol  t1	106	None	replace
313	[BUG]  [BUGGY]  double  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  break;  }  [CE]  >  expected  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  double  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  break;  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	double  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  break;  }	  int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    break;    }    	non-compiled	[CE]  >  expected	31	None	replace
314	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  exportable);  [CE]  cannot  find  symbol  exportable  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  exportable);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  exportable);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(expandable,    t0);    	non-compiled	[CE]  cannot  find  symbol  exportable	21	None	replace
315	[BUG]  [BUGGY]  System.arraycopy(t0,  t0);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(t0,  t0);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(t0,  t0);	  System.arraycopy(expandableODE,    t0);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	75	None	replace
316	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	add	                System.arraycopy(equations.getDimension(),        0,        y,        0,        y.length);        System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	15	1	add
317	[BUG]  [BUGGY]          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]          System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	                System.arraycopy(equations.getDimension(),        0,        y,        0,        y.length);        System.arraycopy(equations.getDimension(),    0,    y,    0,    y.length);    System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);  System.arraycopy(equations.getDimension(),  0,  y,  0,  y.length);	  	compilable	  [FE]  ArrayStoreException  	15	1	add
318	[BUG]  [BUGGY]  System.arraycopy(t0,  y0,  expandableODE,  0,  t.length);  [CE]  cannot  find  symbol  expandableODE  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(t0,  y0,  expandableODE,  0,  t.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(t0,  y0,  expandableODE,  0,  t.length);	  System.arraycopy(expandableODE,    t0,    y,    0,    t.length);    	non-compiled	[CE]  cannot  find  symbol  expandableODE	73	None	replace
319	[BUG]  [BUGGY]  int  y  =  0;  y  <  elements.size();  y++)  {  if(!isLastStep)  {  break;  }  [CE]  >  expected  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  int  y  =  0;  y  <  elements.size();  y++)  {  if(!isLastStep)  {  break;  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	int  y  =  0;  y  <  elements.size();  y++)  {  if(!isLastStep)  {  break;  }	  for(int    y    =    0;    y    <    elements.size();    y++)    {    if(!isLastStep)    {    break;    }    	non-compiled	[CE]  >  expected	107	None	replace
320	[BUG]  [BUGGY]  Integer  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }  [CE]  >  expected  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Integer  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integer  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }	  int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    y);    }    	non-compiled	[CE]  >  expected	97	None	replace
321	[BUG]  [BUGGY]  double  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }  [CE]  >  expected  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  double  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	double  y  =  0;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }	  int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    y);    }    	non-compiled	[CE]  >  expected	97	None	replace
322	[BUG]  [BUGGY]  int  y  =  1;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }  [CE]  >  expected  [FE]                        AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  int  y  =  1;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	int  y  =  1;  y  <  equations.size();  y++)  {  if(!isLastStep)  {  throw  new  DimensionMismatchException(t0,  y);  }	  int    y    =    0;    y    <    equations.size();    y++)    {    if(!isLastStep)    {    throw    new    DimensionMismatchException(t0,    y);    }    	non-compiled	[CE]  >  expected	97	None	replace
323	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  t1,  equations);  [CE]  cannot  find  symbol  t1  [FE]                AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  t1,  equations);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  t1,  equations);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y,    equations);    	non-compiled	[CE]  cannot  find  symbol  t1	56	None	replace
324	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  arrays);  [CE]  cannot  find  symbol  arrays  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  arrays);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y,  arrays);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y,    equations);    	non-compiled	[CE]  cannot  find  symbol  arrays	56	None	replace
325	[BUG]  [BUGGY]  System.arraycopy(t0.getDimension(),  0,  equations,  0,  t0.length);  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(t0.getDimension(),  0,  equations,  0,  t0.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(t0.getDimension(),  0,  equations,  0,  t0.length);	  System.arraycopy(equations.getDimension(),    0,    t0,    0,    t0.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	71	None	replace
326	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y,  t0.length,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y,  t0.length,  t.length);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(y,  t0.length,  t.length);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y,    t.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	12	None	replace
327	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  t0);  [CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  t0);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  t0);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    t);    	non-compiled	[CE]  constructor  ExpandableStatefulODE  in  class  ExpandableStatefulODE  cannot  be  applied  to  given  types;	23	None	replace
328	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y.length,  t2,  equations);  [CE]  cannot  find  symbol  t2  [FE]                  AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y.length,  t2,  equations);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y.length,  t2,  equations);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y.length,    equations);    	non-compiled	[CE]  cannot  find  symbol  t2	57	None	replace
329	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y.length,  t1,  equations);  [CE]  cannot  find  symbol  t1  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y.length,  t1,  equations);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y.length,  t1,  equations);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y.length,    equations);    	non-compiled	[CE]  cannot  find  symbol  t1	57	None	replace
330	[BUG]  [BUGGY]  Integrator  t0  =  equations,  equations.getEdge();  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  Integrator  t0  =  equations,  equations.getEdge();  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	Integrator  t0  =  equations,  equations.getEdge();	  Integrator    t0    =    equations,    equations.getIntegrator();    	non-compiled	[CE]  ';'  expected	79	None	replace
331	[BUG]  [BUGGY]  System.arraycopy(t0.getDimension(),  0,  t1,  0,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(t0.getDimension(),  0,  t1,  0,  t.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(t0.getDimension(),  0,  t1,  0,  t.length);	  System.arraycopy(t0.getDimension(),    0,    t0,    0,    t.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	84	None	replace
332	[BUG]  [BUGGY]  System.arraycopy(t0.getDimension(),  0,  t0,  0,  ts.length);  [CE]  double  cannot  be  dereferenced  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(t0.getDimension(),  0,  t0,  0,  ts.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(t0.getDimension(),  0,  t0,  0,  ts.length);	  System.arraycopy(t0.getDimension(),    0,    t0,    0,    t.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	84	None	replace
333	[BUG]  [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y1,  ts);  [CE]  cannot  find  symbol  y1  [FE]              AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y1,  ts);  [BUGGY]      expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(t0,  y1,  ts);	  final    ExpandableStatefulODE    expandableODE    =    new    ExpandableStatefulODE(t0,    y1,    equations);    	non-compiled	[CE]  cannot  find  symbol  y1	93	None	replace
334	[BUG]  [BUGGY]  System.arraycopy(t0,  equations.getDimension(),  0,  equations.length,  0,  t.length);  [CE]  cannot  find  symbol  length  [FE]                    AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(t0,  equations.getDimension(),  0,  equations.length,  0,  t.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(t0,  equations.getDimension(),  0,  equations.length,  0,  t.length);	  System.arraycopy(equations,    equations.getDimension(),    0,    t0,    0,    t.length);    	non-compiled	[CE]  cannot  find  symbol  length	110	None	replace
335	[BUG]  [BUGGY]  System.arraycopy(t,  equations.getDimension(),  0,  t0,  0,  t.length);  [CE]  double  cannot  be  dereferenced  [FE]                      AssertionError      [CONTEXT]      throws  MathIllegalStateException,  MathIllegalArgumentException  {  if  (y0.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y0.length,  equations.getDimension());  }  if  (y.length  !=  equations.getDimension())  {  throw  new  DimensionMismatchException(y.length,  equations.getDimension());  }        [BUGGY]  System.arraycopy(t,  equations.getDimension(),  0,  t0,  0,  t.length);  [BUGGY]      final  ExpandableStatefulODE  expandableODE  =  new  ExpandableStatefulODE(equations);  expandableODE.setTime(t0);  expandableODE.setPrimaryState(y0);  integrate(expandableODE,  t);  System.arraycopy(expandableODE.getPrimaryState(),  0,  y,  0,  y.length);  return  expandableODE.getTime();  [CLASS]  AbstractIntegrator  1  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  ExpandableStatefulODE  equations  expandable  expandableODE  boolean  isLastStep  resetOccurred  statesInitialized  double[]  y  y0  double  convergence  maxCheckInterval  stepSize  stepStart  t  t0  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  FirstOrderDifferentialEquations  equations  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	208	208	1	replace	System.arraycopy(t,  equations.getDimension(),  0,  t0,  0,  t.length);	  System.arraycopy(equations,    equations.getDimension(),    0,    t0,    0,    t.length);    	non-compiled	[CE]  double  cannot  be  dereferenced	110	None	replace
