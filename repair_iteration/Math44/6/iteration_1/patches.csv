bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  EventsStates  =  new  LinkedList  <  EventState>();  [CE]  cannot  find  symbol  EventsStates  [FE]          AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  EventsStates  =  new  LinkedList  <  EventState>();  [BUGGY]    statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	EventsStates  =  new  LinkedList  <  EventState>();	  EventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol  EventsStates	2	None	replace
2	[BUG]  [BUGGY]  EventStates  =  new  ArrayList  <  EventState>();  [CE]  cannot  find  symbol  EventStates  [FE]            AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  EventStates  =  new  ArrayList  <  EventState>();  [BUGGY]    statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	EventStates  =  new  ArrayList  <  EventState>();	  EventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol  EventStates	2	None	replace
3	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [BUGGY]    statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();	  EventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  NullPointerException  	2	1	replace
4	[BUG]  [BUGGY]  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [FE]  NullPointerException  [FE]              AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [BUGGY]    statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();	  EventsStates    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  NullPointerException  	2	1	replace
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	15	1	add
6	[BUG]  [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	15	1	add
7	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	  	compilable	  [FE]  AssertionError  	15	1	add
8	[BUG]  [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	  	compilable	  [FE]  AssertionError  	15	1	add
9	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	15	1	add
10	[BUG]  [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	15	1	add
11	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	  	compilable	  [FE]  AssertionError  	15	1	add
12	[BUG]  [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	  	compilable	  [FE]  AssertionError  	15	1	add
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	10	1	add
14	[BUG]  [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	10	1	add
15	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	10	1	add
16	[BUG]  [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	10	1	add
17	[BUG]  [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  stepsInitialized  =  false;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  stepsInitialized  =  false;  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  stepsInitialized  =  false;	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
18	[BUG]  [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  This  [FE]          AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  This	10	None	add
19	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	5	1	add
20	[BUG]  [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	5	1	add
21	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	5	1	add
22	[BUG]  [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	5	1	add
23	[BUG]  [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  stepsInitialized  =  false;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  stepsInitialized  =  false;  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  stepsInitialized  =  false;	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
24	[BUG]  [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  cannot  find  symbol  This  [FE]          AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  This	5	None	add
25	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  Integer>();  stepSize  =  Double.NaN;  [CE]  incompatible  types  [FE]    NullPointerException    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  stepHandlers  =  new  ArrayList  <  Integer>();  stepSize  =  Double.NaN;  [BUGGY]    statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers  =  new  ArrayList  <  Integer>();  stepSize  =  Double.NaN;	      	non-compiled	[CE]  incompatible  types	4	None	replace
26	[BUG]  [BUGGY]  this.stepHandlers  =  new  LinkedList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  this.stepHandlers  =  new  LinkedList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepHandlers  =  new  LinkedList  <  StepHandler>();  stepSize  =  Double.NaN;	      this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
27	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	7	1	add
28	[BUG]  [BUGGY]      stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	7	1	add
29	[BUG]  [BUGGY]      stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  cannot  find  symbol  StepHandlers  [FE]      AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    StepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  StepHandlers	7	None	add
30	[BUG]  [BUGGY]      stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  cannot  find  symbol  stepsInitialized  [FE]        AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	7	None	add
31	[BUG]  [BUGGY]      stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  cannot  find  symbol  steps  [FE]          AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  steps	7	None	add
32	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	12	1	add
33	[BUG]  [BUGGY]      stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	12	1	add
34	[BUG]  [BUGGY]      stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  StepHandlers  [FE]      AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    StepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  StepHandlers	12	None	add
35	[BUG]  [BUGGY]      stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  stepsInitialized  [FE]        AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	12	None	add
36	[BUG]  [BUGGY]      stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  steps  [FE]          AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  steps	12	None	add
37	[BUG]  [BUGGY]  this.stepHandlers  =  new  LinkedList  <  StepHandler>();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  this.stepHandlers  =  new  LinkedList  <  StepHandler>();  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepHandlers  =  new  LinkedList  <  StepHandler>();	      this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
38	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	this.stepHandlers  =  new  TreeSet  <  StepHandler>();	      this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  NullPointerException  	16	1	replace
39	[BUG]  [BUGGY]  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepHandlers  =  new  TreeSet  <  StepHandler>();	      this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  NullPointerException  	16	1	replace
40	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  stepStart  =  Double.NaN;  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	stepStart  =  Double.NaN;	      stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	13	1	replace
41	[BUG]  [BUGGY]  stepStart  =  Double.NaN;  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  stepStart  =  Double.NaN;  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepStart  =  Double.NaN;	      stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	13	1	replace
42	[BUG]  [BUGGY]  stepHandlers  =  new  LinkedList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  stepHandlers  =  new  LinkedList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers  =  new  LinkedList  <  StepHandler>();  stepStart  =  Double.NaN;	      stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
43	[BUG]  [BUGGY]  stepHandlers  =  new  LinkedList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  stepHandlers  =  new  LinkedList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers  =  new  LinkedList  <  StepHandler>();  stepSize  =  Double.NaN;	      stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
44	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	      stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  incompatible  types	8	None	replace
45	[BUG]  [BUGGY]  this.stepHandlers  =  new  LinkedList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  this.stepHandlers  =  new  LinkedList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepHandlers  =  new  LinkedList  <  StepHandler>();  stepStart  =  Double.NaN;	      this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
46	[BUG]  [BUGGY]  this.eventsStates  =  new  LinkedList  <  Incrementor>();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  this.eventsStates  =  new  LinkedList  <  Incrementor>();  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.eventsStates  =  new  LinkedList  <  Incrementor>();	      this.eventsStates    =    new    ArrayList    <    Incrementor>();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
47	[BUG]  [BUGGY]  this.eventsStates  =  new  java.util.ArrayList  <  Incrementor>();  [CE]  incompatible  types  [FE]              AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  this.eventsStates  =  new  java.util.ArrayList  <  Incrementor>();  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.eventsStates  =  new  java.util.ArrayList  <  Incrementor>();	      this.eventsStates    =    new    ArrayList    <    Incrementor>();    	non-compiled	[CE]  incompatible  types	9	None	replace
48	[BUG]  [BUGGY]  this.eventsStates  =  new  LinkedHashSet  <  Incrementor>();  [CE]  cannot  find  symbol  [FE]                AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  this.eventsStates  =  new  LinkedHashSet  <  Incrementor>();  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.eventsStates  =  new  LinkedHashSet  <  Incrementor>();	      this.eventsStates    =    new    ArrayList    <    Incrementor>();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
49	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize));  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]          AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize));  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers.add(new  Integer(stepStart,  stepSize));	      stepHandlers.add(new    Integer(stepSize));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	14	None	replace
50	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart));  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]            AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  stepHandlers.add(new  Integer(stepStart));  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers.add(new  Integer(stepStart));	      stepHandlers.add(new    Integer(stepSize));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	14	None	replace
51	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart));  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]              AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart));  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers.add(new  Integer(stepSize,  stepStart));	      stepHandlers.add(new    Integer(stepSize));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	14	None	replace
52	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart),  stepSize);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]                AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  stepHandlers.add(new  Integer(stepStart),  stepSize);  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers.add(new  Integer(stepStart),  stepSize);	      stepHandlers.add(new    Integer(stepSize));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	14	None	replace
53	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	      stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  incompatible  types	13	None	replace
54	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  new  LinkedList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  StepHandler  stepHandlers  =  new  LinkedList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	StepHandler  stepHandlers  =  new  LinkedList  <  StepHandler>();  stepStart  =  Double.NaN;	      stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
55	[BUG]  [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  This  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    This.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  This	15	None	add
56	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	15	1	add
57	[BUG]  [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	15	1	add
58	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	15	1	add
59	[BUG]  [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	15	1	add
60	[BUG]  [BUGGY]  if(stepSize!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  incomparable  types:  double  and  <null>  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  if(stepSize!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	      this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	6	None	replace
61	[BUG]  [BUGGY]  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  incomparable  types:  double  and  <null>  [FE]      AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	      this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	6	None	replace
62	[BUG]  [BUGGY]  this.eventsStates  =  new  HashSet  <  Incrementor>();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  this.eventsStates  =  new  HashSet  <  Incrementor>();  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.eventsStates  =  new  HashSet  <  Incrementor>();	      this.eventsStates    =    new    ArrayList    <    Incrementor>();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
63	[BUG]  [BUGGY]  this.eventsStates  =  new  TreeSet  <  Incrementor>();  [CE]  incompatible  types  [FE]              AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  this.eventsStates  =  new  TreeSet  <  Incrementor>();  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.eventsStates  =  new  TreeSet  <  Incrementor>();	      this.eventsStates    =    new    ArrayList    <    Incrementor>();    	non-compiled	[CE]  incompatible  types	9	None	replace
64	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	10	1	add
65	[BUG]  [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	10	1	add
66	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	10	1	add
67	[BUG]  [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	10	1	add
68	[BUG]  [BUGGY]  if(stepSize!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [CE]  incomparable  types:  double  and  <null>  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  if(stepSize!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	      this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	11	None	replace
69	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize),  stepStart);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]          AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  stepHandlers.add(new  Integer(stepSize),  stepStart);  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers.add(new  Integer(stepSize),  stepStart);	      stepHandlers.add(new    Integer(stepSize));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	14	None	replace
70	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]    statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	        stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	3	1	add
71	[BUG]  [BUGGY]      stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]    statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	        stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	3	1	add
72	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepSize);  [CE]  no  suitable  constructor  found  for  ArrayList(double)  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepSize);  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepSize);	      this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(double)	16	None	replace
73	[BUG]  [BUGGY]  if(stepSize  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  incomparable  types:  double  and  <null>  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  if(stepSize  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	      stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	8	None	replace
74	[BUG]  [BUGGY]  EventsStates  =  new  HashSet  <  EventState>();  [CE]  cannot  find  symbol  EventsStates  [FE]          AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  EventsStates  =  new  HashSet  <  EventState>();  [BUGGY]    statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	EventsStates  =  new  HashSet  <  EventState>();	  EventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol  EventsStates	2	None	replace
75	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	5	1	add
76	[BUG]  [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	5	1	add
77	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	5	1	add
78	[BUG]  [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	5	1	add
79	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	      this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	6	1	replace
80	[BUG]  [BUGGY]  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	      this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	6	1	replace
81	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  if(stepSize!=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	if(stepSize!=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	      this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	6	1	replace
82	[BUG]  [BUGGY]  if(stepSize!=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  if(stepSize!=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize!=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	      this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	6	1	replace
83	[BUG]  [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  List  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  List  is  abstract;  cannot  be  instantiated  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  List  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  List  <  StepHandler>();  stepSize  =  Double.NaN;	  	non-compiled	[CE]  List  is  abstract;  cannot  be  instantiated	5	None	add
84	[BUG]  [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  TreeList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  TreeList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  TreeList  <  StepHandler>();  stepStart  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
85	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  if(stepSize  ==  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	if(stepSize  ==  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	      stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	8	1	replace
86	[BUG]  [BUGGY]  if(stepSize  ==  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  if(stepSize  ==  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize  ==  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	      stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	8	1	replace
87	[BUG]  [BUGGY]  stepHandlers  =  new  TreeList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  stepHandlers  =  new  TreeList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers  =  new  TreeList  <  StepHandler>();  stepStart  =  Double.NaN;	      stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
88	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  stepSize;  [BUGGY]    statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  stepSize;	      	compilable	  [FE]  NullPointerException  	4	1	replace
89	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  stepSize;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  stepSize;  [BUGGY]    statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  stepSize;	      	compilable	  [FE]  NullPointerException  	4	1	replace
90	[BUG]  [BUGGY]  EventsStates  =  new  TreeSet  <  EventState>();  [CE]  cannot  find  symbol  EventsStates  [FE]          AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  EventsStates  =  new  TreeSet  <  EventState>();  [BUGGY]    statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	EventsStates  =  new  TreeSet  <  EventState>();	  EventsStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol  EventsStates	2	None	replace
91	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  eventsStates  =  new  TreeSet  <  EventState>();  [BUGGY]    statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	eventsStates  =  new  TreeSet  <  EventState>();	  eventsStates    =    new    LinkedList    <    EventState>();    	compilable	  [FE]  ClassCastException  	1	1	replace
92	[BUG]  [BUGGY]  eventsStates  =  new  TreeSet  <  EventState>();  [FE]  ClassCastException  [FE]        AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  eventsStates  =  new  TreeSet  <  EventState>();  [BUGGY]    statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	eventsStates  =  new  TreeSet  <  EventState>();	  eventsStates    =    new    LinkedList    <    EventState>();    	compilable	  [FE]  ClassCastException  	1	1	replace
93	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [CE]  incomparable  types:  double  and  <null>  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	      this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	11	None	replace
94	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	      this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	11	1	replace
95	[BUG]  [BUGGY]  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	      this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	11	1	replace
96	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      stepHandlers.addAll(stepHandlers);  [BUGGY]    statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	        stepHandlers.addAll(stepHandlers);	  	compilable	  [FE]  AssertionError  	3	1	add
97	[BUG]  [BUGGY]      stepHandlers.addAll(stepHandlers);  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      stepHandlers.addAll(stepHandlers);  [BUGGY]    statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	        stepHandlers.addAll(stepHandlers);	  	compilable	  [FE]  AssertionError  	3	1	add
98	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	12	1	add
99	[BUG]  [BUGGY]      stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;    [BUGGY]      stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]    eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	12	1	add
