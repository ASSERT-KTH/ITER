bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  stepStart  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  StepHandlers  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepStart  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepStart  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    StepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol  StepHandlers	34	None	replace
2	[BUG]  [BUGGY]  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  StepHandlers  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	StepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    StepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol  StepHandlers	34	None	replace
3	[BUG]  [BUGGY]  stepHandlers  =  new  LinkedList  <  StepHandler>();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers  =  new  LinkedList  <  StepHandler>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers  =  new  LinkedList  <  StepHandler>();	          stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
4	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	stepHandlers  =  new  TreeSet  <  StepHandler>();	          stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  NullPointerException  	71	1	replace
5	[BUG]  [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>();  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers  =  new  TreeSet  <  StepHandler>();	          stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  NullPointerException  	71	1	replace
6	[BUG]  [BUGGY]  this.stepHandlers  =  new  List  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  List  is  abstract;  cannot  be  instantiated  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  List  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepHandlers  =  new  List  <  StepHandler>();  stepSize  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers    =    new    List    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  List  is  abstract;  cannot  be  instantiated	83	None	replace
7	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  stepSize;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  stepSize;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    stepSize;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  stepSize;	  	compilable	  [FE]  AssertionError  	88	1	add
8	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  stepSize;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  stepSize;  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  stepSize;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  stepSize;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    stepSize;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  stepSize;	  	compilable	  [FE]  AssertionError  	88	1	add
9	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  stepSize;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  stepSize;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    stepSize;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  stepSize;	  	compilable	  [FE]  AssertionError  	88	1	add
10	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  stepSize;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  stepSize;  [FE]  AssertionError  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  stepSize;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  stepSize;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    stepSize;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  stepSize;	  	compilable	  [FE]  AssertionError  	88	1	add
11	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  stepSize;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  stepSize;  [CE]  cannot  find  symbol  StepHandlers  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  stepSize;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  stepSize;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    stepSize;    StepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  stepSize;	  	non-compiled	[CE]  cannot  find  symbol  StepHandlers	88	None	add
12	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  stepSize;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepStart  =  stepSize;  [CE]  cannot  find  symbol  stepsInitialized  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  stepSize;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepStart  =  stepSize;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    stepSize;    stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepStart  =  stepSize;	  	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	88	None	add
13	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>  [CE]  '('  or  '['  expected  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>	  	non-compiled	[CE]  '('  or  '['  expected	11	None	add
14	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
15	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	  	compilable	  [FE]  AssertionError  	11	1	add
16	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	  	compilable	  [FE]  AssertionError  	11	1	add
17	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers	  	non-compiled	[CE]  not  a  statement	11	None	add
18	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
19	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart,  isLastStep));  [CE]  no  suitable  constructor  found  for  Integer(double,double,boolean)  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart,  isLastStep));  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers.add(new  Integer(stepSize,  stepStart,  isLastStep));	  stepHandlers.add(new    Integer(stepSize,    stepStart));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double,boolean)	51	None	replace
20	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart),  isLastStep);  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart),  isLastStep);  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers.add(new  Integer(stepSize,  stepStart),  isLastStep);	  stepHandlers.add(new    Integer(stepSize,    stepStart));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	51	None	replace
21	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart),  stepSize);  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart),  stepSize);  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers.add(new  Integer(stepSize,  stepStart),  stepSize);	  stepHandlers.add(new    Integer(stepSize,    stepStart));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	51	None	replace
22	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	28	1	replace
23	[BUG]  [BUGGY]  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	28	1	replace
24	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  incomparable  types:  double  and  <null>  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	28	None	replace
25	[BUG]  [BUGGY]  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)	3	None	add
26	[BUG]  [BUGGY]  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  List  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  List  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    List  <  EventState>  steps  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)	3	None	add
27	[BUG]  [BUGGY]  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  Collection  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  Collection  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    Collection  <  EventState>  steps  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)	3	None	add
28	[BUG]  [BUGGY]  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  Set  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [CE]  cannot  find  symbol  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  Set  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    Set  <  EventState>  steps  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
29	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	stepSize  =  Double.NaN;	  StepHandler    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	44	1	replace
30	[BUG]  [BUGGY]  stepSize  =  Double.NaN;  [FE]  NullPointerException  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepSize  =  Double.NaN;	  StepHandler    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	44	1	replace
31	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  new  LinkedList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  StepHandler  stepHandlers  =  new  LinkedList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	StepHandler  stepHandlers  =  new  LinkedList  <  StepHandler>();  stepSize  =  Double.NaN;	  StepHandler    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
32	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.eventsStates  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.eventsStates  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    	non-compiled	[CE]  incompatible  types	22	None	replace
33	[BUG]  [BUGGY]  this.steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  cannot  find  symbol  steps  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    	non-compiled	[CE]  cannot  find  symbol  steps	22	None	replace
34	[BUG]  [BUGGY]  This.eventsStates  =  new  java.util.ArrayList  <  Incrementor>();  [CE]  cannot  find  symbol  This  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  This.eventsStates  =  new  java.util.ArrayList  <  Incrementor>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	This.eventsStates  =  new  java.util.ArrayList  <  Incrementor>();	  this.eventsStates    =    new    java.util.ArrayList    <    Incrementor>();    	non-compiled	[CE]  cannot  find  symbol  This	47	None	replace
35	[BUG]  [BUGGY]  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	6	None	replace
36	[BUG]  [BUGGY]  null  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  unexpected  type  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  null  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	null  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  unexpected  type	6	None	replace
37	[BUG]  [BUGGY]  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incomparable  types:  double  and  <null>  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	6	None	replace
38	[BUG]  [BUGGY]  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  cannot  find  symbol  This  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  if(stepSize!=    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    	non-compiled	[CE]  cannot  find  symbol  This	60	None	replace
39	[BUG]  [BUGGY]  this.stepSize  =  new  ArrayList  <  StepSize>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepSize  =  new  ArrayList  <  StepSize>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepSize  =  new  ArrayList  <  StepSize>();  stepStart  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
40	[BUG]  [BUGGY]  this.stepSize  =  new  ArrayList  <  StepSize>();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepSize  =  new  ArrayList  <  StepSize>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepSize  =  new  ArrayList  <  StepSize>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
41	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	20	1	replace
42	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	20	1	replace
43	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	20	1	replace
44	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	20	1	replace
45	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	64	1	add
46	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	64	1	add
47	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	non-compiled	[CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)	64	None	add
48	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.Na  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.Na  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.Na	  	non-compiled	[CE]  ';'  expected	64	None	add
49	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.N  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.N  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.N	  	non-compiled	[CE]  ';'  expected	64	None	add
50	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN	  	non-compiled	[CE]  ';'  expected	64	None	add
51	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	stepStart  =  Double.POSITIVE_INFINITY;	  stepStart    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	41	1	replace
52	[BUG]  [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepStart  =  Double.POSITIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepStart  =  Double.POSITIVE_INFINITY;	  stepStart    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	41	1	replace
53	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepStart  =  Integer.MIN_VALUE;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	stepStart  =  Integer.MIN_VALUE;	  stepStart    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	41	1	replace
54	[BUG]  [BUGGY]  stepStart  =  Integer.MIN_VALUE;  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepStart  =  Integer.MIN_VALUE;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepStart  =  Integer.MIN_VALUE;	  stepStart    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	41	1	replace
55	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepStart  =  Double.MIN_VALUE;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	stepStart  =  Double.MIN_VALUE;	  stepStart    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	41	1	replace
56	[BUG]  [BUGGY]  stepStart  =  Double.MIN_VALUE;  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepStart  =  Double.MIN_VALUE;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepStart  =  Double.MIN_VALUE;	  stepStart    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	41	1	replace
57	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	15	1	add
58	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	15	1	add
59	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	15	1	add
60	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	15	1	add
61	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [CE]  incomparable  types:  double  and  <null>  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	  	non-compiled	[CE]  incomparable  types:  double  and  <null>	15	None	add
62	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  isLastStep  =  true;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	15	1	add
63	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  isLastStep  =  true;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  isLastStep  =  true;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	15	1	add
64	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  This  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  This	15	None	add
65	[BUG]  [BUGGY]  EventsStates  =  new  LinkedHashSet  <  EventState>();  [CE]  cannot  find  symbol  EventsStates  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  EventsStates  =  new  LinkedHashSet  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	EventsStates  =  new  LinkedHashSet  <  EventState>();	  EventsStates    =    new    HashSet    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol  EventsStates	74	None	replace
66	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  if(stepSize    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    	compilable	  [FE]  NullPointerException  	73	1	replace
67	[BUG]  [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [FE]  NullPointerException  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  if(stepSize    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    	compilable	  [FE]  NullPointerException  	73	1	replace
68	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize!=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepSize!=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	if(stepSize!=    Double.NaN)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    if(stepSize!=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	81	1	add
69	[BUG]  [BUGGY]  if(stepSize!=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepSize!=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize!=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepSize!=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize!=    Double.NaN)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    if(stepSize!=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	81	1	add
70	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize!=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepSize  >=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	if(stepSize!=    Double.NaN)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    if(stepSize  >=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	81	1	add
71	[BUG]  [BUGGY]  if(stepSize!=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepSize  >=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [FE]  AssertionError  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize!=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepSize  >=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize!=    Double.NaN)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    if(stepSize  >=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	81	1	add
72	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize!=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	if(stepSize!=    Double.NaN)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	81	1	add
73	[BUG]  [BUGGY]  if(stepSize!=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [FE]  AssertionError  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize!=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize!=    Double.NaN)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	81	1	add
74	[BUG]  [BUGGY]  if(stepSize!=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepSize  >>  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize!=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepSize  >>  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize!=    Double.NaN)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    if(stepSize  >>  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	81	None	add
75	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  new  java.util.ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  StepHandler  stepHandlers  =  new  java.util.ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	StepHandler  stepHandlers  =  new  java.util.ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  StepHandler    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  incompatible  types	53	None	replace
76	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHand  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHand  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHand	  	non-compiled	[CE]  not  a  statement	9	None	add
77	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
78	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
79	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
80	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers	  	non-compiled	[CE]  not  a  statement	9	None	add
81	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	if(stepSize    ==    Double.NaN)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	79	1	add
82	[BUG]  [BUGGY]  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize    ==    Double.NaN)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	79	1	add
83	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepSize!=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	if(stepSize    ==    Double.NaN)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    if(stepSize!=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	79	1	add
84	[BUG]  [BUGGY]  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepSize!=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [FE]  AssertionError  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepSize!=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize    ==    Double.NaN)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    if(stepSize!=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	79	1	add
85	[BUG]  [BUGGY]  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  If(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  If(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize    ==    Double.NaN)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    If(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  	non-compiled	[CE]  ';'  expected	79	None	add
86	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepSize  >=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	if(stepSize    ==    Double.NaN)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    if(stepSize  >=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	79	1	add
87	[BUG]  [BUGGY]  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepSize  >=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [FE]  AssertionError  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepSize  >=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize    ==    Double.NaN)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    if(stepSize  >=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	79	1	add
88	[BUG]  [BUGGY]  if(stepSize  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  step  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  step  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  step	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
89	[BUG]  [BUGGY]  if(stepSize  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
90	[BUG]  [BUGGY]  if(stepSize  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>()  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>()  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>()	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    	non-compiled	[CE]  ';'  expected	99	None	replace
91	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	66	1	add
92	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	66	1	add
93	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	66	1	add
94	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	66	1	add
95	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	non-compiled	[CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)	66	None	add
96	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	66	1	add
97	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	66	1	add
98	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	76	1	replace
99	[BUG]  [BUGGY]  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	76	1	replace
100	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  incomparable  types:  double  and  <null>  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	76	None	replace
101	[BUG]  [BUGGY]  if(stepStart!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  incomparable  types:  double  and  <null>  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepStart!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepStart!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	76	None	replace
102	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)	56	None	add
103	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)	56	None	add
104	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)	56	None	add
105	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  This  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    This.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  This	56	None	add
106	[BUG]  [BUGGY]  stepSize  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  cannot  find  symbol  StepHandlers  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepSize  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepSize  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    StepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol  StepHandlers	29	None	replace
107	[BUG]  [BUGGY]  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  cannot  find  symbol  StepHandlers  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	StepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    StepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol  StepHandlers	29	None	replace
108	[BUG]  [BUGGY]  stepSize  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepSize  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepSize  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    StepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  incompatible  types	29	None	replace
109	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	32	1	add
110	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	32	1	add
111	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	32	1	add
112	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	32	1	add
113	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	32	1	add
114	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	32	1	add
115	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.Na  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.Na  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.Na	  	non-compiled	[CE]  ';'  expected	32	None	add
116	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	32	1	add
117	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	32	1	add
118	[BUG]  [BUGGY]  EventStates  =  new  TreeSet  <  EventState>();  [CE]  cannot  find  symbol  EventStates  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  EventStates  =  new  TreeSet  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	EventStates  =  new  TreeSet  <  EventState>();	  EventsStates    =    new    TreeSet    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol  EventStates	90	None	replace
119	[BUG]  [BUGGY]  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	12	None	replace
120	[BUG]  [BUGGY]  this.steps  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  steps  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.steps  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.steps  =  new  ArrayList  <  StepHandler>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    	non-compiled	[CE]  cannot  find  symbol  steps	12	None	replace
121	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	78	1	replace
122	[BUG]  [BUGGY]  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	78	1	replace
123	[BUG]  [BUGGY]  if(steps  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  cannot  find  symbol  steps  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(steps  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(steps  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol  steps	78	None	replace
124	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	21	1	add
125	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	21	1	add
126	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	21	1	add
127	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	21	1	add
128	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  cannot  find  symbol  This  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  This	21	None	add
129	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  [CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)	58	None	add
130	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  [CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)	58	None	add
131	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  [CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)	58	None	add
132	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  This  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    This.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  This	58	None	add
133	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	8	None	replace
134	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	8	None	replace
135	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  [CE]  >  expected  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    	non-compiled	[CE]  >  expected	8	None	replace
136	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart),  stepSize,  isLastStep);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepStart),  stepSize,  isLastStep);  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers.add(new  Integer(stepStart),  stepSize,  isLastStep);	  stepHandlers.add(new    Integer(stepStart),    stepSize);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	52	None	replace
137	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart),  stepSize,  hasLastStep);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepStart),  stepSize,  hasLastStep);  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers.add(new  Integer(stepStart),  stepSize,  hasLastStep);	  stepHandlers.add(new    Integer(stepStart),    stepSize);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	52	None	replace
138	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    ClassCastException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  eventsStates  =  new  TreeSet  <  EventState>();  eventsStates  =  new  TreeSet  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	eventsStates    =    new    TreeSet    <    EventState>();    eventsStates  =  new  TreeSet  <  EventState>();	  	compilable	  [FE]  AssertionError  	91	1	add
139	[BUG]  [BUGGY]  eventsStates  =  new  TreeSet  <  EventState>();  eventsStates  =  new  TreeSet  <  EventState>();  [FE]  AssertionError  [FE]    ClassCastException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  eventsStates  =  new  TreeSet  <  EventState>();  eventsStates  =  new  TreeSet  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	eventsStates    =    new    TreeSet    <    EventState>();    eventsStates  =  new  TreeSet  <  EventState>();	  	compilable	  [FE]  AssertionError  	91	1	add
140	[BUG]  [BUGGY]  eventsStates  =  new  TreeSet  <  EventState>();  EventsStates  =  new  TreeSet  <  EventState>();  [CE]  cannot  find  symbol  EventsStates  [FE]      ClassCastException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  eventsStates  =  new  TreeSet  <  EventState>();  EventsStates  =  new  TreeSet  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	eventsStates    =    new    TreeSet    <    EventState>();    EventsStates  =  new  TreeSet  <  EventState>();	  	non-compiled	[CE]  cannot  find  symbol  EventsStates	91	None	add
141	[BUG]  [BUGGY]  eventsStates  =  new  TreeSet  <  EventState>();  eventStates  =  new  TreeSet  <  EventState>();  [CE]  cannot  find  symbol  eventStates  [FE]        ClassCastException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  eventsStates  =  new  TreeSet  <  EventState>();  eventStates  =  new  TreeSet  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	eventsStates    =    new    TreeSet    <    EventState>();    eventStates  =  new  TreeSet  <  EventState>();	  	non-compiled	[CE]  cannot  find  symbol  eventStates	91	None	add
142	[BUG]  [BUGGY]  eventsStates  =  new  TreeSet  <  EventState>();  EventState>  eventsStates  =  new  TreeSet  <  EventState>();  [CE]  cannot  find  symbol  EventState  [FE]          ClassCastException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  eventsStates  =  new  TreeSet  <  EventState>();  EventState>  eventsStates  =  new  TreeSet  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	eventsStates    =    new    TreeSet    <    EventState>();    EventState>  eventsStates  =  new  TreeSet  <  EventState>();	  	non-compiled	[CE]  cannot  find  symbol  EventState	91	None	add
143	[BUG]  [BUGGY]  eventsStates  =  new  TreeSet  <  EventState>();  EventStates  =  new  TreeSet  <  EventState>();  [CE]  cannot  find  symbol  EventStates  [FE]            ClassCastException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  eventsStates  =  new  TreeSet  <  EventState>();  EventStates  =  new  TreeSet  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	eventsStates    =    new    TreeSet    <    EventState>();    EventStates  =  new  TreeSet  <  EventState>();	  	non-compiled	[CE]  cannot  find  symbol  EventStates	91	None	add
144	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	5	1	add
145	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	5	1	add
146	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    This.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  This	5	None	add
147	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  not  a  statement	5	None	add
148	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
149	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize),  stepStart,  isLastStep);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepSize),  stepStart,  isLastStep);  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers.add(new  Integer(stepSize),  stepStart,  isLastStep);	  stepHandlers.add(new    Integer(stepSize),    stepStart);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	69	None	replace
150	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize),  stepStart,  0);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepSize),  stepStart,  0);  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers.add(new  Integer(stepSize),  stepStart,  0);	  stepHandlers.add(new    Integer(stepSize),    stepStart);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	69	None	replace
151	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize),  stepStart,  hasLastStep);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepSize),  stepStart,  hasLastStep);  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers.add(new  Integer(stepSize),  stepStart,  hasLastStep);	  stepHandlers.add(new    Integer(stepSize),    stepStart);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	69	None	replace
152	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepStart);  [CE]  no  suitable  constructor  found  for  ArrayList(double)  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepStart);  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepStart);	  this.stepHandlers    =    new    ArrayList    <    StepHandler>(stepSize);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(double)	72	None	replace
153	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepStart,  stepSize);  [CE]  no  suitable  constructor  found  for  ArrayList(double,double)  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepStart,  stepSize);  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepStart,  stepSize);	  this.stepHandlers    =    new    ArrayList    <    StepHandler>(stepSize);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(double,double)	72	None	replace
154	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepSize,  stepStart);  [CE]  no  suitable  constructor  found  for  ArrayList(double,double)  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepSize,  stepStart);  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepHandlers  =  new  ArrayList  <  StepHandler>(stepSize,  stepStart);	  this.stepHandlers    =    new    ArrayList    <    StepHandler>(stepSize);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(double,double)	72	None	replace
155	[BUG]  [BUGGY]  stepHandlers  =  new  LinkedList  <  Integer>();  stepSize  =  Double.NaN;  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers  =  new  LinkedList  <  Integer>();  stepSize  =  Double.NaN;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers  =  new  LinkedList  <  Integer>();  stepSize  =  Double.NaN;	  stepHandlers    =    new    ArrayList    <    Integer>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
156	[BUG]  [BUGGY]  stepHandlers  =  new  java.util.ArrayList  <  Integer>();  stepSize  =  Double.NaN;  [CE]  incompatible  types  [FE]          NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers  =  new  java.util.ArrayList  <  Integer>();  stepSize  =  Double.NaN;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers  =  new  java.util.ArrayList  <  Integer>();  stepSize  =  Double.NaN;	  stepHandlers    =    new    ArrayList    <    Integer>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  incompatible  types	25	None	replace
157	[BUG]  [BUGGY]  stepHandlers  =  new  TreeSet  <  Integer>();  stepSize  =  Double.NaN;  [CE]  incompatible  types  [FE]            NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers  =  new  TreeSet  <  Integer>();  stepSize  =  Double.NaN;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers  =  new  TreeSet  <  Integer>();  stepSize  =  Double.NaN;	  stepHandlers    =    new    ArrayList    <    Integer>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  incompatible  types	25	None	replace
158	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	98	1	add
159	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	98	1	add
160	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	98	1	add
161	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	98	1	add
162	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepSize!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepSize!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepSize!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
163	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepSize  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepSize  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepSize  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
164	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepSize!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  step  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepSize!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  step  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepSize!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  step	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
165	[BUG]  [BUGGY]  EventStates  =  new  LinkedList  <  EventState>();  [CE]  cannot  find  symbol  EventStates  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  EventStates  =  new  LinkedList  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	EventStates  =  new  LinkedList  <  EventState>();	  EventStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol  EventStates	2	None	replace
166	[BUG]  [BUGGY]  EventStates  =  new  java.util.ArrayList  <  EventState>();  [CE]  cannot  find  symbol  EventStates  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  EventStates  =  new  java.util.ArrayList  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	EventStates  =  new  java.util.ArrayList  <  EventState>();	  EventStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol  EventStates	2	None	replace
167	[BUG]  [BUGGY]  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [CE]  incomparable  types:  double  and  <null>  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	  if(stepStart    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	93	None	replace
168	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHand  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHand  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHand	  	non-compiled	[CE]  not  a  statement	7	None	add
169	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepH  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepH  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepH	  	non-compiled	[CE]  not  a  statement	7	None	add
170	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers	  	non-compiled	[CE]  not  a  statement	7	None	add
171	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
172	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  [CE]  '('  or  '['  expected  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new	  	non-compiled	[CE]  '('  or  '['  expected	7	None	add
173	[BUG]  [BUGGY]  stepStart  =  Double.NaN;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  stepsInitialized  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepStart  =  Double.NaN;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepStart  =  Double.NaN;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepsInitialized    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	35	None	replace
174	[BUG]  [BUGGY]  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  stepsInitialized  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepsInitialized    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	35	None	replace
175	[BUG]  [BUGGY]  StepHandler  stepStart  =  Double.NaN;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  StepHandler  stepStart  =  Double.NaN;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	StepHandler  stepStart  =  Double.NaN;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepsInitialized    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  incompatible  types	35	None	replace
176	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	77	1	add
177	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	77	1	add
178	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	non-compiled	[CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)	77	None	add
179	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	77	1	add
180	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	77	1	add
181	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  cannot  find  symbol  This  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  This	77	None	add
182	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	70	1	add
183	[BUG]  [BUGGY]          stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	70	1	add
184	[BUG]  [BUGGY]          stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  StepHandlers  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers  =  new  ArrayList  <  StepHandler>();  StepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                stepHandlers    =    new    ArrayList    <    StepHandler>();    StepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  StepHandlers	70	None	add
185	[BUG]  [BUGGY]          stepHandlers  =  new  ArrayList  <  StepHandler>();  stepsInitialized  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  stepsInitialized  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers  =  new  ArrayList  <  StepHandler>();  stepsInitialized  =  new  ArrayList  <  StepHandler>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                stepHandlers    =    new    ArrayList    <    StepHandler>();    stepsInitialized  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	70	None	add
186	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  statesInitialized  =  false;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  statesInitialized  =  false;	  	compilable	  [FE]  AssertionError  	70	1	add
187	[BUG]  [BUGGY]          stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  statesInitialized  =  false;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  statesInitialized  =  false;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                stepHandlers    =    new    ArrayList    <    StepHandler>();    stepHandlers  =  new  ArrayList  <  StepHandler>();  statesInitialized  =  false;	  	compilable	  [FE]  AssertionError  	70	1	add
188	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  List  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	List  <  EventState>  steps  =  new  ArrayList  <  EventState>();	  ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  NullPointerException  	4	1	replace
189	[BUG]  [BUGGY]  List  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  List  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	List  <  EventState>  steps  =  new  ArrayList  <  EventState>();	  ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  NullPointerException  	4	1	replace
190	[BUG]  [BUGGY]  Set  <  EventState>  steps  =  new  HashSet  <  EventState>();  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  Set  <  EventState>  steps  =  new  HashSet  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	Set  <  EventState>  steps  =  new  HashSet  <  EventState>();	  ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
191	[BUG]  [BUGGY]  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>(stepSize);  [CE]  no  suitable  constructor  found  for  ArrayList(double)  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>(stepSize);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>(stepSize);	  ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(double)	4	None	replace
192	[BUG]  [BUGGY]  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  step  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  step  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  step	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    else    {    eventsStates    =    new    ArrayList    <    EventState>();    stepsInitialized    =    false;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
193	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  stepsInitialized  =  false;  [CE]  cannot  find  symbol  stepsInitialized  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  stepsInitialized  =  false;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();  stepsInitialized  =  false;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    else    {    eventsStates    =    new    ArrayList    <    EventState>();    stepsInitialized    =    false;    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	17	None	replace
194	[BUG]  [BUGGY]  stepHandlers.addAll(stepStart);  [CE]  method  addAll  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers.addAll(stepStart);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers.addAll(stepStart);	          stepHandlers.addAll(stepHandlers);    	non-compiled	[CE]  method  addAll  in  interface  Collection<E>  cannot  be  applied  to  given  types;	97	None	replace
195	[BUG]  [BUGGY]  stepHandlers.addAll(stepSize);  [CE]  method  addAll  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers.addAll(stepSize);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers.addAll(stepSize);	          stepHandlers.addAll(stepHandlers);    	non-compiled	[CE]  method  addAll  in  interface  Collection<E>  cannot  be  applied  to  given  types;	97	None	replace
196	[BUG]  [BUGGY]  stepHandlers.addAll(eventsStates);  [CE]  method  addAll  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers.addAll(eventsStates);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers.addAll(eventsStates);	          stepHandlers.addAll(stepHandlers);    	non-compiled	[CE]  method  addAll  in  interface  Collection<E>  cannot  be  applied  to  given  types;	97	None	replace
197	[BUG]  [BUGGY]  stepHandlers.add(stepStart);  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers.add(stepStart);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers.add(stepStart);	          stepHandlers.addAll(stepHandlers);    	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	97	None	replace
198	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	stepHandlers  =  new  TreeSet  <  StepHandler>();  stepStart  =  Double.NaN;	  stepHandlers    =    new    LinkedList    <    StepHandler>();    stepStart    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	42	1	replace
199	[BUG]  [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>();  stepStart  =  Double.NaN;  [FE]  NullPointerException  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers  =  new  TreeSet  <  StepHandler>();  stepStart  =  Double.NaN;	  stepHandlers    =    new    LinkedList    <    StepHandler>();    stepStart    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	42	1	replace
200	[BUG]  [BUGGY]  stepHandlers  =  new  TreeMap  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers  =  new  TreeMap  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers  =  new  TreeMap  <  StepHandler>();  stepStart  =  Double.NaN;	  stepHandlers    =    new    LinkedList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
201	[BUG]  [BUGGY]  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  This  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	This.stepHandlers  =  new  ArrayList  <  StepHandler>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    This.stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol  This	55	None	replace
202	[BUG]  [BUGGY]  Iterator  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  Iterator  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	Iterator  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    This.stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  incompatible  types	55	None	replace
203	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	19	1	add
204	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	19	1	add
205	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	19	1	add
206	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	19	1	add
207	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	19	1	add
208	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	19	1	add
209	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.Na  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.Na  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.Na	  	non-compiled	[CE]  ';'  expected	19	None	add
210	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.N  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.N  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.N	  	non-compiled	[CE]  ';'  expected	19	None	add
211	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	75	1	add
212	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	75	1	add
213	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	non-compiled	[CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)	75	None	add
214	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  cannot  find  symbol  This  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  This	75	None	add
215	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  isLastStep  =  true;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	75	1	add
216	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  isLastStep  =  true;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  isLastStep  =  true;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  isLastStep  =  true;	  	compilable	  [FE]  AssertionError  	75	1	add
217	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  stepsInitialized  =  false;  }  [CE]  incomparable  types:  double  and  <null>  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  stepsInitialized  =  false;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  else  {  eventsStates  =  new  ArrayList  <  EventState>();  stepsInitialized  =  false;  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    else    {    eventsStates    =    new    ArrayList    <    EventState>();    stepsInitialized    =    false;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	23	None	replace
218	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  step  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  step  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  step	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    else    {    eventsStates    =    new    ArrayList    <    EventState>();    stepsInitialized    =    false;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
219	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	27	1	add
220	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	27	1	add
221	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	27	1	add
222	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	27	1	add
223	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.Na  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.Na  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.Na	  	non-compiled	[CE]  ';'  expected	27	None	add
224	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.N  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.N  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.N	  	non-compiled	[CE]  ';'  expected	27	None	add
225	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.  [CE]  cannot  find  symbol  eventsStates  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.	  	non-compiled	[CE]  cannot  find  symbol  eventsStates	27	None	add
226	[BUG]  [BUGGY]  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  cannot  find  symbol  steps  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    steps    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol  steps	31	None	replace
227	[BUG]  [BUGGY]  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  cannot  find  symbol  stepsInitialized  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepsInitialized    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	30	None	replace
228	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  cannot  find  symbol  stepsInitialized  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepsInitialized    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	30	None	replace
229	[BUG]  [BUGGY]  this.stepHandlers  =  new  TreeList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  TreeList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepHandlers  =  new  TreeList  <  StepHandler>();  stepStart  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers    =    new    TreeList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
230	[BUG]  [BUGGY]  stepStart  =  Double.NaN;  this.stepHandlers  =  new  TreeList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepStart  =  Double.NaN;  this.stepHandlers  =  new  TreeList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepStart  =  Double.NaN;  this.stepHandlers  =  new  TreeList  <  StepHandler>();  stepStart  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers    =    new    TreeList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
231	[BUG]  [BUGGY]  this.stepHandlers  =  new  TreeList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  TreeList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepHandlers  =  new  TreeList  <  StepHandler>();  stepSize  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers    =    new    TreeList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
232	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	65	1	replace
233	[BUG]  [BUGGY]  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	65	1	replace
234	[BUG]  [BUGGY]  this.stepSize  =  new  ArrayList  <  StepSize>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepSize  =  new  ArrayList  <  StepSize>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepSize  =  new  ArrayList  <  StepSize>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
235	[BUG]  [BUGGY]  stepHandlers  =  new  TreeList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers  =  new  TreeList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers  =  new  TreeList  <  StepHandler>();  stepSize  =  Double.NaN;	  stepHandlers    =    new    TreeList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
236	[BUG]  [BUGGY]  stepHandlers  =  new  TreeList  <  StepHandler>();  this.stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers  =  new  TreeList  <  StepHandler>();  this.stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers  =  new  TreeList  <  StepHandler>();  this.stepStart  =  Double.NaN;	  stepHandlers    =    new    TreeList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
237	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepStart  =  Double.NaN;  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	stepStart    =    Double.NaN;    stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	40	1	add
238	[BUG]  [BUGGY]  stepStart  =  Double.NaN;  stepStart  =  Double.NaN;  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepStart  =  Double.NaN;  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepStart    =    Double.NaN;    stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	40	1	add
239	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepStart  =  Double.NaN;  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	stepStart    =    Double.NaN;    stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	40	1	add
240	[BUG]  [BUGGY]  stepStart  =  Double.NaN;  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepStart  =  Double.NaN;  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepStart    =    Double.NaN;    stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	40	1	add
241	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	40	1	add
242	[BUG]  [BUGGY]  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	40	1	add
243	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	40	1	add
244	[BUG]  [BUGGY]  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [FE]  AssertionError  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	40	1	add
245	[BUG]  [BUGGY]  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  Integer>();  stepSize  =  Double.NaN;  [CE]  incompatible  types  [FE]            NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  Integer>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  Integer>();  stepSize  =  Double.NaN;	  	non-compiled	[CE]  incompatible  types	40	None	add
246	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize),  isLastStep);  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize),  isLastStep);  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers.add(new  Integer(stepStart,  stepSize),  isLastStep);	  stepHandlers.add(new    Integer(stepStart,    stepSize));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	49	None	replace
247	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize,  isLastStep));  [CE]  no  suitable  constructor  found  for  Integer(double,double,boolean)  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize,  isLastStep));  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers.add(new  Integer(stepStart,  stepSize,  isLastStep));	  stepHandlers.add(new    Integer(stepStart,    stepSize));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double,boolean)	49	None	replace
248	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize),  name);  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize),  name);  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers.add(new  Integer(stepStart,  stepSize),  name);	  stepHandlers.add(new    Integer(stepStart,    stepSize));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	49	None	replace
249	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	67	1	replace
250	[BUG]  [BUGGY]  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	67	1	replace
251	[BUG]  [BUGGY]  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [CE]  incomparable  types:  double  and  <null>  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	67	None	replace
252	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  steps  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol  steps	67	None	replace
253	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	this.stepHandlers    =    new    TreeSet    <    StepHandler>();    this.stepHandlers  =  new  TreeSet  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	38	1	add
254	[BUG]  [BUGGY]  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepHandlers    =    new    TreeSet    <    StepHandler>();    this.stepHandlers  =  new  TreeSet  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	38	1	add
255	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	this.stepHandlers    =    new    TreeSet    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  }	  	compilable	  [FE]  AssertionError  	38	1	add
256	[BUG]  [BUGGY]  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  }  [FE]  AssertionError  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepHandlers    =    new    TreeSet    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  }	  	compilable	  [FE]  AssertionError  	38	1	add
257	[BUG]  [BUGGY]  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  }  else  {  eventStates  =  new  TreeSet  <  StepHandler>();  }  [CE]  cannot  find  symbol  eventStates  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  }  else  {  eventStates  =  new  TreeSet  <  StepHandler>();  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepHandlers    =    new    TreeSet    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  }  else  {  eventStates  =  new  TreeSet  <  StepHandler>();  }	  	non-compiled	[CE]  cannot  find  symbol  eventStates	38	None	add
258	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	this.stepHandlers    =    new    TreeSet    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  }	  	compilable	  [FE]  AssertionError  	38	1	add
259	[BUG]  [BUGGY]  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  }  [FE]  AssertionError  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepHandlers    =    new    TreeSet    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  }	  	compilable	  [FE]  AssertionError  	38	1	add
260	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	13	1	add
261	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	13	1	add
262	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	13	1	add
263	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	13	1	add
264	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	13	1	add
265	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	13	1	add
266	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	13	1	add
267	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	13	1	add
268	[BUG]  [BUGGY]  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  steps  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    steps    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol  steps	36	None	replace
269	[BUG]  [BUGGY]  StepHandler  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  StepHandler  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	StepHandler  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    steps    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  incompatible  types	36	None	replace
270	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  incomparable  types:  double  and  <null>  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	10	None	replace
271	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  StepHandler>();  if(stepStart  ==  null)  {  this.stepStart  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.eventsStates  =  new  ArrayList  <  StepHandler>();  if(stepStart  ==  null)  {  this.stepStart  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.eventsStates  =  new  ArrayList  <  StepHandler>();  if(stepStart  ==  null)  {  this.stepStart  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    	non-compiled	[CE]  incompatible  types	10	None	replace
272	[BUG]  [BUGGY]  this.steps  =  new  ArrayList  <  StepHandler>();  if(steps  ==  null)  {  this.steps  =  new  ArrayList  <  StepHandler>();  }  [CE]  cannot  find  symbol  steps  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.steps  =  new  ArrayList  <  StepHandler>();  if(steps  ==  null)  {  this.steps  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.steps  =  new  ArrayList  <  StepHandler>();  if(steps  ==  null)  {  this.steps  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    	non-compiled	[CE]  cannot  find  symbol  steps	10	None	replace
273	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	10	None	replace
274	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  NullPointerException  	57	1	replace
275	[BUG]  [BUGGY]  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  NullPointerException  	57	1	replace
276	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  NullPointerException  	57	1	replace
277	[BUG]  [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  NullPointerException  	57	1	replace
278	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	if(stepSize    ==    Double.NaN)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	94	1	add
279	[BUG]  [BUGGY]  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize    ==    Double.NaN)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	94	1	add
280	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  if(stepSize!=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	if(stepSize    ==    Double.NaN)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    if(stepSize!=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	94	1	add
281	[BUG]  [BUGGY]  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  if(stepSize!=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [FE]  AssertionError  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  if(stepSize!=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize    ==    Double.NaN)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    if(stepSize!=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	94	1	add
282	[BUG]  [BUGGY]  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  If(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  If(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize    ==    Double.NaN)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    If(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	  	non-compiled	[CE]  ';'  expected	94	None	add
283	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  if(stepSize  >=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	if(stepSize    ==    Double.NaN)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    if(stepSize  >=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	94	1	add
284	[BUG]  [BUGGY]  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  if(stepSize  >=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [FE]  AssertionError  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  if(stepSize  >=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize    ==    Double.NaN)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    if(stepSize  >=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	94	1	add
285	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  NullPointerException  	59	1	replace
286	[BUG]  [BUGGY]  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  NullPointerException  	59	1	replace
287	[BUG]  [BUGGY]  if(steps  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  }  [CE]  cannot  find  symbol  steps  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(steps  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(steps  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol  steps	59	None	replace
288	[BUG]  [BUGGY]  if(steps  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  }  [CE]  cannot  find  symbol  steps  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(steps  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(steps  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol  steps	59	None	replace
289	[BUG]  [BUGGY]  this.stepHandlers  =  new  HashSet  <  StepHandler>();  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  HashSet  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepHandlers  =  new  HashSet  <  StepHandler>();	  this.stepHandlers    =    new    TreeSet    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
290	[BUG]  [BUGGY]  stepSize  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepSize  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepSize  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  incompatible  types	33	None	replace
291	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                stepHandlers.addAll(stepHandlers);    stepHandlers.addAll(stepHandlers);	  	compilable	  [FE]  AssertionError  	96	1	add
292	[BUG]  [BUGGY]          stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepHandlers);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                stepHandlers.addAll(stepHandlers);    stepHandlers.addAll(stepHandlers);	  	compilable	  [FE]  AssertionError  	96	1	add
293	[BUG]  [BUGGY]          stepHandlers.addAll(stepHandlers);  StepHandlers  stepHandlers.addAll(stepHandlers);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers.addAll(stepHandlers);  StepHandlers  stepHandlers.addAll(stepHandlers);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                stepHandlers.addAll(stepHandlers);    StepHandlers  stepHandlers.addAll(stepHandlers);	  	non-compiled	[CE]  ';'  expected	96	None	add
294	[BUG]  [BUGGY]          stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepStates);  [CE]  cannot  find  symbol  stepStates  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers.addAll(stepHandlers);  stepHandlers.addAll(stepStates);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                stepHandlers.addAll(stepHandlers);    stepHandlers.addAll(stepStates);	  	non-compiled	[CE]  cannot  find  symbol  stepStates	96	None	add
295	[BUG]  [BUGGY]          stepHandlers.addAll(stepHandlers);  StepHandlers  stepHandlers  =  new  StepHandler(stepSize);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers.addAll(stepHandlers);  StepHandlers  stepHandlers  =  new  StepHandler(stepSize);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                stepHandlers.addAll(stepHandlers);    StepHandlers  stepHandlers  =  new  StepHandler(stepSize);	  	non-compiled	[CE]  cannot  find  symbol	96	None	add
296	[BUG]  [BUGGY]  stepStart  =  Double.NaN;  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  This  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepStart  =  Double.NaN;  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepStart  =  Double.NaN;  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    This.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol  This	18	None	replace
297	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepSize  ==  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	if(stepSize    ==    Double.NaN)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    if(stepSize  ==  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	85	1	add
298	[BUG]  [BUGGY]  if(stepSize  ==  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepSize  ==  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepSize  ==  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize    ==    Double.NaN)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    if(stepSize  ==  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	85	1	add
299	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepSize!=  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	if(stepSize    ==    Double.NaN)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    if(stepSize!=  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	85	1	add
300	[BUG]  [BUGGY]  if(stepSize  ==  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepSize!=  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [FE]  AssertionError  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepSize!=  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize    ==    Double.NaN)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    if(stepSize!=  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	85	1	add
301	[BUG]  [BUGGY]  if(stepSize  ==  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  If(stepSize  ==  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  If(stepSize  ==  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize    ==    Double.NaN)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    If(stepSize  ==  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  	non-compiled	[CE]  ';'  expected	85	None	add
302	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepSize  >=  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	if(stepSize    ==    Double.NaN)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    if(stepSize  >=  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	85	1	add
303	[BUG]  [BUGGY]  if(stepSize  ==  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepSize  >=  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [FE]  AssertionError  [FE]          NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepSize  >=  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize    ==    Double.NaN)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    if(stepSize  >=  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  	compilable	  [FE]  AssertionError  	85	1	add
304	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepStart  =  stepSize;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	stepStart  =  stepSize;	  stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    stepSize;    	compilable	  [FE]  NullPointerException  	89	1	replace
305	[BUG]  [BUGGY]  stepStart  =  stepSize;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepStart  =  stepSize;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepStart  =  stepSize;	  stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    stepSize;    	compilable	  [FE]  NullPointerException  	89	1	replace
306	[BUG]  [BUGGY]  stepHandlers  =  new  LinkedList  <  StepHandler>();  stepStart  =  stepSize;  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers  =  new  LinkedList  <  StepHandler>();  stepStart  =  stepSize;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers  =  new  LinkedList  <  StepHandler>();  stepStart  =  stepSize;	  stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    stepSize;    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
307	[BUG]  [BUGGY]  stepSize  =  new  ArrayList  <  StepHandler>();  [CE]  incompatible  types  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepSize  =  new  ArrayList  <  StepHandler>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepSize  =  new  ArrayList  <  StepHandler>();	  stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    stepSize;    	non-compiled	[CE]  incompatible  types	89	None	replace
308	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	stepHandlers  =  new  TreeSet  <  StepHandler>();  stepSize  =  Double.NaN;	  stepHandlers    =    new    LinkedList    <    StepHandler>();    stepSize    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	43	1	replace
309	[BUG]  [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  NullPointerException  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers  =  new  TreeSet  <  StepHandler>();  stepSize  =  Double.NaN;	  stepHandlers    =    new    LinkedList    <    StepHandler>();    stepSize    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	43	1	replace
310	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	21	1	add
311	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	21	1	add
312	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	21	1	add
313	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	21	1	add
314	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	21	1	add
315	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	21	1	add
316	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	21	1	add
317	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	21	1	add
318	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	27	1	add
319	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	27	1	add
320	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	27	1	add
321	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	27	1	add
322	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  cannot  find  symbol  StepHandlers  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    StepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  StepHandlers	27	None	add
323	[BUG]  [BUGGY]  EventsStates  =  new  TreeList  <  EventState>();  [CE]  cannot  find  symbol  EventsStates  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  EventsStates  =  new  TreeList  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	EventsStates  =  new  TreeList  <  EventState>();	  EventsStates    =    new    TreeSet    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol  EventsStates	90	None	replace
324	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  if(stepSize    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    	compilable	  [FE]  NullPointerException  	61	1	replace
325	[BUG]  [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [FE]  NullPointerException  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  if(stepSize    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    	compilable	  [FE]  NullPointerException  	61	1	replace
326	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	  if(stepStart    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    	compilable	  [FE]  NullPointerException  	93	1	replace
327	[BUG]  [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [FE]  NullPointerException  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	  if(stepStart    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    	compilable	  [FE]  NullPointerException  	93	1	replace
328	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize),  expandable);  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize),  expandable);  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers.add(new  Integer(stepStart,  stepSize),  expandable);	  stepHandlers.add(new    Integer(stepStart,    stepSize));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	49	None	replace
329	[BUG]  [BUGGY]  if(stepHandlers  ==  null)  {  stepSize  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepHandlers  ==  null)  {  stepSize  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepHandlers  ==  null)  {  stepSize  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  if(stepSize    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    	non-compiled	[CE]  incompatible  types	73	None	replace
330	[BUG]  [BUGGY]  eventsStates  =  new  TreeSet  <  EventState>();  ArrayList  <  EventState>  eventsStates  =  new  TreeSet  <  EventState>();  [CE]  incompatible  types  [FE]    ClassCastException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  eventsStates  =  new  TreeSet  <  EventState>();  ArrayList  <  EventState>  eventsStates  =  new  TreeSet  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	eventsStates    =    new    TreeSet    <    EventState>();    ArrayList  <  EventState>  eventsStates  =  new  TreeSet  <  EventState>();	  	non-compiled	[CE]  incompatible  types	91	None	add
331	[BUG]  [BUGGY]  this.stepStart  =  Double.NaN;  this.stepHandlers  =  new  TreeList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepStart  =  Double.NaN;  this.stepHandlers  =  new  TreeList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepStart  =  Double.NaN;  this.stepHandlers  =  new  TreeList  <  StepHandler>();  stepStart  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers    =    new    TreeList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
332	[BUG]  [BUGGY]  this.stepHandlers  =  new  TreeList  <  StepHandler>();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  TreeList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepHandlers  =  new  TreeList  <  StepHandler>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers    =    new    TreeList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
333	[BUG]  [BUGGY]          stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  steps  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers  =  new  ArrayList  <  StepHandler>();  steps  =  new  ArrayList  <  StepHandler>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                stepHandlers    =    new    ArrayList    <    StepHandler>();    steps  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  steps	70	None	add
334	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	7	1	add
335	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	7	1	add
336	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHand  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHand  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHand	  	non-compiled	[CE]  not  a  statement	7	None	add
337	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepH  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepH  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepH	  	non-compiled	[CE]  not  a  statement	7	None	add
338	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers	  	non-compiled	[CE]  not  a  statement	7	None	add
339	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	  	non-compiled	[CE]  incomparable  types:  double  and  <null>	7	None	add
340	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepH  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepH  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepH	  	non-compiled	[CE]  not  a  statement	11	None	add
341	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this	  	non-compiled	[CE]  not  a  statement	11	None	add
342	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
343	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHand  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHand  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHand	  	non-compiled	[CE]  not  a  statement	11	None	add
344	[BUG]  [BUGGY]  EventStates  =  new  HashSet  <  EventState>();  [CE]  cannot  find  symbol  EventStates  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  EventStates  =  new  HashSet  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	EventStates  =  new  HashSet  <  EventState>();	  EventStates    =    new    ArrayList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol  EventStates	2	None	replace
345	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	stepStart  =  Double.NEGATIVE_INFINITY;	  stepStart    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	41	1	replace
346	[BUG]  [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepStart  =  Double.NEGATIVE_INFINITY;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepStart  =  Double.NEGATIVE_INFINITY;	  stepStart    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	41	1	replace
347	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepStart  =  Double.NaN  -  stepSize;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	stepStart  =  Double.NaN  -  stepSize;	  stepStart    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	41	1	replace
348	[BUG]  [BUGGY]  stepStart  =  Double.NaN  -  stepSize;  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepStart  =  Double.NaN  -  stepSize;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepStart  =  Double.NaN  -  stepSize;	  stepStart    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	41	1	replace
349	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  stepSize;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  stepSize;  [CE]  cannot  find  symbol  StepHandlers  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  stepSize;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  stepSize;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    stepSize;    StepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  stepSize;	  	non-compiled	[CE]  cannot  find  symbol  StepHandlers	88	None	add
350	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  stepSize;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepSize  =  stepSize;  [CE]  cannot  find  symbol  stepsInitialized  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  stepSize;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepSize  =  stepSize;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    stepSize;    stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepSize  =  stepSize;	  	non-compiled	[CE]  cannot  find  symbol  stepsInitialized	88	None	add
351	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart,  stepSize));  [CE]  no  suitable  constructor  found  for  Integer(double,double,double)  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepSize,  stepStart,  stepSize));  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers.add(new  Integer(stepSize,  stepStart,  stepSize));	  stepHandlers.add(new    Integer(stepSize,    stepStart));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double,double)	51	None	replace
352	[BUG]  [BUGGY]  this.stepStart  =  new  ArrayList  <  StepHandler>();  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepStart  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepStart  =  new  ArrayList  <  StepHandler>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  incompatible  types	20	None	replace
353	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
354	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.N  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.N  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.N	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    	non-compiled	[CE]  ';'  expected	10	None	replace
355	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.Na  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.Na  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.Na	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    	non-compiled	[CE]  ';'  expected	10	None	replace
356	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	this.eventsStates  =  new  ArrayList  <  EventState>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    else    {    eventsStates    =    new    ArrayList    <    EventState>();    stepsInitialized    =    false;    	compilable	  [FE]  AssertionError  	17	1	replace
357	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.eventsStates  =  new  ArrayList  <  EventState>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.eventsStates  =  new  ArrayList  <  EventState>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    else    {    eventsStates    =    new    ArrayList    <    EventState>();    stepsInitialized    =    false;    	compilable	  [FE]  AssertionError  	17	1	replace
358	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	this.stepSize  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    else    {    eventsStates    =    new    ArrayList    <    EventState>();    stepsInitialized    =    false;    	compilable	  [FE]  NullPointerException  	17	1	replace
359	[BUG]  [BUGGY]  this.stepSize  =  Double.NaN;  [FE]  NullPointerException  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepSize  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    else    {    eventsStates    =    new    ArrayList    <    EventState>();    stepsInitialized    =    false;    	compilable	  [FE]  NullPointerException  	17	1	replace
360	[BUG]  [BUGGY]  this.stepSize  =  new  Double.NaN;  [CE]  '('  or  '['  expected  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepSize  =  new  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepSize  =  new  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    else    {    eventsStates    =    new    ArrayList    <    EventState>();    stepsInitialized    =    false;    	non-compiled	[CE]  '('  or  '['  expected	17	None	replace
361	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	this.stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	14	1	replace
362	[BUG]  [BUGGY]  this.stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	14	1	replace
363	[BUG]  [BUGGY]  this.stepSize  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepSize  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepSize  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  incompatible  types	14	None	replace
364	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	5	1	add
365	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	5	1	add
366	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  stepSize;  [CE]  incompatible  types  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  stepSize;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  stepSize;	  stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    stepSize;    	non-compiled	[CE]  incompatible  types	89	None	replace
367	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  StepHandlers  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    StepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  StepHandlers	32	None	add
368	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepStart!=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	if(stepStart!=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  if(stepSize!=    Double.NaN)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    	compilable	  [FE]  NullPointerException  	82	1	replace
369	[BUG]  [BUGGY]  if(stepStart!=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepStart!=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepStart!=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  if(stepSize!=    Double.NaN)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    	compilable	  [FE]  NullPointerException  	82	1	replace
370	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	13	1	add
371	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	13	1	add
372	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart),  stepSize,  expandable);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepStart),  stepSize,  expandable);  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers.add(new  Integer(stepStart),  stepSize,  expandable);	  stepHandlers.add(new    Integer(stepStart),    stepSize);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	52	None	replace
373	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart),  stepSize,  expansionable);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]                      AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepStart),  stepSize,  expansionable);  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers.add(new  Integer(stepStart),  stepSize,  expansionable);	  stepHandlers.add(new    Integer(stepStart),    stepSize);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	52	None	replace
374	[BUG]  [BUGGY]  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  steps  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    steps    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol  steps	36	None	replace
375	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	75	1	add
376	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	75	1	add
377	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	non-compiled	[CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)	75	None	add
378	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	this.stepStart  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    	compilable	  [FE]  NullPointerException  	22	1	replace
379	[BUG]  [BUGGY]  this.stepStart  =  Double.NaN;  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepStart  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    	compilable	  [FE]  NullPointerException  	22	1	replace
380	[BUG]  [BUGGY]  this.stepStart  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepStart  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepStart  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    	non-compiled	[CE]  incompatible  types	22	None	replace
381	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	77	1	add
382	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	77	1	add
383	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	non-compiled	[CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)	77	None	add
384	[BUG]  [BUGGY]  if(stepSize  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [CE]  incomparable  types:  double  and  <null>  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	33	None	replace
385	[BUG]  [BUGGY]  if(steps!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  }  [CE]  cannot  find  symbol  steps  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(steps!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(steps!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol  steps	59	None	replace
386	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  [CE]  >  expected  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <	  	non-compiled	[CE]  >  expected	9	None	add
387	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers	  	non-compiled	[CE]  not  a  statement	9	None	add
388	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	9	1	add
389	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	9	1	add
390	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepStart!=  null)  {  this.stepHandlers  =  new  ArrayList  <  [CE]  >  expected  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepStart!=  null)  {  this.stepHandlers  =  new  ArrayList  <  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepStart!=  null)  {  this.stepHandlers  =  new  ArrayList  <	  	non-compiled	[CE]  >  expected	9	None	add
391	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepStart!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  [CE]  >  expected  [FE]            AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepStart!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepStart!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <	  	non-compiled	[CE]  >  expected	9	None	add
392	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	this.stepHandlers  =  new  TreeSet  <  StepHandler>();  stepStart  =  Double.NaN;	  this.stepHandlers    =    new    LinkedList    <    StepHandler>();    stepStart    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	45	1	replace
393	[BUG]  [BUGGY]  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  stepStart  =  Double.NaN;  [FE]  NullPointerException  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepHandlers  =  new  TreeSet  <  StepHandler>();  stepStart  =  Double.NaN;	  this.stepHandlers    =    new    LinkedList    <    StepHandler>();    stepStart    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	45	1	replace
394	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	64	1	add
395	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	64	1	add
396	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	non-compiled	[CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)	64	None	add
397	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	non-compiled	[CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)	64	None	add
398	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  This  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  This	64	None	add
399	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	this.stepHandlers  =  new  TreeSet  <  StepHandler>();  stepSize  =  Double.NaN;	  this.stepHandlers    =    new    LinkedList    <    StepHandler>();    stepSize    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	26	1	replace
400	[BUG]  [BUGGY]  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  NullPointerException  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepHandlers  =  new  TreeSet  <  StepHandler>();  stepSize  =  Double.NaN;	  this.stepHandlers    =    new    LinkedList    <    StepHandler>();    stepSize    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	26	1	replace
401	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  NullPointerException  	57	1	replace
402	[BUG]  [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  NullPointerException  	57	1	replace
403	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  NullPointerException  	57	1	replace
404	[BUG]  [BUGGY]  if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  NullPointerException  	57	1	replace
405	[BUG]  [BUGGY]  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
406	[BUG]  [BUGGY]  this.stepSize  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepSize  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepSize  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  incompatible  types	65	None	replace
407	[BUG]  [BUGGY]  this.steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  steps  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol  steps	67	None	replace
408	[BUG]  [BUGGY]  this.stepSize  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepSize  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepSize  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  incompatible  types	67	None	replace
409	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers.addAll(stepHandlers);  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                stepHandlers.addAll(stepHandlers);    stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	96	1	add
410	[BUG]  [BUGGY]          stepHandlers.addAll(stepHandlers);  stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers.addAll(stepHandlers);  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                stepHandlers.addAll(stepHandlers);    stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	96	1	add
411	[BUG]  [BUGGY]          stepHandlers.addAll(stepHandlers);  StepHandlers  stepHandlers  =(StepHandler)stepHandlers.clone();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers.addAll(stepHandlers);  StepHandlers  stepHandlers  =(StepHandler)stepHandlers.clone();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                stepHandlers.addAll(stepHandlers);    StepHandlers  stepHandlers  =(StepHandler)stepHandlers.clone();	  	non-compiled	[CE]  cannot  find  symbol	96	None	add
412	[BUG]  [BUGGY]          stepHandlers.addAll(stepHandlers);  StepHandlers  stepHandlers  =  new  StepHandler(stepStart);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers.addAll(stepHandlers);  StepHandlers  stepHandlers  =  new  StepHandler(stepStart);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                stepHandlers.addAll(stepHandlers);    StepHandlers  stepHandlers  =  new  StepHandler(stepStart);	  	non-compiled	[CE]  cannot  find  symbol	96	None	add
413	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	98	1	add
414	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	98	1	add
415	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  cannot  find  symbol  StepHandlers  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    StepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  StepHandlers	98	None	add
416	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  StepHandlers  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    StepHandlers  =  new  ArrayList  <  StepHandler>();  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  StepHandlers	98	None	add
417	[BUG]  [BUGGY]  this.events  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepSize  =  new  ArrayList  <  StepSize>();  }  [CE]  cannot  find  symbol  events  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.events  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepSize  =  new  ArrayList  <  StepSize>();  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.events  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepSize  =  new  ArrayList  <  StepSize>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    	non-compiled	[CE]  cannot  find  symbol  events	8	None	replace
418	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepSize  =  new  ArrayList  <  StepSize>();  }  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.eventsStates  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepSize  =  new  ArrayList  <  StepSize>();  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.eventsStates  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepSize  =  new  ArrayList  <  StepSize>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    	non-compiled	[CE]  incompatible  types	8	None	replace
419	[BUG]  [BUGGY]  this.events  =  new  ArrayList  <  StepHandler>();  if(stepStart  ==  null)  {  this.stepSize  =  new  ArrayList  <  StepSize>();  }  [CE]  cannot  find  symbol  events  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.events  =  new  ArrayList  <  StepHandler>();  if(stepStart  ==  null)  {  this.stepSize  =  new  ArrayList  <  StepSize>();  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.events  =  new  ArrayList  <  StepHandler>();  if(stepStart  ==  null)  {  this.stepSize  =  new  ArrayList  <  StepSize>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    	non-compiled	[CE]  cannot  find  symbol  events	8	None	replace
420	[BUG]  [BUGGY]  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  This  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  if(stepSize    ==    Double.NaN)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    	non-compiled	[CE]  cannot  find  symbol  This	95	None	replace
421	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepsInitialized    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  incompatible  types	30	None	replace
422	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  incomparable  types:  double  and  <null>  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepsInitialized  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepsInitialized    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	30	None	replace
423	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize),  stepStart,  expansionable);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepSize),  stepStart,  expansionable);  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers.add(new  Integer(stepSize),  stepStart,  expansionable);	  stepHandlers.add(new    Integer(stepSize),    stepStart);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	69	None	replace
424	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize),  stepStart,  expandable);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepSize),  stepStart,  expandable);  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers.add(new  Integer(stepSize),  stepStart,  expandable);	  stepHandlers.add(new    Integer(stepSize),    stepStart);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	69	None	replace
425	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  Collection  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	Collection  <  EventState>  steps  =  new  ArrayList  <  EventState>();	  ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  NullPointerException  	4	1	replace
426	[BUG]  [BUGGY]  Collection  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  Collection  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	Collection  <  EventState>  steps  =  new  ArrayList  <  EventState>();	  ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    	compilable	  [FE]  NullPointerException  	4	1	replace
427	[BUG]  [BUGGY]  this.stepSize  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepSize  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepSize  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers    =    new    List    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  incompatible  types	83	None	replace
428	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	19	1	add
429	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	19	1	add
430	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	19	1	add
431	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	  	compilable	  [FE]  AssertionError  	19	1	add
432	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	19	1	add
433	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	19	1	add
434	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	19	1	add
435	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	19	1	add
436	[BUG]  [BUGGY]  if(stepSize  ==  null)  {  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  incomparable  types:  double  and  <null>  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  null)  {  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize  ==  null)  {  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  StepHandler    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	44	None	replace
437	[BUG]  [BUGGY]  stepSize  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepSize  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepSize  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    StepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  incompatible  types	34	None	replace
438	[BUG]  [BUGGY]  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  StepHandlers  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	StepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    StepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol  StepHandlers	34	None	replace
439	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>()  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>()  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>()	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    else    {    eventsStates    =    new    ArrayList    <    EventState>();    stepsInitialized    =    false;    	non-compiled	[CE]  ';'  expected	23	None	replace
440	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHand  [CE]  >  expected  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHand  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHand	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    else    {    eventsStates    =    new    ArrayList    <    EventState>();    stepsInitialized    =    false;    	non-compiled	[CE]  >  expected	23	None	replace
441	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  if(stepSize!=    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    	compilable	  [FE]  NullPointerException  	60	1	replace
442	[BUG]  [BUGGY]  if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [FE]  NullPointerException  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  if(stepSize!=    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    	compilable	  [FE]  NullPointerException  	60	1	replace
443	[BUG]  [BUGGY]  stepStart  =  Double.NaN;  StepHandler  stepStart  =  Double.NaN;  stepSize  =  Double.NaN;  [CE]  incompatible  types  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepStart  =  Double.NaN;  StepHandler  stepStart  =  Double.NaN;  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepStart    =    Double.NaN;    StepHandler  stepStart  =  Double.NaN;  stepSize  =  Double.NaN;	  	non-compiled	[CE]  incompatible  types	40	None	add
444	[BUG]  [BUGGY]  stepHandlers  =  new  ObjectList  <  Integer>();  stepSize  =  Double.NaN;  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers  =  new  ObjectList  <  Integer>();  stepSize  =  Double.NaN;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers  =  new  ObjectList  <  Integer>();  stepSize  =  Double.NaN;	  stepHandlers    =    new    ArrayList    <    Integer>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
445	[BUG]  [BUGGY]  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepsize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  cannot  find  symbol  stepsize  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepsize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize    ==    Double.NaN)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    if(stepsize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  	non-compiled	[CE]  cannot  find  symbol  stepsize	79	None	add
446	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  [CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)	58	None	add
447	[BUG]  [BUGGY]  if(stepSize  ==  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepSize  ==  Double.NaN)  {  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  cannot  find  symbol  steps  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepSize  ==  Double.NaN)  {  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize    ==    Double.NaN)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    if(stepSize  ==  Double.NaN)  {  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  	non-compiled	[CE]  cannot  find  symbol  steps	85	None	add
448	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepStart  ==  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	if(stepStart  ==  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  if(stepSize    ==    Double.NaN)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    	compilable	  [FE]  NullPointerException  	86	1	replace
449	[BUG]  [BUGGY]  if(stepStart  ==  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepStart  ==  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepStart  ==  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  if(stepSize    ==    Double.NaN)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    	compilable	  [FE]  NullPointerException  	86	1	replace
450	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	non-compiled	[CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)	66	None	add
451	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	66	1	add
452	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	66	1	add
453	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  This  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    This.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  This	66	None	add
454	[BUG]  [BUGGY]  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  This.stepHandlers  =  new  TreeSet  <  StepHandler>();  [CE]  cannot  find  symbol  This  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  This.stepHandlers  =  new  TreeSet  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepHandlers    =    new    TreeSet    <    StepHandler>();    This.stepHandlers  =  new  TreeSet  <  StepHandler>();	  	non-compiled	[CE]  cannot  find  symbol  This	38	None	add
455	[BUG]  [BUGGY]  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  TreeSet  <  StepHandler>();  [CE]  incompatible  types  [FE]      NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  ArrayList  <  StepHandler>  steps  =  new  TreeSet  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepHandlers    =    new    TreeSet    <    StepHandler>();    ArrayList  <  StepHandler>  steps  =  new  TreeSet  <  StepHandler>();	  	non-compiled	[CE]  incompatible  types	38	None	add
456	[BUG]  [BUGGY]  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  TreeSet  <  StepHandler>();  [CE]  incompatible  types  [FE]        NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepHandlers  =  new  TreeSet  <  StepHandler>();  ArrayList  <  StepHandler>  stepHandlers  =  new  TreeSet  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepHandlers    =    new    TreeSet    <    StepHandler>();    ArrayList  <  StepHandler>  stepHandlers  =  new  TreeSet  <  StepHandler>();	  	non-compiled	[CE]  incompatible  types	38	None	add
457	[BUG]  [BUGGY]  stepStart  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  cannot  find  symbol  StepHandlers  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepStart  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepStart  =  Double.NaN;  StepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    StepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol  StepHandlers	29	None	replace
458	[BUG]  [BUGGY]  EventsStates  =  new  Collection  <  EventState>();  [CE]  cannot  find  symbol  EventsStates  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  EventsStates  =  new  Collection  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	EventsStates  =  new  Collection  <  EventState>();	  EventsStates    =    new    LinkedList    <    EventState>();    	non-compiled	[CE]  cannot  find  symbol  EventsStates	1	None	replace
459	[BUG]  [BUGGY]  if(steps  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.N  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(steps  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.N  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(steps  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.N	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  ';'  expected	78	None	replace
460	[BUG]  [BUGGY]  if(steps  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  cannot  find  symbol  steps  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(steps  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(steps  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol  steps	78	None	replace
461	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  new  TreeList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  StepHandler  stepHandlers  =  new  TreeList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	StepHandler  stepHandlers  =  new  TreeList  <  StepHandler>();  stepStart  =  Double.NaN;	  StepHandler    stepHandlers    =    new    LinkedList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
462	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	  if(stepSize!=    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    	compilable	  [FE]  NullPointerException  	68	1	replace
463	[BUG]  [BUGGY]  if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [FE]  NullPointerException  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	  if(stepSize!=    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    	compilable	  [FE]  NullPointerException  	68	1	replace
464	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  incomparable  types:  double  and  <null>  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    steps    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	31	None	replace
465	[BUG]  [BUGGY]  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  HashSet  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  ArrayList  <  EventState>  steps  =  new  ArrayList  <  EventState>();  HashSet  <  EventState>  steps  =  new  ArrayList  <  EventState>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	ArrayList    <    EventState>    steps    =    new    ArrayList    <    EventState>();    HashSet  <  EventState>  steps  =  new  ArrayList  <  EventState>();	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
466	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  incomparable  types:  double  and  <null>  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	28	None	replace
467	[BUG]  [BUGGY]  if(stepStart!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  incomparable  types:  double  and  <null>  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepStart!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepStart!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	28	None	replace
468	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  else  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  else  {  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  else  {	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
469	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	15	1	add
470	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	15	1	add
471	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	15	1	add
472	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	15	1	add
473	[BUG]  [BUGGY]  if(stepSize!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  step  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  step  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  step	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
474	[BUG]  [BUGGY]  if(stepSize  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
475	[BUG]  [BUGGY]  if(stepSize!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize!=  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
476	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepStart  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	if(stepStart  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  if(stepSize    ==    Double.NaN)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    	compilable	  [FE]  NullPointerException  	80	1	replace
477	[BUG]  [BUGGY]  if(stepStart  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepStart  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepStart  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  if(stepSize    ==    Double.NaN)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    	compilable	  [FE]  NullPointerException  	80	1	replace
478	[BUG]  [BUGGY]  StepHandlers  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  StepHandlers  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	StepHandlers  stepHandlers  =  new  ArrayList  <  StepHandler>();	          stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
479	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  incomparable  types:  double  and  <null>  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	6	None	replace
480	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incomparable  types:  double  and  <null>  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  incomparable  types:  double  and  <null>	6	None	replace
481	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
482	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(stepSize);  [CE]  no  suitable  constructor  found  for  ArrayList(double)  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(stepSize);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers  =  new  ArrayList  <  StepHandler>(stepSize);	          stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(double)	71	None	replace
483	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(stepStart);  [CE]  no  suitable  constructor  found  for  ArrayList(double)  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>(stepStart);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers  =  new  ArrayList  <  StepHandler>(stepStart);	          stepHandlers    =    new    ArrayList    <    StepHandler>();    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(double)	71	None	replace
484	[BUG]  [BUGGY]  stepHandlers.addAll(stepStates);  [CE]  cannot  find  symbol  stepStates  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers.addAll(stepStates);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers.addAll(stepStates);	          stepHandlers.addAll(stepHandlers);    	non-compiled	[CE]  cannot  find  symbol  stepStates	97	None	replace
485	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(this.stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	if(this.stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  if(stepSize    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    	compilable	  [FE]  NullPointerException  	61	1	replace
486	[BUG]  [BUGGY]  if(this.stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [FE]  NullPointerException  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(this.stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(this.stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  if(stepSize    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    	compilable	  [FE]  NullPointerException  	61	1	replace
487	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(this.stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	if(this.stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  if(stepSize!=    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    	compilable	  [FE]  NullPointerException  	60	1	replace
488	[BUG]  [BUGGY]  if(this.stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [FE]  NullPointerException  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(this.stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(this.stepHandlers!=  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  if(stepSize!=    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    	compilable	  [FE]  NullPointerException  	60	1	replace
489	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
490	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	non-compiled	[CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)	66	None	add
491	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	non-compiled	[CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)	66	None	add
492	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	66	1	add
493	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	66	1	add
494	[BUG]  [BUGGY]  StepHandler  stepStart  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  StepHandler  stepStart  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	StepHandler  stepStart  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    steps    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  incompatible  types	36	None	replace
495	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize),  stepSize);  [CE]  no  suitable  constructor  found  for  Integer(double,double)  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepStart,  stepSize),  stepSize);  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers.add(new  Integer(stepStart,  stepSize),  stepSize);	  stepHandlers.add(new    Integer(stepStart,    stepSize));    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double,double)	49	None	replace
496	[BUG]  [BUGGY]  if(stepSize  >  0)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>()  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  >  0)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>()  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize  >  0)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>()	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    else    {    eventsStates    =    new    ArrayList    <    EventState>();    stepsInitialized    =    false;    	non-compiled	[CE]  ';'  expected	17	None	replace
497	[BUG]  [BUGGY]  if(stepSize  >  0)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  step  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  >  0)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  step  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize  >  0)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  step	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    else    {    eventsStates    =    new    ArrayList    <    EventState>();    stepsInitialized    =    false;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
498	[BUG]  [BUGGY]  if(stepSize  >  0)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  eventsStates  =  new  ArrayList  <  EventState>();  stepsIn  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  >  0)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  eventsStates  =  new  ArrayList  <  EventState>();  stepsIn  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize  >  0)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  eventsStates  =  new  ArrayList  <  EventState>();  stepsIn	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    else    {    eventsStates    =    new    ArrayList    <    EventState>();    stepsInitialized    =    false;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
499	[BUG]  [BUGGY]  if(stepSize  >  0)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHand  [CE]  >  expected  [FE]                  AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  >  0)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHand  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize  >  0)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHand	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    else    {    eventsStates    =    new    ArrayList    <    EventState>();    stepsInitialized    =    false;    	non-compiled	[CE]  >  expected	17	None	replace
500	[BUG]  [BUGGY]  if(steps  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  else  {  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  cannot  find  symbol  steps  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(steps  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  else  {  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(steps  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  else  {  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol  steps	78	None	replace
501	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  incomparable  types:  double  and  <null>  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	28	None	replace
502	[BUG]  [BUGGY]  if(stepStart  ==  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.N  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepStart  ==  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.N  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepStart  ==  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.N	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  ';'  expected	28	None	replace
503	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.N  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.N  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  else  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.N	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  ';'  expected	28	None	replace
504	[BUG]  [BUGGY]  this.events  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>()  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.events  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>()  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.events  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>()	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    	non-compiled	[CE]  ';'  expected	8	None	replace
505	[BUG]  [BUGGY]  this.events  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [CE]  cannot  find  symbol  events  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.events  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.events  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    	non-compiled	[CE]  cannot  find  symbol  events	8	None	replace
506	[BUG]  [BUGGY]  this.eventsStates  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepH  [CE]  >  expected  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.eventsStates  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepH  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.eventsStates  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepH	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    	non-compiled	[CE]  >  expected	8	None	replace
507	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  TreeList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [CE]  incomparable  types:  double  and  <null>  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  TreeList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  TreeList  <  StepHandler>();  stepStart  =  Double.NaN;  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers    =    new    TreeList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	84	None	replace
508	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  TreeList  <  StepHandler>();  stepStart  =  Double.NaN;  }  else  {  this.stepHandlers  =  new  TreeList  <  StepHandler>();  stepStart  =  Double.Na  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  TreeList  <  StepHandler>();  stepStart  =  Double.NaN;  }  else  {  this.stepHandlers  =  new  TreeList  <  StepHandler>();  stepStart  =  Double.Na  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepStart  ==  null)  {  this.stepHandlers  =  new  TreeList  <  StepHandler>();  stepStart  =  Double.NaN;  }  else  {  this.stepHandlers  =  new  TreeList  <  StepHandler>();  stepStart  =  Double.Na	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers    =    new    TreeList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  ';'  expected	84	None	replace
509	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  TreeList  <  StepHandler>();  stepStart  =  Double.NaN;  }  else  {  this.stepHandlers  =  new  TreeList  <  StepHandler>();  stepStart  =  Double.N  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  TreeList  <  StepHandler>();  stepStart  =  Double.NaN;  }  else  {  this.stepHandlers  =  new  TreeList  <  StepHandler>();  stepStart  =  Double.N  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepStart  ==  null)  {  this.stepHandlers  =  new  TreeList  <  StepHandler>();  stepStart  =  Double.NaN;  }  else  {  this.stepHandlers  =  new  TreeList  <  StepHandler>();  stepStart  =  Double.N	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers    =    new    TreeList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  ';'  expected	84	None	replace
510	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [CE]  incomparable  types:  double  and  <null>  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	33	None	replace
511	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  else  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  else  {  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepStart  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  else  {	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
512	[BUG]  [BUGGY]  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  List  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  List  is  abstract;  cannot  be  instantiated  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  List  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize    ==    Double.NaN)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  List  <  StepHandler>();  stepSize  =  Double.NaN;  }	  	non-compiled	[CE]  List  is  abstract;  cannot  be  instantiated	79	None	add
513	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>();  stepStart  =  stepSize;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	stepHandlers  =  new  TreeSet  <  StepHandler>();  stepStart  =  stepSize;	  stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    stepSize;    	compilable	  [FE]  NullPointerException  	89	1	replace
514	[BUG]  [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>();  stepStart  =  stepSize;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers  =  new  TreeSet  <  StepHandler>();  stepStart  =  stepSize;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers  =  new  TreeSet  <  StepHandler>();  stepStart  =  stepSize;	  stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    stepSize;    	compilable	  [FE]  NullPointerException  	89	1	replace
515	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  NullPointerException  	6	1	replace
516	[BUG]  [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  NullPointerException  	6	1	replace
517	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  <  1)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	if(stepSize  <  1)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  NullPointerException  	6	1	replace
518	[BUG]  [BUGGY]  if(stepSize  <  1)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  <  1)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize  <  1)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    	compilable	  [FE]  NullPointerException  	6	1	replace
519	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  [CE]  '('  or  '['  expected  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new	  	non-compiled	[CE]  '('  or  '['  expected	11	None	add
520	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers	  	non-compiled	[CE]  not  a  statement	7	None	add
521	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  [CE]  '('  or  '['  expected  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new	  	non-compiled	[CE]  '('  or  '['  expected	7	None	add
522	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>()  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>()  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>()	  	non-compiled	[CE]  ';'  expected	7	None	add
523	[BUG]  [BUGGY]  if(steps  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [CE]  cannot  find  symbol  steps  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(steps  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(steps  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol  steps	67	None	replace
524	[BUG]  [BUGGY]  if(stepSize  <  2)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [CE]  cannot  find  symbol  steps  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  <  2)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize  <  2)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  steps  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol  steps	67	None	replace
525	[BUG]  [BUGGY]  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  newList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  newList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize    ==    Double.NaN)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    if(stepSize  ==  Double.NaN)  {  this.stepHandlers  =  newList  <  StepHandler>();  stepStart  =  Double.NaN;  }	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
526	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  step  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  step  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  step	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
527	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.N  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.N  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.N	  	non-compiled	[CE]  ';'  expected	21	None	add
528	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>()  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>()  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>()	  	non-compiled	[CE]  ';'  expected	21	None	add
529	[BUG]  [BUGGY]  if(stepSize  ==  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepSize  ==  Double.NaN)  {  stepHandlers  =  newList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  Double.NaN)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepSize  ==  Double.NaN)  {  stepHandlers  =  newList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize    ==    Double.NaN)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    if(stepSize  ==  Double.NaN)  {  stepHandlers  =  newList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
530	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepSize),  stepStart,  stepSize);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepSize),  stepStart,  stepSize);  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers.add(new  Integer(stepSize),  stepStart,  stepSize);	  stepHandlers.add(new    Integer(stepSize),    stepStart);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	69	None	replace
531	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepStart  =  Double.NaN;  stepStart  =  Double.NaN;  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	stepStart    =    Double.NaN;    stepStart  =  Double.NaN;  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	40	1	add
532	[BUG]  [BUGGY]  stepStart  =  Double.NaN;  stepStart  =  Double.NaN;  stepSize  =  Double.NaN;  [FE]  AssertionError  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepStart  =  Double.NaN;  stepStart  =  Double.NaN;  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepStart    =    Double.NaN;    stepStart  =  Double.NaN;  stepSize  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	40	1	add
533	[BUG]  [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  stepSize;  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  stepSize;  [CE]  incompatible  types  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  stepSize;  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  stepSize;  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    stepSize;    StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  stepSize;	  	non-compiled	[CE]  incompatible  types	88	None	add
534	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	  	non-compiled	[CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)	64	None	add
535	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)	64	None	add
536	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.Na  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.Na  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.Na	  	non-compiled	[CE]  ';'  expected	64	None	add
537	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	non-compiled	[CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)	77	None	add
538	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  [CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  variable  steps  is  already  defined  in  constructor  AbstractIntegrator(String)	77	None	add
539	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.Na  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.Na  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        ArrayList    <    StepHandler>    steps    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  steps  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.Na	  	non-compiled	[CE]  ';'  expected	77	None	add
540	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers	  	non-compiled	[CE]  not  a  statement	9	None	add
541	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>()  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>()  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>()	  	non-compiled	[CE]  ';'  expected	9	None	add
542	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  [CE]  '('  or  '['  expected  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  new	  	non-compiled	[CE]  '('  or  '['  expected	9	None	add
543	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  if(stepSize  ==  null)  {  this.stepHandlers  =	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
544	[BUG]  [BUGGY]  if(stepSize!=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepSize!=  Double.NaN)  {  this.stepHandlers  =  new  List  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  List  is  abstract;  cannot  be  instantiated  [FE]    NullPointerException    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize!=  Double.NaN)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  if(stepSize!=  Double.NaN)  {  this.stepHandlers  =  new  List  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize!=    Double.NaN)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    if(stepSize!=  Double.NaN)  {  this.stepHandlers  =  new  List  <  StepHandler>();  stepSize  =  Double.NaN;  }	  	non-compiled	[CE]  List  is  abstract;  cannot  be  instantiated	81	None	add
545	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepSize  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  step  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepSize  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  step  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepSize  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  step	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
546	[BUG]  [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  if(stepSize  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  step  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  if(stepSize  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  step  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    if(stepSize  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  step	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
547	[BUG]  [BUGGY]  this.events  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  cannot  find  symbol  events  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.events  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.events  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    	non-compiled	[CE]  cannot  find  symbol  events	16	None	replace
548	[BUG]  [BUGGY]  this.stepSize  =  new  List  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  List  is  abstract;  cannot  be  instantiated  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepSize  =  new  List  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepSize  =  new  List  <  StepHandler>();  stepSize  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers    =    new    List    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  List  is  abstract;  cannot  be  instantiated	83	None	replace
549	[BUG]  [BUGGY]  this.stepStart  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepStart  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepStart  =  new  ArrayList  <  StepHandler>();  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  incompatible  types	14	None	replace
550	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  if(stepHandlers  ==  null)  {  eventsStates  =  new  ArrayList  <  EventState>();  stepsIn  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  if(stepHandlers  ==  null)  {  eventsStates  =  new  ArrayList  <  EventState>();  stepsIn  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  if(stepHandlers  ==  null)  {  eventsStates  =  new  ArrayList  <  EventState>();  stepsIn	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    else    {    eventsStates    =    new    ArrayList    <    EventState>();    stepsInitialized    =    false;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
551	[BUG]  [BUGGY]  if(stepSize  ==  1)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.N  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  1)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.N  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize  ==  1)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.N	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    	non-compiled	[CE]  ';'  expected	99	None	replace
552	[BUG]  [BUGGY]  if(stepSize  ==  1)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  1)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize  ==  1)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
553	[BUG]  [BUGGY]  if(stepSize  ==  0)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  0)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize  ==  0)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
554	[BUG]  [BUGGY]  if(stepSize  ==  0.0)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  0.0)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize  ==  0.0)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.	          stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers    ==    null)    {    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
555	[BUG]  [BUGGY]  this.stepSize  =  new  ArrayList  <  StepHandler>();  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  this.stepSize  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	this.stepSize  =  new  ArrayList  <  StepHandler>();	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    	non-compiled	[CE]  incompatible  types	12	None	replace
556	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  step  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  step  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  step	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
557	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
558	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  step  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  step  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepStart        =        Double.NaN;        if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    }    if(stepSize  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  if(stepHandlers  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  step	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
559	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [CE]  incomparable  types:  double  and  <null>  [FE]              AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    This.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	18	None	replace
560	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.Na  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.Na  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.Na	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    This.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  ';'  expected	18	None	replace
561	[BUG]  [BUGGY]  stepHandlers.add(new  Integer(stepStart),  stepSize,  state);  [CE]  no  suitable  constructor  found  for  Integer(double)  [FE]                    AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers.add(new  Integer(stepStart),  stepSize,  state);  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers.add(new  Integer(stepStart),  stepSize,  state);	  stepHandlers.add(new    Integer(stepStart),    stepSize);    	non-compiled	[CE]  no  suitable  constructor  found  for  Integer(double)	52	None	replace
562	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  incomparable  types:  double  and  <null>  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepStart  ==  null)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  }  else  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    if(stepHandlers    ==    null)    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    }    else    {    this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	10	None	replace
563	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	non-compiled	[CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)	75	None	add
564	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;	  	non-compiled	[CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)	75	None	add
565	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();	  	non-compiled	[CE]  variable  stepHandlers  is  already  defined  in  constructor  AbstractIntegrator(String)	75	None	add
566	[BUG]  [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.Na  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.Na  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                this.stepHandlers        =        new        ArrayList        <        StepHandler>();        stepSize        =        Double.NaN;        ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  ArrayList  <  StepHandler>  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.Na	  	non-compiled	[CE]  ';'  expected	75	None	add
567	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  >  0)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	if(stepSize  >  0)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	65	1	replace
568	[BUG]  [BUGGY]  if(stepSize  >  0)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [FE]  NullPointerException  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  >  0)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize  >  0)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	65	1	replace
569	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  <  2)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	if(stepSize  <  2)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	65	1	replace
570	[BUG]  [BUGGY]  if(stepSize  <  2)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [FE]  NullPointerException  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  <  2)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize  <  2)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	65	1	replace
571	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  >  0.0)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	add	if(stepSize  >  0.0)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	65	1	replace
572	[BUG]  [BUGGY]  if(stepSize  >  0.0)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [FE]  NullPointerException  [FE]        AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  >  0.0)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize  >  0.0)  {  this.stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepStart  =  Double.NaN;  }	          this.stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    ArrayList    <    StepHandler>    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepStart    =    Double.NaN;    	compilable	  [FE]  NullPointerException  	65	1	replace
573	[BUG]  [BUGGY]          stepHandlers.addAll(stepHandlers);  StepHandlers  stepHandlers  =(StepHandler)this.eventsStates.get(name);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers.addAll(stepHandlers);  StepHandlers  stepHandlers  =(StepHandler)this.eventsStates.get(name);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                stepHandlers.addAll(stepHandlers);    StepHandlers  stepHandlers  =(StepHandler)this.eventsStates.get(name);	  	non-compiled	[CE]  cannot  find  symbol	96	None	add
574	[BUG]  [BUGGY]          stepHandlers.addAll(stepHandlers);  StepHandlers  stepHandlers  =  new  StepHandler(stepStart,  stepSize);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]          stepHandlers.addAll(stepHandlers);  StepHandlers  stepHandlers  =  new  StepHandler(stepStart,  stepSize);  [BUGGY]      statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	                stepHandlers.addAll(stepHandlers);    StepHandlers  stepHandlers  =  new  StepHandler(stepStart,  stepSize);	  	non-compiled	[CE]  cannot  find  symbol	96	None	add
575	[BUG]  [BUGGY]  stepHandlers  =  new  TreeList  <  StepHandler>();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  stepHandlers  =  new  TreeList  <  StepHandler>();  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	stepHandlers  =  new  TreeList  <  StepHandler>();	  stepHandlers    =    new    TreeList    <    StepHandler>();    stepStart    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
576	[BUG]  [BUGGY]  if(stepSize  ==  Double.NaN)  {  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      public  AbstractIntegrator(final  String  name)  {  this.name  =  name;  stepHandlers  =  new  ArrayList<StepHandler>();  stepStart  =  Double.NaN;  stepSize=  Double.NaN;      [BUGGY]  if(stepSize  ==  Double.NaN)  {  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }  [BUGGY]      eventsStates  =  new  ArrayList<EventState>();  statesInitialized  =  false;  evaluations  =  new  Incrementor();  setMaxEvaluations(-1);  resetEvaluations();  }  [CLASS]  AbstractIntegrator  1  [METHOD]  <init>  [RETURN_TYPE]  String)  String  name  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	90	90	1	replace	if(stepSize  ==  Double.NaN)  {  StepHandler  stepHandlers  =  new  ArrayList  <  StepHandler>();  stepSize  =  Double.NaN;  }	  StepHandler    stepHandlers    =    new    ArrayList    <    StepHandler>();    stepSize    =    Double.NaN;    	non-compiled	[CE]  incompatible  types	44	None	replace
