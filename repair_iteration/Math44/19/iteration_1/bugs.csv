bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.remove(i);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  protected  void  resetEvaluations()  {  evaluations.resetCount();  [BUGGY]    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.remove(i);  }  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.remove(i);  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
2	[BUG]  [BUGGY]    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.remove(i);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  protected  void  resetEvaluations()  {  evaluations.resetCount();  [BUGGY]    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.remove(i);  }  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.remove(i);  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
3	[BUG]  [BUGGY]    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.remove(0);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  protected  void  resetEvaluations()  {  evaluations.resetCount();  [BUGGY]    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.remove(0);  }  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.remove(0);  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
4	[BUG]  [BUGGY]    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.remove(0);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  protected  void  resetEvaluations()  {  evaluations.resetCount();  [BUGGY]    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.remove(0);  }  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  evaluates.remove(0);  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
5	[BUG]  [BUGGY]    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  int  stepStart  =  evaluates.get(i);  return;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  protected  void  resetEvaluations()  {  evaluations.resetCount();  [BUGGY]    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  int  stepStart  =  evaluates.get(i);  return;  }  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  int  stepStart  =  evaluates.get(i);  return;  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
6	[BUG]  [BUGGY]    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.isLastStep)  {  return;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  protected  void  resetEvaluations()  {  evaluations.resetCount();  [BUGGY]    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.isLastStep)  {  return;  }  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.isLastStep)  {  return;  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
7	[BUG]  [BUGGY]    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {  return;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  protected  void  resetEvaluations()  {  evaluations.resetCount();  [BUGGY]    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {  return;  }  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {  return;  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
8	[BUG]  [BUGGY]    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {  return;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  protected  void  resetEvaluations()  {  evaluations.resetCount();  [BUGGY]    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {  return;  }  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  i++)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {  return;  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
9	[BUG]  [BUGGY]    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.isLastStep)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  protected  void  resetEvaluations()  {  evaluations.resetCount();  [BUGGY]    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.isLastStep)  {  continue;  }  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.isLastStep)  {  continue;  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
10	[BUG]  [BUGGY]    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  protected  void  resetEvaluations()  {  evaluations.resetCount();  [BUGGY]    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integrator)evaluations.get(i);  if(state.isLastStep)  {		non-compiled	[CE]  illegal  start  of  expression	38	None	add
11	[BUG]  [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.getType()  ==  Integer.MIN_VALUE)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  protected  void  resetEvaluations()  {  evaluations.resetCount();  [BUGGY]  if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.getType()  ==  Integer.MIN_VALUE)  {  [BUGGY]    [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  Incrementor  state  =(Integer)evaluations.get(i);  if(state.getType()  ==  Integer.MIN_VALUE)  {	}  	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
12	[BUG]  [BUGGY]  this.events.remove(events.size()  -  1);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  protected  void  resetEvaluations()  {  evaluations.resetCount();  [BUGGY]  this.events.remove(events.size()  -  1);  [BUGGY]    [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	this.events.remove(events.size()  -  1);	}  	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
13	[BUG]  [BUGGY]  this.events.clear();  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  protected  void  resetEvaluations()  {  evaluations.resetCount();  [BUGGY]  this.events.clear();  [BUGGY]    [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	this.events.clear();	}  	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
14	[BUG]  [BUGGY]  evaluates.removeCount();  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  protected  void  resetEvaluations()  {  evaluations.resetCount();  [BUGGY]  evaluates.removeCount();  [BUGGY]    [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	evaluates.removeCount();	}  	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
15	[BUG]  [BUGGY]  this.eventsStates.remove(name);  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  protected  void  resetEvaluations()  {  evaluations.resetCount();  [BUGGY]  this.eventsStates.remove(name);  [BUGGY]    [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	this.eventsStates.remove(name);	}  	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
16	[BUG]  [BUGGY]    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.get(i);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  protected  void  resetEvaluations()  {  evaluations.resetCount();  [BUGGY]    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.get(i);  }  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.get(i);  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
17	[BUG]  [BUGGY]    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.get(i).reset();  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  protected  void  resetEvaluations()  {  evaluations.resetCount();  [BUGGY]    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.get(i).reset();  }  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.get(i).reset();  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
18	[BUG]  [BUGGY]    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.removeCount(evaluations.get(0));  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  protected  void  resetEvaluations()  {  evaluations.resetCount();  [BUGGY]    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.removeCount(evaluations.get(0));  }  [BUGGY]  }  [CLASS]  AbstractIntegrator  1  [METHOD]  resetEvaluations  [RETURN_TYPE]  void  [VARIABLES]  ExpandableStatefulODE  expandable  boolean  isLastStep  resetOccurred  statesInitialized  double  convergence  maxCheckInterval  stepSize  stepStart  Collection  eventsStates  stepHandlers  Incrementor  evaluations  String  name  	projects/Math44/src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java	1.0	186	186	1	replace	    if(evaluations!=  null)  {  for(int  i  =  0;  i  <  evaluations.size();  ++i)  {  evaluates.removeCount(evaluations.get(0));  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
